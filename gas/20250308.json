{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "110.09",
            "p50": "106.67",
            "p95": "96.99",
            "p99": "92.79",
            "min": "92.39",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1115.67",
            "p50": "960.96",
            "p95": "642.53",
            "p99": "489.08",
            "min": "480.20",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "110.40",
            "p50": "107.01",
            "p95": "100.20",
            "p99": "97.41",
            "min": "97.41",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "763.38",
            "p50": "714.02",
            "p95": "455.27",
            "p99": "422.60",
            "min": "419.81",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "407.36",
            "p50": "373.48",
            "p95": "310.56",
            "p99": "296.01",
            "min": "294.76",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "431.83",
            "p50": "400.72",
            "p95": "330.33",
            "p99": "299.23",
            "min": "294.34",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "295.12",
            "p50": "278.39",
            "p95": "195.01",
            "p99": "182.89",
            "min": "181.09",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "183.07",
            "p50": "174.56",
            "p95": "161.72",
            "p99": "150.88",
            "min": "149.77",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "258.36",
            "p50": "239.79",
            "p95": "213.34",
            "p99": "191.17",
            "min": "188.93",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "263.43",
            "p50": "247.54",
            "p95": "215.11",
            "p99": "208.90",
            "min": "208.25",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "262.54",
            "p50": "243.53",
            "p95": "214.94",
            "p99": "201.55",
            "min": "200.89",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "202.65",
            "p50": "193.43",
            "p95": "176.19",
            "p99": "131.62",
            "min": "122.81",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "339.64",
            "p50": "317.32",
            "p95": "273.30",
            "p99": "255.43",
            "min": "254.84",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "300.72",
            "p50": "281.40",
            "p95": "238.92",
            "p99": "228.05",
            "min": "227.51",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "9076.76",
            "p50": "4420.64",
            "p95": "2326.27",
            "p99": "1601.53",
            "min": "1443.79",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "3073.01",
            "p50": "1898.52",
            "p95": "932.65",
            "p99": "1633.01",
            "min": "857.62",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "330.03",
            "p50": "303.01",
            "p95": "252.82",
            "p99": "251.06",
            "min": "232.54",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1438.73",
            "p50": "748.88",
            "p95": "432.39",
            "p99": "817.99",
            "min": "349.72",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7223.43",
            "p50": "3663.58",
            "p95": "1389.56",
            "p99": "3872.85",
            "min": "1345.22",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "824.51",
            "p50": "723.43",
            "p95": "530.34",
            "p99": "476.64",
            "min": "461.89",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "815.43",
            "p50": "746.45",
            "p95": "505.95",
            "p99": "454.73",
            "min": "449.16",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "945.08",
            "p50": "808.96",
            "p95": "620.70",
            "p99": "459.37",
            "min": "457.38",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2442.33",
            "p50": "1957.11",
            "p95": "1015.25",
            "p99": "700.10",
            "min": "662.75",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2408.66",
            "p50": "1765.96",
            "p95": "904.13",
            "p99": "754.62",
            "min": "737.71",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "804.41",
            "p50": "747.99",
            "p95": "534.09",
            "p99": "456.65",
            "min": "439.13",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "169.48",
            "p50": "158.63",
            "p95": "147.50",
            "p99": "140.33",
            "min": "139.96",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "566.12",
            "p50": "506.24",
            "p95": "386.89",
            "p99": "354.33",
            "min": "349.64",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "167.16",
            "p50": "158.34",
            "p95": "148.65",
            "p99": "141.63",
            "min": "141.32",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "189.46",
            "p50": "176.48",
            "p95": "160.27",
            "p99": "154.80",
            "min": "153.58",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "34365.35",
            "p50": "8000.40",
            "p95": "2308.53",
            "p99": "1040.37",
            "min": "765.21",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "415.65",
            "p50": "383.43",
            "p95": "306.41",
            "p99": "276.48",
            "min": "272.69",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "396.63",
            "p50": "360.06",
            "p95": "300.42",
            "p99": "269.77",
            "min": "268.81",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "399.47",
            "p50": "361.02",
            "p95": "298.77",
            "p99": "265.32",
            "min": "261.98",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "397.80",
            "p50": "363.40",
            "p95": "307.14",
            "p99": "261.44",
            "min": "258.59",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "17318.08",
            "p50": "5487.34",
            "p95": "2374.87",
            "p99": "2147.68",
            "min": "2137.31",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "17146.88",
            "p50": "5654.89",
            "p95": "2567.09",
            "p99": "1776.58",
            "min": "1418.39",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "16745.68",
            "p50": "5179.28",
            "p95": "2466.65",
            "p99": "1939.49",
            "min": "1780.82",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "16857.23",
            "p50": "5627.83",
            "p95": "2258.80",
            "p99": "1857.88",
            "min": "1644.76",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "16247.03",
            "p50": "5104.66",
            "p95": "2425.94",
            "p99": "1700.68",
            "min": "1508.89",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "17317.70",
            "p50": "5371.95",
            "p95": "2532.24",
            "p99": "1650.88",
            "min": "1414.20",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "261.66",
            "p50": "242.77",
            "p95": "212.82",
            "p99": "200.23",
            "min": "198.71",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "523.80",
            "p50": "489.08",
            "p95": "399.91",
            "p99": "352.14",
            "min": "347.29",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1633.73",
            "p50": "1321.85",
            "p95": "379.83",
            "p99": "288.00",
            "min": "284.79",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "22605.71",
            "p50": "4931.64",
            "p95": "198.69",
            "p99": "184.64",
            "min": "182.75",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1405.48",
            "p50": "1261.86",
            "p95": "729.97",
            "p99": "537.90",
            "min": "517.23",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "54320.07",
            "p50": "9171.96",
            "p95": "2459.01",
            "p99": "1133.66",
            "min": "700.97",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14663.69",
            "p50": "6217.06",
            "p95": "191.76",
            "p99": "186.51",
            "min": "183.23",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "566.86",
            "p50": "505.09",
            "p95": "394.28",
            "p99": "361.83",
            "min": "355.48",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "552.80",
            "p50": "518.78",
            "p95": "397.09",
            "p99": "352.62",
            "min": "351.55",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "200.15",
            "p50": "192.65",
            "p95": "175.46",
            "p99": "164.92",
            "min": "164.09",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "386.38",
            "p50": "360.70",
            "p95": "300.05",
            "p99": "271.67",
            "min": "268.95",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "201.07",
            "p50": "193.15",
            "p95": "173.64",
            "p99": "170.27",
            "min": "170.10",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "341.81",
            "p50": "321.94",
            "p95": "261.30",
            "p99": "239.34",
            "min": "232.68",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "262.96",
            "p50": "245.53",
            "p95": "216.35",
            "p99": "199.04",
            "min": "198.30",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "575.61",
            "p50": "530.64",
            "p95": "424.95",
            "p99": "381.27",
            "min": "376.27",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1465.46",
            "p50": "1288.62",
            "p95": "962.45",
            "p99": "891.79",
            "min": "884.16",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "290.02",
            "p50": "276.82",
            "p95": "243.39",
            "p99": "223.44",
            "min": "221.11",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "138.35",
            "p50": "136.53",
            "p95": "127.44",
            "p99": "119.21",
            "min": "118.58",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "138.09",
            "p50": "136.39",
            "p95": "126.50",
            "p99": "112.46",
            "min": "110.37",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "138.29",
            "p50": "136.07",
            "p95": "126.31",
            "p99": "119.17",
            "min": "119.15",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "232.75",
            "p50": "228.62",
            "p95": "202.98",
            "p99": "132.66",
            "min": "90.15",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "192.72",
            "p50": "188.44",
            "p95": "168.32",
            "p99": "158.78",
            "min": "158.72",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "205.54",
            "p50": "200.89",
            "p95": "174.31",
            "p99": "157.98",
            "min": "156.79",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "191.23",
            "p50": "182.79",
            "p95": "161.95",
            "p99": "136.02",
            "min": "134.65",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "187.31",
            "p50": "179.40",
            "p95": "160.68",
            "p99": "153.39",
            "min": "152.88",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "213.90",
            "p50": "207.58",
            "p95": "185.27",
            "p99": "169.94",
            "min": "169.60",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "184.68",
            "p50": "178.73",
            "p95": "159.41",
            "p99": "107.57",
            "min": "107.42",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "211.96",
            "p50": "208.68",
            "p95": "180.33",
            "p99": "149.70",
            "min": "144.00",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "148.22",
            "p50": "144.47",
            "p95": "135.32",
            "p99": "119.49",
            "min": "116.99",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "230.94",
            "p50": "226.60",
            "p95": "207.48",
            "p99": "183.92",
            "min": "183.87",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "184.37",
            "p50": "179.07",
            "p95": "151.85",
            "p99": "103.66",
            "min": "97.18",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "72.76",
            "p50": "70.58",
            "p95": "67.77",
            "p99": "64.65",
            "min": "63.96",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "142.86",
            "p50": "141.72",
            "p95": "127.28",
            "p99": "129.74",
            "min": "122.67",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "474.23",
            "p50": "392.14",
            "p95": "311.08",
            "p99": "257.46",
            "min": "206.61",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "195.42",
            "p50": "154.88",
            "p95": "140.25",
            "p99": "157.48",
            "min": "128.85",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.56",
            "p50": "132.85",
            "p95": "122.28",
            "p99": "125.98",
            "min": "118.75",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1243.56",
            "p50": "1173.12",
            "p95": "777.71",
            "p99": "609.99",
            "min": "516.17",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1063.64",
            "p50": "1038.98",
            "p95": "713.19",
            "p99": "558.78",
            "min": "539.48",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1490.26",
            "p50": "1391.49",
            "p95": "740.59",
            "p99": "553.92",
            "min": "552.65",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1382.46",
            "p50": "1286.84",
            "p95": "837.49",
            "p99": "640.62",
            "min": "581.85",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1361.54",
            "p50": "1283.36",
            "p95": "819.77",
            "p99": "508.85",
            "min": "419.30",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1103.04",
            "p50": "1071.47",
            "p95": "693.41",
            "p99": "517.49",
            "min": "493.30",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "744.41",
            "p50": "644.73",
            "p95": "478.22",
            "p99": "349.95",
            "min": "331.87",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "742.63",
            "p50": "645.44",
            "p95": "486.99",
            "p99": "429.33",
            "min": "422.72",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "746.19",
            "p50": "651.36",
            "p95": "481.00",
            "p99": "368.27",
            "min": "351.99",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "745.98",
            "p50": "699.18",
            "p95": "464.38",
            "p99": "404.31",
            "min": "400.20",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "296.89",
            "p50": "292.49",
            "p95": "254.78",
            "p99": "226.39",
            "min": "222.37",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "657.32",
            "p50": "556.27",
            "p95": "425.57",
            "p99": "342.31",
            "min": "336.79",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "643.14",
            "p50": "558.07",
            "p95": "438.73",
            "p99": "374.99",
            "min": "374.32",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "652.06",
            "p50": "577.67",
            "p95": "445.17",
            "p99": "371.43",
            "min": "368.79",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "667.14",
            "p50": "592.02",
            "p95": "457.10",
            "p99": "386.24",
            "min": "384.96",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "107.43",
            "p50": "105.99",
            "p95": "99.55",
            "p99": "97.13",
            "min": "97.04",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "107.49",
            "p50": "106.05",
            "p95": "98.43",
            "p99": "92.78",
            "min": "92.36",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "100.01",
            "p50": "98.09",
            "p95": "92.07",
            "p99": "84.40",
            "min": "81.77",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "258.03",
            "p50": "252.73",
            "p95": "225.41",
            "p99": "207.23",
            "min": "206.84",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "100.00",
            "p50": "98.23",
            "p95": "91.60",
            "p99": "87.31",
            "min": "87.15",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "250.65",
            "p50": "246.02",
            "p95": "225.60",
            "p99": "203.80",
            "min": "198.62",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "211.59",
            "p50": "207.86",
            "p95": "184.90",
            "p99": "171.91",
            "min": "169.95",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "241.02",
            "p50": "236.54",
            "p95": "208.41",
            "p99": "110.62",
            "min": "110.25",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "574.54",
            "p50": "560.30",
            "p95": "449.63",
            "p99": "398.75",
            "min": "386.47",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7430.67",
            "p50": "4812.50",
            "p95": "2312.78",
            "p99": "1843.62",
            "min": "1767.37",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "534.25",
            "p50": "523.93",
            "p95": "379.09",
            "p99": "339.13",
            "min": "336.04",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "21764.58",
            "p50": "6915.73",
            "p95": "2408.71",
            "p99": "1702.71",
            "min": "1478.31",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4496.47",
            "p50": "3631.96",
            "p95": "1639.24",
            "p99": "1223.39",
            "min": "1120.21",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "253.52",
            "p50": "218.35",
            "p95": "197.92",
            "p99": "176.87",
            "min": "171.24",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "266.53",
            "p50": "262.23",
            "p95": "227.82",
            "p99": "183.95",
            "min": "173.41",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "148.20",
            "p50": "145.85",
            "p95": "131.12",
            "p99": "124.94",
            "min": "124.05",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "243.92",
            "p50": "237.97",
            "p95": "202.88",
            "p99": "175.70",
            "min": "168.86",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "186.79",
            "p50": "183.54",
            "p95": "159.60",
            "p99": "138.95",
            "min": "138.24",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "221.21",
            "p50": "217.11",
            "p95": "191.15",
            "p99": "146.42",
            "min": "146.33",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "210.48",
            "p50": "206.83",
            "p95": "178.04",
            "p99": "97.94",
            "min": "89.91",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "210.29",
            "p50": "206.57",
            "p95": "187.14",
            "p99": "177.15",
            "min": "175.12",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1309.81",
            "p50": "1173.71",
            "p95": "903.37",
            "p99": "672.42",
            "min": "641.48",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "183.38",
            "p50": "179.12",
            "p95": "165.31",
            "p99": "122.13",
            "min": "107.34",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.53",
            "p50": "192.54",
            "p95": "189.33",
            "p99": "177.14",
            "min": "175.56",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.62",
            "p50": "192.89",
            "p95": "190.09",
            "p99": "183.79",
            "min": "183.56",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.58",
            "p50": "193.41",
            "p95": "191.59",
            "p99": "190.46",
            "min": "190.40",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1183.95",
            "p50": "1159.60",
            "p95": "970.14",
            "p99": "625.59",
            "min": "619.22",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "700.01",
            "p50": "690.93",
            "p95": "669.61",
            "p99": "586.34",
            "min": "574.51",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "810.88",
            "p50": "795.42",
            "p95": "759.80",
            "p99": "690.85",
            "min": "678.12",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "740.03",
            "p50": "724.08",
            "p95": "632.10",
            "p99": "281.68",
            "min": "229.15",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "749.74",
            "p50": "735.46",
            "p95": "613.79",
            "p99": "520.60",
            "min": "516.98",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "919.07",
            "p50": "900.41",
            "p95": "776.19",
            "p99": "488.78",
            "min": "475.39",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "887.03",
            "p50": "868.33",
            "p95": "769.62",
            "p99": "543.90",
            "min": "534.50",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "886.90",
            "p50": "867.66",
            "p95": "662.36",
            "p99": "548.09",
            "min": "540.40",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "839.88",
            "p50": "824.18",
            "p95": "782.53",
            "p99": "617.21",
            "min": "598.19",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "885.64",
            "p50": "867.97",
            "p95": "808.50",
            "p99": "583.94",
            "min": "516.23",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "889.31",
            "p50": "868.36",
            "p95": "762.08",
            "p99": "543.83",
            "min": "523.89",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "113.55",
            "p50": "109.18",
            "p95": "106.77",
            "p99": "101.76",
            "min": "99.39",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "95.80",
            "p50": "94.98",
            "p95": "94.43",
            "p99": "94.52",
            "min": "93.83",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "605.29",
            "p50": "582.67",
            "p95": "564.47",
            "p99": "569.67",
            "min": "561.32",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "129.24",
            "p50": "103.76",
            "p95": "96.97",
            "p99": "110.65",
            "min": "96.62",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "89.29",
            "p50": "87.87",
            "p95": "87.04",
            "p99": "86.68",
            "min": "84.71",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1934.80",
            "p50": "1876.19",
            "p95": "1445.06",
            "p99": "915.13",
            "min": "832.60",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1640.60",
            "p50": "1595.57",
            "p95": "1327.75",
            "p99": "763.83",
            "min": "763.69",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2497.44",
            "p50": "2404.94",
            "p95": "1611.96",
            "p99": "1152.13",
            "min": "1121.97",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2510.48",
            "p50": "2394.56",
            "p95": "1496.14",
            "p99": "1024.26",
            "min": "1004.68",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2482.04",
            "p50": "2377.90",
            "p95": "1862.14",
            "p99": "1153.59",
            "min": "1041.83",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1707.33",
            "p50": "1653.99",
            "p95": "1372.18",
            "p99": "938.39",
            "min": "803.75",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "876.59",
            "p50": "841.90",
            "p95": "798.75",
            "p99": "753.55",
            "min": "750.74",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "867.27",
            "p50": "838.90",
            "p95": "784.18",
            "p99": "628.71",
            "min": "617.63",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "882.90",
            "p50": "852.07",
            "p95": "825.97",
            "p99": "662.11",
            "min": "646.03",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "878.64",
            "p50": "857.53",
            "p95": "832.95",
            "p99": "741.16",
            "min": "732.53",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.93",
            "p50": "86.21",
            "p95": "83.13",
            "p99": "82.76",
            "min": "82.74",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "798.13",
            "p50": "774.28",
            "p95": "730.71",
            "p99": "644.34",
            "min": "642.16",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "755.23",
            "p50": "732.18",
            "p95": "684.80",
            "p99": "552.47",
            "min": "540.10",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "751.05",
            "p50": "725.85",
            "p95": "634.27",
            "p99": "478.23",
            "min": "459.51",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "760.91",
            "p50": "731.97",
            "p95": "678.63",
            "p99": "550.30",
            "min": "542.51",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2024.60",
            "p50": "1951.45",
            "p95": "1354.10",
            "p99": "1002.09",
            "min": "987.34",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2332.69",
            "p50": "2245.02",
            "p95": "1725.04",
            "p99": "1183.37",
            "min": "1157.85",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.34",
            "p50": "71.87",
            "p95": "71.45",
            "p99": "68.24",
            "min": "67.60",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9977.29",
            "p50": "7940.84",
            "p95": "2383.16",
            "p99": "1458.59",
            "min": "1438.09",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.40",
            "p50": "71.94",
            "p95": "71.44",
            "p99": "69.34",
            "min": "68.90",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "223.01",
            "p50": "220.90",
            "p95": "218.20",
            "p99": "211.47",
            "min": "210.78",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "886.58",
            "p50": "869.09",
            "p95": "729.12",
            "p99": "650.07",
            "min": "642.18",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.16",
            "p50": "659.50",
            "p95": "632.71",
            "p99": "540.76",
            "min": "517.63",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2264.75",
            "p50": "2120.28",
            "p95": "1461.94",
            "p99": "988.21",
            "min": "883.91",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "15741.40",
            "p50": "8439.10",
            "p95": "2508.89",
            "p99": "2069.01",
            "min": "2026.16",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2095.52",
            "p50": "1980.68",
            "p95": "1311.91",
            "p99": "778.90",
            "min": "639.17",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "77713.49",
            "p50": "8579.28",
            "p95": "2577.53",
            "p99": "2049.88",
            "min": "2012.31",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15530.57",
            "p50": "8712.56",
            "p95": "2324.66",
            "p99": "1734.29",
            "min": "1468.54",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "792.93",
            "p50": "701.13",
            "p95": "597.61",
            "p99": "446.70",
            "min": "404.04",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "989.96",
            "p50": "969.01",
            "p95": "796.72",
            "p99": "711.03",
            "min": "710.66",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "840.81",
            "p50": "820.36",
            "p95": "748.14",
            "p99": "537.59",
            "min": "520.57",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1199.40",
            "p50": "1167.18",
            "p95": "1104.81",
            "p99": "769.17",
            "min": "741.49",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "746.04",
            "p50": "732.09",
            "p95": "659.14",
            "p99": "494.28",
            "min": "490.88",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1154.51",
            "p50": "1120.97",
            "p95": "1033.53",
            "p99": "819.77",
            "min": "804.28",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "896.09",
            "p50": "876.39",
            "p95": "785.95",
            "p99": "634.14",
            "min": "628.23",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "934.18",
            "p50": "908.46",
            "p95": "809.67",
            "p99": "706.50",
            "min": "670.75",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2452.30",
            "p50": "2099.11",
            "p95": "1750.93",
            "p99": "1489.61",
            "min": "1478.66",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "875.11",
            "p50": "856.56",
            "p95": "763.27",
            "p99": "598.32",
            "min": "597.28",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "125.18",
            "p50": "120.20",
            "p95": "106.20",
            "p99": "99.37",
            "min": "99.18",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "124.90",
            "p50": "120.47",
            "p95": "107.46",
            "p99": "99.54",
            "min": "98.82",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "124.77",
            "p50": "120.06",
            "p95": "110.16",
            "p99": "100.09",
            "min": "99.69",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "210.40",
            "p50": "194.95",
            "p95": "161.39",
            "p99": "153.87",
            "min": "153.82",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "103.62",
            "p50": "99.67",
            "p95": "84.89",
            "p99": "62.86",
            "min": "58.21",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.99",
            "p50": "103.87",
            "p95": "90.57",
            "p99": "85.14",
            "min": "85.09",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "140.20",
            "p50": "131.76",
            "p95": "109.63",
            "p99": "93.30",
            "min": "90.57",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "139.58",
            "p50": "130.59",
            "p95": "107.22",
            "p99": "99.92",
            "min": "99.20",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "183.28",
            "p50": "166.85",
            "p95": "127.92",
            "p99": "113.25",
            "min": "112.40",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "178.75",
            "p50": "163.64",
            "p95": "130.57",
            "p99": "122.31",
            "min": "121.70",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "179.66",
            "p50": "164.49",
            "p95": "135.29",
            "p99": "123.21",
            "min": "122.58",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.37",
            "p50": "120.57",
            "p95": "101.55",
            "p99": "94.72",
            "min": "94.70",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "206.35",
            "p50": "184.84",
            "p95": "142.26",
            "p99": "134.18",
            "min": "134.01",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "183.72",
            "p50": "168.38",
            "p95": "139.55",
            "p99": "128.02",
            "min": "127.99",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "75.74",
            "p50": "70.76",
            "p95": "64.32",
            "p99": "61.63",
            "min": "61.39",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "131.06",
            "p50": "121.41",
            "p95": "99.00",
            "p99": "109.19",
            "min": "97.42",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "210.16",
            "p50": "187.08",
            "p95": "146.39",
            "p99": "152.39",
            "min": "138.84",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "156.34",
            "p50": "135.65",
            "p95": "132.07",
            "p99": "142.41",
            "min": "131.90",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "127.65",
            "p50": "116.39",
            "p95": "99.03",
            "p99": "110.18",
            "min": "97.01",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1043.28",
            "p50": "714.36",
            "p95": "350.21",
            "p99": "277.26",
            "min": "275.66",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1010.67",
            "p50": "660.96",
            "p95": "341.60",
            "p99": "258.71",
            "min": "257.68",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1139.90",
            "p50": "757.34",
            "p95": "352.88",
            "p99": "285.64",
            "min": "271.34",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1070.65",
            "p50": "712.31",
            "p95": "349.38",
            "p99": "245.51",
            "min": "224.98",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1014.62",
            "p50": "713.52",
            "p95": "343.11",
            "p99": "281.60",
            "min": "278.92",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1016.78",
            "p50": "687.95",
            "p95": "324.95",
            "p99": "263.05",
            "min": "258.59",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "330.95",
            "p50": "286.48",
            "p95": "203.02",
            "p99": "176.27",
            "min": "175.36",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "336.79",
            "p50": "287.30",
            "p95": "208.06",
            "p99": "194.96",
            "min": "194.03",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "340.43",
            "p50": "290.01",
            "p95": "211.53",
            "p99": "187.82",
            "min": "186.10",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "368.30",
            "p50": "310.98",
            "p95": "228.33",
            "p99": "193.62",
            "min": "191.93",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "286.09",
            "p50": "253.52",
            "p95": "187.77",
            "p99": "166.65",
            "min": "165.22",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "287.92",
            "p50": "252.10",
            "p95": "190.17",
            "p99": "164.21",
            "min": "161.35",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "281.38",
            "p50": "247.53",
            "p95": "185.98",
            "p99": "169.30",
            "min": "168.57",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "284.15",
            "p50": "249.96",
            "p95": "182.72",
            "p99": "170.42",
            "min": "170.09",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "291.51",
            "p50": "255.11",
            "p95": "186.62",
            "p99": "164.50",
            "min": "164.40",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.03",
            "p50": "99.72",
            "p95": "84.95",
            "p99": "80.18",
            "min": "80.05",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.19",
            "p50": "100.29",
            "p95": "87.96",
            "p99": "80.84",
            "min": "80.38",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.86",
            "p50": "92.70",
            "p95": "83.04",
            "p99": "77.89",
            "min": "77.29",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "248.59",
            "p50": "220.30",
            "p95": "173.23",
            "p99": "155.01",
            "min": "152.72",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.08",
            "p50": "92.46",
            "p95": "82.33",
            "p99": "77.39",
            "min": "76.97",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "241.82",
            "p50": "214.89",
            "p95": "168.69",
            "p99": "149.60",
            "min": "148.91",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "181.20",
            "p50": "167.12",
            "p95": "135.95",
            "p99": "123.23",
            "min": "122.76",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "150.05",
            "p50": "138.56",
            "p95": "114.16",
            "p99": "106.73",
            "min": "105.16",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "442.72",
            "p50": "400.63",
            "p95": "272.80",
            "p99": "232.35",
            "min": "225.56",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "6261.49",
            "p50": "2177.33",
            "p95": "701.93",
            "p99": "566.69",
            "min": "530.65",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "441.48",
            "p50": "390.88",
            "p95": "290.01",
            "p99": "254.39",
            "min": "252.07",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14816.92",
            "p50": "3509.81",
            "p95": "1187.11",
            "p99": "981.81",
            "min": "960.99",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3310.59",
            "p50": "1970.86",
            "p95": "612.45",
            "p99": "514.44",
            "min": "496.74",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "210.24",
            "p50": "196.67",
            "p95": "163.29",
            "p99": "146.82",
            "min": "143.17",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "233.56",
            "p50": "218.83",
            "p95": "178.33",
            "p99": "159.60",
            "min": "155.61",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "130.56",
            "p50": "123.14",
            "p95": "102.39",
            "p99": "97.03",
            "min": "96.49",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "210.29",
            "p50": "188.64",
            "p95": "145.51",
            "p99": "132.74",
            "min": "132.55",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "139.14",
            "p50": "130.03",
            "p95": "110.44",
            "p99": "102.21",
            "min": "101.92",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "176.87",
            "p50": "161.66",
            "p95": "123.43",
            "p99": "101.34",
            "min": "100.39",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "177.38",
            "p50": "161.60",
            "p95": "125.62",
            "p99": "119.68",
            "min": "118.74",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "181.02",
            "p50": "166.35",
            "p95": "134.86",
            "p99": "119.14",
            "min": "118.95",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "309.54",
            "p50": "260.73",
            "p95": "57.17",
            "p99": "49.88",
            "min": "49.82",
            "n": "104",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "145.38",
            "p50": "139.79",
            "p95": "117.69",
            "p99": "56.73",
            "min": "56.39",
            "n": "107",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "86.42",
            "p50": "83.66",
            "p95": "73.51",
            "p99": "71.30",
            "min": "71.20",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "87.89",
            "p50": "84.66",
            "p95": "81.88",
            "p99": "80.05",
            "min": "79.79",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "87.46",
            "p50": "84.09",
            "p95": "79.11",
            "p99": "75.12",
            "min": "74.64",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "185.64",
            "p50": "182.30",
            "p95": "178.36",
            "p99": "171.46",
            "min": "171.43",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "90.28",
            "p50": "88.40",
            "p95": "84.57",
            "p99": "80.28",
            "min": "79.69",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "112.78",
            "p50": "107.27",
            "p95": "104.30",
            "p99": "100.17",
            "min": "99.63",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "127.24",
            "p50": "120.30",
            "p95": "107.40",
            "p99": "98.13",
            "min": "97.79",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "127.49",
            "p50": "123.80",
            "p95": "119.97",
            "p99": "113.80",
            "min": "113.54",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "98.23",
            "p50": "96.66",
            "p95": "93.85",
            "p99": "88.92",
            "min": "88.62",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "96.84",
            "p50": "95.70",
            "p95": "93.61",
            "p99": "91.91",
            "min": "91.76",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "97.17",
            "p50": "95.89",
            "p95": "92.80",
            "p99": "89.70",
            "min": "89.03",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "129.44",
            "p50": "123.60",
            "p95": "119.31",
            "p99": "115.15",
            "min": "115.00",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "122.35",
            "p50": "112.85",
            "p95": "105.79",
            "p99": "104.12",
            "min": "104.07",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "117.49",
            "p50": "115.02",
            "p95": "98.28",
            "p99": "94.58",
            "min": "94.22",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "88.15",
            "p50": "83.12",
            "p95": "79.52",
            "p99": "77.10",
            "min": "76.44",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "101.70",
            "p50": "100.21",
            "p95": "93.83",
            "p99": "92.85",
            "min": "88.08",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "72.66",
            "p50": "69.84",
            "p95": "67.53",
            "p99": "62.22",
            "min": "59.77",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "159.26",
            "p50": "127.14",
            "p95": "119.03",
            "p99": "136.21",
            "min": "118.83",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "109.60",
            "p50": "107.74",
            "p95": "103.85",
            "p99": "105.33",
            "min": "102.12",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "421.08",
            "p50": "407.23",
            "p95": "375.53",
            "p99": "343.02",
            "min": "321.19",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "486.38",
            "p50": "477.30",
            "p95": "437.05",
            "p99": "306.73",
            "min": "305.66",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "447.07",
            "p50": "427.93",
            "p95": "410.07",
            "p99": "340.47",
            "min": "310.45",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "453.68",
            "p50": "431.86",
            "p95": "406.23",
            "p99": "342.02",
            "min": "328.91",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "453.63",
            "p50": "433.26",
            "p95": "410.60",
            "p99": "313.08",
            "min": "300.96",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "466.33",
            "p50": "457.93",
            "p95": "424.82",
            "p99": "343.39",
            "min": "307.81",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "117.78",
            "p50": "112.84",
            "p95": "108.18",
            "p99": "101.15",
            "min": "100.06",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "118.49",
            "p50": "113.55",
            "p95": "108.60",
            "p99": "100.78",
            "min": "100.55",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "116.77",
            "p50": "112.14",
            "p95": "106.06",
            "p99": "89.06",
            "min": "86.22",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "101.59",
            "p50": "98.37",
            "p95": "96.44",
            "p99": "94.03",
            "min": "93.71",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.87",
            "p50": "85.89",
            "p95": "84.86",
            "p99": "82.58",
            "min": "82.01",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "114.63",
            "p50": "109.29",
            "p95": "105.21",
            "p99": "100.47",
            "min": "99.79",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "110.33",
            "p50": "103.59",
            "p95": "100.21",
            "p99": "97.55",
            "min": "97.44",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "109.29",
            "p50": "104.15",
            "p95": "100.30",
            "p99": "97.60",
            "min": "97.34",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "109.96",
            "p50": "103.94",
            "p95": "100.20",
            "p99": "99.36",
            "min": "99.33",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1538.32",
            "p50": "1409.11",
            "p95": "784.44",
            "p99": "523.43",
            "min": "513.57",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1543.91",
            "p50": "1409.90",
            "p95": "772.67",
            "p99": "353.13",
            "min": "247.85",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "156.51",
            "p50": "153.60",
            "p95": "140.29",
            "p99": "132.85",
            "min": "131.14",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3728.60",
            "p50": "3420.64",
            "p95": "1367.84",
            "p99": "729.21",
            "min": "591.61",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "156.23",
            "p50": "153.16",
            "p95": "128.83",
            "p99": "105.62",
            "min": "103.39",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3736.63",
            "p50": "3349.22",
            "p95": "1226.49",
            "p99": "617.43",
            "min": "478.13",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "97.93",
            "p50": "96.57",
            "p95": "90.38",
            "p99": "84.18",
            "min": "83.14",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "185.64",
            "p50": "183.04",
            "p95": "178.89",
            "p99": "173.96",
            "min": "173.40",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "346.18",
            "p50": "265.89",
            "p95": "204.04",
            "p99": "177.50",
            "min": "177.23",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9242.09",
            "p50": "1765.48",
            "p95": "978.87",
            "p99": "646.15",
            "min": "626.35",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "348.49",
            "p50": "270.66",
            "p95": "203.44",
            "p99": "160.52",
            "min": "156.69",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "26519.13",
            "p50": "8680.92",
            "p95": "2372.09",
            "p99": "2019.47",
            "min": "1879.74",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6208.48",
            "p50": "3290.45",
            "p95": "1706.32",
            "p99": "651.81",
            "min": "385.33",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "296.58",
            "p50": "240.18",
            "p95": "192.38",
            "p99": "159.60",
            "min": "159.46",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "153.71",
            "p50": "133.37",
            "p95": "118.12",
            "p99": "110.97",
            "min": "109.80",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "122.36",
            "p50": "119.12",
            "p95": "96.92",
            "p99": "91.31",
            "min": "90.55",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "129.40",
            "p50": "120.62",
            "p95": "117.89",
            "p99": "113.18",
            "min": "111.28",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "124.81",
            "p50": "119.35",
            "p95": "115.33",
            "p99": "109.72",
            "min": "109.04",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "158.33",
            "p50": "148.78",
            "p95": "146.25",
            "p99": "142.78",
            "min": "142.67",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "95.75",
            "p50": "92.55",
            "p95": "88.33",
            "p99": "86.14",
            "min": "85.96",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "117.76",
            "p50": "112.53",
            "p95": "109.10",
            "p99": "101.95",
            "min": "101.18",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1152.43",
            "p50": "1072.43",
            "p95": "712.79",
            "p99": "652.97",
            "min": "650.71",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "124.41",
            "p50": "119.79",
            "p95": "101.54",
            "p99": "95.95",
            "min": "94.78",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}