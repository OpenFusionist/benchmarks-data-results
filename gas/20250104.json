{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "112.40",
            "p50": "109.41",
            "p95": "102.63",
            "p99": "98.87",
            "min": "98.49",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "998.70",
            "p50": "969.27",
            "p95": "934.81",
            "p99": "893.56",
            "min": "893.46",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "112.92",
            "p50": "109.72",
            "p95": "105.53",
            "p99": "104.75",
            "min": "104.71",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "732.27",
            "p50": "718.47",
            "p95": "497.25",
            "p99": "470.09",
            "min": "461.72",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "369.98",
            "p50": "363.92",
            "p95": "357.15",
            "p99": "339.40",
            "min": "336.05",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "399.30",
            "p50": "391.56",
            "p95": "380.38",
            "p99": "350.88",
            "min": "342.11",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "312.06",
            "p50": "306.89",
            "p95": "190.83",
            "p99": "187.98",
            "min": "187.80",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "187.17",
            "p50": "181.07",
            "p95": "178.11",
            "p99": "172.74",
            "min": "171.58",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "246.90",
            "p50": "238.42",
            "p95": "225.10",
            "p99": "220.67",
            "min": "220.49",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "250.37",
            "p50": "238.48",
            "p95": "232.76",
            "p99": "225.95",
            "min": "225.80",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "255.29",
            "p50": "251.98",
            "p95": "247.49",
            "p99": "243.41",
            "min": "243.01",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "203.04",
            "p50": "197.80",
            "p95": "193.89",
            "p99": "191.75",
            "min": "191.57",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "314.68",
            "p50": "310.53",
            "p95": "273.24",
            "p99": "271.36",
            "min": "271.31",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "296.71",
            "p50": "290.35",
            "p95": "256.24",
            "p99": "251.30",
            "min": "250.91",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "7119.59",
            "p50": "6044.15",
            "p95": "2489.23",
            "p99": "1681.17",
            "min": "1577.98",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2608.36",
            "p50": "2235.27",
            "p95": "1563.46",
            "p99": "1588.20",
            "min": "1038.89",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "281.64",
            "p50": "253.38",
            "p95": "239.83",
            "p99": "234.17",
            "min": "223.04",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1427.63",
            "p50": "947.77",
            "p95": "464.01",
            "p99": "823.97",
            "min": "368.58",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7993.50",
            "p50": "4428.10",
            "p95": "2342.34",
            "p99": "4682.84",
            "min": "2185.33",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "807.93",
            "p50": "775.18",
            "p95": "538.56",
            "p99": "528.28",
            "min": "528.23",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "818.11",
            "p50": "800.96",
            "p95": "756.37",
            "p99": "719.33",
            "min": "700.04",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "909.67",
            "p50": "883.10",
            "p95": "663.08",
            "p99": "646.35",
            "min": "646.03",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2227.35",
            "p50": "2074.70",
            "p95": "1830.33",
            "p99": "1693.14",
            "min": "1679.13",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2219.81",
            "p50": "2083.42",
            "p95": "1818.56",
            "p99": "1713.02",
            "min": "1703.56",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "805.36",
            "p50": "792.20",
            "p95": "752.91",
            "p99": "728.33",
            "min": "721.93",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "163.77",
            "p50": "156.80",
            "p95": "135.81",
            "p99": "133.91",
            "min": "133.84",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "507.72",
            "p50": "480.47",
            "p95": "398.10",
            "p99": "367.33",
            "min": "366.98",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "162.00",
            "p50": "150.39",
            "p95": "143.72",
            "p99": "141.57",
            "min": "141.57",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "183.76",
            "p50": "178.05",
            "p95": "155.13",
            "p99": "149.01",
            "min": "148.90",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "32600.83",
            "p50": "8559.74",
            "p95": "2438.17",
            "p99": "2290.18",
            "min": "2287.99",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "378.57",
            "p50": "314.16",
            "p95": "304.92",
            "p99": "302.17",
            "min": "301.99",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "362.15",
            "p50": "299.76",
            "p95": "289.31",
            "p99": "283.53",
            "min": "282.45",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "364.44",
            "p50": "306.85",
            "p95": "290.39",
            "p99": "250.13",
            "min": "247.97",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "360.59",
            "p50": "297.90",
            "p95": "289.90",
            "p99": "288.77",
            "min": "288.74",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "14063.91",
            "p50": "6854.46",
            "p95": "2480.16",
            "p99": "2191.86",
            "min": "2060.15",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "14111.85",
            "p50": "7874.96",
            "p95": "2378.73",
            "p99": "1674.36",
            "min": "1470.00",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "13898.16",
            "p50": "6801.48",
            "p95": "2382.96",
            "p99": "1517.74",
            "min": "1506.38",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "13598.08",
            "p50": "5967.66",
            "p95": "2444.58",
            "p99": "2231.86",
            "min": "2192.62",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "13802.91",
            "p50": "6274.68",
            "p95": "2492.81",
            "p99": "2106.11",
            "min": "2054.46",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "14448.31",
            "p50": "7773.60",
            "p95": "2465.96",
            "p99": "1284.61",
            "min": "210.63",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "249.24",
            "p50": "236.99",
            "p95": "229.92",
            "p99": "223.84",
            "min": "223.07",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "525.45",
            "p50": "517.57",
            "p95": "508.19",
            "p99": "474.93",
            "min": "473.53",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1630.44",
            "p50": "1564.48",
            "p95": "378.63",
            "p99": "348.62",
            "min": "346.53",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "22608.04",
            "p50": "6151.81",
            "p95": "298.64",
            "p99": "231.52",
            "min": "224.39",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1427.85",
            "p50": "1371.75",
            "p95": "276.67",
            "p99": "61.96",
            "min": "61.58",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "53476.78",
            "p50": "9304.69",
            "p95": "2406.38",
            "p99": "145.21",
            "min": "118.09",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15654.01",
            "p50": "7530.28",
            "p95": "291.63",
            "p99": "247.25",
            "min": "244.70",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "583.60",
            "p50": "536.69",
            "p95": "456.57",
            "p99": "412.28",
            "min": "409.40",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "516.02",
            "p50": "506.42",
            "p95": "497.71",
            "p99": "488.03",
            "min": "487.93",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "204.18",
            "p50": "198.78",
            "p95": "195.30",
            "p99": "189.97",
            "min": "189.83",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "384.30",
            "p50": "374.47",
            "p95": "368.31",
            "p99": "357.01",
            "min": "356.75",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "206.37",
            "p50": "199.84",
            "p95": "193.89",
            "p99": "188.70",
            "min": "188.53",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "340.67",
            "p50": "336.52",
            "p95": "326.90",
            "p99": "315.05",
            "min": "314.61",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "257.54",
            "p50": "253.72",
            "p95": "249.57",
            "p99": "235.73",
            "min": "233.36",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "520.95",
            "p50": "511.54",
            "p95": "499.26",
            "p99": "472.02",
            "min": "464.39",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1423.58",
            "p50": "1264.25",
            "p95": "976.32",
            "p99": "922.44",
            "min": "906.52",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "311.76",
            "p50": "305.22",
            "p95": "285.99",
            "p99": "280.85",
            "min": "279.61",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "90.26",
            "p50": "89.01",
            "p95": "83.60",
            "p99": "78.74",
            "min": "78.05",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "82.30",
            "p50": "81.38",
            "p95": "77.03",
            "p99": "75.00",
            "min": "74.84",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "84.09",
            "p50": "82.96",
            "p95": "77.90",
            "p99": "70.43",
            "min": "69.00",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "250.63",
            "p50": "245.52",
            "p95": "220.31",
            "p99": "208.40",
            "min": "207.15",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "186.26",
            "p50": "182.97",
            "p95": "166.00",
            "p99": "155.12",
            "min": "153.67",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "195.78",
            "p50": "192.66",
            "p95": "178.93",
            "p99": "169.11",
            "min": "167.21",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "185.67",
            "p50": "177.56",
            "p95": "158.25",
            "p99": "148.20",
            "min": "147.03",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "183.17",
            "p50": "175.70",
            "p95": "162.82",
            "p99": "146.94",
            "min": "146.57",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "208.79",
            "p50": "201.95",
            "p95": "183.10",
            "p99": "154.35",
            "min": "147.23",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "186.84",
            "p50": "182.53",
            "p95": "165.02",
            "p99": "151.69",
            "min": "151.31",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "210.08",
            "p50": "202.44",
            "p95": "179.62",
            "p99": "172.23",
            "min": "171.31",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "153.72",
            "p50": "149.10",
            "p95": "136.23",
            "p99": "121.87",
            "min": "121.80",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "226.51",
            "p50": "221.12",
            "p95": "200.22",
            "p99": "192.26",
            "min": "191.71",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "187.03",
            "p50": "180.81",
            "p95": "156.04",
            "p99": "110.09",
            "min": "100.26",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "69.01",
            "p50": "66.74",
            "p95": "63.97",
            "p99": "60.64",
            "min": "59.21",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "142.58",
            "p50": "139.89",
            "p95": "131.38",
            "p99": "134.22",
            "min": "129.71",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "447.05",
            "p50": "369.97",
            "p95": "278.78",
            "p99": "263.80",
            "min": "220.81",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "195.43",
            "p50": "153.43",
            "p95": "141.91",
            "p99": "164.12",
            "min": "140.49",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.88",
            "p50": "133.03",
            "p95": "122.34",
            "p99": "125.86",
            "min": "118.30",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1232.72",
            "p50": "1179.83",
            "p95": "690.00",
            "p99": "612.06",
            "min": "605.14",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1064.41",
            "p50": "1037.10",
            "p95": "705.82",
            "p99": "568.62",
            "min": "567.17",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1486.67",
            "p50": "1377.50",
            "p95": "760.12",
            "p99": "581.03",
            "min": "545.98",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1375.36",
            "p50": "1260.17",
            "p95": "703.34",
            "p99": "600.58",
            "min": "577.59",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1341.14",
            "p50": "1278.23",
            "p95": "832.35",
            "p99": "546.82",
            "min": "543.55",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1103.34",
            "p50": "1070.38",
            "p95": "644.68",
            "p99": "507.49",
            "min": "481.80",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "740.69",
            "p50": "634.60",
            "p95": "443.31",
            "p99": "407.86",
            "min": "406.46",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "741.95",
            "p50": "653.72",
            "p95": "476.91",
            "p99": "426.64",
            "min": "422.31",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "751.05",
            "p50": "654.05",
            "p95": "470.59",
            "p99": "439.39",
            "min": "438.62",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "743.18",
            "p50": "695.34",
            "p95": "497.38",
            "p99": "401.95",
            "min": "399.83",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "296.39",
            "p50": "292.08",
            "p95": "251.37",
            "p99": "229.50",
            "min": "221.77",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "664.28",
            "p50": "564.26",
            "p95": "445.48",
            "p99": "383.54",
            "min": "381.34",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "640.98",
            "p50": "558.85",
            "p95": "447.30",
            "p99": "331.48",
            "min": "323.62",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "663.20",
            "p50": "579.81",
            "p95": "441.93",
            "p99": "371.49",
            "min": "369.77",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "676.69",
            "p50": "587.03",
            "p95": "465.10",
            "p99": "349.26",
            "min": "345.27",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "107.18",
            "p50": "105.60",
            "p95": "99.35",
            "p99": "93.78",
            "min": "91.88",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "107.12",
            "p50": "105.90",
            "p95": "100.01",
            "p99": "94.69",
            "min": "94.26",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.80",
            "p50": "98.36",
            "p95": "92.81",
            "p99": "91.19",
            "min": "91.01",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "257.20",
            "p50": "252.51",
            "p95": "224.51",
            "p99": "197.32",
            "min": "196.46",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.75",
            "p50": "98.16",
            "p95": "90.70",
            "p99": "87.98",
            "min": "87.70",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "249.80",
            "p50": "245.77",
            "p95": "212.13",
            "p99": "189.29",
            "min": "185.39",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "210.14",
            "p50": "207.48",
            "p95": "180.36",
            "p99": "166.84",
            "min": "166.79",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "243.16",
            "p50": "238.38",
            "p95": "209.29",
            "p99": "196.09",
            "min": "188.68",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "461.77",
            "p50": "450.42",
            "p95": "359.09",
            "p99": "321.81",
            "min": "307.74",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7275.47",
            "p50": "4595.59",
            "p95": "2108.67",
            "p99": "1778.93",
            "min": "1720.49",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "439.64",
            "p50": "428.73",
            "p95": "360.14",
            "p99": "322.46",
            "min": "315.16",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "18155.19",
            "p50": "7866.74",
            "p95": "2619.68",
            "p99": "2197.60",
            "min": "2193.43",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4318.73",
            "p50": "3439.44",
            "p95": "1720.94",
            "p99": "1219.41",
            "min": "1130.31",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "215.86",
            "p50": "188.48",
            "p95": "170.77",
            "p99": "154.81",
            "min": "153.62",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "266.04",
            "p50": "262.22",
            "p95": "224.13",
            "p99": "136.05",
            "min": "108.60",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "95.38",
            "p50": "94.35",
            "p95": "89.44",
            "p99": "85.42",
            "min": "85.34",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "247.81",
            "p50": "243.18",
            "p95": "214.30",
            "p99": "155.05",
            "min": "151.09",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "183.07",
            "p50": "178.75",
            "p95": "160.02",
            "p99": "151.90",
            "min": "151.84",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "224.06",
            "p50": "219.69",
            "p95": "190.94",
            "p99": "150.01",
            "min": "124.73",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "210.74",
            "p50": "207.66",
            "p95": "187.50",
            "p99": "168.14",
            "min": "166.91",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "207.95",
            "p50": "204.46",
            "p95": "180.51",
            "p99": "173.99",
            "min": "173.77",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1214.55",
            "p50": "1088.39",
            "p95": "878.13",
            "p99": "796.72",
            "min": "788.91",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "183.44",
            "p50": "180.57",
            "p95": "160.32",
            "p99": "133.30",
            "min": "132.97",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.64",
            "p50": "192.29",
            "p95": "184.39",
            "p99": "169.59",
            "min": "167.59",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.19",
            "p50": "192.49",
            "p95": "183.68",
            "p99": "178.74",
            "min": "178.52",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.00",
            "p50": "193.26",
            "p95": "185.51",
            "p99": "174.01",
            "min": "173.46",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1190.75",
            "p50": "1169.45",
            "p95": "970.86",
            "p99": "638.49",
            "min": "601.19",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "702.23",
            "p50": "693.25",
            "p95": "623.88",
            "p99": "508.00",
            "min": "485.57",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "810.86",
            "p50": "799.62",
            "p95": "689.80",
            "p99": "510.83",
            "min": "496.66",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "739.80",
            "p50": "726.50",
            "p95": "673.37",
            "p99": "604.12",
            "min": "598.32",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "749.72",
            "p50": "738.43",
            "p95": "680.77",
            "p99": "625.84",
            "min": "624.09",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "920.26",
            "p50": "901.46",
            "p95": "792.73",
            "p99": "313.57",
            "min": "181.20",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "890.09",
            "p50": "873.21",
            "p95": "779.46",
            "p99": "665.90",
            "min": "660.90",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "889.21",
            "p50": "874.43",
            "p95": "773.10",
            "p99": "676.45",
            "min": "659.48",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "846.50",
            "p50": "831.19",
            "p95": "714.80",
            "p99": "533.34",
            "min": "494.79",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "884.86",
            "p50": "868.49",
            "p95": "729.67",
            "p99": "351.98",
            "min": "219.51",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "888.83",
            "p50": "874.61",
            "p95": "847.29",
            "p99": "699.68",
            "min": "666.49",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "109.85",
            "p50": "105.65",
            "p95": "102.38",
            "p99": "99.42",
            "min": "99.41",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "95.92",
            "p50": "95.24",
            "p95": "93.32",
            "p99": "93.55",
            "min": "92.27",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "603.51",
            "p50": "585.50",
            "p95": "509.09",
            "p99": "440.22",
            "min": "401.91",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "129.90",
            "p50": "103.39",
            "p95": "96.66",
            "p99": "110.48",
            "min": "95.83",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "89.64",
            "p50": "88.02",
            "p95": "85.91",
            "p99": "86.31",
            "min": "83.80",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1933.13",
            "p50": "1891.47",
            "p95": "1308.01",
            "p99": "926.01",
            "min": "893.57",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1640.54",
            "p50": "1604.99",
            "p95": "1284.18",
            "p99": "841.45",
            "min": "834.54",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2487.41",
            "p50": "2402.07",
            "p95": "1525.66",
            "p99": "1020.84",
            "min": "1017.90",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2503.34",
            "p50": "2398.51",
            "p95": "1540.27",
            "p99": "1093.75",
            "min": "1036.20",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2468.58",
            "p50": "2377.87",
            "p95": "1381.57",
            "p99": "806.85",
            "min": "730.20",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1710.20",
            "p50": "1666.88",
            "p95": "1109.24",
            "p99": "850.17",
            "min": "787.37",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "885.34",
            "p50": "844.46",
            "p95": "752.52",
            "p99": "543.43",
            "min": "503.31",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "874.76",
            "p50": "842.90",
            "p95": "672.52",
            "p99": "519.93",
            "min": "516.68",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "874.27",
            "p50": "846.79",
            "p95": "725.48",
            "p99": "599.64",
            "min": "590.31",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "877.71",
            "p50": "854.18",
            "p95": "687.35",
            "p99": "582.01",
            "min": "580.63",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.73",
            "p50": "86.25",
            "p95": "83.18",
            "p99": "81.83",
            "min": "81.32",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "815.55",
            "p50": "775.92",
            "p95": "666.01",
            "p99": "527.69",
            "min": "522.95",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "759.57",
            "p50": "735.41",
            "p95": "689.32",
            "p99": "537.81",
            "min": "522.72",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "770.30",
            "p50": "730.81",
            "p95": "653.93",
            "p99": "581.85",
            "min": "575.90",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "771.29",
            "p50": "744.00",
            "p95": "694.06",
            "p99": "630.04",
            "min": "624.92",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2037.38",
            "p50": "1974.70",
            "p95": "1332.30",
            "p99": "898.85",
            "min": "780.72",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2347.27",
            "p50": "2268.24",
            "p95": "1635.62",
            "p99": "1035.18",
            "min": "927.25",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.42",
            "p50": "71.95",
            "p95": "70.30",
            "p99": "67.22",
            "min": "66.75",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "10140.71",
            "p50": "8601.24",
            "p95": "2544.02",
            "p99": "1988.16",
            "min": "1526.89",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.51",
            "p50": "72.04",
            "p95": "70.66",
            "p99": "69.24",
            "min": "68.95",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "224.07",
            "p50": "222.04",
            "p95": "214.40",
            "p99": "202.35",
            "min": "201.64",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "887.60",
            "p50": "870.50",
            "p95": "757.23",
            "p99": "556.80",
            "min": "527.50",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "671.46",
            "p50": "663.61",
            "p95": "619.32",
            "p99": "545.72",
            "min": "506.02",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2361.17",
            "p50": "2241.71",
            "p95": "1550.23",
            "p99": "985.30",
            "min": "860.50",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "27791.75",
            "p50": "9760.33",
            "p95": "2555.84",
            "p99": "2275.45",
            "min": "2200.57",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2177.31",
            "p50": "2085.83",
            "p95": "1520.02",
            "p99": "1224.46",
            "min": "1168.04",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "82470.21",
            "p50": "9249.81",
            "p95": "2650.38",
            "p99": "2305.83",
            "min": "2283.05",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "16011.40",
            "p50": "8679.33",
            "p95": "2591.08",
            "p99": "2338.07",
            "min": "2286.76",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "873.15",
            "p50": "729.13",
            "p95": "619.88",
            "p99": "564.97",
            "min": "552.86",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "994.86",
            "p50": "974.34",
            "p95": "783.10",
            "p99": "306.26",
            "min": "190.91",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "841.26",
            "p50": "824.10",
            "p95": "785.72",
            "p99": "529.50",
            "min": "493.37",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1199.60",
            "p50": "1175.49",
            "p95": "1000.63",
            "p99": "767.69",
            "min": "702.57",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "752.45",
            "p50": "742.07",
            "p95": "645.31",
            "p99": "572.06",
            "min": "571.41",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1156.00",
            "p50": "1131.34",
            "p95": "1012.31",
            "p99": "927.99",
            "min": "915.63",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "876.78",
            "p50": "840.85",
            "p95": "730.83",
            "p99": "597.18",
            "min": "587.77",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "934.98",
            "p50": "915.50",
            "p95": "721.61",
            "p99": "505.52",
            "min": "504.72",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2454.37",
            "p50": "2279.99",
            "p95": "1631.27",
            "p99": "1272.58",
            "min": "1251.52",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "878.72",
            "p50": "862.82",
            "p95": "776.22",
            "p99": "637.74",
            "min": "619.29",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "125.84",
            "p50": "121.65",
            "p95": "108.14",
            "p99": "98.68",
            "min": "98.24",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "125.78",
            "p50": "120.88",
            "p95": "109.45",
            "p99": "101.00",
            "min": "100.33",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "126.16",
            "p50": "120.94",
            "p95": "108.66",
            "p99": "97.11",
            "min": "95.26",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "214.61",
            "p50": "202.99",
            "p95": "180.49",
            "p99": "162.84",
            "min": "161.91",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "105.61",
            "p50": "101.85",
            "p95": "95.78",
            "p99": "87.03",
            "min": "86.65",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "111.76",
            "p50": "107.30",
            "p95": "97.62",
            "p99": "87.36",
            "min": "84.92",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "142.66",
            "p50": "137.49",
            "p95": "120.20",
            "p99": "90.80",
            "min": "87.84",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "144.16",
            "p50": "138.54",
            "p95": "120.79",
            "p99": "112.88",
            "min": "112.18",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "187.49",
            "p50": "179.19",
            "p95": "147.92",
            "p99": "140.96",
            "min": "140.92",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "185.85",
            "p50": "176.85",
            "p95": "150.54",
            "p99": "138.03",
            "min": "137.61",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "186.88",
            "p50": "178.05",
            "p95": "150.49",
            "p99": "117.10",
            "min": "110.90",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.58",
            "p50": "123.28",
            "p95": "107.95",
            "p99": "79.88",
            "min": "77.81",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "207.49",
            "p50": "191.40",
            "p95": "160.83",
            "p99": "142.48",
            "min": "141.43",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "190.78",
            "p50": "182.35",
            "p95": "148.71",
            "p99": "138.42",
            "min": "136.86",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "71.80",
            "p50": "68.75",
            "p95": "64.30",
            "p99": "61.30",
            "min": "61.22",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "135.62",
            "p50": "129.40",
            "p95": "109.11",
            "p99": "116.05",
            "min": "105.50",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "225.83",
            "p50": "201.43",
            "p95": "167.77",
            "p99": "167.62",
            "min": "153.97",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "179.67",
            "p50": "146.39",
            "p95": "135.68",
            "p99": "154.24",
            "min": "135.06",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "129.74",
            "p50": "125.27",
            "p95": "109.81",
            "p99": "115.37",
            "min": "104.52",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1054.52",
            "p50": "843.38",
            "p95": "479.32",
            "p99": "383.25",
            "min": "350.80",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1035.74",
            "p50": "859.25",
            "p95": "468.36",
            "p99": "303.79",
            "min": "292.89",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1179.26",
            "p50": "954.10",
            "p95": "621.10",
            "p99": "506.20",
            "min": "506.13",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1101.01",
            "p50": "889.02",
            "p95": "550.87",
            "p99": "408.32",
            "min": "389.99",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1065.99",
            "p50": "870.36",
            "p95": "457.50",
            "p99": "337.64",
            "min": "311.72",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1041.19",
            "p50": "841.37",
            "p95": "534.12",
            "p99": "416.26",
            "min": "399.29",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "350.51",
            "p50": "313.23",
            "p95": "261.34",
            "p99": "228.64",
            "min": "223.63",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "347.07",
            "p50": "310.52",
            "p95": "247.39",
            "p99": "227.61",
            "min": "225.38",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "347.48",
            "p50": "317.55",
            "p95": "253.03",
            "p99": "236.35",
            "min": "236.28",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "388.96",
            "p50": "340.42",
            "p95": "253.48",
            "p99": "202.34",
            "min": "200.31",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "292.51",
            "p50": "268.54",
            "p95": "224.04",
            "p99": "188.24",
            "min": "176.09",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "309.09",
            "p50": "274.22",
            "p95": "230.68",
            "p99": "205.80",
            "min": "203.78",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "298.59",
            "p50": "270.52",
            "p95": "227.40",
            "p99": "203.03",
            "min": "202.33",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "300.24",
            "p50": "270.69",
            "p95": "205.57",
            "p99": "176.89",
            "min": "175.34",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "304.65",
            "p50": "275.90",
            "p95": "216.51",
            "p99": "185.36",
            "min": "183.97",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.74",
            "p50": "102.41",
            "p95": "93.66",
            "p99": "86.67",
            "min": "85.00",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.63",
            "p50": "102.34",
            "p95": "92.16",
            "p99": "84.88",
            "min": "84.85",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.93",
            "p50": "95.35",
            "p95": "86.87",
            "p99": "80.38",
            "min": "79.15",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "250.10",
            "p50": "236.98",
            "p95": "201.62",
            "p99": "185.89",
            "min": "180.18",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.60",
            "p50": "95.18",
            "p95": "84.72",
            "p99": "79.91",
            "min": "79.85",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "242.58",
            "p50": "226.73",
            "p95": "192.09",
            "p99": "158.75",
            "min": "156.18",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "187.52",
            "p50": "178.02",
            "p95": "152.20",
            "p99": "141.11",
            "min": "140.49",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "155.33",
            "p50": "147.95",
            "p95": "131.77",
            "p99": "112.24",
            "min": "102.05",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "436.94",
            "p50": "392.00",
            "p95": "288.25",
            "p99": "212.81",
            "min": "212.13",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5495.69",
            "p50": "2707.37",
            "p95": "665.75",
            "p99": "496.34",
            "min": "490.45",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "435.95",
            "p50": "393.80",
            "p95": "303.26",
            "p99": "233.07",
            "min": "232.03",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "15330.53",
            "p50": "3481.46",
            "p95": "1227.40",
            "p99": "1073.29",
            "min": "1045.50",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3759.46",
            "p50": "1875.79",
            "p95": "622.29",
            "p99": "512.43",
            "min": "494.60",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "209.75",
            "p50": "193.74",
            "p95": "160.11",
            "p99": "147.55",
            "min": "143.59",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "235.13",
            "p50": "220.37",
            "p95": "186.66",
            "p99": "158.76",
            "min": "156.63",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "128.08",
            "p50": "123.50",
            "p95": "108.73",
            "p99": "62.24",
            "min": "45.65",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "211.02",
            "p50": "200.74",
            "p95": "166.87",
            "p99": "148.83",
            "min": "148.35",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "143.41",
            "p50": "137.38",
            "p95": "117.88",
            "p99": "78.40",
            "min": "71.78",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "177.85",
            "p50": "167.90",
            "p95": "143.11",
            "p99": "135.27",
            "min": "133.60",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "186.28",
            "p50": "175.97",
            "p95": "149.24",
            "p99": "132.92",
            "min": "131.71",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "186.20",
            "p50": "176.10",
            "p95": "147.33",
            "p99": "134.75",
            "min": "134.60",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "312.12",
            "p50": "260.65",
            "p95": "116.86",
            "p99": "101.78",
            "min": "101.43",
            "n": "103",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "146.16",
            "p50": "139.61",
            "p95": "85.36",
            "p99": "81.06",
            "min": "80.64",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "89.62",
            "p50": "85.45",
            "p95": "79.33",
            "p99": "73.75",
            "min": "73.15",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "90.96",
            "p50": "86.60",
            "p95": "84.25",
            "p99": "80.24",
            "min": "79.90",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "90.28",
            "p50": "86.20",
            "p95": "84.17",
            "p99": "82.84",
            "min": "82.62",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "187.95",
            "p50": "182.42",
            "p95": "177.64",
            "p99": "159.12",
            "min": "151.15",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "90.48",
            "p50": "89.01",
            "p95": "85.68",
            "p99": "84.03",
            "min": "83.75",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "111.15",
            "p50": "108.45",
            "p95": "104.23",
            "p99": "102.25",
            "min": "101.86",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "125.11",
            "p50": "121.13",
            "p95": "106.79",
            "p99": "97.36",
            "min": "96.28",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "127.19",
            "p50": "123.04",
            "p95": "120.56",
            "p99": "115.72",
            "min": "115.43",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "96.70",
            "p50": "94.34",
            "p95": "77.01",
            "p99": "75.06",
            "min": "75.02",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.88",
            "p50": "95.98",
            "p95": "93.10",
            "p99": "90.03",
            "min": "89.67",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "97.65",
            "p50": "96.19",
            "p95": "94.36",
            "p99": "93.07",
            "min": "93.01",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.46",
            "p50": "122.38",
            "p95": "119.43",
            "p99": "118.16",
            "min": "118.11",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "119.69",
            "p50": "117.56",
            "p95": "110.70",
            "p99": "109.71",
            "min": "109.58",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "116.51",
            "p50": "113.79",
            "p95": "111.18",
            "p99": "107.32",
            "min": "107.18",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "86.34",
            "p50": "82.92",
            "p95": "79.79",
            "p99": "77.45",
            "min": "77.44",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "93.10",
            "p50": "92.16",
            "p95": "89.24",
            "p99": "88.75",
            "min": "86.41",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "60.10",
            "p50": "58.25",
            "p95": "56.42",
            "p99": "56.07",
            "min": "55.12",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "150.26",
            "p50": "120.19",
            "p95": "112.53",
            "p99": "128.42",
            "min": "111.93",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "104.18",
            "p50": "101.89",
            "p95": "100.69",
            "p99": "101.94",
            "min": "100.25",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "376.65",
            "p50": "366.85",
            "p95": "355.13",
            "p99": "332.69",
            "min": "328.06",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "488.02",
            "p50": "480.07",
            "p95": "466.19",
            "p99": "432.33",
            "min": "411.82",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "374.27",
            "p50": "365.18",
            "p95": "352.51",
            "p99": "325.05",
            "min": "320.47",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "379.78",
            "p50": "369.61",
            "p95": "357.41",
            "p99": "331.32",
            "min": "331.20",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "381.23",
            "p50": "370.13",
            "p95": "352.60",
            "p99": "324.23",
            "min": "315.83",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "454.59",
            "p50": "446.73",
            "p95": "432.47",
            "p99": "403.15",
            "min": "382.19",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "97.26",
            "p50": "94.69",
            "p95": "92.59",
            "p99": "91.78",
            "min": "91.75",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "98.05",
            "p50": "95.51",
            "p95": "93.36",
            "p99": "91.97",
            "min": "91.78",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "96.51",
            "p50": "94.02",
            "p95": "91.77",
            "p99": "88.29",
            "min": "87.53",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "87.95",
            "p50": "86.43",
            "p95": "85.06",
            "p99": "81.30",
            "min": "80.84",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.89",
            "p50": "86.16",
            "p95": "85.21",
            "p99": "83.84",
            "min": "83.63",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "90.54",
            "p50": "87.76",
            "p95": "84.74",
            "p99": "81.83",
            "min": "81.58",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "86.25",
            "p50": "83.74",
            "p95": "80.91",
            "p99": "79.80",
            "min": "79.67",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "85.94",
            "p50": "83.38",
            "p95": "80.79",
            "p99": "78.81",
            "min": "78.66",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "85.97",
            "p50": "83.53",
            "p95": "80.74",
            "p99": "79.50",
            "min": "79.45",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1431.81",
            "p50": "1293.26",
            "p95": "836.72",
            "p99": "546.07",
            "min": "492.54",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1429.83",
            "p50": "1306.99",
            "p95": "922.56",
            "p99": "629.03",
            "min": "564.35",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "156.17",
            "p50": "152.92",
            "p95": "143.09",
            "p99": "130.13",
            "min": "128.30",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3006.88",
            "p50": "2805.04",
            "p95": "1344.51",
            "p99": "813.77",
            "min": "670.76",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "155.85",
            "p50": "152.50",
            "p95": "143.20",
            "p99": "134.89",
            "min": "133.86",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "2993.81",
            "p50": "2826.74",
            "p95": "1546.41",
            "p99": "869.65",
            "min": "473.69",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.18",
            "p50": "96.09",
            "p95": "92.74",
            "p99": "91.03",
            "min": "91.01",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "186.55",
            "p50": "174.07",
            "p95": "168.31",
            "p99": "156.43",
            "min": "151.38",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "396.03",
            "p50": "339.67",
            "p95": "252.48",
            "p99": "214.88",
            "min": "206.58",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9316.07",
            "p50": "1858.22",
            "p95": "939.01",
            "p99": "527.43",
            "min": "454.27",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "422.61",
            "p50": "360.29",
            "p95": "266.02",
            "p99": "247.21",
            "min": "241.26",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "28755.17",
            "p50": "9580.96",
            "p95": "2596.76",
            "p99": "2314.02",
            "min": "2264.44",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6122.35",
            "p50": "3368.80",
            "p95": "1540.88",
            "p99": "591.42",
            "min": "530.85",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "347.18",
            "p50": "299.84",
            "p95": "228.26",
            "p99": "173.27",
            "min": "168.35",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "153.69",
            "p50": "140.17",
            "p95": "125.82",
            "p99": "113.59",
            "min": "113.17",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "124.70",
            "p50": "108.17",
            "p95": "99.53",
            "p99": "95.45",
            "min": "94.60",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "135.48",
            "p50": "122.78",
            "p95": "115.28",
            "p99": "106.20",
            "min": "101.77",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "128.61",
            "p50": "119.02",
            "p95": "112.39",
            "p99": "104.69",
            "min": "104.54",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "175.40",
            "p50": "152.14",
            "p95": "144.56",
            "p99": "118.82",
            "min": "113.40",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "93.66",
            "p50": "92.33",
            "p95": "78.01",
            "p99": "77.46",
            "min": "77.42",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "118.96",
            "p50": "110.05",
            "p95": "105.12",
            "p99": "101.32",
            "min": "99.68",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1126.38",
            "p50": "1041.52",
            "p95": "356.53",
            "p99": "340.04",
            "min": "338.22",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "127.78",
            "p50": "117.67",
            "p95": "106.20",
            "p99": "103.27",
            "min": "103.22",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}