{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "113.80",
            "p50": "108.99",
            "p95": "100.87",
            "p99": "96.45",
            "min": "96.30",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1124.66",
            "p50": "910.76",
            "p95": "558.27",
            "p99": "399.50",
            "min": "375.36",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "113.87",
            "p50": "109.95",
            "p95": "100.49",
            "p99": "97.88",
            "min": "97.65",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "766.07",
            "p50": "727.88",
            "p95": "467.83",
            "p99": "423.10",
            "min": "418.67",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "407.45",
            "p50": "371.15",
            "p95": "306.34",
            "p99": "283.40",
            "min": "283.33",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "433.36",
            "p50": "402.04",
            "p95": "329.12",
            "p99": "296.96",
            "min": "296.21",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "295.38",
            "p50": "277.86",
            "p95": "198.30",
            "p99": "191.65",
            "min": "191.62",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "184.53",
            "p50": "175.01",
            "p95": "159.20",
            "p99": "153.22",
            "min": "152.89",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "257.24",
            "p50": "237.51",
            "p95": "211.92",
            "p99": "197.60",
            "min": "196.91",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "264.00",
            "p50": "242.85",
            "p95": "217.64",
            "p99": "198.55",
            "min": "197.27",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "261.48",
            "p50": "240.01",
            "p95": "211.21",
            "p99": "165.09",
            "min": "154.47",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "203.90",
            "p50": "193.80",
            "p95": "175.25",
            "p99": "163.87",
            "min": "163.24",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "340.28",
            "p50": "316.18",
            "p95": "271.77",
            "p99": "254.97",
            "min": "254.30",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "301.60",
            "p50": "278.38",
            "p95": "235.66",
            "p99": "100.37",
            "min": "66.78",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8766.05",
            "p50": "3820.89",
            "p95": "2232.61",
            "p99": "1640.79",
            "min": "1604.30",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2971.60",
            "p50": "1884.11",
            "p95": "921.42",
            "p99": "1538.73",
            "min": "767.18",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "329.56",
            "p50": "294.01",
            "p95": "249.43",
            "p99": "259.09",
            "min": "242.56",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1444.06",
            "p50": "790.57",
            "p95": "332.37",
            "p99": "801.55",
            "min": "316.85",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7512.89",
            "p50": "3353.46",
            "p95": "1405.59",
            "p99": "4013.07",
            "min": "1372.86",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "821.40",
            "p50": "719.16",
            "p95": "514.84",
            "p99": "428.26",
            "min": "428.14",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "815.88",
            "p50": "756.52",
            "p95": "582.44",
            "p99": "440.18",
            "min": "426.18",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "940.07",
            "p50": "813.89",
            "p95": "581.83",
            "p99": "493.49",
            "min": "490.93",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2390.48",
            "p50": "1926.73",
            "p95": "1080.34",
            "p99": "791.26",
            "min": "731.25",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2391.75",
            "p50": "1803.91",
            "p95": "966.13",
            "p99": "803.66",
            "min": "798.22",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "808.54",
            "p50": "746.32",
            "p95": "530.65",
            "p99": "437.53",
            "min": "437.16",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "168.31",
            "p50": "158.48",
            "p95": "147.24",
            "p99": "141.24",
            "min": "140.37",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "554.93",
            "p50": "498.31",
            "p95": "371.30",
            "p99": "317.73",
            "min": "316.79",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "169.88",
            "p50": "158.42",
            "p95": "147.50",
            "p99": "142.77",
            "min": "142.77",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "190.21",
            "p50": "173.69",
            "p95": "159.87",
            "p99": "153.14",
            "min": "152.03",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "34002.48",
            "p50": "8753.67",
            "p95": "2482.42",
            "p99": "2090.90",
            "min": "1917.22",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "414.24",
            "p50": "379.48",
            "p95": "321.11",
            "p99": "273.01",
            "min": "268.71",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "396.02",
            "p50": "360.08",
            "p95": "292.35",
            "p99": "265.35",
            "min": "262.16",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "393.88",
            "p50": "360.60",
            "p95": "309.88",
            "p99": "274.12",
            "min": "273.52",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "398.48",
            "p50": "360.29",
            "p95": "310.13",
            "p99": "279.29",
            "min": "275.45",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "17066.73",
            "p50": "5292.56",
            "p95": "2613.38",
            "p99": "2277.48",
            "min": "2223.72",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "16886.76",
            "p50": "5210.28",
            "p95": "2516.88",
            "p99": "1928.66",
            "min": "1497.09",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "16509.93",
            "p50": "5295.03",
            "p95": "2406.10",
            "p99": "1597.93",
            "min": "1512.94",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "16958.90",
            "p50": "5685.96",
            "p95": "2514.27",
            "p99": "2136.98",
            "min": "2074.93",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "16537.55",
            "p50": "5332.73",
            "p95": "2457.54",
            "p99": "1741.62",
            "min": "1608.07",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "17070.02",
            "p50": "5688.14",
            "p95": "2580.91",
            "p99": "2230.61",
            "min": "2205.19",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "263.16",
            "p50": "240.96",
            "p95": "215.89",
            "p99": "194.64",
            "min": "193.67",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "523.90",
            "p50": "483.28",
            "p95": "391.13",
            "p99": "337.39",
            "min": "334.77",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1656.37",
            "p50": "1329.00",
            "p95": "360.16",
            "p99": "290.42",
            "min": "290.32",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "23991.95",
            "p50": "5066.10",
            "p95": "301.96",
            "p99": "248.79",
            "min": "247.37",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1417.37",
            "p50": "1284.66",
            "p95": "794.35",
            "p99": "623.06",
            "min": "562.97",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "54238.30",
            "p50": "9319.36",
            "p95": "2416.03",
            "p99": "1152.71",
            "min": "696.88",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14994.82",
            "p50": "6483.43",
            "p95": "288.64",
            "p99": "256.26",
            "min": "253.32",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "571.93",
            "p50": "511.90",
            "p95": "421.50",
            "p99": "350.83",
            "min": "348.00",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "552.85",
            "p50": "508.25",
            "p95": "379.29",
            "p99": "341.84",
            "min": "340.71",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "201.05",
            "p50": "194.07",
            "p95": "173.85",
            "p99": "164.94",
            "min": "164.64",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "387.05",
            "p50": "361.01",
            "p95": "305.14",
            "p99": "286.99",
            "min": "284.74",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "201.15",
            "p50": "192.49",
            "p95": "173.99",
            "p99": "166.42",
            "min": "165.20",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "340.54",
            "p50": "317.95",
            "p95": "270.01",
            "p99": "246.71",
            "min": "245.86",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "262.65",
            "p50": "247.55",
            "p95": "220.38",
            "p99": "206.97",
            "min": "204.63",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "576.36",
            "p50": "534.96",
            "p95": "398.33",
            "p99": "362.37",
            "min": "350.13",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1513.51",
            "p50": "1287.63",
            "p95": "943.45",
            "p99": "757.88",
            "min": "732.97",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "291.08",
            "p50": "276.16",
            "p95": "245.26",
            "p99": "224.22",
            "min": "220.20",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "142.09",
            "p50": "140.06",
            "p95": "128.48",
            "p99": "122.84",
            "min": "122.63",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "142.53",
            "p50": "140.19",
            "p95": "129.01",
            "p99": "94.28",
            "min": "87.80",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "142.74",
            "p50": "139.71",
            "p95": "128.26",
            "p99": "122.19",
            "min": "122.06",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "255.98",
            "p50": "249.14",
            "p95": "227.02",
            "p99": "205.51",
            "min": "204.55",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "195.08",
            "p50": "192.23",
            "p95": "171.05",
            "p99": "156.83",
            "min": "156.35",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "207.44",
            "p50": "203.82",
            "p95": "181.88",
            "p99": "169.33",
            "min": "168.55",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "189.03",
            "p50": "180.44",
            "p95": "162.55",
            "p99": "154.65",
            "min": "154.22",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "182.14",
            "p50": "174.99",
            "p95": "159.04",
            "p99": "149.24",
            "min": "148.60",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "210.92",
            "p50": "205.01",
            "p95": "180.78",
            "p99": "170.04",
            "min": "169.97",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "188.07",
            "p50": "182.93",
            "p95": "161.15",
            "p99": "131.38",
            "min": "124.90",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "207.88",
            "p50": "201.46",
            "p95": "180.34",
            "p99": "105.54",
            "min": "91.40",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "150.75",
            "p50": "147.18",
            "p95": "136.66",
            "p99": "123.06",
            "min": "121.45",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "234.54",
            "p50": "230.33",
            "p95": "198.40",
            "p99": "123.34",
            "min": "103.74",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "188.65",
            "p50": "182.03",
            "p95": "162.44",
            "p99": "136.03",
            "min": "133.21",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "72.98",
            "p50": "70.63",
            "p95": "68.19",
            "p99": "66.31",
            "min": "66.18",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "142.79",
            "p50": "139.97",
            "p95": "126.06",
            "p99": "128.68",
            "min": "121.08",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "466.09",
            "p50": "384.18",
            "p95": "292.86",
            "p99": "286.40",
            "min": "244.25",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "196.49",
            "p50": "154.59",
            "p95": "142.18",
            "p99": "164.62",
            "min": "140.57",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.48",
            "p50": "131.63",
            "p95": "121.93",
            "p99": "125.22",
            "min": "117.48",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1238.80",
            "p50": "1178.40",
            "p95": "766.67",
            "p99": "608.61",
            "min": "538.41",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1064.07",
            "p50": "1036.43",
            "p95": "733.51",
            "p99": "553.12",
            "min": "498.64",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1500.61",
            "p50": "1412.73",
            "p95": "845.27",
            "p99": "557.76",
            "min": "553.15",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1378.95",
            "p50": "1309.87",
            "p95": "824.78",
            "p99": "624.58",
            "min": "547.92",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1356.66",
            "p50": "1291.48",
            "p95": "798.33",
            "p99": "553.22",
            "min": "550.03",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1103.56",
            "p50": "1069.53",
            "p95": "753.39",
            "p99": "570.39",
            "min": "553.75",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "770.22",
            "p50": "677.78",
            "p95": "476.83",
            "p99": "415.07",
            "min": "414.31",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "767.42",
            "p50": "676.82",
            "p95": "476.64",
            "p99": "416.38",
            "min": "412.96",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "772.14",
            "p50": "654.40",
            "p95": "479.20",
            "p99": "406.42",
            "min": "405.06",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "770.88",
            "p50": "679.80",
            "p95": "475.09",
            "p99": "376.87",
            "min": "373.81",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "296.80",
            "p50": "292.48",
            "p95": "237.96",
            "p99": "221.38",
            "min": "220.68",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "684.15",
            "p50": "562.41",
            "p95": "427.10",
            "p99": "352.91",
            "min": "346.27",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "663.34",
            "p50": "577.15",
            "p95": "460.59",
            "p99": "310.80",
            "min": "283.72",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "681.30",
            "p50": "589.54",
            "p95": "424.13",
            "p99": "368.89",
            "min": "368.74",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "705.85",
            "p50": "614.19",
            "p95": "429.53",
            "p99": "391.75",
            "min": "387.25",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "107.41",
            "p50": "106.16",
            "p95": "100.92",
            "p99": "93.49",
            "min": "92.57",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "107.38",
            "p50": "105.87",
            "p95": "100.19",
            "p99": "92.38",
            "min": "89.79",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.91",
            "p50": "98.57",
            "p95": "93.49",
            "p99": "86.34",
            "min": "84.30",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "257.51",
            "p50": "252.81",
            "p95": "219.13",
            "p99": "201.72",
            "min": "198.86",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.88",
            "p50": "98.57",
            "p95": "92.74",
            "p99": "87.00",
            "min": "86.60",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "249.74",
            "p50": "244.82",
            "p95": "213.18",
            "p99": "196.44",
            "min": "193.06",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "207.01",
            "p50": "202.74",
            "p95": "182.87",
            "p99": "174.92",
            "min": "174.48",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "241.37",
            "p50": "236.40",
            "p95": "204.07",
            "p99": "192.96",
            "min": "189.52",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "461.92",
            "p50": "450.89",
            "p95": "371.57",
            "p99": "314.76",
            "min": "304.01",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7678.40",
            "p50": "4930.67",
            "p95": "2215.67",
            "p99": "1886.63",
            "min": "1837.26",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "447.24",
            "p50": "439.78",
            "p95": "352.73",
            "p99": "303.87",
            "min": "298.56",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "18796.23",
            "p50": "6918.06",
            "p95": "2514.33",
            "p99": "2140.92",
            "min": "2021.28",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4464.57",
            "p50": "3618.34",
            "p95": "1852.30",
            "p99": "1235.43",
            "min": "1228.61",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "213.10",
            "p50": "187.97",
            "p95": "168.28",
            "p99": "139.33",
            "min": "138.18",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "263.10",
            "p50": "259.22",
            "p95": "227.54",
            "p99": "208.09",
            "min": "205.62",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "94.22",
            "p50": "93.41",
            "p95": "87.37",
            "p99": "80.03",
            "min": "77.84",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "251.31",
            "p50": "245.61",
            "p95": "219.56",
            "p99": "169.95",
            "min": "154.12",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "182.45",
            "p50": "179.59",
            "p95": "162.55",
            "p99": "151.79",
            "min": "150.87",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "225.52",
            "p50": "220.73",
            "p95": "196.46",
            "p99": "182.70",
            "min": "180.03",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "207.17",
            "p50": "203.22",
            "p95": "180.13",
            "p99": "158.29",
            "min": "155.93",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "205.22",
            "p50": "200.29",
            "p95": "178.10",
            "p99": "118.31",
            "min": "90.10",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1264.89",
            "p50": "1131.14",
            "p95": "916.90",
            "p99": "681.28",
            "min": "665.55",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "183.47",
            "p50": "180.58",
            "p95": "165.48",
            "p99": "158.15",
            "min": "157.42",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "195.10",
            "p50": "193.02",
            "p95": "190.36",
            "p99": "186.28",
            "min": "186.03",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.77",
            "p50": "193.28",
            "p95": "190.93",
            "p99": "168.45",
            "min": "165.02",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "196.01",
            "p50": "193.81",
            "p95": "191.04",
            "p99": "172.21",
            "min": "168.41",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1187.48",
            "p50": "1148.88",
            "p95": "1034.94",
            "p99": "775.38",
            "min": "691.80",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "700.73",
            "p50": "691.33",
            "p95": "665.60",
            "p99": "598.97",
            "min": "592.37",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "809.45",
            "p50": "794.87",
            "p95": "767.86",
            "p99": "693.98",
            "min": "684.38",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "739.59",
            "p50": "722.95",
            "p95": "676.25",
            "p99": "622.78",
            "min": "619.16",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "749.44",
            "p50": "737.65",
            "p95": "708.88",
            "p99": "496.76",
            "min": "457.23",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "924.76",
            "p50": "894.44",
            "p95": "755.66",
            "p99": "636.03",
            "min": "627.83",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "886.41",
            "p50": "870.18",
            "p95": "774.51",
            "p99": "510.14",
            "min": "496.12",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "886.10",
            "p50": "855.95",
            "p95": "787.19",
            "p99": "692.19",
            "min": "690.33",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "845.32",
            "p50": "817.33",
            "p95": "742.64",
            "p99": "611.29",
            "min": "595.40",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "884.67",
            "p50": "863.33",
            "p95": "823.42",
            "p99": "711.56",
            "min": "672.34",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "887.89",
            "p50": "864.20",
            "p95": "714.14",
            "p99": "512.23",
            "min": "511.69",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "113.67",
            "p50": "109.46",
            "p95": "107.51",
            "p99": "106.95",
            "min": "106.94",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "95.83",
            "p50": "95.22",
            "p95": "94.69",
            "p99": "94.79",
            "min": "94.23",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "604.40",
            "p50": "589.27",
            "p95": "560.74",
            "p99": "448.05",
            "min": "411.38",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "129.50",
            "p50": "103.46",
            "p95": "97.12",
            "p99": "110.20",
            "min": "95.64",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "89.83",
            "p50": "87.96",
            "p95": "86.39",
            "p99": "87.26",
            "min": "85.32",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1931.43",
            "p50": "1882.09",
            "p95": "1428.12",
            "p99": "839.00",
            "min": "833.94",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1641.65",
            "p50": "1596.63",
            "p95": "1449.89",
            "p99": "1046.56",
            "min": "1038.36",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2504.01",
            "p50": "2409.61",
            "p95": "2046.07",
            "p99": "1309.30",
            "min": "1189.47",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2496.63",
            "p50": "2411.02",
            "p95": "1863.59",
            "p99": "948.37",
            "min": "928.06",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2485.11",
            "p50": "2386.84",
            "p95": "1865.29",
            "p99": "1131.17",
            "min": "819.65",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1708.50",
            "p50": "1657.16",
            "p95": "1241.77",
            "p99": "1029.42",
            "min": "924.34",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "881.20",
            "p50": "851.15",
            "p95": "829.36",
            "p99": "675.09",
            "min": "670.43",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "871.41",
            "p50": "850.47",
            "p95": "799.93",
            "p99": "674.41",
            "min": "660.53",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "884.49",
            "p50": "857.11",
            "p95": "774.33",
            "p99": "526.79",
            "min": "504.42",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "883.71",
            "p50": "862.16",
            "p95": "834.01",
            "p99": "673.06",
            "min": "656.55",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.04",
            "p50": "86.46",
            "p95": "83.60",
            "p99": "83.05",
            "min": "83.02",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "803.72",
            "p50": "778.59",
            "p95": "755.30",
            "p99": "562.36",
            "min": "557.62",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "760.11",
            "p50": "736.67",
            "p95": "659.19",
            "p99": "490.19",
            "min": "474.36",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "757.58",
            "p50": "736.40",
            "p95": "709.14",
            "p99": "576.25",
            "min": "563.55",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "762.73",
            "p50": "740.57",
            "p95": "709.47",
            "p99": "664.16",
            "min": "655.88",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2033.18",
            "p50": "1957.39",
            "p95": "1521.90",
            "p99": "995.93",
            "min": "831.42",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2337.52",
            "p50": "2251.74",
            "p95": "1545.83",
            "p99": "1159.86",
            "min": "1111.93",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.39",
            "p50": "71.95",
            "p95": "71.49",
            "p99": "68.30",
            "min": "66.74",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "10057.12",
            "p50": "8435.21",
            "p95": "2691.10",
            "p99": "2309.58",
            "min": "2234.21",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.43",
            "p50": "71.99",
            "p95": "71.61",
            "p99": "70.97",
            "min": "70.91",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "223.05",
            "p50": "221.08",
            "p95": "216.68",
            "p99": "195.31",
            "min": "195.08",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "887.63",
            "p50": "860.84",
            "p95": "743.42",
            "p99": "506.43",
            "min": "497.50",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.16",
            "p50": "656.39",
            "p95": "613.61",
            "p99": "507.74",
            "min": "502.37",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2268.10",
            "p50": "2141.75",
            "p95": "1437.84",
            "p99": "662.12",
            "min": "648.24",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "15942.98",
            "p50": "9416.21",
            "p95": "2708.29",
            "p99": "2047.27",
            "min": "1798.89",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2100.95",
            "p50": "1995.61",
            "p95": "1591.83",
            "p99": "1166.62",
            "min": "1141.32",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "78404.20",
            "p50": "9606.82",
            "p95": "2546.57",
            "p99": "1806.39",
            "min": "1526.60",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15619.82",
            "p50": "9227.09",
            "p95": "2624.26",
            "p99": "2138.22",
            "min": "2038.72",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "800.91",
            "p50": "706.63",
            "p95": "614.07",
            "p99": "517.90",
            "min": "505.53",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "989.07",
            "p50": "969.73",
            "p95": "856.81",
            "p99": "669.61",
            "min": "647.01",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "844.73",
            "p50": "812.65",
            "p95": "728.27",
            "p99": "577.18",
            "min": "576.38",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1196.83",
            "p50": "1160.64",
            "p95": "1024.33",
            "p99": "710.46",
            "min": "609.78",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "750.24",
            "p50": "734.34",
            "p95": "626.98",
            "p99": "459.78",
            "min": "458.47",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1153.97",
            "p50": "1115.52",
            "p95": "1004.04",
            "p99": "898.71",
            "min": "878.98",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "895.67",
            "p50": "867.30",
            "p95": "727.51",
            "p99": "586.61",
            "min": "582.92",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "931.57",
            "p50": "898.24",
            "p95": "758.49",
            "p99": "615.13",
            "min": "576.85",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2426.95",
            "p50": "2101.69",
            "p95": "1764.25",
            "p99": "1526.34",
            "min": "1512.06",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "872.17",
            "p50": "850.81",
            "p95": "780.00",
            "p99": "582.04",
            "min": "569.88",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "126.61",
            "p50": "120.35",
            "p95": "107.46",
            "p99": "100.67",
            "min": "99.86",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "125.50",
            "p50": "121.10",
            "p95": "110.42",
            "p99": "100.67",
            "min": "99.40",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "125.72",
            "p50": "121.17",
            "p95": "106.35",
            "p99": "96.72",
            "min": "96.06",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "212.93",
            "p50": "199.48",
            "p95": "169.70",
            "p99": "150.07",
            "min": "143.83",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "105.19",
            "p50": "102.31",
            "p95": "93.92",
            "p99": "74.81",
            "min": "72.17",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "111.57",
            "p50": "107.45",
            "p95": "97.34",
            "p99": "84.93",
            "min": "82.30",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "143.02",
            "p50": "136.86",
            "p95": "126.55",
            "p99": "110.87",
            "min": "110.62",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "143.71",
            "p50": "138.53",
            "p95": "118.11",
            "p99": "86.19",
            "min": "79.78",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "186.39",
            "p50": "175.36",
            "p95": "152.26",
            "p99": "137.32",
            "min": "135.29",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "186.02",
            "p50": "176.32",
            "p95": "140.60",
            "p99": "95.00",
            "min": "94.16",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "185.35",
            "p50": "177.68",
            "p95": "156.79",
            "p99": "140.69",
            "min": "140.53",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "133.65",
            "p50": "127.23",
            "p95": "113.98",
            "p99": "104.43",
            "min": "104.28",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "206.04",
            "p50": "194.33",
            "p95": "162.49",
            "p99": "140.37",
            "min": "137.19",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "192.23",
            "p50": "179.43",
            "p95": "161.20",
            "p99": "139.22",
            "min": "137.46",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "71.63",
            "p50": "68.53",
            "p95": "63.16",
            "p99": "61.83",
            "min": "61.58",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "134.79",
            "p50": "127.19",
            "p95": "109.62",
            "p99": "115.61",
            "min": "105.29",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "221.10",
            "p50": "198.80",
            "p95": "166.61",
            "p99": "163.77",
            "min": "150.33",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "180.62",
            "p50": "142.39",
            "p95": "133.97",
            "p99": "153.32",
            "min": "132.73",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "129.36",
            "p50": "121.56",
            "p95": "104.70",
            "p99": "112.43",
            "min": "99.66",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1054.23",
            "p50": "872.89",
            "p95": "541.53",
            "p99": "434.75",
            "min": "420.88",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1038.19",
            "p50": "863.46",
            "p95": "451.34",
            "p99": "344.44",
            "min": "341.67",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1172.83",
            "p50": "917.51",
            "p95": "592.61",
            "p99": "475.56",
            "min": "471.38",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1093.93",
            "p50": "879.89",
            "p95": "510.48",
            "p99": "410.18",
            "min": "393.95",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1059.89",
            "p50": "842.54",
            "p95": "455.85",
            "p99": "366.75",
            "min": "349.10",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1031.85",
            "p50": "853.28",
            "p95": "564.57",
            "p99": "348.08",
            "min": "344.52",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "354.34",
            "p50": "312.83",
            "p95": "253.67",
            "p99": "222.18",
            "min": "219.53",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "349.19",
            "p50": "310.32",
            "p95": "248.50",
            "p99": "226.56",
            "min": "226.46",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "354.57",
            "p50": "319.94",
            "p95": "261.11",
            "p99": "211.57",
            "min": "206.66",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "382.06",
            "p50": "339.27",
            "p95": "276.36",
            "p99": "231.27",
            "min": "226.06",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "287.70",
            "p50": "267.69",
            "p95": "218.44",
            "p99": "174.01",
            "min": "170.39",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "306.73",
            "p50": "270.46",
            "p95": "215.20",
            "p99": "182.25",
            "min": "181.09",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "287.81",
            "p50": "259.33",
            "p95": "211.64",
            "p99": "178.14",
            "min": "177.68",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "298.74",
            "p50": "268.15",
            "p95": "218.73",
            "p99": "181.55",
            "min": "179.81",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "301.87",
            "p50": "270.56",
            "p95": "220.36",
            "p99": "201.39",
            "min": "198.41",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.46",
            "p50": "102.07",
            "p95": "93.35",
            "p99": "86.46",
            "min": "85.12",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.78",
            "p50": "102.19",
            "p95": "93.48",
            "p99": "87.17",
            "min": "84.54",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.51",
            "p50": "94.82",
            "p95": "86.54",
            "p99": "81.30",
            "min": "81.05",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "250.40",
            "p50": "234.91",
            "p95": "190.41",
            "p99": "173.90",
            "min": "171.10",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.67",
            "p50": "94.60",
            "p95": "86.38",
            "p99": "80.46",
            "min": "79.31",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "242.45",
            "p50": "229.32",
            "p95": "191.73",
            "p99": "172.88",
            "min": "170.87",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "185.96",
            "p50": "174.56",
            "p95": "151.42",
            "p99": "139.35",
            "min": "138.86",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "155.36",
            "p50": "146.97",
            "p95": "129.72",
            "p99": "119.29",
            "min": "117.55",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "434.39",
            "p50": "385.70",
            "p95": "254.32",
            "p99": "222.84",
            "min": "221.99",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5838.47",
            "p50": "2753.31",
            "p95": "677.00",
            "p99": "571.42",
            "min": "551.37",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "436.33",
            "p50": "386.70",
            "p95": "292.41",
            "p99": "244.82",
            "min": "242.32",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14918.80",
            "p50": "3612.41",
            "p95": "1350.86",
            "p99": "852.53",
            "min": "793.52",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2986.79",
            "p50": "1910.24",
            "p95": "673.58",
            "p99": "494.95",
            "min": "492.45",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "207.41",
            "p50": "193.20",
            "p95": "167.09",
            "p99": "143.47",
            "min": "142.07",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "236.21",
            "p50": "220.95",
            "p95": "176.02",
            "p99": "137.68",
            "min": "129.05",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "133.81",
            "p50": "128.47",
            "p95": "117.19",
            "p99": "108.71",
            "min": "108.60",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "212.85",
            "p50": "197.99",
            "p95": "169.76",
            "p99": "141.88",
            "min": "141.39",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "143.92",
            "p50": "135.54",
            "p95": "125.01",
            "p99": "118.05",
            "min": "118.02",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "176.84",
            "p50": "166.39",
            "p95": "135.82",
            "p99": "123.25",
            "min": "120.50",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "187.04",
            "p50": "175.84",
            "p95": "150.46",
            "p99": "135.50",
            "min": "134.23",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "185.78",
            "p50": "175.71",
            "p95": "148.59",
            "p99": "133.71",
            "min": "129.45",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "307.04",
            "p50": "263.43",
            "p95": "125.28",
            "p99": "106.78",
            "min": "106.63",
            "n": "103",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "146.73",
            "p50": "138.03",
            "p95": "84.59",
            "p99": "80.72",
            "min": "80.51",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.63",
            "p50": "85.04",
            "p95": "76.50",
            "p99": "71.66",
            "min": "71.46",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "90.18",
            "p50": "86.29",
            "p95": "82.69",
            "p99": "78.75",
            "min": "78.30",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "89.40",
            "p50": "85.44",
            "p95": "82.13",
            "p99": "78.68",
            "min": "78.46",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "190.56",
            "p50": "182.76",
            "p95": "179.45",
            "p99": "146.16",
            "min": "139.18",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "95.26",
            "p50": "90.08",
            "p95": "86.62",
            "p99": "84.14",
            "min": "83.98",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "113.21",
            "p50": "109.52",
            "p95": "105.54",
            "p99": "104.46",
            "min": "104.30",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "126.52",
            "p50": "122.20",
            "p95": "106.57",
            "p99": "95.73",
            "min": "95.19",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "129.73",
            "p50": "125.50",
            "p95": "122.97",
            "p99": "117.56",
            "min": "116.86",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "98.79",
            "p50": "96.65",
            "p95": "92.87",
            "p99": "89.17",
            "min": "88.59",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "98.90",
            "p50": "96.28",
            "p95": "94.33",
            "p99": "92.13",
            "min": "91.88",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "99.30",
            "p50": "96.39",
            "p95": "94.10",
            "p99": "90.23",
            "min": "89.84",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "132.14",
            "p50": "125.65",
            "p95": "120.91",
            "p99": "115.48",
            "min": "115.44",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "122.65",
            "p50": "115.86",
            "p95": "107.77",
            "p99": "97.77",
            "min": "95.30",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "118.14",
            "p50": "116.32",
            "p95": "112.59",
            "p99": "104.02",
            "min": "102.86",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "88.98",
            "p50": "83.75",
            "p95": "78.57",
            "p99": "69.83",
            "min": "69.73",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "101.64",
            "p50": "100.49",
            "p95": "94.51",
            "p99": "96.07",
            "min": "93.07",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "72.16",
            "p50": "69.75",
            "p95": "66.97",
            "p99": "64.56",
            "min": "62.77",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "158.86",
            "p50": "127.13",
            "p95": "119.33",
            "p99": "134.29",
            "min": "115.75",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "110.05",
            "p50": "107.94",
            "p95": "106.02",
            "p99": "107.40",
            "min": "105.39",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "418.80",
            "p50": "407.84",
            "p95": "379.63",
            "p99": "353.17",
            "min": "351.71",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "488.75",
            "p50": "480.43",
            "p95": "458.02",
            "p99": "363.78",
            "min": "334.78",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "445.10",
            "p50": "428.44",
            "p95": "402.99",
            "p99": "353.85",
            "min": "352.41",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "449.89",
            "p50": "434.21",
            "p95": "406.04",
            "p99": "349.35",
            "min": "345.25",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "449.63",
            "p50": "437.20",
            "p95": "418.31",
            "p99": "399.15",
            "min": "397.52",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "468.47",
            "p50": "460.21",
            "p95": "423.79",
            "p99": "383.31",
            "min": "359.20",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "117.79",
            "p50": "113.93",
            "p95": "110.10",
            "p99": "106.10",
            "min": "105.80",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "119.15",
            "p50": "114.91",
            "p95": "110.22",
            "p99": "106.34",
            "min": "105.82",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "117.43",
            "p50": "113.22",
            "p95": "109.33",
            "p99": "105.08",
            "min": "104.44",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "101.69",
            "p50": "99.24",
            "p95": "97.39",
            "p99": "94.85",
            "min": "94.62",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.92",
            "p50": "86.07",
            "p95": "84.90",
            "p99": "83.33",
            "min": "83.05",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "113.14",
            "p50": "109.68",
            "p95": "105.23",
            "p99": "103.40",
            "min": "103.05",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "109.06",
            "p50": "104.74",
            "p95": "101.51",
            "p99": "98.70",
            "min": "98.58",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "108.55",
            "p50": "104.39",
            "p95": "101.04",
            "p99": "97.27",
            "min": "96.96",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "108.57",
            "p50": "104.13",
            "p95": "100.47",
            "p99": "99.31",
            "min": "99.25",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1546.29",
            "p50": "1393.86",
            "p95": "716.84",
            "p99": "487.59",
            "min": "418.14",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1519.07",
            "p50": "1401.16",
            "p95": "745.03",
            "p99": "496.59",
            "min": "427.24",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "156.40",
            "p50": "153.82",
            "p95": "139.73",
            "p99": "125.93",
            "min": "120.17",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3789.38",
            "p50": "3403.74",
            "p95": "1620.22",
            "p99": "701.43",
            "min": "461.72",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "156.38",
            "p50": "153.92",
            "p95": "132.13",
            "p99": "99.56",
            "min": "93.35",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3771.49",
            "p50": "3439.06",
            "p95": "1327.63",
            "p99": "584.13",
            "min": "347.47",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "99.87",
            "p50": "96.71",
            "p95": "91.45",
            "p99": "82.31",
            "min": "81.56",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "188.51",
            "p50": "183.81",
            "p95": "180.22",
            "p99": "167.55",
            "min": "165.84",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "391.32",
            "p50": "282.62",
            "p95": "218.02",
            "p99": "195.06",
            "min": "193.02",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9445.70",
            "p50": "1541.49",
            "p95": "922.15",
            "p99": "382.95",
            "min": "335.99",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "367.25",
            "p50": "274.65",
            "p95": "220.01",
            "p99": "155.44",
            "min": "153.22",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "27229.30",
            "p50": "9198.73",
            "p95": "2679.94",
            "p99": "2409.60",
            "min": "2353.45",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6028.61",
            "p50": "3294.56",
            "p95": "1801.75",
            "p99": "628.71",
            "min": "254.05",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "314.37",
            "p50": "244.06",
            "p95": "176.68",
            "p99": "147.37",
            "min": "144.07",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "154.24",
            "p50": "135.28",
            "p95": "115.41",
            "p99": "104.35",
            "min": "102.47",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "124.21",
            "p50": "120.43",
            "p95": "93.92",
            "p99": "90.20",
            "min": "89.83",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "128.69",
            "p50": "121.12",
            "p95": "116.43",
            "p99": "112.16",
            "min": "111.46",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "127.00",
            "p50": "122.05",
            "p95": "117.26",
            "p99": "110.87",
            "min": "110.00",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "154.99",
            "p50": "150.28",
            "p95": "146.84",
            "p99": "138.73",
            "min": "138.22",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "96.02",
            "p50": "93.25",
            "p95": "89.07",
            "p99": "81.45",
            "min": "79.95",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "119.00",
            "p50": "114.34",
            "p95": "112.03",
            "p99": "106.68",
            "min": "105.84",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1136.75",
            "p50": "1054.49",
            "p95": "750.06",
            "p99": "677.29",
            "min": "677.09",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "126.61",
            "p50": "122.36",
            "p95": "107.50",
            "p99": "99.50",
            "min": "98.91",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}