{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "110.26",
            "p50": "106.52",
            "p95": "96.84",
            "p99": "93.82",
            "min": "93.67",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1125.72",
            "p50": "953.36",
            "p95": "576.33",
            "p99": "497.28",
            "min": "495.13",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "110.53",
            "p50": "107.22",
            "p95": "99.90",
            "p99": "97.95",
            "min": "97.89",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "766.74",
            "p50": "687.71",
            "p95": "463.00",
            "p99": "431.29",
            "min": "428.20",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "403.68",
            "p50": "375.91",
            "p95": "303.92",
            "p99": "278.59",
            "min": "276.79",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "430.72",
            "p50": "408.68",
            "p95": "331.24",
            "p99": "294.22",
            "min": "293.32",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "294.52",
            "p50": "277.04",
            "p95": "195.70",
            "p99": "190.21",
            "min": "189.34",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "183.43",
            "p50": "174.00",
            "p95": "156.49",
            "p99": "150.44",
            "min": "149.51",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "256.67",
            "p50": "238.70",
            "p95": "212.34",
            "p99": "199.00",
            "min": "198.01",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "263.82",
            "p50": "244.83",
            "p95": "210.03",
            "p99": "203.22",
            "min": "202.54",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "259.96",
            "p50": "241.45",
            "p95": "207.36",
            "p99": "201.86",
            "min": "201.24",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "202.72",
            "p50": "192.89",
            "p95": "171.09",
            "p99": "156.86",
            "min": "154.75",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "339.56",
            "p50": "313.23",
            "p95": "263.73",
            "p99": "229.48",
            "min": "224.44",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "299.25",
            "p50": "278.76",
            "p95": "235.85",
            "p99": "222.22",
            "min": "219.94",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8756.39",
            "p50": "3901.07",
            "p95": "1991.47",
            "p99": "1547.42",
            "min": "1528.97",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "3068.92",
            "p50": "1895.47",
            "p95": "966.35",
            "p99": "1660.88",
            "min": "902.71",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "333.40",
            "p50": "307.36",
            "p95": "270.95",
            "p99": "248.88",
            "min": "229.06",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1440.42",
            "p50": "774.68",
            "p95": "373.01",
            "p99": "814.61",
            "min": "342.50",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7646.71",
            "p50": "3234.80",
            "p95": "1437.56",
            "p99": "4058.03",
            "min": "1350.79",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "823.44",
            "p50": "719.82",
            "p95": "524.75",
            "p99": "430.82",
            "min": "423.02",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "814.51",
            "p50": "757.10",
            "p95": "546.62",
            "p99": "445.89",
            "min": "445.65",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "944.72",
            "p50": "818.89",
            "p95": "596.08",
            "p99": "478.92",
            "min": "459.60",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2468.53",
            "p50": "1859.16",
            "p95": "887.06",
            "p99": "688.64",
            "min": "672.96",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2451.18",
            "p50": "1851.59",
            "p95": "1001.01",
            "p99": "845.85",
            "min": "843.56",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "803.62",
            "p50": "740.84",
            "p95": "541.90",
            "p99": "491.24",
            "min": "486.97",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "168.75",
            "p50": "156.69",
            "p95": "143.77",
            "p99": "136.99",
            "min": "136.54",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "563.83",
            "p50": "517.33",
            "p95": "384.70",
            "p99": "335.56",
            "min": "331.83",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "171.14",
            "p50": "157.90",
            "p95": "149.05",
            "p99": "143.31",
            "min": "142.73",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "188.32",
            "p50": "174.32",
            "p95": "162.35",
            "p99": "151.65",
            "min": "149.79",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "33990.21",
            "p50": "7867.56",
            "p95": "2388.67",
            "p99": "2019.97",
            "min": "1961.19",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "416.66",
            "p50": "377.70",
            "p95": "317.94",
            "p99": "271.16",
            "min": "271.04",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "402.68",
            "p50": "363.13",
            "p95": "290.05",
            "p99": "263.36",
            "min": "261.30",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "403.66",
            "p50": "364.01",
            "p95": "295.20",
            "p99": "259.02",
            "min": "253.88",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "404.16",
            "p50": "364.46",
            "p95": "295.59",
            "p99": "266.96",
            "min": "265.09",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "17541.56",
            "p50": "5627.87",
            "p95": "2595.47",
            "p99": "1839.19",
            "min": "1473.78",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "17253.47",
            "p50": "5955.54",
            "p95": "2377.58",
            "p99": "2089.55",
            "min": "2076.03",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "16893.73",
            "p50": "5277.19",
            "p95": "2542.71",
            "p99": "1522.31",
            "min": "1500.45",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "17457.84",
            "p50": "5534.37",
            "p95": "2490.54",
            "p99": "2061.33",
            "min": "2033.57",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "16397.21",
            "p50": "5042.92",
            "p95": "2329.41",
            "p99": "1552.12",
            "min": "1475.24",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "16950.51",
            "p50": "5291.52",
            "p95": "2265.49",
            "p99": "1720.60",
            "min": "1487.78",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "260.11",
            "p50": "240.86",
            "p95": "211.78",
            "p99": "195.78",
            "min": "195.08",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "523.61",
            "p50": "489.71",
            "p95": "374.57",
            "p99": "336.68",
            "min": "331.70",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1652.03",
            "p50": "1353.04",
            "p95": "379.07",
            "p99": "285.73",
            "min": "285.23",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "22105.63",
            "p50": "5207.35",
            "p95": "192.95",
            "p99": "179.08",
            "min": "178.88",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1414.66",
            "p50": "1229.46",
            "p95": "719.38",
            "p99": "474.92",
            "min": "468.84",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "55335.44",
            "p50": "8924.56",
            "p95": "2527.15",
            "p99": "1920.20",
            "min": "1546.02",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14698.40",
            "p50": "6251.47",
            "p95": "194.81",
            "p99": "176.12",
            "min": "169.30",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "567.11",
            "p50": "510.79",
            "p95": "391.73",
            "p99": "341.15",
            "min": "339.77",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "552.86",
            "p50": "498.31",
            "p95": "405.45",
            "p99": "347.54",
            "min": "346.76",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "200.74",
            "p50": "193.09",
            "p95": "174.62",
            "p99": "163.93",
            "min": "163.47",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "383.98",
            "p50": "359.20",
            "p95": "262.75",
            "p99": "213.37",
            "min": "210.40",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "200.75",
            "p50": "192.74",
            "p95": "172.41",
            "p99": "165.26",
            "min": "165.00",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "340.81",
            "p50": "324.33",
            "p95": "275.69",
            "p99": "241.84",
            "min": "241.83",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "264.04",
            "p50": "245.10",
            "p95": "211.04",
            "p99": "77.20",
            "min": "76.74",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "574.24",
            "p50": "526.56",
            "p95": "429.85",
            "p99": "364.52",
            "min": "350.66",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1448.46",
            "p50": "1256.57",
            "p95": "901.53",
            "p99": "740.55",
            "min": "739.28",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "290.26",
            "p50": "275.45",
            "p95": "235.97",
            "p99": "222.21",
            "min": "221.48",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "138.58",
            "p50": "135.51",
            "p95": "125.26",
            "p99": "119.17",
            "min": "118.71",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "138.19",
            "p50": "136.36",
            "p95": "124.16",
            "p99": "122.75",
            "min": "122.67",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "138.30",
            "p50": "136.07",
            "p95": "123.75",
            "p99": "116.05",
            "min": "114.92",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "232.95",
            "p50": "227.89",
            "p95": "199.39",
            "p99": "175.50",
            "min": "167.54",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "192.90",
            "p50": "187.83",
            "p95": "172.46",
            "p99": "152.42",
            "min": "150.74",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "205.23",
            "p50": "200.00",
            "p95": "177.05",
            "p99": "172.66",
            "min": "171.75",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "192.12",
            "p50": "182.91",
            "p95": "162.39",
            "p99": "143.74",
            "min": "142.07",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "186.53",
            "p50": "178.83",
            "p95": "161.08",
            "p99": "140.25",
            "min": "136.72",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "213.87",
            "p50": "206.52",
            "p95": "182.52",
            "p99": "167.51",
            "min": "164.77",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "184.18",
            "p50": "178.05",
            "p95": "160.73",
            "p99": "129.58",
            "min": "127.63",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "211.87",
            "p50": "207.67",
            "p95": "177.38",
            "p99": "157.43",
            "min": "157.30",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "148.48",
            "p50": "144.78",
            "p95": "130.99",
            "p99": "95.28",
            "min": "87.07",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "231.10",
            "p50": "226.42",
            "p95": "193.55",
            "p99": "182.77",
            "min": "181.57",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "184.36",
            "p50": "178.47",
            "p95": "159.05",
            "p99": "123.69",
            "min": "118.28",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "73.04",
            "p50": "70.68",
            "p95": "67.56",
            "p99": "66.63",
            "min": "66.61",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "142.85",
            "p50": "141.96",
            "p95": "127.63",
            "p99": "130.73",
            "min": "124.20",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "483.15",
            "p50": "391.87",
            "p95": "293.98",
            "p99": "282.63",
            "min": "235.60",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "195.84",
            "p50": "153.36",
            "p95": "142.48",
            "p99": "164.91",
            "min": "141.58",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.81",
            "p50": "130.30",
            "p95": "118.77",
            "p99": "125.46",
            "min": "117.66",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1238.66",
            "p50": "1178.54",
            "p95": "712.74",
            "p99": "495.02",
            "min": "469.01",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1064.55",
            "p50": "1036.90",
            "p95": "752.82",
            "p99": "476.28",
            "min": "471.14",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1484.77",
            "p50": "1402.19",
            "p95": "798.36",
            "p99": "621.35",
            "min": "605.78",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1381.79",
            "p50": "1287.42",
            "p95": "843.78",
            "p99": "640.89",
            "min": "638.99",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1349.30",
            "p50": "1274.50",
            "p95": "724.64",
            "p99": "580.31",
            "min": "559.58",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1103.40",
            "p50": "1069.36",
            "p95": "705.97",
            "p99": "525.02",
            "min": "489.75",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "743.36",
            "p50": "644.06",
            "p95": "454.30",
            "p99": "307.42",
            "min": "286.31",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "741.16",
            "p50": "662.86",
            "p95": "437.99",
            "p99": "363.63",
            "min": "359.49",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "742.91",
            "p50": "645.27",
            "p95": "459.32",
            "p99": "387.37",
            "min": "376.90",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "747.68",
            "p50": "665.61",
            "p95": "515.72",
            "p99": "386.37",
            "min": "371.22",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "296.78",
            "p50": "291.31",
            "p95": "256.10",
            "p99": "227.37",
            "min": "227.30",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "662.13",
            "p50": "547.47",
            "p95": "431.23",
            "p99": "376.25",
            "min": "376.25",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "641.87",
            "p50": "547.56",
            "p95": "412.73",
            "p99": "324.67",
            "min": "312.69",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "653.18",
            "p50": "592.21",
            "p95": "480.61",
            "p99": "383.68",
            "min": "367.88",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "665.58",
            "p50": "586.06",
            "p95": "454.24",
            "p99": "381.21",
            "min": "378.07",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "107.56",
            "p50": "106.18",
            "p95": "98.96",
            "p99": "95.63",
            "min": "95.16",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "107.51",
            "p50": "105.80",
            "p95": "98.16",
            "p99": "88.08",
            "min": "87.61",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "100.05",
            "p50": "98.16",
            "p95": "91.13",
            "p99": "89.26",
            "min": "89.17",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "258.24",
            "p50": "252.79",
            "p95": "211.55",
            "p99": "200.10",
            "min": "199.08",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.95",
            "p50": "98.04",
            "p95": "93.09",
            "p99": "88.30",
            "min": "87.83",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "250.43",
            "p50": "244.71",
            "p95": "210.31",
            "p99": "198.56",
            "min": "197.92",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "211.59",
            "p50": "205.70",
            "p95": "180.27",
            "p99": "160.24",
            "min": "157.71",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "240.46",
            "p50": "230.88",
            "p95": "205.96",
            "p99": "183.05",
            "min": "181.41",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "575.68",
            "p50": "561.29",
            "p95": "418.28",
            "p99": "366.66",
            "min": "364.92",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7484.79",
            "p50": "4671.07",
            "p95": "2316.58",
            "p99": "1872.70",
            "min": "1709.44",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "535.21",
            "p50": "524.13",
            "p95": "410.03",
            "p99": "354.67",
            "min": "352.03",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "21456.34",
            "p50": "7013.52",
            "p95": "2126.29",
            "p99": "1414.05",
            "min": "1379.56",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4448.46",
            "p50": "3587.72",
            "p95": "1604.38",
            "p99": "1171.68",
            "min": "1123.04",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "255.92",
            "p50": "217.59",
            "p95": "190.71",
            "p99": "178.15",
            "min": "176.05",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "266.99",
            "p50": "261.98",
            "p95": "230.80",
            "p99": "204.95",
            "min": "202.44",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "148.39",
            "p50": "145.98",
            "p95": "134.01",
            "p99": "130.35",
            "min": "129.96",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "243.82",
            "p50": "239.35",
            "p95": "213.72",
            "p99": "162.34",
            "min": "146.69",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "186.93",
            "p50": "181.42",
            "p95": "154.71",
            "p99": "97.47",
            "min": "88.73",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "221.62",
            "p50": "216.60",
            "p95": "195.06",
            "p99": "173.13",
            "min": "163.77",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "211.16",
            "p50": "207.09",
            "p95": "183.56",
            "p99": "175.08",
            "min": "174.98",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "210.62",
            "p50": "207.26",
            "p95": "188.70",
            "p99": "180.75",
            "min": "179.42",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1329.36",
            "p50": "1164.26",
            "p95": "901.81",
            "p99": "720.04",
            "min": "689.13",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "183.61",
            "p50": "180.09",
            "p95": "162.17",
            "p99": "151.88",
            "min": "151.51",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "193.15",
            "p50": "190.97",
            "p95": "183.25",
            "p99": "173.11",
            "min": "171.38",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "193.30",
            "p50": "191.00",
            "p95": "181.06",
            "p99": "171.78",
            "min": "170.61",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "193.82",
            "p50": "191.95",
            "p95": "186.76",
            "p99": "164.25",
            "min": "163.81",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1151.71",
            "p50": "1114.55",
            "p95": "930.78",
            "p99": "628.48",
            "min": "597.12",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "626.98",
            "p50": "611.51",
            "p95": "542.92",
            "p99": "395.06",
            "min": "393.46",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "677.40",
            "p50": "661.16",
            "p95": "586.73",
            "p99": "491.81",
            "min": "486.31",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "678.38",
            "p50": "666.31",
            "p95": "552.13",
            "p99": "389.06",
            "min": "371.54",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "775.83",
            "p50": "759.10",
            "p95": "612.33",
            "p99": "462.93",
            "min": "443.69",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "909.61",
            "p50": "888.47",
            "p95": "773.77",
            "p99": "569.47",
            "min": "525.68",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "861.53",
            "p50": "834.56",
            "p95": "684.66",
            "p99": "462.87",
            "min": "457.81",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "850.39",
            "p50": "833.65",
            "p95": "668.60",
            "p99": "478.24",
            "min": "437.14",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "844.40",
            "p50": "821.56",
            "p95": "702.78",
            "p99": "566.51",
            "min": "545.78",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "743.03",
            "p50": "728.66",
            "p95": "548.55",
            "p99": "296.75",
            "min": "294.05",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "853.71",
            "p50": "833.59",
            "p95": "626.15",
            "p99": "507.90",
            "min": "490.17",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "118.65",
            "p50": "113.75",
            "p95": "110.74",
            "p99": "103.89",
            "min": "103.45",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "95.73",
            "p50": "94.78",
            "p95": "91.91",
            "p99": "91.73",
            "min": "89.58",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "559.90",
            "p50": "538.66",
            "p95": "445.66",
            "p99": "436.61",
            "min": "407.69",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "129.76",
            "p50": "103.27",
            "p95": "95.86",
            "p99": "109.53",
            "min": "94.27",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "89.24",
            "p50": "87.80",
            "p95": "84.25",
            "p99": "86.08",
            "min": "83.70",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1879.08",
            "p50": "1808.44",
            "p95": "1028.49",
            "p99": "741.55",
            "min": "613.10",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1639.98",
            "p50": "1591.35",
            "p95": "1084.45",
            "p99": "842.35",
            "min": "813.00",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2390.40",
            "p50": "2269.70",
            "p95": "1483.49",
            "p99": "1043.54",
            "min": "863.97",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2389.53",
            "p50": "2271.70",
            "p95": "1438.17",
            "p99": "893.23",
            "min": "818.11",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2357.48",
            "p50": "2263.41",
            "p95": "1355.97",
            "p99": "849.00",
            "min": "833.59",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1697.74",
            "p50": "1641.10",
            "p95": "1154.02",
            "p99": "749.82",
            "min": "595.76",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "822.14",
            "p50": "793.66",
            "p95": "651.71",
            "p99": "556.77",
            "min": "544.70",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "818.48",
            "p50": "792.53",
            "p95": "639.08",
            "p99": "515.94",
            "min": "501.42",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "827.28",
            "p50": "798.41",
            "p95": "690.45",
            "p99": "473.18",
            "min": "441.51",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "822.09",
            "p50": "799.04",
            "p95": "697.83",
            "p99": "507.12",
            "min": "487.97",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.49",
            "p50": "86.72",
            "p95": "83.24",
            "p99": "81.07",
            "min": "80.58",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "745.28",
            "p50": "712.62",
            "p95": "607.32",
            "p99": "509.69",
            "min": "500.33",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "703.89",
            "p50": "676.05",
            "p95": "555.28",
            "p99": "420.91",
            "min": "410.58",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "701.85",
            "p50": "671.45",
            "p95": "595.97",
            "p99": "543.56",
            "min": "543.46",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "702.90",
            "p50": "674.62",
            "p95": "577.93",
            "p99": "459.95",
            "min": "451.91",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2039.02",
            "p50": "1955.32",
            "p95": "1256.98",
            "p99": "826.63",
            "min": "763.67",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2340.00",
            "p50": "2233.98",
            "p95": "1597.37",
            "p99": "1171.53",
            "min": "1145.15",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.42",
            "p50": "71.85",
            "p95": "70.07",
            "p99": "67.98",
            "min": "67.96",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9774.43",
            "p50": "7130.92",
            "p95": "2439.53",
            "p99": "1682.28",
            "min": "1432.87",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.46",
            "p50": "71.86",
            "p95": "69.53",
            "p99": "67.39",
            "min": "67.18",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "223.48",
            "p50": "221.42",
            "p95": "204.42",
            "p99": "190.77",
            "min": "186.22",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "849.39",
            "p50": "831.42",
            "p95": "610.84",
            "p99": "453.16",
            "min": "447.02",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "667.88",
            "p50": "652.79",
            "p95": "536.68",
            "p99": "436.43",
            "min": "426.53",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2393.03",
            "p50": "2245.21",
            "p95": "1134.35",
            "p99": "717.70",
            "min": "702.09",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "20788.58",
            "p50": "8831.58",
            "p95": "2378.85",
            "p99": "1737.20",
            "min": "1552.08",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2207.25",
            "p50": "2057.02",
            "p95": "1155.49",
            "p99": "825.34",
            "min": "657.09",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "80221.78",
            "p50": "9032.97",
            "p95": "2477.88",
            "p99": "2149.98",
            "min": "2067.21",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "18102.87",
            "p50": "8456.91",
            "p95": "2427.00",
            "p99": "2199.12",
            "min": "2141.31",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "811.53",
            "p50": "704.65",
            "p95": "581.69",
            "p99": "513.50",
            "min": "485.83",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "926.87",
            "p50": "907.45",
            "p95": "729.01",
            "p99": "473.15",
            "min": "450.87",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "837.88",
            "p50": "817.76",
            "p95": "669.48",
            "p99": "518.44",
            "min": "506.45",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1161.40",
            "p50": "1123.50",
            "p95": "847.87",
            "p99": "597.12",
            "min": "562.97",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "774.57",
            "p50": "759.67",
            "p95": "645.74",
            "p99": "490.82",
            "min": "473.29",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1151.14",
            "p50": "1109.88",
            "p95": "837.58",
            "p99": "631.90",
            "min": "592.59",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "813.37",
            "p50": "788.90",
            "p95": "587.53",
            "p99": "445.09",
            "min": "434.93",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "884.48",
            "p50": "860.94",
            "p95": "645.46",
            "p99": "477.77",
            "min": "460.91",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2207.42",
            "p50": "2009.37",
            "p95": "1688.23",
            "p99": "1390.37",
            "min": "1368.02",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "854.37",
            "p50": "834.28",
            "p95": "682.01",
            "p99": "579.99",
            "min": "566.76",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "125.22",
            "p50": "120.08",
            "p95": "103.91",
            "p99": "98.99",
            "min": "98.51",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "124.45",
            "p50": "119.99",
            "p95": "109.35",
            "p99": "98.49",
            "min": "97.41",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "125.06",
            "p50": "120.82",
            "p95": "107.10",
            "p99": "97.57",
            "min": "97.37",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "209.46",
            "p50": "196.31",
            "p95": "159.44",
            "p99": "152.02",
            "min": "148.76",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "103.77",
            "p50": "98.78",
            "p95": "85.70",
            "p99": "79.68",
            "min": "79.63",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.50",
            "p50": "103.21",
            "p95": "87.85",
            "p99": "84.19",
            "min": "83.44",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "139.93",
            "p50": "130.37",
            "p95": "110.71",
            "p99": "105.06",
            "min": "105.02",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "139.31",
            "p50": "130.73",
            "p95": "108.03",
            "p99": "103.92",
            "min": "103.58",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "184.24",
            "p50": "165.94",
            "p95": "131.21",
            "p99": "123.56",
            "min": "122.89",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "177.18",
            "p50": "165.35",
            "p95": "133.90",
            "p99": "121.84",
            "min": "121.04",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "178.69",
            "p50": "164.62",
            "p95": "133.25",
            "p99": "102.67",
            "min": "98.06",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.69",
            "p50": "120.73",
            "p95": "101.91",
            "p99": "97.16",
            "min": "96.71",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "203.71",
            "p50": "184.33",
            "p95": "143.34",
            "p99": "130.99",
            "min": "130.35",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "185.47",
            "p50": "169.30",
            "p95": "130.09",
            "p99": "100.72",
            "min": "98.86",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "75.85",
            "p50": "71.16",
            "p95": "65.34",
            "p99": "62.84",
            "min": "62.81",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "129.69",
            "p50": "120.75",
            "p95": "101.96",
            "p99": "109.08",
            "min": "97.99",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "214.62",
            "p50": "186.58",
            "p95": "144.56",
            "p99": "151.41",
            "min": "136.58",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "155.63",
            "p50": "134.69",
            "p95": "131.85",
            "p99": "141.76",
            "min": "131.30",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "127.68",
            "p50": "115.91",
            "p95": "99.51",
            "p99": "110.20",
            "min": "97.01",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1046.09",
            "p50": "666.80",
            "p95": "348.26",
            "p99": "271.89",
            "min": "258.19",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1012.95",
            "p50": "657.71",
            "p95": "339.90",
            "p99": "268.90",
            "min": "258.25",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1145.92",
            "p50": "735.07",
            "p95": "310.81",
            "p99": "281.87",
            "min": "271.04",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1072.73",
            "p50": "709.12",
            "p95": "351.21",
            "p99": "261.67",
            "min": "256.37",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1011.85",
            "p50": "657.61",
            "p95": "309.95",
            "p99": "247.42",
            "min": "231.44",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1020.08",
            "p50": "684.80",
            "p95": "336.63",
            "p99": "260.60",
            "min": "255.27",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "333.72",
            "p50": "287.08",
            "p95": "202.16",
            "p99": "184.58",
            "min": "183.68",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "335.99",
            "p50": "283.78",
            "p95": "205.54",
            "p99": "171.25",
            "min": "169.71",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "331.21",
            "p50": "286.26",
            "p95": "206.11",
            "p99": "185.87",
            "min": "185.64",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "365.21",
            "p50": "314.61",
            "p95": "216.82",
            "p99": "197.10",
            "min": "196.73",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "281.77",
            "p50": "247.77",
            "p95": "169.38",
            "p99": "156.45",
            "min": "156.39",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "295.33",
            "p50": "251.69",
            "p95": "188.97",
            "p99": "150.40",
            "min": "148.10",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "287.95",
            "p50": "252.07",
            "p95": "181.95",
            "p99": "162.29",
            "min": "160.79",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "287.99",
            "p50": "250.75",
            "p95": "192.78",
            "p99": "154.05",
            "min": "152.49",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "284.72",
            "p50": "253.98",
            "p95": "187.86",
            "p99": "160.93",
            "min": "160.09",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "104.96",
            "p50": "99.55",
            "p95": "88.07",
            "p99": "81.81",
            "min": "79.77",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.50",
            "p50": "99.81",
            "p95": "86.75",
            "p99": "82.00",
            "min": "80.80",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.38",
            "p50": "92.41",
            "p95": "81.44",
            "p99": "78.10",
            "min": "77.74",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "248.39",
            "p50": "220.77",
            "p95": "165.77",
            "p99": "144.13",
            "min": "143.91",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.61",
            "p50": "92.39",
            "p95": "81.27",
            "p99": "76.71",
            "min": "75.90",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "241.22",
            "p50": "215.49",
            "p95": "166.67",
            "p99": "145.48",
            "min": "142.02",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "182.24",
            "p50": "166.52",
            "p95": "133.64",
            "p99": "120.14",
            "min": "118.72",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "149.00",
            "p50": "138.05",
            "p95": "113.17",
            "p99": "105.78",
            "min": "103.50",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "443.55",
            "p50": "392.94",
            "p95": "272.96",
            "p99": "235.73",
            "min": "226.56",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "6009.86",
            "p50": "2112.71",
            "p95": "761.68",
            "p99": "557.28",
            "min": "555.93",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "442.01",
            "p50": "396.06",
            "p95": "296.18",
            "p99": "223.88",
            "min": "209.32",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14669.37",
            "p50": "3669.47",
            "p95": "1144.45",
            "p99": "900.33",
            "min": "882.64",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3479.20",
            "p50": "1938.67",
            "p95": "654.46",
            "p99": "568.57",
            "min": "567.69",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "209.63",
            "p50": "195.74",
            "p95": "171.75",
            "p99": "152.44",
            "min": "150.10",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "232.37",
            "p50": "216.28",
            "p95": "185.23",
            "p99": "154.87",
            "min": "150.45",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "129.97",
            "p50": "121.77",
            "p95": "104.44",
            "p99": "97.23",
            "min": "96.48",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "208.76",
            "p50": "187.89",
            "p95": "144.90",
            "p99": "134.21",
            "min": "133.52",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "138.24",
            "p50": "129.80",
            "p95": "104.81",
            "p99": "100.53",
            "min": "100.42",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "177.55",
            "p50": "161.51",
            "p95": "130.78",
            "p99": "122.29",
            "min": "121.33",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "177.51",
            "p50": "162.73",
            "p95": "129.70",
            "p99": "123.51",
            "min": "123.20",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "182.42",
            "p50": "164.80",
            "p95": "139.51",
            "p99": "123.33",
            "min": "121.27",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "308.23",
            "p50": "245.39",
            "p95": "58.76",
            "p99": "51.69",
            "min": "51.55",
            "n": "105",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "146.35",
            "p50": "138.92",
            "p95": "59.97",
            "p99": "58.49",
            "min": "58.41",
            "n": "111",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "87.84",
            "p50": "84.03",
            "p95": "74.05",
            "p99": "70.97",
            "min": "70.73",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "89.07",
            "p50": "85.15",
            "p95": "81.96",
            "p99": "80.86",
            "min": "80.79",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "88.76",
            "p50": "84.41",
            "p95": "80.70",
            "p99": "77.82",
            "min": "77.76",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "192.16",
            "p50": "182.72",
            "p95": "177.87",
            "p99": "146.23",
            "min": "144.03",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "96.39",
            "p50": "90.33",
            "p95": "85.97",
            "p99": "82.42",
            "min": "81.72",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "112.47",
            "p50": "109.30",
            "p95": "105.14",
            "p99": "98.09",
            "min": "96.50",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "124.47",
            "p50": "119.75",
            "p95": "102.29",
            "p99": "95.29",
            "min": "93.79",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "125.14",
            "p50": "121.32",
            "p95": "117.54",
            "p99": "112.48",
            "min": "112.14",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "96.93",
            "p50": "94.99",
            "p95": "72.18",
            "p99": "71.50",
            "min": "71.43",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.87",
            "p50": "95.91",
            "p95": "92.77",
            "p99": "89.38",
            "min": "89.03",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.15",
            "p50": "96.35",
            "p95": "94.73",
            "p99": "93.97",
            "min": "93.80",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.35",
            "p50": "121.56",
            "p95": "118.55",
            "p99": "113.43",
            "min": "113.15",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "122.42",
            "p50": "112.94",
            "p95": "104.84",
            "p99": "102.54",
            "min": "101.88",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "116.02",
            "p50": "113.67",
            "p95": "94.84",
            "p99": "84.83",
            "min": "83.88",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "88.83",
            "p50": "84.03",
            "p95": "78.31",
            "p99": "71.42",
            "min": "70.95",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "101.21",
            "p50": "99.78",
            "p95": "93.12",
            "p99": "95.04",
            "min": "91.73",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "72.15",
            "p50": "67.97",
            "p95": "64.88",
            "p99": "65.39",
            "min": "63.81",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "158.62",
            "p50": "126.68",
            "p95": "119.28",
            "p99": "136.13",
            "min": "119.17",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "110.04",
            "p50": "107.69",
            "p95": "105.02",
            "p99": "105.21",
            "min": "101.56",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "417.22",
            "p50": "400.96",
            "p95": "375.26",
            "p99": "320.56",
            "min": "298.51",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "485.79",
            "p50": "478.43",
            "p95": "462.44",
            "p99": "380.80",
            "min": "326.83",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "439.77",
            "p50": "417.15",
            "p95": "381.85",
            "p99": "326.74",
            "min": "323.65",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "447.01",
            "p50": "423.53",
            "p95": "397.27",
            "p99": "339.87",
            "min": "320.69",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "446.93",
            "p50": "424.43",
            "p95": "399.78",
            "p99": "356.22",
            "min": "330.54",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "466.41",
            "p50": "456.42",
            "p95": "428.37",
            "p99": "407.21",
            "min": "395.04",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "115.85",
            "p50": "111.18",
            "p95": "105.69",
            "p99": "100.57",
            "min": "99.35",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "116.63",
            "p50": "111.65",
            "p95": "106.59",
            "p99": "99.45",
            "min": "98.28",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "114.86",
            "p50": "110.11",
            "p95": "105.03",
            "p99": "101.23",
            "min": "100.47",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "100.60",
            "p50": "97.30",
            "p95": "94.27",
            "p99": "90.48",
            "min": "90.45",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.72",
            "p50": "85.83",
            "p95": "85.19",
            "p99": "83.69",
            "min": "83.47",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "111.99",
            "p50": "105.93",
            "p95": "102.05",
            "p99": "96.91",
            "min": "96.16",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "107.58",
            "p50": "101.89",
            "p95": "96.43",
            "p99": "95.19",
            "min": "95.15",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "106.78",
            "p50": "101.07",
            "p95": "96.35",
            "p99": "93.75",
            "min": "93.57",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "106.59",
            "p50": "100.98",
            "p95": "96.67",
            "p99": "94.14",
            "min": "93.68",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1544.04",
            "p50": "1365.34",
            "p95": "685.95",
            "p99": "395.83",
            "min": "362.15",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1536.00",
            "p50": "1349.47",
            "p95": "742.73",
            "p99": "504.83",
            "min": "477.61",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "156.38",
            "p50": "153.58",
            "p95": "140.35",
            "p99": "119.60",
            "min": "112.09",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3710.98",
            "p50": "3325.42",
            "p95": "1380.18",
            "p99": "665.92",
            "min": "583.02",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "156.00",
            "p50": "153.28",
            "p95": "136.25",
            "p99": "116.75",
            "min": "115.55",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3742.24",
            "p50": "3322.78",
            "p95": "1459.66",
            "p99": "608.25",
            "min": "391.62",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.91",
            "p50": "96.83",
            "p95": "90.37",
            "p99": "83.44",
            "min": "83.44",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "186.09",
            "p50": "182.65",
            "p95": "178.05",
            "p99": "170.24",
            "min": "166.64",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "403.39",
            "p50": "270.15",
            "p95": "211.41",
            "p99": "195.73",
            "min": "193.03",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9729.16",
            "p50": "1782.11",
            "p95": "898.09",
            "p99": "664.59",
            "min": "627.76",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "385.62",
            "p50": "282.31",
            "p95": "228.64",
            "p99": "196.24",
            "min": "195.73",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "26097.38",
            "p50": "8645.18",
            "p95": "2367.29",
            "p99": "2061.77",
            "min": "2061.60",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6088.55",
            "p50": "3330.58",
            "p95": "1796.74",
            "p99": "1075.73",
            "min": "1014.26",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "312.06",
            "p50": "241.73",
            "p95": "190.96",
            "p99": "160.09",
            "min": "159.55",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "152.59",
            "p50": "136.99",
            "p95": "116.92",
            "p99": "114.38",
            "min": "114.21",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "121.96",
            "p50": "117.90",
            "p95": "92.24",
            "p99": "89.35",
            "min": "89.34",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "130.05",
            "p50": "123.30",
            "p95": "118.08",
            "p99": "114.06",
            "min": "113.61",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "123.30",
            "p50": "119.04",
            "p95": "114.96",
            "p99": "111.03",
            "min": "110.56",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "157.73",
            "p50": "150.63",
            "p95": "146.61",
            "p99": "127.67",
            "min": "116.12",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "95.58",
            "p50": "92.95",
            "p95": "89.16",
            "p99": "87.25",
            "min": "87.07",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "117.81",
            "p50": "112.45",
            "p95": "109.45",
            "p99": "105.99",
            "min": "105.29",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1198.85",
            "p50": "1122.80",
            "p95": "372.78",
            "p99": "356.46",
            "min": "356.24",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "124.31",
            "p50": "121.12",
            "p95": "109.04",
            "p99": "101.64",
            "min": "100.43",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}