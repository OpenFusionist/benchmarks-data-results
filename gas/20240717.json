{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "170.34",
            "p50": "168.11",
            "p95": "158.53",
            "p99": "149.92",
            "min": "149.16",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "170.33",
            "p50": "168.71",
            "p95": "165.83",
            "p99": "162.55",
            "min": "161.83",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "170.15",
            "p50": "168.15",
            "p95": "163.67",
            "p99": "160.54",
            "min": "160.09",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "759.07",
            "p50": "745.93",
            "p95": "474.24",
            "p99": "434.10",
            "min": "430.02",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "401.51",
            "p50": "394.70",
            "p95": "387.13",
            "p99": "367.57",
            "min": "364.11",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "437.47",
            "p50": "429.40",
            "p95": "418.23",
            "p99": "399.94",
            "min": "398.86",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "323.53",
            "p50": "317.85",
            "p95": "308.01",
            "p99": "303.69",
            "min": "303.27",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "186.83",
            "p50": "184.97",
            "p95": "182.15",
            "p99": "132.38",
            "min": "120.01",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "265.60",
            "p50": "261.52",
            "p95": "238.43",
            "p99": "224.33",
            "min": "222.85",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "256.97",
            "p50": "254.40",
            "p95": "235.89",
            "p99": "223.38",
            "min": "220.52",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "259.35",
            "p50": "257.03",
            "p95": "252.20",
            "p99": "242.02",
            "min": "241.92",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "190.35",
            "p50": "188.44",
            "p95": "184.11",
            "p99": "175.92",
            "min": "175.91",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "319.35",
            "p50": "316.28",
            "p95": "303.58",
            "p99": "297.14",
            "min": "295.49",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "310.41",
            "p50": "304.65",
            "p95": "296.87",
            "p99": "289.78",
            "min": "289.71",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "111.11",
            "p50": "106.90",
            "p95": "104.81",
            "p99": "103.81",
            "min": "103.76",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "170.03",
            "p50": "167.67",
            "p95": "162.70",
            "p99": "164.71",
            "min": "161.84",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "296.16",
            "p50": "242.00",
            "p95": "227.30",
            "p99": "226.77",
            "min": "210.50",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "242.35",
            "p50": "193.57",
            "p95": "181.85",
            "p99": "207.60",
            "min": "181.37",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "167.20",
            "p50": "164.22",
            "p95": "162.92",
            "p99": "164.58",
            "min": "162.60",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "870.37",
            "p50": "818.14",
            "p95": "781.34",
            "p99": "760.87",
            "min": "759.14",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "840.15",
            "p50": "816.03",
            "p95": "785.48",
            "p99": "754.16",
            "min": "740.43",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1025.66",
            "p50": "939.41",
            "p95": "879.82",
            "p99": "830.17",
            "min": "819.83",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1083.32",
            "p50": "960.36",
            "p95": "917.26",
            "p99": "756.79",
            "min": "598.87",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1081.17",
            "p50": "965.88",
            "p95": "927.48",
            "p99": "873.36",
            "min": "846.19",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "849.94",
            "p50": "812.03",
            "p95": "780.79",
            "p99": "751.70",
            "min": "749.84",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "195.68",
            "p50": "183.90",
            "p95": "175.08",
            "p99": "172.18",
            "min": "172.13",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "196.84",
            "p50": "183.11",
            "p95": "175.66",
            "p99": "172.92",
            "min": "172.69",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "195.67",
            "p50": "184.53",
            "p95": "175.83",
            "p99": "170.75",
            "min": "170.13",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "219.90",
            "p50": "209.79",
            "p95": "201.22",
            "p99": "112.31",
            "min": "89.29",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.85",
            "p50": "87.00",
            "p95": "86.52",
            "p99": "86.35",
            "min": "86.32",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "337.81",
            "p50": "301.95",
            "p95": "283.19",
            "p99": "276.63",
            "min": "276.60",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "329.35",
            "p50": "292.50",
            "p95": "280.33",
            "p99": "267.57",
            "min": "264.92",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "327.84",
            "p50": "295.60",
            "p95": "282.58",
            "p99": "267.05",
            "min": "264.06",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "331.60",
            "p50": "295.53",
            "p95": "281.08",
            "p99": "162.35",
            "min": "134.28",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2367.55",
            "p50": "2248.36",
            "p95": "1979.41",
            "p99": "1013.67",
            "min": "389.79",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2300.17",
            "p50": "2191.07",
            "p95": "2032.68",
            "p99": "953.32",
            "min": "40.39",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "94.01",
            "p50": "93.07",
            "p95": "92.23",
            "p99": "88.13",
            "min": "86.98",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "5666.90",
            "p50": "5072.94",
            "p95": "2526.62",
            "p99": "72.28",
            "min": "67.11",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "93.98",
            "p50": "93.25",
            "p95": "92.52",
            "p99": "91.90",
            "min": "91.86",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3173.56",
            "p50": "2951.49",
            "p95": "2494.92",
            "p99": "1649.09",
            "min": "1646.35",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "255.55",
            "p50": "251.85",
            "p95": "235.71",
            "p99": "113.79",
            "min": "81.91",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "539.01",
            "p50": "529.95",
            "p95": "517.40",
            "p99": "497.22",
            "min": "489.69",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1286.15",
            "p50": "1190.24",
            "p95": "386.64",
            "p99": "375.30",
            "min": "375.00",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "17034.21",
            "p50": "8025.85",
            "p95": "2580.22",
            "p99": "1283.12",
            "min": "835.59",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1145.51",
            "p50": "1091.24",
            "p95": "349.58",
            "p99": "339.63",
            "min": "338.80",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "47371.78",
            "p50": "8493.66",
            "p95": "2185.40",
            "p99": "936.86",
            "min": "409.51",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15471.11",
            "p50": "6919.68",
            "p95": "2482.05",
            "p99": "1846.86",
            "min": "1618.49",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "537.23",
            "p50": "489.17",
            "p95": "434.67",
            "p99": "403.54",
            "min": "401.92",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "516.00",
            "p50": "508.18",
            "p95": "499.68",
            "p99": "491.35",
            "min": "491.30",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "203.65",
            "p50": "201.39",
            "p95": "195.58",
            "p99": "189.15",
            "min": "188.90",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "436.69",
            "p50": "428.18",
            "p95": "357.62",
            "p99": "353.37",
            "min": "353.20",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "204.69",
            "p50": "201.83",
            "p95": "199.45",
            "p99": "185.10",
            "min": "181.88",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "328.53",
            "p50": "322.93",
            "p95": "315.15",
            "p99": "306.35",
            "min": "304.85",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "272.05",
            "p50": "268.21",
            "p95": "264.66",
            "p99": "255.38",
            "min": "255.11",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "514.44",
            "p50": "506.15",
            "p95": "493.45",
            "p99": "410.97",
            "min": "367.20",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1483.42",
            "p50": "1166.39",
            "p95": "843.79",
            "p99": "788.20",
            "min": "783.82",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "317.32",
            "p50": "312.02",
            "p95": "302.79",
            "p99": "300.03",
            "min": "299.78",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "87.92",
            "p50": "84.73",
            "p95": "76.64",
            "p99": "59.43",
            "min": "55.51",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "80.57",
            "p50": "77.77",
            "p95": "70.07",
            "p99": "54.86",
            "min": "51.92",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "82.32",
            "p50": "79.39",
            "p95": "72.34",
            "p99": "68.61",
            "min": "67.89",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "225.17",
            "p50": "210.71",
            "p95": "178.07",
            "p99": "164.28",
            "min": "163.69",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "171.80",
            "p50": "162.31",
            "p95": "141.22",
            "p99": "130.41",
            "min": "130.41",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "180.95",
            "p50": "167.68",
            "p95": "146.66",
            "p99": "131.09",
            "min": "128.52",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "174.44",
            "p50": "160.39",
            "p95": "137.08",
            "p99": "102.05",
            "min": "99.76",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "173.49",
            "p50": "160.00",
            "p95": "134.71",
            "p99": "127.06",
            "min": "126.84",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "197.29",
            "p50": "181.09",
            "p95": "149.67",
            "p99": "135.96",
            "min": "135.20",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "175.87",
            "p50": "162.71",
            "p95": "145.44",
            "p99": "135.20",
            "min": "135.00",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "194.27",
            "p50": "179.80",
            "p95": "149.86",
            "p99": "104.97",
            "min": "104.70",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "145.11",
            "p50": "136.93",
            "p95": "123.13",
            "p99": "117.38",
            "min": "117.19",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "216.56",
            "p50": "199.53",
            "p95": "169.69",
            "p99": "156.91",
            "min": "156.00",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "174.91",
            "p50": "163.82",
            "p95": "142.90",
            "p99": "130.06",
            "min": "127.62",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.42",
            "p50": "65.04",
            "p95": "60.59",
            "p99": "56.82",
            "min": "55.95",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "138.76",
            "p50": "128.80",
            "p95": "115.34",
            "p99": "113.85",
            "min": "100.43",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "422.30",
            "p50": "333.97",
            "p95": "265.10",
            "p99": "276.51",
            "min": "242.31",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "176.57",
            "p50": "143.67",
            "p95": "136.42",
            "p99": "152.76",
            "min": "134.80",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "130.56",
            "p50": "123.24",
            "p95": "114.57",
            "p99": "118.46",
            "min": "109.33",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1184.43",
            "p50": "914.39",
            "p95": "528.10",
            "p99": "402.41",
            "min": "369.57",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1029.95",
            "p50": "810.64",
            "p95": "501.00",
            "p99": "412.64",
            "min": "412.44",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1388.75",
            "p50": "1000.13",
            "p95": "637.63",
            "p99": "461.74",
            "min": "460.61",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1274.40",
            "p50": "939.32",
            "p95": "515.57",
            "p99": "447.04",
            "min": "439.71",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1268.37",
            "p50": "941.68",
            "p95": "556.91",
            "p99": "476.51",
            "min": "456.54",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1076.98",
            "p50": "846.65",
            "p95": "506.02",
            "p99": "423.86",
            "min": "417.78",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "704.30",
            "p50": "553.52",
            "p95": "374.93",
            "p99": "347.15",
            "min": "345.67",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "696.79",
            "p50": "547.76",
            "p95": "397.63",
            "p99": "284.59",
            "min": "281.16",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "681.84",
            "p50": "559.75",
            "p95": "388.78",
            "p99": "351.82",
            "min": "350.88",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "693.87",
            "p50": "574.16",
            "p95": "379.57",
            "p99": "313.02",
            "min": "305.09",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "294.90",
            "p50": "265.01",
            "p95": "217.30",
            "p99": "196.46",
            "min": "195.59",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "585.16",
            "p50": "473.38",
            "p95": "359.50",
            "p99": "292.70",
            "min": "282.61",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "591.63",
            "p50": "468.50",
            "p95": "340.62",
            "p99": "310.75",
            "min": "307.71",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "603.25",
            "p50": "489.89",
            "p95": "364.80",
            "p99": "336.77",
            "min": "336.74",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "625.00",
            "p50": "492.84",
            "p95": "357.30",
            "p99": "309.92",
            "min": "304.54",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.36",
            "p50": "101.89",
            "p95": "91.64",
            "p99": "83.33",
            "min": "81.14",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.86",
            "p50": "101.64",
            "p95": "91.74",
            "p99": "86.20",
            "min": "83.31",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.32",
            "p50": "94.79",
            "p95": "84.85",
            "p99": "73.84",
            "min": "71.63",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "253.23",
            "p50": "231.27",
            "p95": "187.33",
            "p99": "163.22",
            "min": "162.13",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.21",
            "p50": "94.94",
            "p95": "84.62",
            "p99": "80.52",
            "min": "80.12",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "245.91",
            "p50": "227.81",
            "p95": "187.95",
            "p99": "166.75",
            "min": "159.80",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "195.88",
            "p50": "181.29",
            "p95": "154.76",
            "p99": "148.43",
            "min": "147.90",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "198.27",
            "p50": "185.70",
            "p95": "164.10",
            "p99": "147.35",
            "min": "145.94",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "466.91",
            "p50": "408.52",
            "p95": "297.61",
            "p99": "278.82",
            "min": "278.51",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5219.94",
            "p50": "2174.06",
            "p95": "899.03",
            "p99": "704.12",
            "min": "674.24",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "451.79",
            "p50": "393.30",
            "p95": "292.10",
            "p99": "275.80",
            "min": "271.22",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "16640.40",
            "p50": "4078.17",
            "p95": "1377.58",
            "p99": "1109.97",
            "min": "1095.64",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3365.36",
            "p50": "1821.30",
            "p95": "783.40",
            "p99": "579.48",
            "min": "566.01",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "229.01",
            "p50": "208.14",
            "p95": "184.78",
            "p99": "169.21",
            "min": "168.97",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "248.36",
            "p50": "227.62",
            "p95": "188.87",
            "p99": "167.70",
            "min": "166.19",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "92.08",
            "p50": "88.53",
            "p95": "80.89",
            "p99": "75.71",
            "min": "74.89",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "225.00",
            "p50": "210.10",
            "p95": "166.17",
            "p99": "159.73",
            "min": "158.33",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "172.04",
            "p50": "160.65",
            "p95": "141.24",
            "p99": "126.27",
            "min": "125.16",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "202.10",
            "p50": "187.94",
            "p95": "162.70",
            "p99": "128.70",
            "min": "108.20",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "194.32",
            "p50": "184.48",
            "p95": "157.55",
            "p99": "146.39",
            "min": "146.15",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "196.16",
            "p50": "183.77",
            "p95": "155.77",
            "p99": "135.21",
            "min": "127.89",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1152.60",
            "p50": "888.42",
            "p95": "597.87",
            "p99": "512.39",
            "min": "490.56",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "176.64",
            "p50": "165.68",
            "p95": "124.56",
            "p99": "112.93",
            "min": "112.25",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.74",
            "p50": "190.82",
            "p95": "175.48",
            "p99": "164.06",
            "min": "162.50",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.45",
            "p50": "188.40",
            "p95": "170.99",
            "p99": "161.61",
            "min": "161.38",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.02",
            "p50": "189.51",
            "p95": "170.45",
            "p99": "161.04",
            "min": "160.64",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1188.52",
            "p50": "1118.92",
            "p95": "683.58",
            "p99": "340.87",
            "min": "181.15",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "703.27",
            "p50": "644.19",
            "p95": "451.45",
            "p99": "398.47",
            "min": "396.06",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "812.35",
            "p50": "773.59",
            "p95": "545.09",
            "p99": "445.59",
            "min": "445.52",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "747.91",
            "p50": "702.15",
            "p95": "517.54",
            "p99": "411.72",
            "min": "409.61",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "264.94",
            "p50": "254.71",
            "p95": "228.47",
            "p99": "208.97",
            "min": "207.03",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "906.21",
            "p50": "831.36",
            "p95": "577.64",
            "p99": "467.69",
            "min": "464.67",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "870.98",
            "p50": "791.71",
            "p95": "512.94",
            "p99": "463.89",
            "min": "463.72",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "872.34",
            "p50": "766.72",
            "p95": "531.33",
            "p99": "454.40",
            "min": "453.82",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "287.22",
            "p50": "274.19",
            "p95": "241.02",
            "p99": "223.37",
            "min": "222.34",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "651.28",
            "p50": "608.09",
            "p95": "433.16",
            "p99": "386.10",
            "min": "385.47",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "836.98",
            "p50": "771.81",
            "p95": "532.65",
            "p99": "472.88",
            "min": "465.38",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "111.73",
            "p50": "106.70",
            "p95": "99.64",
            "p99": "96.05",
            "min": "95.71",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "96.50",
            "p50": "94.04",
            "p95": "89.16",
            "p99": "91.07",
            "min": "88.15",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "416.26",
            "p50": "375.89",
            "p95": "314.61",
            "p99": "317.05",
            "min": "293.78",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "130.91",
            "p50": "103.44",
            "p95": "97.06",
            "p99": "111.30",
            "min": "96.51",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "91.67",
            "p50": "88.93",
            "p95": "84.61",
            "p99": "87.40",
            "min": "84.18",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1697.09",
            "p50": "1497.51",
            "p95": "876.70",
            "p99": "617.75",
            "min": "611.42",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1635.35",
            "p50": "1464.46",
            "p95": "819.53",
            "p99": "618.31",
            "min": "585.75",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2043.67",
            "p50": "1785.16",
            "p95": "873.06",
            "p99": "637.29",
            "min": "627.76",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2005.34",
            "p50": "1579.10",
            "p95": "857.35",
            "p99": "646.66",
            "min": "646.05",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2017.69",
            "p50": "1682.40",
            "p95": "852.01",
            "p99": "708.01",
            "min": "658.78",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1652.50",
            "p50": "1405.36",
            "p95": "744.63",
            "p99": "601.83",
            "min": "590.07",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "626.16",
            "p50": "559.36",
            "p95": "443.90",
            "p99": "389.75",
            "min": "389.60",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "631.08",
            "p50": "565.39",
            "p95": "422.90",
            "p99": "382.27",
            "min": "379.10",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "636.54",
            "p50": "570.36",
            "p95": "432.56",
            "p99": "395.01",
            "min": "393.29",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "649.98",
            "p50": "581.30",
            "p95": "472.41",
            "p99": "388.93",
            "min": "377.94",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.10",
            "p50": "85.75",
            "p95": "81.72",
            "p99": "80.45",
            "min": "80.25",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "571.25",
            "p50": "524.53",
            "p95": "420.44",
            "p99": "369.39",
            "min": "366.81",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "540.79",
            "p50": "493.31",
            "p95": "386.11",
            "p99": "344.30",
            "min": "342.20",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "540.89",
            "p50": "491.78",
            "p95": "377.51",
            "p99": "341.73",
            "min": "341.01",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "545.74",
            "p50": "488.49",
            "p95": "397.11",
            "p99": "346.86",
            "min": "345.91",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1359.92",
            "p50": "1266.42",
            "p95": "680.01",
            "p99": "554.59",
            "min": "548.68",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1660.41",
            "p50": "1452.92",
            "p95": "751.02",
            "p99": "615.27",
            "min": "602.74",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.13",
            "p50": "71.40",
            "p95": "68.81",
            "p99": "67.32",
            "min": "67.32",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "8739.08",
            "p50": "4331.08",
            "p95": "2276.24",
            "p99": "1906.12",
            "min": "1809.16",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.16",
            "p50": "71.44",
            "p95": "69.06",
            "p99": "67.43",
            "min": "67.03",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "221.39",
            "p50": "216.62",
            "p95": "192.93",
            "p99": "182.61",
            "min": "176.26",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "874.40",
            "p50": "765.49",
            "p95": "529.72",
            "p99": "227.00",
            "min": "166.96",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.99",
            "p50": "626.95",
            "p95": "475.92",
            "p99": "411.90",
            "min": "394.06",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1132.66",
            "p50": "1048.65",
            "p95": "702.84",
            "p99": "601.95",
            "min": "591.77",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "25221.01",
            "p50": "9087.62",
            "p95": "2690.47",
            "p99": "1728.90",
            "min": "1678.58",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1131.75",
            "p50": "1017.95",
            "p95": "708.80",
            "p99": "646.40",
            "min": "618.06",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "59645.64",
            "p50": "9162.55",
            "p95": "2704.18",
            "p99": "1684.89",
            "min": "1613.85",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14941.82",
            "p50": "5869.50",
            "p95": "1273.61",
            "p99": "803.49",
            "min": "803.30",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "563.59",
            "p50": "499.53",
            "p95": "431.50",
            "p99": "381.17",
            "min": "376.53",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "987.28",
            "p50": "921.67",
            "p95": "592.33",
            "p99": "490.92",
            "min": "489.59",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "286.99",
            "p50": "279.81",
            "p95": "244.22",
            "p99": "225.38",
            "min": "224.31",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1213.27",
            "p50": "1114.26",
            "p95": "730.07",
            "p99": "566.01",
            "min": "538.24",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "265.18",
            "p50": "255.81",
            "p95": "221.94",
            "p99": "167.77",
            "min": "157.74",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "537.53",
            "p50": "510.80",
            "p95": "398.67",
            "p99": "347.44",
            "min": "344.64",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "886.84",
            "p50": "715.55",
            "p95": "523.72",
            "p99": "445.48",
            "min": "438.88",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "915.01",
            "p50": "858.10",
            "p95": "599.96",
            "p99": "478.55",
            "min": "472.67",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2284.08",
            "p50": "1929.05",
            "p95": "1031.00",
            "p99": "950.70",
            "min": "949.90",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "898.30",
            "p50": "824.36",
            "p95": "579.03",
            "p99": "471.22",
            "min": "470.19",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "81.70",
            "p50": "78.73",
            "p95": "71.06",
            "p99": "63.97",
            "min": "63.27",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "74.70",
            "p50": "72.79",
            "p95": "66.36",
            "p99": "63.17",
            "min": "63.08",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "76.60",
            "p50": "74.17",
            "p95": "67.90",
            "p99": "64.41",
            "min": "64.40",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "210.72",
            "p50": "190.23",
            "p95": "158.55",
            "p99": "127.74",
            "min": "115.51",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.30",
            "p50": "97.85",
            "p95": "85.26",
            "p99": "79.97",
            "min": "79.53",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.19",
            "p50": "103.17",
            "p95": "91.32",
            "p99": "84.41",
            "min": "83.88",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "139.34",
            "p50": "131.34",
            "p95": "113.32",
            "p99": "99.41",
            "min": "97.07",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "139.83",
            "p50": "132.97",
            "p95": "112.38",
            "p99": "104.19",
            "min": "103.69",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "186.47",
            "p50": "172.49",
            "p95": "142.72",
            "p99": "121.08",
            "min": "120.35",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "182.71",
            "p50": "171.50",
            "p95": "134.41",
            "p99": "123.40",
            "min": "121.98",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "183.38",
            "p50": "168.72",
            "p95": "140.65",
            "p99": "128.51",
            "min": "128.42",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.17",
            "p50": "120.39",
            "p95": "105.53",
            "p99": "92.29",
            "min": "92.08",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "202.21",
            "p50": "186.30",
            "p95": "147.92",
            "p99": "135.63",
            "min": "135.02",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "187.52",
            "p50": "172.91",
            "p95": "143.46",
            "p99": "126.23",
            "min": "123.99",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "71.05",
            "p50": "66.94",
            "p95": "61.15",
            "p99": "59.61",
            "min": "59.55",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "130.86",
            "p50": "122.62",
            "p95": "104.16",
            "p99": "105.14",
            "min": "91.29",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "212.84",
            "p50": "188.17",
            "p95": "153.19",
            "p99": "142.60",
            "min": "126.12",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "152.36",
            "p50": "136.87",
            "p95": "127.81",
            "p99": "134.04",
            "min": "120.22",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "124.53",
            "p50": "118.16",
            "p95": "101.13",
            "p99": "106.06",
            "min": "92.13",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1036.63",
            "p50": "717.66",
            "p95": "381.50",
            "p99": "268.32",
            "min": "248.63",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1004.34",
            "p50": "700.54",
            "p95": "368.87",
            "p99": "265.49",
            "min": "258.05",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1143.85",
            "p50": "764.88",
            "p95": "431.44",
            "p99": "261.53",
            "min": "259.00",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1091.57",
            "p50": "737.11",
            "p95": "400.81",
            "p99": "292.81",
            "min": "260.48",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1006.17",
            "p50": "696.91",
            "p95": "388.86",
            "p99": "269.32",
            "min": "263.22",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1021.39",
            "p50": "710.54",
            "p95": "392.93",
            "p99": "274.53",
            "min": "251.18",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "341.68",
            "p50": "301.02",
            "p95": "206.94",
            "p99": "182.88",
            "min": "178.40",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "344.63",
            "p50": "292.04",
            "p95": "225.63",
            "p99": "171.57",
            "min": "163.96",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "340.90",
            "p50": "296.50",
            "p95": "230.90",
            "p99": "191.72",
            "min": "187.26",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "363.53",
            "p50": "314.33",
            "p95": "220.93",
            "p99": "175.03",
            "min": "171.61",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "283.40",
            "p50": "251.57",
            "p95": "196.73",
            "p99": "156.55",
            "min": "152.66",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "287.10",
            "p50": "258.60",
            "p95": "190.67",
            "p99": "152.79",
            "min": "149.46",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "286.82",
            "p50": "256.19",
            "p95": "198.18",
            "p99": "165.44",
            "min": "163.43",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "288.85",
            "p50": "257.23",
            "p95": "203.71",
            "p99": "163.76",
            "min": "161.51",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "290.07",
            "p50": "259.63",
            "p95": "201.56",
            "p99": "170.31",
            "min": "169.85",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.72",
            "p50": "100.59",
            "p95": "87.14",
            "p99": "82.72",
            "min": "82.03",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.53",
            "p50": "100.40",
            "p95": "87.87",
            "p99": "77.90",
            "min": "77.56",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.75",
            "p50": "92.97",
            "p95": "84.23",
            "p99": "80.35",
            "min": "80.29",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "250.57",
            "p50": "223.42",
            "p95": "174.66",
            "p99": "141.40",
            "min": "140.22",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.01",
            "p50": "92.88",
            "p95": "81.49",
            "p99": "78.00",
            "min": "77.62",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "242.20",
            "p50": "219.36",
            "p95": "170.84",
            "p99": "158.02",
            "min": "152.13",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "184.84",
            "p50": "170.11",
            "p95": "141.86",
            "p99": "124.91",
            "min": "124.16",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "153.57",
            "p50": "143.92",
            "p95": "122.66",
            "p99": "96.96",
            "min": "95.49",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "436.19",
            "p50": "360.14",
            "p95": "247.44",
            "p99": "221.55",
            "min": "216.74",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4660.18",
            "p50": "1501.77",
            "p95": "492.93",
            "p99": "364.16",
            "min": "351.15",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "440.08",
            "p50": "360.06",
            "p95": "260.63",
            "p99": "203.71",
            "min": "178.32",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "10524.96",
            "p50": "1996.60",
            "p95": "612.28",
            "p99": "422.76",
            "min": "419.94",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3032.96",
            "p50": "1116.98",
            "p95": "432.59",
            "p99": "313.45",
            "min": "308.34",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "207.99",
            "p50": "186.68",
            "p95": "150.07",
            "p99": "135.21",
            "min": "134.25",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "231.84",
            "p50": "211.15",
            "p95": "160.93",
            "p99": "146.08",
            "min": "142.83",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "127.70",
            "p50": "121.14",
            "p95": "103.22",
            "p99": "93.84",
            "min": "92.70",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "208.62",
            "p50": "189.10",
            "p95": "146.78",
            "p99": "108.72",
            "min": "97.16",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "140.54",
            "p50": "132.02",
            "p95": "110.29",
            "p99": "74.19",
            "min": "72.21",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "174.31",
            "p50": "159.95",
            "p95": "130.47",
            "p99": "104.43",
            "min": "98.43",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "184.13",
            "p50": "169.03",
            "p95": "141.50",
            "p99": "127.75",
            "min": "127.07",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "185.56",
            "p50": "171.46",
            "p95": "138.02",
            "p99": "130.98",
            "min": "129.50",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "290.79",
            "p50": "223.19",
            "p95": "132.92",
            "p99": "134.91",
            "min": "124.96",
            "n": "93",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "142.53",
            "p50": "134.69",
            "p95": "111.80",
            "p99": "109.07",
            "min": "97.31",
            "n": "73",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.95",
            "p50": "85.11",
            "p95": "77.75",
            "p99": "74.96",
            "min": "74.69",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "90.18",
            "p50": "86.16",
            "p95": "83.28",
            "p99": "80.40",
            "min": "80.11",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "89.61",
            "p50": "85.70",
            "p95": "82.97",
            "p99": "74.17",
            "min": "72.79",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "189.49",
            "p50": "181.48",
            "p95": "176.98",
            "p99": "156.48",
            "min": "149.56",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "97.93",
            "p50": "91.91",
            "p95": "87.29",
            "p99": "84.34",
            "min": "84.08",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "114.98",
            "p50": "110.14",
            "p95": "105.04",
            "p99": "95.35",
            "min": "92.97",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "126.47",
            "p50": "121.20",
            "p95": "104.79",
            "p99": "102.78",
            "min": "102.59",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "128.46",
            "p50": "124.44",
            "p95": "119.52",
            "p99": "115.25",
            "min": "114.91",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "98.00",
            "p50": "94.67",
            "p95": "78.36",
            "p99": "77.89",
            "min": "77.85",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.55",
            "p50": "96.30",
            "p95": "93.33",
            "p99": "91.10",
            "min": "90.60",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.00",
            "p50": "96.44",
            "p95": "94.51",
            "p99": "92.32",
            "min": "92.01",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.62",
            "p50": "122.94",
            "p95": "120.28",
            "p99": "117.09",
            "min": "116.72",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "121.30",
            "p50": "118.13",
            "p95": "114.99",
            "p99": "109.43",
            "min": "109.38",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "116.20",
            "p50": "114.03",
            "p95": "110.65",
            "p99": "107.75",
            "min": "107.69",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "76.39",
            "p50": "73.63",
            "p95": "70.74",
            "p99": "69.77",
            "min": "69.61",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "99.30",
            "p50": "98.02",
            "p95": "93.20",
            "p99": "94.38",
            "min": "91.73",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "62.08",
            "p50": "59.83",
            "p95": "56.59",
            "p99": "55.53",
            "min": "53.99",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "159.38",
            "p50": "127.88",
            "p95": "119.99",
            "p99": "136.64",
            "min": "119.48",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "110.02",
            "p50": "108.43",
            "p95": "105.47",
            "p99": "107.16",
            "min": "105.00",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "384.91",
            "p50": "366.39",
            "p95": "340.06",
            "p99": "312.16",
            "min": "299.27",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "512.99",
            "p50": "483.89",
            "p95": "471.85",
            "p99": "432.41",
            "min": "432.03",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "382.31",
            "p50": "362.76",
            "p95": "347.17",
            "p99": "279.33",
            "min": "268.91",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "384.02",
            "p50": "365.37",
            "p95": "345.18",
            "p99": "308.46",
            "min": "292.86",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "384.58",
            "p50": "367.95",
            "p95": "337.72",
            "p99": "303.13",
            "min": "296.08",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "475.15",
            "p50": "446.60",
            "p95": "432.05",
            "p99": "403.03",
            "min": "402.78",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "98.35",
            "p50": "94.57",
            "p95": "90.23",
            "p99": "85.41",
            "min": "85.26",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "98.89",
            "p50": "95.22",
            "p95": "90.94",
            "p99": "88.23",
            "min": "87.85",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "97.79",
            "p50": "93.67",
            "p95": "89.82",
            "p99": "87.95",
            "min": "87.92",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "89.65",
            "p50": "86.94",
            "p95": "83.29",
            "p99": "82.49",
            "min": "82.48",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.96",
            "p50": "86.37",
            "p95": "85.90",
            "p99": "84.73",
            "min": "84.70",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "90.96",
            "p50": "88.07",
            "p95": "83.17",
            "p99": "81.64",
            "min": "81.52",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "86.51",
            "p50": "83.41",
            "p95": "79.16",
            "p99": "77.26",
            "min": "77.13",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "86.15",
            "p50": "83.47",
            "p95": "78.85",
            "p99": "78.38",
            "min": "78.36",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "86.23",
            "p50": "83.47",
            "p95": "79.16",
            "p99": "78.62",
            "min": "78.55",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1356.97",
            "p50": "1240.00",
            "p95": "864.55",
            "p99": "543.27",
            "min": "500.99",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1301.83",
            "p50": "1195.89",
            "p95": "805.02",
            "p99": "387.57",
            "min": "371.81",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "90.21",
            "p50": "89.36",
            "p95": "84.11",
            "p99": "76.85",
            "min": "76.21",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "2096.07",
            "p50": "1764.78",
            "p95": "868.22",
            "p99": "632.39",
            "min": "623.56",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "90.30",
            "p50": "89.39",
            "p95": "84.73",
            "p99": "81.21",
            "min": "80.58",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "1645.21",
            "p50": "1498.06",
            "p95": "1069.82",
            "p99": "552.83",
            "min": "484.13",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "97.61",
            "p50": "96.32",
            "p95": "91.41",
            "p99": "89.92",
            "min": "89.91",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "184.92",
            "p50": "175.53",
            "p95": "172.29",
            "p99": "168.21",
            "min": "166.98",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "408.07",
            "p50": "359.34",
            "p95": "278.85",
            "p99": "243.76",
            "min": "242.52",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7285.35",
            "p50": "2303.36",
            "p95": "964.88",
            "p99": "520.04",
            "min": "479.17",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "437.53",
            "p50": "385.88",
            "p95": "299.97",
            "p99": "275.56",
            "min": "273.55",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "29485.73",
            "p50": "9579.08",
            "p95": "2774.53",
            "p99": "1495.97",
            "min": "1405.98",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4610.69",
            "p50": "3039.17",
            "p95": "1921.13",
            "p99": "561.11",
            "min": "392.76",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "352.94",
            "p50": "312.62",
            "p95": "240.13",
            "p99": "207.16",
            "min": "198.92",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "154.10",
            "p50": "141.70",
            "p95": "124.89",
            "p99": "96.89",
            "min": "95.57",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "122.88",
            "p50": "111.66",
            "p95": "104.14",
            "p99": "97.25",
            "min": "95.48",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "136.96",
            "p50": "125.69",
            "p95": "118.51",
            "p99": "115.82",
            "min": "115.47",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "123.69",
            "p50": "118.55",
            "p95": "116.18",
            "p99": "111.71",
            "min": "111.64",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "172.81",
            "p50": "149.36",
            "p95": "142.68",
            "p99": "134.46",
            "min": "131.12",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "94.04",
            "p50": "92.67",
            "p95": "90.82",
            "p99": "89.69",
            "min": "89.63",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "117.09",
            "p50": "111.61",
            "p95": "106.14",
            "p99": "103.30",
            "min": "103.08",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "909.00",
            "p50": "833.72",
            "p95": "319.65",
            "p99": "311.84",
            "min": "311.74",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "123.96",
            "p50": "118.51",
            "p95": "114.19",
            "p99": "111.71",
            "min": "111.61",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}