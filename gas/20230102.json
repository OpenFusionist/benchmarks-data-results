{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "168.65",
            "p50": "167.41",
            "p95": "156.78",
            "p99": "166.27",
            "min": "153.82",
            "n": "15",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "168.83",
            "p50": "167.60",
            "p95": "163.97",
            "p99": "167.86",
            "min": "162.75",
            "n": "15",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "168.15",
            "p50": "167.42",
            "p95": "163.88",
            "p99": "167.29",
            "min": "162.82",
            "n": "15",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "754.74",
            "p50": "747.68",
            "p95": "445.02",
            "p99": "692.80",
            "min": "428.72",
            "n": "18",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "397.51",
            "p50": "394.65",
            "p95": "379.63",
            "p99": "393.94",
            "min": "375.16",
            "n": "15",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "432.65",
            "p50": "428.97",
            "p95": "351.72",
            "p99": "416.46",
            "min": "337.44",
            "n": "16",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "323.13",
            "p50": "318.20",
            "p95": "314.62",
            "p99": "321.43",
            "min": "312.49",
            "n": "15",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "186.12",
            "p50": "184.99",
            "p95": "182.13",
            "p99": "185.33",
            "min": "181.14",
            "n": "15",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "264.16",
            "p50": "261.33",
            "p95": "246.72",
            "p99": "260.67",
            "min": "243.64",
            "n": "16",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "254.29",
            "p50": "253.49",
            "p95": "242.13",
            "p99": "251.86",
            "min": "239.09",
            "n": "15",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "257.87",
            "p50": "255.42",
            "p95": "249.69",
            "p99": "256.23",
            "min": "247.64",
            "n": "15",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "189.32",
            "p50": "187.25",
            "p95": "178.54",
            "p99": "187.17",
            "min": "175.84",
            "n": "15",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "316.93",
            "p50": "314.94",
            "p95": "303.32",
            "p99": "314.21",
            "min": "300.92",
            "n": "16",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "307.96",
            "p50": "305.76",
            "p95": "301.09",
            "p99": "306.58",
            "min": "299.37",
            "n": "15",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "110.64",
            "p50": "107.11",
            "p95": "105.74",
            "p99": "109.66",
            "min": "105.20",
            "n": "17",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "169.93",
            "p50": "168.76",
            "p95": "169.01",
            "p99": "169.74",
            "min": "167.88",
            "n": "8",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "282.17",
            "p50": "252.15",
            "p95": "253.89",
            "p99": "276.51",
            "min": "230.75",
            "n": "10",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "239.98",
            "p50": "194.78",
            "p95": "216.96",
            "p99": "235.38",
            "min": "182.42",
            "n": "7",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "166.79",
            "p50": "164.34",
            "p95": "165.38",
            "p99": "166.51",
            "min": "163.25",
            "n": "7",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "861.07",
            "p50": "822.98",
            "p95": "785.72",
            "p99": "846.00",
            "min": "785.72",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "831.87",
            "p50": "819.13",
            "p95": "771.45",
            "p99": "819.79",
            "min": "771.45",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1030.75",
            "p50": "960.67",
            "p95": "907.55",
            "p99": "1006.11",
            "min": "907.55",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1066.42",
            "p50": "966.90",
            "p95": "912.78",
            "p99": "1035.69",
            "min": "912.78",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1076.42",
            "p50": "983.08",
            "p95": "937.16",
            "p99": "1048.57",
            "min": "929.83",
            "n": "18",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "847.53",
            "p50": "817.13",
            "p95": "762.54",
            "p99": "830.53",
            "min": "762.54",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "196.19",
            "p50": "187.22",
            "p95": "186.11",
            "p99": "194.17",
            "min": "183.59",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "195.96",
            "p50": "186.12",
            "p95": "182.96",
            "p99": "193.36",
            "min": "179.71",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "195.41",
            "p50": "187.26",
            "p95": "187.35",
            "p99": "193.80",
            "min": "185.33",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "223.13",
            "p50": "213.10",
            "p95": "110.59",
            "p99": "200.62",
            "min": "82.45",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.42",
            "p50": "87.26",
            "p95": "86.54",
            "p99": "87.25",
            "min": "86.44",
            "n": "17",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "345.60",
            "p50": "315.36",
            "p95": "294.63",
            "p99": "335.41",
            "min": "281.89",
            "n": "15",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "331.12",
            "p50": "300.57",
            "p95": "296.41",
            "p99": "324.18",
            "min": "287.73",
            "n": "15",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "331.83",
            "p50": "300.78",
            "p95": "301.60",
            "p99": "325.78",
            "min": "294.04",
            "n": "15",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "336.22",
            "p50": "302.90",
            "p95": "297.98",
            "p99": "328.57",
            "min": "288.42",
            "n": "15",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2362.23",
            "p50": "2248.28",
            "p95": "1732.54",
            "p99": "2236.29",
            "min": "1732.54",
            "n": "19",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2288.52",
            "p50": "2204.98",
            "p95": "1926.78",
            "p99": "2216.17",
            "min": "1926.78",
            "n": "19",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "93.54",
            "p50": "93.25",
            "p95": "92.90",
            "p99": "93.41",
            "min": "92.83",
            "n": "17",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "5613.56",
            "p50": "4981.98",
            "p95": "2451.04",
            "p99": "4981.05",
            "min": "2451.04",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "93.82",
            "p50": "93.40",
            "p95": "92.53",
            "p99": "93.57",
            "min": "92.30",
            "n": "16",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3153.10",
            "p50": "2988.67",
            "p95": "2604.38",
            "p99": "3043.36",
            "min": "2604.38",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "253.25",
            "p50": "251.92",
            "p95": "181.14",
            "p99": "238.83",
            "min": "163.11",
            "n": "15",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "533.28",
            "p50": "530.25",
            "p95": "497.81",
            "p99": "526.19",
            "min": "495.94",
            "n": "18",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1231.61",
            "p50": "1205.43",
            "p95": "375.74",
            "p99": "1060.43",
            "min": "375.74",
            "n": "19",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "16810.74",
            "p50": "8133.28",
            "p95": "523.31",
            "p99": "13553.26",
            "min": "523.31",
            "n": "19",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1151.20",
            "p50": "1115.35",
            "p95": "345.56",
            "p99": "990.07",
            "min": "345.56",
            "n": "19",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "43289.46",
            "p50": "10263.80",
            "p95": "2074.64",
            "p99": "35046.50",
            "min": "2074.64",
            "n": "19",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13050.03",
            "p50": "6187.18",
            "p95": "1754.92",
            "p99": "10791.01",
            "min": "1754.92",
            "n": "19",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "533.73",
            "p50": "488.06",
            "p95": "433.38",
            "p99": "513.66",
            "min": "428.09",
            "n": "18",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "512.08",
            "p50": "508.11",
            "p95": "503.06",
            "p99": "510.28",
            "min": "501.46",
            "n": "16",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "202.65",
            "p50": "201.67",
            "p95": "199.87",
            "p99": "202.10",
            "min": "199.38",
            "n": "16",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "432.95",
            "p50": "429.96",
            "p95": "423.39",
            "p99": "431.04",
            "min": "422.32",
            "n": "17",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "202.72",
            "p50": "201.64",
            "p95": "198.93",
            "p99": "201.96",
            "min": "197.98",
            "n": "15",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "326.28",
            "p50": "324.26",
            "p95": "311.39",
            "p99": "323.30",
            "min": "310.61",
            "n": "18",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "268.98",
            "p50": "267.42",
            "p95": "265.53",
            "p99": "268.29",
            "min": "264.66",
            "n": "15",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "511.65",
            "p50": "507.10",
            "p95": "496.45",
            "p99": "508.61",
            "min": "494.77",
            "n": "17",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1370.68",
            "p50": "1207.65",
            "p95": "977.29",
            "p99": "1292.00",
            "min": "907.87",
            "n": "16",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "313.52",
            "p50": "311.19",
            "p95": "304.55",
            "p99": "311.73",
            "min": "302.97",
            "n": "16",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "86.76",
            "p50": "85.95",
            "p95": "79.89",
            "p99": "85.39",
            "min": "78.17",
            "n": "15",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "80.38",
            "p50": "78.05",
            "p95": "73.09",
            "p99": "78.92",
            "min": "71.27",
            "n": "15",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "81.86",
            "p50": "79.06",
            "p95": "73.88",
            "p99": "80.26",
            "min": "71.88",
            "n": "15",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "224.25",
            "p50": "211.73",
            "p95": "173.82",
            "p99": "214.17",
            "min": "171.16",
            "n": "18",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "170.24",
            "p50": "162.75",
            "p95": "142.56",
            "p99": "164.71",
            "min": "135.64",
            "n": "15",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "177.23",
            "p50": "168.35",
            "p95": "155.86",
            "p99": "172.95",
            "min": "152.09",
            "n": "16",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "170.51",
            "p50": "161.27",
            "p95": "146.33",
            "p99": "165.68",
            "min": "140.29",
            "n": "15",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "170.88",
            "p50": "157.64",
            "p95": "142.45",
            "p99": "165.19",
            "min": "135.35",
            "n": "15",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "190.13",
            "p50": "180.33",
            "p95": "169.91",
            "p99": "186.08",
            "min": "166.34",
            "n": "16",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "172.69",
            "p50": "163.21",
            "p95": "141.23",
            "p99": "166.40",
            "min": "133.36",
            "n": "15",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "188.05",
            "p50": "181.95",
            "p95": "176.01",
            "p99": "185.64",
            "min": "173.00",
            "n": "15",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "143.41",
            "p50": "137.97",
            "p95": "97.32",
            "p99": "134.19",
            "min": "85.80",
            "n": "15",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "215.78",
            "p50": "199.55",
            "p95": "185.66",
            "p99": "209.75",
            "min": "180.34",
            "n": "16",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "173.35",
            "p50": "160.38",
            "p95": "152.26",
            "p99": "169.13",
            "min": "146.98",
            "n": "15",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.46",
            "p50": "65.29",
            "p95": "60.23",
            "p99": "66.81",
            "min": "59.32",
            "n": "17",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "138.86",
            "p50": "131.41",
            "p95": "130.68",
            "p99": "137.22",
            "min": "120.69",
            "n": "8",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "385.84",
            "p50": "306.47",
            "p95": "299.19",
            "p99": "368.51",
            "min": "228.30",
            "n": "10",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "169.57",
            "p50": "142.31",
            "p95": "154.78",
            "p99": "166.61",
            "min": "132.59",
            "n": "7",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "125.52",
            "p50": "119.44",
            "p95": "119.53",
            "p99": "124.32",
            "min": "110.56",
            "n": "7",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1119.66",
            "p50": "962.27",
            "p95": "557.33",
            "p99": "1007.19",
            "min": "557.33",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1017.68",
            "p50": "896.90",
            "p95": "489.58",
            "p99": "912.06",
            "min": "489.58",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1321.00",
            "p50": "1161.72",
            "p95": "717.52",
            "p99": "1200.30",
            "min": "717.52",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1189.03",
            "p50": "1009.44",
            "p95": "482.63",
            "p99": "1047.75",
            "min": "482.63",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1239.33",
            "p50": "938.47",
            "p95": "616.20",
            "p99": "1114.71",
            "min": "583.40",
            "n": "18",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1031.60",
            "p50": "876.85",
            "p95": "453.61",
            "p99": "916.00",
            "min": "453.61",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "647.76",
            "p50": "550.86",
            "p95": "388.20",
            "p99": "595.85",
            "min": "323.32",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "661.88",
            "p50": "571.93",
            "p95": "420.23",
            "p99": "613.55",
            "min": "359.82",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "681.81",
            "p50": "543.39",
            "p95": "499.96",
            "p99": "645.44",
            "min": "454.50",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "688.49",
            "p50": "540.13",
            "p95": "429.32",
            "p99": "636.66",
            "min": "364.53",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "290.95",
            "p50": "267.75",
            "p95": "222.86",
            "p99": "277.33",
            "min": "215.29",
            "n": "17",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "540.68",
            "p50": "444.57",
            "p95": "376.61",
            "p99": "507.87",
            "min": "335.60",
            "n": "15",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "552.38",
            "p50": "457.43",
            "p95": "370.96",
            "p99": "516.10",
            "min": "325.61",
            "n": "15",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "578.34",
            "p50": "470.94",
            "p95": "414.27",
            "p99": "545.52",
            "min": "373.26",
            "n": "15",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "628.40",
            "p50": "494.22",
            "p95": "372.75",
            "p99": "577.27",
            "min": "308.83",
            "n": "15",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.85",
            "p50": "103.09",
            "p95": "90.16",
            "p99": "102.71",
            "min": "90.16",
            "n": "19",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.62",
            "p50": "102.59",
            "p95": "82.86",
            "p99": "101.87",
            "min": "82.86",
            "n": "19",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.12",
            "p50": "95.46",
            "p95": "88.60",
            "p99": "97.02",
            "min": "87.43",
            "n": "17",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "252.36",
            "p50": "232.82",
            "p95": "168.65",
            "p99": "235.62",
            "min": "168.65",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.36",
            "p50": "95.31",
            "p95": "83.07",
            "p99": "94.50",
            "min": "80.55",
            "n": "16",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "246.02",
            "p50": "226.23",
            "p95": "172.03",
            "p99": "231.23",
            "min": "172.03",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "194.41",
            "p50": "179.48",
            "p95": "157.46",
            "p99": "187.02",
            "min": "148.22",
            "n": "15",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "197.17",
            "p50": "187.35",
            "p95": "159.77",
            "p99": "189.69",
            "min": "157.80",
            "n": "18",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "462.44",
            "p50": "419.98",
            "p95": "274.45",
            "p99": "424.84",
            "min": "274.45",
            "n": "19",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4839.88",
            "p50": "2524.06",
            "p95": "1199.73",
            "p99": "4111.85",
            "min": "1199.73",
            "n": "19",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "441.62",
            "p50": "394.76",
            "p95": "202.05",
            "p99": "393.70",
            "min": "202.05",
            "n": "19",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "13481.45",
            "p50": "3891.96",
            "p95": "1529.89",
            "p99": "11091.14",
            "min": "1529.89",
            "n": "19",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2813.83",
            "p50": "1702.96",
            "p95": "665.41",
            "p99": "2384.14",
            "min": "665.41",
            "n": "19",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "228.64",
            "p50": "210.21",
            "p95": "174.00",
            "p99": "217.71",
            "min": "171.12",
            "n": "18",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "244.52",
            "p50": "234.47",
            "p95": "195.93",
            "p99": "234.80",
            "min": "187.35",
            "n": "16",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "92.02",
            "p50": "88.58",
            "p95": "66.65",
            "p99": "86.95",
            "min": "62.17",
            "n": "16",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "220.65",
            "p50": "209.90",
            "p95": "194.26",
            "p99": "215.37",
            "min": "191.33",
            "n": "17",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "171.10",
            "p50": "162.68",
            "p95": "131.86",
            "p99": "163.25",
            "min": "122.05",
            "n": "15",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "200.12",
            "p50": "189.17",
            "p95": "114.10",
            "p99": "182.91",
            "min": "109.57",
            "n": "18",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "195.53",
            "p50": "185.32",
            "p95": "176.53",
            "p99": "191.73",
            "min": "171.78",
            "n": "15",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "193.70",
            "p50": "184.37",
            "p95": "148.08",
            "p99": "184.57",
            "min": "143.02",
            "n": "17",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1091.68",
            "p50": "888.19",
            "p95": "777.45",
            "p99": "1028.84",
            "min": "721.99",
            "n": "16",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "176.99",
            "p50": "167.56",
            "p95": "127.85",
            "p99": "167.16",
            "min": "119.18",
            "n": "16",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.89",
            "p50": "188.63",
            "p95": "174.28",
            "p99": "190.77",
            "min": "169.12",
            "n": "15",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "193.58",
            "p50": "190.14",
            "p95": "180.85",
            "p99": "191.04",
            "min": "177.66",
            "n": "15",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "194.07",
            "p50": "187.33",
            "p95": "179.56",
            "p99": "191.17",
            "min": "175.93",
            "n": "15",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1180.61",
            "p50": "1065.91",
            "p95": "742.70",
            "p99": "1093.03",
            "min": "719.65",
            "n": "18",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "702.78",
            "p50": "604.57",
            "p95": "491.30",
            "p99": "660.48",
            "min": "438.43",
            "n": "15",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "810.83",
            "p50": "697.86",
            "p95": "595.21",
            "p99": "767.70",
            "min": "557.16",
            "n": "16",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "741.19",
            "p50": "636.27",
            "p95": "531.36",
            "p99": "699.23",
            "min": "478.90",
            "n": "15",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "263.80",
            "p50": "261.85",
            "p95": "226.09",
            "p99": "256.26",
            "min": "216.66",
            "n": "15",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "901.23",
            "p50": "798.81",
            "p95": "623.88",
            "p99": "845.76",
            "min": "574.94",
            "n": "16",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "866.14",
            "p50": "844.30",
            "p95": "625.68",
            "p99": "818.05",
            "min": "565.57",
            "n": "15",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "872.23",
            "p50": "778.73",
            "p95": "598.22",
            "p99": "817.43",
            "min": "529.71",
            "n": "15",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "286.55",
            "p50": "279.07",
            "p95": "250.56",
            "p99": "279.35",
            "min": "241.56",
            "n": "15",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "651.92",
            "p50": "590.86",
            "p95": "430.19",
            "p99": "607.57",
            "min": "391.06",
            "n": "16",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "831.56",
            "p50": "764.40",
            "p95": "527.75",
            "p99": "770.80",
            "min": "451.80",
            "n": "15",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "111.29",
            "p50": "107.04",
            "p95": "100.72",
            "p99": "109.18",
            "min": "99.55",
            "n": "17",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "96.40",
            "p50": "94.42",
            "p95": "94.32",
            "p99": "95.99",
            "min": "91.78",
            "n": "8",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "416.09",
            "p50": "384.09",
            "p95": "376.44",
            "p99": "408.16",
            "min": "344.01",
            "n": "10",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "130.31",
            "p50": "100.67",
            "p95": "117.25",
            "p99": "127.70",
            "min": "97.67",
            "n": "7",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "89.80",
            "p50": "87.09",
            "p95": "87.12",
            "p99": "89.27",
            "min": "83.10",
            "n": "7",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1692.26",
            "p50": "1332.13",
            "p95": "625.16",
            "p99": "1478.84",
            "min": "625.16",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1636.05",
            "p50": "1514.52",
            "p95": "823.63",
            "p99": "1473.57",
            "min": "823.63",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2020.09",
            "p50": "1807.51",
            "p95": "778.98",
            "p99": "1771.87",
            "min": "778.98",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1969.29",
            "p50": "1635.63",
            "p95": "820.25",
            "p99": "1739.48",
            "min": "820.25",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1997.64",
            "p50": "1663.16",
            "p95": "948.31",
            "p99": "1787.78",
            "min": "893.08",
            "n": "18",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1617.06",
            "p50": "1265.50",
            "p95": "707.03",
            "p99": "1435.05",
            "min": "707.03",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "626.42",
            "p50": "590.72",
            "p95": "426.82",
            "p99": "586.50",
            "min": "376.92",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "620.85",
            "p50": "552.60",
            "p95": "469.42",
            "p99": "590.57",
            "min": "431.56",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "624.57",
            "p50": "604.16",
            "p95": "542.30",
            "p99": "608.12",
            "min": "521.74",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "632.46",
            "p50": "560.22",
            "p95": "474.62",
            "p99": "600.89",
            "min": "435.16",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.63",
            "p50": "85.46",
            "p95": "82.02",
            "p99": "85.71",
            "min": "81.51",
            "n": "17",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "564.24",
            "p50": "521.76",
            "p95": "422.23",
            "p99": "535.84",
            "min": "386.73",
            "n": "15",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "536.00",
            "p50": "502.32",
            "p95": "412.24",
            "p99": "511.25",
            "min": "381.29",
            "n": "15",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "536.62",
            "p50": "478.97",
            "p95": "400.14",
            "p99": "509.33",
            "min": "366.02",
            "n": "15",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "541.46",
            "p50": "495.75",
            "p95": "410.86",
            "p99": "515.34",
            "min": "378.21",
            "n": "15",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1357.11",
            "p50": "1222.64",
            "p95": "748.14",
            "p99": "1235.32",
            "min": "748.14",
            "n": "19",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1646.86",
            "p50": "1419.00",
            "p95": "700.52",
            "p99": "1457.60",
            "min": "700.52",
            "n": "19",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.11",
            "p50": "71.58",
            "p95": "69.76",
            "p99": "71.64",
            "min": "69.50",
            "n": "17",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "8660.56",
            "p50": "3452.01",
            "p95": "2179.47",
            "p99": "7364.34",
            "min": "2179.47",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.03",
            "p50": "71.11",
            "p95": "68.66",
            "p99": "71.36",
            "min": "68.06",
            "n": "16",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "221.15",
            "p50": "219.00",
            "p95": "197.40",
            "p99": "216.40",
            "min": "197.40",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "867.83",
            "p50": "766.10",
            "p95": "531.17",
            "p99": "800.50",
            "min": "447.00",
            "n": "15",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "663.64",
            "p50": "638.83",
            "p95": "570.40",
            "p99": "644.99",
            "min": "565.50",
            "n": "18",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1122.44",
            "p50": "966.95",
            "p95": "689.18",
            "p99": "1035.79",
            "min": "689.18",
            "n": "19",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "24788.59",
            "p50": "9981.97",
            "p95": "1780.36",
            "p99": "20186.94",
            "min": "1780.36",
            "n": "19",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1129.56",
            "p50": "992.56",
            "p95": "646.01",
            "p99": "1032.85",
            "min": "646.01",
            "n": "19",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "52458.43",
            "p50": "9559.10",
            "p95": "1786.16",
            "p99": "42323.98",
            "min": "1786.16",
            "n": "19",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14017.86",
            "p50": "5824.57",
            "p95": "821.19",
            "p99": "11378.53",
            "min": "821.19",
            "n": "19",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "553.74",
            "p50": "482.56",
            "p95": "408.17",
            "p99": "524.63",
            "min": "400.51",
            "n": "18",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "991.62",
            "p50": "916.87",
            "p95": "770.49",
            "p99": "947.40",
            "min": "731.47",
            "n": "16",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "286.43",
            "p50": "281.52",
            "p95": "262.44",
            "p99": "281.63",
            "min": "258.21",
            "n": "16",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1213.84",
            "p50": "1019.15",
            "p95": "602.59",
            "p99": "1091.59",
            "min": "534.67",
            "n": "17",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "264.28",
            "p50": "260.50",
            "p95": "252.03",
            "p99": "261.83",
            "min": "248.97",
            "n": "15",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "537.20",
            "p50": "508.87",
            "p95": "354.95",
            "p99": "500.75",
            "min": "345.36",
            "n": "18",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "830.11",
            "p50": "747.60",
            "p95": "528.19",
            "p99": "769.72",
            "min": "452.71",
            "n": "15",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "912.49",
            "p50": "809.78",
            "p95": "622.34",
            "p99": "854.46",
            "min": "590.10",
            "n": "17",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2245.18",
            "p50": "1959.16",
            "p95": "1271.43",
            "p99": "2050.43",
            "min": "1099.59",
            "n": "16",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "894.36",
            "p50": "810.17",
            "p95": "673.81",
            "p99": "850.25",
            "min": "634.89",
            "n": "16",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "80.74",
            "p50": "79.30",
            "p95": "72.41",
            "p99": "79.07",
            "min": "69.64",
            "n": "14",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "74.36",
            "p50": "72.62",
            "p95": "68.79",
            "p99": "73.25",
            "min": "67.40",
            "n": "15",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "75.98",
            "p50": "73.89",
            "p95": "70.53",
            "p99": "74.89",
            "min": "69.16",
            "n": "15",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "209.21",
            "p50": "187.82",
            "p95": "161.97",
            "p99": "199.77",
            "min": "159.49",
            "n": "18",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "101.03",
            "p50": "97.70",
            "p95": "81.32",
            "p99": "97.09",
            "min": "76.39",
            "n": "15",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "106.80",
            "p50": "103.38",
            "p95": "91.12",
            "p99": "103.67",
            "min": "88.36",
            "n": "16",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "138.48",
            "p50": "133.55",
            "p95": "122.29",
            "p99": "135.24",
            "min": "118.24",
            "n": "15",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "138.40",
            "p50": "132.05",
            "p95": "120.06",
            "p99": "134.73",
            "min": "115.47",
            "n": "15",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "183.90",
            "p50": "172.54",
            "p95": "144.31",
            "p99": "175.98",
            "min": "137.32",
            "n": "16",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "181.12",
            "p50": "174.36",
            "p95": "133.68",
            "p99": "171.63",
            "min": "121.83",
            "n": "15",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "180.73",
            "p50": "168.13",
            "p95": "149.13",
            "p99": "174.41",
            "min": "141.23",
            "n": "15",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "125.65",
            "p50": "118.68",
            "p95": "112.36",
            "p99": "122.99",
            "min": "109.04",
            "n": "15",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "198.71",
            "p50": "181.80",
            "p95": "159.06",
            "p99": "190.78",
            "min": "152.07",
            "n": "16",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "184.65",
            "p50": "178.70",
            "p95": "147.47",
            "p99": "177.21",
            "min": "138.17",
            "n": "15",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "70.30",
            "p50": "66.87",
            "p95": "62.22",
            "p99": "68.68",
            "min": "61.33",
            "n": "17",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "127.23",
            "p50": "121.84",
            "p95": "120.93",
            "p99": "125.97",
            "min": "113.23",
            "n": "8",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "203.21",
            "p50": "188.79",
            "p95": "184.30",
            "p99": "199.42",
            "min": "168.82",
            "n": "10",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "148.59",
            "p50": "139.42",
            "p95": "141.50",
            "p99": "147.17",
            "min": "130.88",
            "n": "7",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "122.56",
            "p50": "117.71",
            "p95": "118.16",
            "p99": "121.68",
            "min": "111.56",
            "n": "7",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "988.62",
            "p50": "734.48",
            "p95": "316.25",
            "p99": "854.15",
            "min": "316.25",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "987.89",
            "p50": "706.75",
            "p95": "404.45",
            "p99": "871.20",
            "min": "404.45",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1090.42",
            "p50": "793.54",
            "p95": "330.23",
            "p99": "938.38",
            "min": "330.23",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1022.04",
            "p50": "732.27",
            "p95": "395.04",
            "p99": "896.64",
            "min": "395.04",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1009.14",
            "p50": "712.44",
            "p95": "446.94",
            "p99": "896.70",
            "min": "417.35",
            "n": "18",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1004.55",
            "p50": "708.27",
            "p95": "313.71",
            "p99": "866.38",
            "min": "313.71",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "321.34",
            "p50": "291.90",
            "p95": "259.50",
            "p99": "308.98",
            "min": "244.04",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "319.39",
            "p50": "289.03",
            "p95": "243.12",
            "p99": "304.14",
            "min": "224.06",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "320.13",
            "p50": "291.88",
            "p95": "249.15",
            "p99": "305.94",
            "min": "231.41",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "350.45",
            "p50": "311.49",
            "p95": "235.14",
            "p99": "327.39",
            "min": "206.32",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "282.42",
            "p50": "256.62",
            "p95": "215.61",
            "p99": "269.05",
            "min": "208.19",
            "n": "17",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "278.99",
            "p50": "264.39",
            "p95": "223.39",
            "p99": "267.87",
            "min": "209.49",
            "n": "15",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "274.96",
            "p50": "257.04",
            "p95": "218.27",
            "p99": "263.62",
            "min": "204.10",
            "n": "15",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "287.15",
            "p50": "256.24",
            "p95": "200.76",
            "p99": "269.87",
            "min": "179.17",
            "n": "15",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "291.72",
            "p50": "259.92",
            "p95": "226.03",
            "p99": "278.58",
            "min": "209.61",
            "n": "15",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "104.62",
            "p50": "100.72",
            "p95": "87.75",
            "p99": "101.24",
            "min": "87.75",
            "n": "19",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "104.78",
            "p50": "100.14",
            "p95": "87.66",
            "p99": "101.36",
            "min": "87.66",
            "n": "19",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "96.89",
            "p50": "93.40",
            "p95": "82.07",
            "p99": "93.92",
            "min": "80.42",
            "n": "17",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "248.87",
            "p50": "224.96",
            "p95": "182.67",
            "p99": "235.63",
            "min": "182.67",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "96.92",
            "p50": "92.62",
            "p95": "84.76",
            "p99": "94.49",
            "min": "82.62",
            "n": "16",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "239.98",
            "p50": "216.77",
            "p95": "167.96",
            "p99": "225.58",
            "min": "167.96",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "183.49",
            "p50": "171.63",
            "p95": "147.79",
            "p99": "176.35",
            "min": "138.87",
            "n": "15",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "151.33",
            "p50": "142.94",
            "p95": "121.62",
            "p99": "145.38",
            "min": "120.05",
            "n": "18",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "438.10",
            "p50": "365.89",
            "p95": "256.66",
            "p99": "401.82",
            "min": "256.66",
            "n": "19",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "3782.41",
            "p50": "1576.46",
            "p95": "402.55",
            "p99": "3106.44",
            "min": "402.55",
            "n": "19",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "420.39",
            "p50": "366.99",
            "p95": "247.07",
            "p99": "385.72",
            "min": "247.07",
            "n": "19",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "7391.00",
            "p50": "1865.63",
            "p95": "486.29",
            "p99": "6010.06",
            "min": "486.29",
            "n": "19",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2395.25",
            "p50": "1102.49",
            "p95": "366.86",
            "p99": "1989.57",
            "min": "366.86",
            "n": "19",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "201.75",
            "p50": "186.04",
            "p95": "155.96",
            "p99": "192.59",
            "min": "153.55",
            "n": "18",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "230.11",
            "p50": "206.98",
            "p95": "165.89",
            "p99": "217.26",
            "min": "154.56",
            "n": "16",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "125.36",
            "p50": "121.44",
            "p95": "108.60",
            "p99": "122.01",
            "min": "105.64",
            "n": "16",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "206.62",
            "p50": "184.86",
            "p95": "151.35",
            "p99": "195.56",
            "min": "145.21",
            "n": "17",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "139.45",
            "p50": "131.25",
            "p95": "118.39",
            "p99": "135.24",
            "min": "113.13",
            "n": "15",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "170.72",
            "p50": "162.05",
            "p95": "135.11",
            "p99": "163.60",
            "min": "133.24",
            "n": "18",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "182.04",
            "p50": "169.42",
            "p95": "146.07",
            "p99": "174.85",
            "min": "137.07",
            "n": "15",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "183.33",
            "p50": "170.55",
            "p95": "146.60",
            "p99": "175.99",
            "min": "142.52",
            "n": "17",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "286.34",
            "p50": "234.16",
            "p95": "192.45",
            "p99": "267.56",
            "min": "141.89",
            "n": "12",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "140.15",
            "p50": "133.77",
            "p95": "123.71",
            "p99": "136.87",
            "min": "107.27",
            "n": "9",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "86.32",
            "p50": "85.63",
            "p95": "79.10",
            "p99": "84.87",
            "min": "77.29",
            "n": "15",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "87.33",
            "p50": "86.60",
            "p95": "83.44",
            "p99": "86.55",
            "min": "82.46",
            "n": "15",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "87.26",
            "p50": "86.51",
            "p95": "84.69",
            "p99": "86.75",
            "min": "84.04",
            "n": "15",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "180.73",
            "p50": "179.57",
            "p95": "177.03",
            "p99": "179.99",
            "min": "176.83",
            "n": "18",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "90.79",
            "p50": "90.26",
            "p95": "87.28",
            "p99": "90.09",
            "min": "86.40",
            "n": "15",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "113.01",
            "p50": "112.01",
            "p95": "107.29",
            "p99": "111.87",
            "min": "106.28",
            "n": "16",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "122.76",
            "p50": "121.98",
            "p95": "108.44",
            "p99": "119.90",
            "min": "104.86",
            "n": "15",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "126.30",
            "p50": "125.19",
            "p95": "123.01",
            "p99": "125.64",
            "min": "122.19",
            "n": "15",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "94.81",
            "p50": "93.93",
            "p95": "92.69",
            "p99": "94.39",
            "min": "92.32",
            "n": "16",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "96.34",
            "p50": "96.02",
            "p95": "95.39",
            "p99": "96.15",
            "min": "95.15",
            "n": "15",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "95.87",
            "p50": "95.21",
            "p95": "94.50",
            "p99": "95.60",
            "min": "94.16",
            "n": "15",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "125.11",
            "p50": "123.36",
            "p95": "122.50",
            "p99": "124.59",
            "min": "121.85",
            "n": "15",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "117.84",
            "p50": "117.20",
            "p95": "112.29",
            "p99": "116.73",
            "min": "111.31",
            "n": "16",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "115.02",
            "p50": "113.63",
            "p95": "112.91",
            "p99": "114.60",
            "min": "112.39",
            "n": "15",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "76.40",
            "p50": "73.57",
            "p95": "67.55",
            "p99": "74.63",
            "min": "66.56",
            "n": "17",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "98.65",
            "p50": "98.06",
            "p95": "95.89",
            "p99": "98.10",
            "min": "92.52",
            "n": "8",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "59.89",
            "p50": "59.58",
            "p95": "58.34",
            "p99": "59.58",
            "min": "57.08",
            "n": "10",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "158.18",
            "p50": "127.81",
            "p95": "142.89",
            "p99": "155.12",
            "min": "119.94",
            "n": "7",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "109.81",
            "p50": "108.08",
            "p95": "107.09",
            "p99": "109.26",
            "min": "103.02",
            "n": "7",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "376.00",
            "p50": "373.13",
            "p95": "365.44",
            "p99": "373.89",
            "min": "365.44",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "511.32",
            "p50": "506.16",
            "p95": "498.62",
            "p99": "508.78",
            "min": "498.62",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "369.30",
            "p50": "366.69",
            "p95": "326.46",
            "p99": "360.73",
            "min": "326.46",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "370.85",
            "p50": "366.29",
            "p95": "352.52",
            "p99": "367.19",
            "min": "352.52",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "371.55",
            "p50": "369.88",
            "p95": "291.44",
            "p99": "355.53",
            "min": "287.23",
            "n": "18",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "468.97",
            "p50": "464.87",
            "p95": "441.47",
            "p99": "463.47",
            "min": "441.47",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "95.63",
            "p50": "94.69",
            "p95": "93.79",
            "p99": "95.26",
            "min": "93.33",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "95.65",
            "p50": "95.04",
            "p95": "94.72",
            "p99": "95.46",
            "min": "94.49",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "94.51",
            "p50": "93.75",
            "p95": "93.07",
            "p99": "94.22",
            "min": "92.72",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "87.42",
            "p50": "86.82",
            "p95": "85.83",
            "p99": "87.10",
            "min": "85.43",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.90",
            "p50": "86.61",
            "p95": "83.59",
            "p99": "86.24",
            "min": "83.22",
            "n": "17",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "87.80",
            "p50": "87.47",
            "p95": "86.32",
            "p99": "87.50",
            "min": "85.95",
            "n": "15",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "83.31",
            "p50": "82.80",
            "p95": "81.68",
            "p99": "82.98",
            "min": "81.28",
            "n": "15",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "83.31",
            "p50": "82.84",
            "p95": "82.33",
            "p99": "83.11",
            "min": "82.09",
            "n": "15",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "83.42",
            "p50": "82.88",
            "p95": "82.60",
            "p99": "83.26",
            "min": "82.40",
            "n": "15",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1349.13",
            "p50": "1180.63",
            "p95": "549.60",
            "p99": "1189.22",
            "min": "549.60",
            "n": "19",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1301.13",
            "p50": "1257.05",
            "p95": "1000.91",
            "p99": "1241.08",
            "min": "1000.91",
            "n": "19",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "90.12",
            "p50": "89.19",
            "p95": "84.88",
            "p99": "89.07",
            "min": "84.30",
            "n": "17",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "1985.33",
            "p50": "1777.98",
            "p95": "275.28",
            "p99": "1643.32",
            "min": "275.28",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "89.71",
            "p50": "89.29",
            "p95": "76.14",
            "p99": "86.99",
            "min": "73.75",
            "n": "16",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "1638.90",
            "p50": "1497.84",
            "p95": "515.02",
            "p99": "1414.12",
            "min": "515.02",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "96.89",
            "p50": "95.84",
            "p95": "90.96",
            "p99": "95.70",
            "min": "89.47",
            "n": "15",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "175.17",
            "p50": "173.37",
            "p95": "170.78",
            "p99": "174.29",
            "min": "170.55",
            "n": "18",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "405.56",
            "p50": "356.39",
            "p95": "270.28",
            "p99": "378.50",
            "min": "270.28",
            "n": "19",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "6334.40",
            "p50": "2274.56",
            "p95": "936.37",
            "p99": "5254.80",
            "min": "936.37",
            "n": "19",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "439.88",
            "p50": "417.51",
            "p95": "315.32",
            "p99": "414.97",
            "min": "315.32",
            "n": "19",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "29035.44",
            "p50": "9158.53",
            "p95": "2723.98",
            "p99": "23773.15",
            "min": "2723.98",
            "n": "19",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3951.47",
            "p50": "2783.78",
            "p95": "1271.69",
            "p99": "3415.52",
            "min": "1271.69",
            "n": "19",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "345.95",
            "p50": "305.05",
            "p95": "219.11",
            "p99": "320.58",
            "min": "212.44",
            "n": "18",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "143.66",
            "p50": "138.64",
            "p95": "124.06",
            "p99": "139.74",
            "min": "120.60",
            "n": "16",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "111.72",
            "p50": "108.26",
            "p95": "103.30",
            "p99": "110.03",
            "min": "101.82",
            "n": "16",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "120.34",
            "p50": "119.36",
            "p95": "114.41",
            "p99": "119.15",
            "min": "113.75",
            "n": "17",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "118.22",
            "p50": "117.71",
            "p95": "114.68",
            "p99": "117.51",
            "min": "113.80",
            "n": "15",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "144.61",
            "p50": "144.27",
            "p95": "141.47",
            "p99": "143.98",
            "min": "141.30",
            "n": "18",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "92.87",
            "p50": "92.15",
            "p95": "88.91",
            "p99": "92.08",
            "min": "87.92",
            "n": "15",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "109.25",
            "p50": "107.51",
            "p95": "106.61",
            "p99": "108.72",
            "min": "106.32",
            "n": "17",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "889.78",
            "p50": "844.97",
            "p95": "399.57",
            "p99": "791.74",
            "min": "313.06",
            "n": "16",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "118.44",
            "p50": "117.25",
            "p95": "108.25",
            "p99": "116.41",
            "min": "106.46",
            "n": "16",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}