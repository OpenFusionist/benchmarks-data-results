{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "111.64",
            "p50": "108.87",
            "p95": "101.43",
            "p99": "96.37",
            "min": "96.10",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "999.11",
            "p50": "970.86",
            "p95": "946.05",
            "p99": "915.14",
            "min": "908.89",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "112.13",
            "p50": "109.64",
            "p95": "106.11",
            "p99": "104.40",
            "min": "104.10",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "729.20",
            "p50": "718.05",
            "p95": "492.78",
            "p99": "478.68",
            "min": "476.23",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "368.74",
            "p50": "363.73",
            "p95": "357.01",
            "p99": "331.89",
            "min": "327.59",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "398.13",
            "p50": "392.45",
            "p95": "383.83",
            "p99": "377.02",
            "min": "376.49",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "312.33",
            "p50": "306.92",
            "p95": "189.74",
            "p99": "187.47",
            "min": "187.35",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "187.86",
            "p50": "180.01",
            "p95": "177.75",
            "p99": "171.81",
            "min": "171.78",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "241.90",
            "p50": "238.37",
            "p95": "223.69",
            "p99": "219.33",
            "min": "218.07",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "241.69",
            "p50": "238.23",
            "p95": "229.57",
            "p99": "225.95",
            "min": "225.34",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "259.59",
            "p50": "252.34",
            "p95": "248.59",
            "p99": "241.95",
            "min": "241.63",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "203.30",
            "p50": "196.06",
            "p95": "192.06",
            "p99": "186.96",
            "min": "186.87",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "314.09",
            "p50": "308.90",
            "p95": "272.69",
            "p99": "264.77",
            "min": "264.04",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "296.38",
            "p50": "290.78",
            "p95": "256.23",
            "p99": "248.20",
            "min": "246.86",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "7167.62",
            "p50": "6007.21",
            "p95": "2452.25",
            "p99": "1942.51",
            "min": "1936.44",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2560.33",
            "p50": "2242.15",
            "p95": "1907.38",
            "p99": "2050.31",
            "min": "1775.69",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "283.95",
            "p50": "253.88",
            "p95": "232.50",
            "p99": "234.40",
            "min": "222.78",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1443.07",
            "p50": "948.94",
            "p95": "471.82",
            "p99": "847.75",
            "min": "398.65",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7803.97",
            "p50": "4198.63",
            "p95": "2302.40",
            "p99": "4619.41",
            "min": "2217.02",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "811.02",
            "p50": "777.53",
            "p95": "535.91",
            "p99": "527.78",
            "min": "525.47",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "817.61",
            "p50": "798.80",
            "p95": "743.60",
            "p99": "543.19",
            "min": "338.65",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "914.46",
            "p50": "880.52",
            "p95": "717.37",
            "p99": "646.02",
            "min": "641.14",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2199.91",
            "p50": "2033.52",
            "p95": "1760.01",
            "p99": "1571.87",
            "min": "1539.64",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2198.48",
            "p50": "2049.05",
            "p95": "1759.50",
            "p99": "1563.90",
            "min": "1498.64",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "806.55",
            "p50": "790.45",
            "p95": "728.97",
            "p99": "700.89",
            "min": "691.54",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "162.04",
            "p50": "155.65",
            "p95": "142.15",
            "p99": "132.92",
            "min": "132.90",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "509.38",
            "p50": "481.27",
            "p95": "401.82",
            "p99": "330.26",
            "min": "312.47",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "161.27",
            "p50": "153.33",
            "p95": "141.97",
            "p99": "139.32",
            "min": "139.11",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "183.06",
            "p50": "175.65",
            "p95": "153.76",
            "p99": "151.95",
            "min": "151.88",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "32760.34",
            "p50": "8638.92",
            "p95": "2489.82",
            "p99": "2276.80",
            "min": "2252.27",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "380.97",
            "p50": "314.72",
            "p95": "306.48",
            "p99": "278.21",
            "min": "271.49",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "359.96",
            "p50": "299.02",
            "p95": "289.27",
            "p99": "279.03",
            "min": "278.05",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "360.94",
            "p50": "307.73",
            "p95": "291.52",
            "p99": "286.45",
            "min": "286.11",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "360.62",
            "p50": "299.38",
            "p95": "290.66",
            "p99": "281.19",
            "min": "279.11",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "14894.75",
            "p50": "7070.75",
            "p95": "2498.62",
            "p99": "2248.31",
            "min": "2177.35",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "14473.43",
            "p50": "7945.08",
            "p95": "2573.07",
            "p99": "1705.24",
            "min": "1636.67",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "13766.34",
            "p50": "6002.05",
            "p95": "2524.01",
            "p99": "2335.54",
            "min": "2322.64",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "14286.99",
            "p50": "6570.94",
            "p95": "2404.74",
            "p99": "2010.73",
            "min": "1769.79",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "14026.04",
            "p50": "6326.86",
            "p95": "2364.61",
            "p99": "2233.98",
            "min": "2229.93",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "14147.57",
            "p50": "7208.14",
            "p95": "2525.09",
            "p99": "1641.45",
            "min": "1507.19",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "242.20",
            "p50": "238.34",
            "p95": "228.65",
            "p99": "171.42",
            "min": "157.36",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "525.58",
            "p50": "517.87",
            "p95": "506.31",
            "p99": "81.58",
            "min": "80.73",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1634.12",
            "p50": "1570.45",
            "p95": "379.18",
            "p99": "368.86",
            "min": "368.71",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "23027.79",
            "p50": "6327.05",
            "p95": "188.34",
            "p99": "181.89",
            "min": "181.69",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1422.68",
            "p50": "1365.29",
            "p95": "278.31",
            "p99": "75.46",
            "min": "72.19",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "53577.29",
            "p50": "9601.74",
            "p95": "2513.77",
            "p99": "2244.70",
            "min": "2243.04",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15295.41",
            "p50": "7344.95",
            "p95": "196.63",
            "p99": "174.61",
            "min": "166.27",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "568.56",
            "p50": "535.97",
            "p95": "442.18",
            "p99": "402.50",
            "min": "402.23",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "515.94",
            "p50": "506.59",
            "p95": "493.85",
            "p99": "456.79",
            "min": "451.07",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "203.47",
            "p50": "196.97",
            "p95": "194.50",
            "p99": "187.85",
            "min": "187.54",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "378.53",
            "p50": "373.84",
            "p95": "355.12",
            "p99": "347.43",
            "min": "345.43",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "204.26",
            "p50": "197.24",
            "p95": "194.87",
            "p99": "190.47",
            "min": "190.27",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "343.15",
            "p50": "335.59",
            "p95": "317.02",
            "p99": "262.50",
            "min": "257.69",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "257.54",
            "p50": "253.59",
            "p95": "250.27",
            "p99": "240.78",
            "min": "239.16",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "523.24",
            "p50": "510.25",
            "p95": "496.20",
            "p99": "486.65",
            "min": "484.60",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1448.04",
            "p50": "1279.02",
            "p95": "977.49",
            "p99": "916.67",
            "min": "902.34",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "310.73",
            "p50": "304.54",
            "p95": "285.48",
            "p99": "270.42",
            "min": "265.78",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "90.30",
            "p50": "88.90",
            "p95": "83.43",
            "p99": "78.69",
            "min": "77.97",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "82.32",
            "p50": "81.04",
            "p95": "75.25",
            "p99": "69.52",
            "min": "69.34",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "84.07",
            "p50": "83.30",
            "p95": "80.41",
            "p99": "76.51",
            "min": "76.01",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "250.55",
            "p50": "245.73",
            "p95": "215.88",
            "p99": "193.05",
            "min": "191.21",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "186.82",
            "p50": "183.20",
            "p95": "164.50",
            "p99": "148.17",
            "min": "146.37",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "195.75",
            "p50": "193.15",
            "p95": "175.21",
            "p99": "166.31",
            "min": "165.97",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "186.09",
            "p50": "178.96",
            "p95": "160.77",
            "p99": "130.83",
            "min": "125.52",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "183.06",
            "p50": "175.75",
            "p95": "160.29",
            "p99": "76.22",
            "min": "57.10",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "209.07",
            "p50": "202.38",
            "p95": "182.46",
            "p99": "148.08",
            "min": "143.40",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "186.36",
            "p50": "180.27",
            "p95": "159.35",
            "p99": "100.66",
            "min": "91.51",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "209.90",
            "p50": "202.43",
            "p95": "176.93",
            "p99": "124.52",
            "min": "118.19",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "153.72",
            "p50": "149.41",
            "p95": "140.09",
            "p99": "130.61",
            "min": "129.76",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "226.59",
            "p50": "221.41",
            "p95": "199.95",
            "p99": "194.05",
            "min": "193.29",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "186.73",
            "p50": "180.14",
            "p95": "160.38",
            "p99": "91.09",
            "min": "89.04",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "69.02",
            "p50": "66.60",
            "p95": "63.43",
            "p99": "60.64",
            "min": "60.24",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "142.59",
            "p50": "139.98",
            "p95": "127.78",
            "p99": "129.78",
            "min": "122.88",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "444.09",
            "p50": "367.91",
            "p95": "288.68",
            "p99": "276.92",
            "min": "237.71",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "196.40",
            "p50": "153.42",
            "p95": "142.55",
            "p99": "164.35",
            "min": "140.17",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.33",
            "p50": "131.35",
            "p95": "123.22",
            "p99": "126.97",
            "min": "120.66",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1237.32",
            "p50": "1167.29",
            "p95": "810.04",
            "p99": "615.66",
            "min": "609.07",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1064.40",
            "p50": "1037.57",
            "p95": "717.07",
            "p99": "531.18",
            "min": "505.29",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1483.69",
            "p50": "1410.87",
            "p95": "923.94",
            "p99": "652.34",
            "min": "610.51",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1369.55",
            "p50": "1299.27",
            "p95": "807.83",
            "p99": "577.61",
            "min": "537.52",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1343.95",
            "p50": "1246.83",
            "p95": "770.10",
            "p99": "547.48",
            "min": "535.40",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1101.01",
            "p50": "1063.44",
            "p95": "616.38",
            "p99": "431.93",
            "min": "374.10",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "737.66",
            "p50": "623.47",
            "p95": "483.17",
            "p99": "405.47",
            "min": "399.18",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "740.77",
            "p50": "627.42",
            "p95": "461.73",
            "p99": "366.51",
            "min": "347.43",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "748.32",
            "p50": "703.06",
            "p95": "534.16",
            "p99": "332.82",
            "min": "319.63",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "741.33",
            "p50": "701.80",
            "p95": "454.65",
            "p99": "404.57",
            "min": "402.68",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "296.35",
            "p50": "292.89",
            "p95": "247.81",
            "p99": "224.64",
            "min": "219.84",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "666.24",
            "p50": "551.99",
            "p95": "432.80",
            "p99": "383.48",
            "min": "383.30",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "645.53",
            "p50": "563.73",
            "p95": "429.17",
            "p99": "362.96",
            "min": "361.42",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "662.57",
            "p50": "585.32",
            "p95": "439.38",
            "p99": "363.75",
            "min": "361.04",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "675.23",
            "p50": "588.14",
            "p95": "434.18",
            "p99": "385.34",
            "min": "383.37",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "107.20",
            "p50": "105.78",
            "p95": "98.35",
            "p99": "94.26",
            "min": "92.52",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "107.16",
            "p50": "105.65",
            "p95": "99.55",
            "p99": "96.69",
            "min": "96.03",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.73",
            "p50": "98.05",
            "p95": "92.23",
            "p99": "89.56",
            "min": "89.51",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "257.25",
            "p50": "251.68",
            "p95": "222.31",
            "p99": "201.23",
            "min": "200.75",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.75",
            "p50": "98.34",
            "p95": "92.85",
            "p99": "89.39",
            "min": "89.38",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "250.02",
            "p50": "244.81",
            "p95": "213.06",
            "p99": "200.27",
            "min": "194.95",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "210.40",
            "p50": "207.14",
            "p95": "185.67",
            "p99": "171.94",
            "min": "169.90",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "243.55",
            "p50": "238.00",
            "p95": "210.61",
            "p99": "185.29",
            "min": "183.87",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "461.04",
            "p50": "450.88",
            "p95": "370.40",
            "p99": "334.41",
            "min": "331.38",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7775.37",
            "p50": "4442.72",
            "p95": "2143.18",
            "p99": "1785.78",
            "min": "1700.91",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "440.00",
            "p50": "431.25",
            "p95": "330.43",
            "p99": "300.73",
            "min": "297.57",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "18733.15",
            "p50": "7111.64",
            "p95": "2525.78",
            "p99": "2297.71",
            "min": "2256.64",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4317.64",
            "p50": "3335.37",
            "p95": "1813.70",
            "p99": "1286.69",
            "min": "1223.04",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "210.85",
            "p50": "187.05",
            "p95": "166.34",
            "p99": "151.92",
            "min": "145.90",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "265.86",
            "p50": "260.92",
            "p95": "220.47",
            "p99": "201.64",
            "min": "201.10",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "95.23",
            "p50": "94.27",
            "p95": "88.20",
            "p99": "80.07",
            "min": "77.90",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "247.61",
            "p50": "242.05",
            "p95": "216.39",
            "p99": "175.98",
            "min": "163.08",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "182.98",
            "p50": "179.06",
            "p95": "159.24",
            "p99": "144.18",
            "min": "141.69",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "223.71",
            "p50": "218.59",
            "p95": "195.09",
            "p99": "172.12",
            "min": "159.54",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "211.20",
            "p50": "208.30",
            "p95": "179.56",
            "p99": "152.59",
            "min": "146.73",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "207.96",
            "p50": "204.71",
            "p95": "185.14",
            "p99": "167.21",
            "min": "166.80",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1230.86",
            "p50": "1111.16",
            "p95": "917.98",
            "p99": "607.15",
            "min": "574.77",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "183.42",
            "p50": "179.42",
            "p95": "162.38",
            "p99": "150.69",
            "min": "149.22",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "190.59",
            "p50": "188.73",
            "p95": "180.54",
            "p99": "165.53",
            "min": "164.22",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "191.36",
            "p50": "189.77",
            "p95": "183.19",
            "p99": "169.68",
            "min": "168.47",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "192.61",
            "p50": "190.89",
            "p95": "187.33",
            "p99": "179.78",
            "min": "179.51",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1196.71",
            "p50": "1168.30",
            "p95": "880.28",
            "p99": "752.00",
            "min": "730.99",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "728.28",
            "p50": "721.16",
            "p95": "568.66",
            "p99": "277.53",
            "min": "231.89",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "829.57",
            "p50": "815.31",
            "p95": "739.68",
            "p99": "541.80",
            "min": "492.76",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "739.48",
            "p50": "724.36",
            "p95": "657.52",
            "p99": "526.21",
            "min": "510.45",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "750.04",
            "p50": "738.59",
            "p95": "708.11",
            "p99": "670.39",
            "min": "661.77",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "891.35",
            "p50": "839.73",
            "p95": "673.80",
            "p99": "571.42",
            "min": "563.09",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "876.58",
            "p50": "864.60",
            "p95": "725.85",
            "p99": "581.21",
            "min": "561.68",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "838.16",
            "p50": "778.53",
            "p95": "668.60",
            "p99": "521.83",
            "min": "520.43",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "827.04",
            "p50": "777.91",
            "p95": "718.93",
            "p99": "511.82",
            "min": "491.15",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "890.14",
            "p50": "874.07",
            "p95": "746.45",
            "p99": "552.41",
            "min": "507.85",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "862.46",
            "p50": "839.47",
            "p95": "682.02",
            "p99": "514.90",
            "min": "513.27",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "109.77",
            "p50": "105.62",
            "p95": "103.43",
            "p99": "97.50",
            "min": "96.67",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "96.46",
            "p50": "95.50",
            "p95": "94.33",
            "p99": "92.57",
            "min": "90.48",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "603.55",
            "p50": "582.98",
            "p95": "441.69",
            "p99": "435.10",
            "min": "395.59",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "130.16",
            "p50": "103.85",
            "p95": "96.58",
            "p99": "110.27",
            "min": "95.26",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "89.74",
            "p50": "88.25",
            "p95": "86.11",
            "p99": "87.25",
            "min": "85.38",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1921.88",
            "p50": "1882.08",
            "p95": "1360.00",
            "p99": "885.69",
            "min": "883.29",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1641.61",
            "p50": "1606.06",
            "p95": "1231.29",
            "p99": "1030.56",
            "min": "986.48",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2485.26",
            "p50": "2402.14",
            "p95": "1633.86",
            "p99": "1118.23",
            "min": "1094.10",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2484.67",
            "p50": "2406.43",
            "p95": "1494.96",
            "p99": "1112.47",
            "min": "1012.60",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2462.12",
            "p50": "2373.52",
            "p95": "1512.40",
            "p99": "927.78",
            "min": "718.08",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1707.47",
            "p50": "1665.46",
            "p95": "1332.16",
            "p99": "1070.05",
            "min": "923.95",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "876.42",
            "p50": "855.28",
            "p95": "817.65",
            "p99": "564.53",
            "min": "546.41",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "869.61",
            "p50": "850.78",
            "p95": "692.90",
            "p99": "546.98",
            "min": "523.87",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "878.71",
            "p50": "855.93",
            "p95": "806.66",
            "p99": "575.39",
            "min": "529.86",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "888.37",
            "p50": "863.07",
            "p95": "694.98",
            "p99": "521.55",
            "min": "516.43",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.62",
            "p50": "85.96",
            "p95": "82.58",
            "p99": "80.53",
            "min": "80.39",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "806.50",
            "p50": "782.57",
            "p95": "713.22",
            "p99": "476.07",
            "min": "438.86",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "759.52",
            "p50": "738.06",
            "p95": "668.51",
            "p99": "511.93",
            "min": "480.26",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "764.39",
            "p50": "739.51",
            "p95": "659.87",
            "p99": "564.20",
            "min": "556.55",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "769.74",
            "p50": "745.78",
            "p95": "650.13",
            "p99": "492.76",
            "min": "486.56",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2041.30",
            "p50": "1973.37",
            "p95": "1129.09",
            "p99": "807.82",
            "min": "764.08",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2344.45",
            "p50": "2275.48",
            "p95": "1522.27",
            "p99": "1112.72",
            "min": "1079.63",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.44",
            "p50": "72.00",
            "p95": "71.05",
            "p99": "69.22",
            "min": "68.77",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "10111.23",
            "p50": "7965.09",
            "p95": "2538.76",
            "p99": "1942.64",
            "min": "1923.74",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.46",
            "p50": "72.07",
            "p95": "70.93",
            "p99": "70.04",
            "min": "69.99",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "223.68",
            "p50": "221.83",
            "p95": "210.72",
            "p99": "195.23",
            "min": "188.29",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "851.81",
            "p50": "778.96",
            "p95": "710.71",
            "p99": "506.37",
            "min": "489.72",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "671.35",
            "p50": "660.83",
            "p95": "553.63",
            "p99": "447.56",
            "min": "418.42",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2349.36",
            "p50": "2223.01",
            "p95": "1325.33",
            "p99": "847.40",
            "min": "788.88",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "27528.48",
            "p50": "9721.17",
            "p95": "2548.93",
            "p99": "2192.11",
            "min": "2130.96",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2193.45",
            "p50": "2106.93",
            "p95": "1316.50",
            "p99": "703.33",
            "min": "673.79",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "81068.27",
            "p50": "9536.61",
            "p95": "2605.41",
            "p99": "1978.92",
            "min": "1946.74",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "16316.01",
            "p50": "8731.72",
            "p95": "2594.55",
            "p99": "2319.73",
            "min": "2307.00",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "839.86",
            "p50": "724.89",
            "p95": "626.30",
            "p99": "565.33",
            "min": "558.13",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "992.39",
            "p50": "971.73",
            "p95": "797.20",
            "p99": "619.25",
            "min": "616.71",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "789.36",
            "p50": "776.29",
            "p95": "709.75",
            "p99": "495.21",
            "min": "461.16",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1204.32",
            "p50": "1177.14",
            "p95": "984.45",
            "p99": "790.38",
            "min": "758.93",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "748.50",
            "p50": "736.33",
            "p95": "633.59",
            "p99": "555.97",
            "min": "554.65",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1160.60",
            "p50": "1111.53",
            "p95": "914.34",
            "p99": "669.83",
            "min": "666.87",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "863.43",
            "p50": "840.09",
            "p95": "698.40",
            "p99": "563.11",
            "min": "559.49",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "934.29",
            "p50": "915.04",
            "p95": "783.23",
            "p99": "532.40",
            "min": "530.70",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2461.11",
            "p50": "2292.47",
            "p95": "1841.32",
            "p99": "1201.53",
            "min": "1197.86",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "851.38",
            "p50": "776.75",
            "p95": "671.09",
            "p99": "568.04",
            "min": "567.42",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "65.88",
            "p50": "64.23",
            "p95": "59.62",
            "p99": "57.69",
            "min": "57.66",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "58.32",
            "p50": "57.07",
            "p95": "54.20",
            "p99": "51.93",
            "min": "51.73",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "60.01",
            "p50": "58.50",
            "p95": "55.17",
            "p99": "53.37",
            "min": "53.36",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "213.95",
            "p50": "197.35",
            "p95": "166.53",
            "p99": "148.75",
            "min": "147.22",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "104.08",
            "p50": "100.23",
            "p95": "90.02",
            "p99": "85.72",
            "min": "85.41",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.71",
            "p50": "105.82",
            "p95": "94.13",
            "p99": "77.71",
            "min": "74.18",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "142.28",
            "p50": "134.67",
            "p95": "117.86",
            "p99": "101.69",
            "min": "101.32",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "142.71",
            "p50": "133.69",
            "p95": "116.05",
            "p99": "110.95",
            "min": "110.80",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "188.34",
            "p50": "175.02",
            "p95": "144.81",
            "p99": "121.07",
            "min": "117.30",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "184.51",
            "p50": "173.62",
            "p95": "145.56",
            "p99": "127.96",
            "min": "127.72",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "184.90",
            "p50": "173.82",
            "p95": "143.62",
            "p99": "103.18",
            "min": "97.50",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.42",
            "p50": "120.10",
            "p95": "104.30",
            "p99": "94.72",
            "min": "94.07",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "207.02",
            "p50": "190.67",
            "p95": "156.41",
            "p99": "143.13",
            "min": "142.79",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "189.79",
            "p50": "177.39",
            "p95": "142.66",
            "p99": "104.11",
            "min": "95.57",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "70.77",
            "p50": "67.64",
            "p95": "62.40",
            "p99": "60.03",
            "min": "60.01",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "133.14",
            "p50": "125.77",
            "p95": "108.13",
            "p99": "110.93",
            "min": "98.97",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "219.49",
            "p50": "195.05",
            "p95": "160.20",
            "p99": "167.09",
            "min": "154.80",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "168.24",
            "p50": "140.86",
            "p95": "134.43",
            "p99": "148.09",
            "min": "132.88",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "128.56",
            "p50": "121.44",
            "p95": "108.76",
            "p99": "114.57",
            "min": "104.02",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1050.09",
            "p50": "777.22",
            "p95": "417.57",
            "p99": "352.48",
            "min": "329.35",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1031.65",
            "p50": "738.80",
            "p95": "389.51",
            "p99": "308.32",
            "min": "292.18",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1179.58",
            "p50": "848.54",
            "p95": "407.34",
            "p99": "346.47",
            "min": "342.05",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1097.67",
            "p50": "780.57",
            "p95": "441.12",
            "p99": "325.14",
            "min": "309.50",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1053.11",
            "p50": "806.86",
            "p95": "413.05",
            "p99": "322.11",
            "min": "317.28",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1032.99",
            "p50": "780.94",
            "p95": "433.48",
            "p99": "329.17",
            "min": "290.77",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "346.41",
            "p50": "306.71",
            "p95": "237.28",
            "p99": "206.69",
            "min": "204.63",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "343.34",
            "p50": "300.13",
            "p95": "244.02",
            "p99": "199.55",
            "min": "192.05",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "349.15",
            "p50": "308.87",
            "p95": "237.14",
            "p99": "197.88",
            "min": "192.46",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "383.55",
            "p50": "329.88",
            "p95": "259.41",
            "p99": "210.05",
            "min": "205.68",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "288.82",
            "p50": "262.28",
            "p95": "196.16",
            "p99": "173.14",
            "min": "172.91",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "299.53",
            "p50": "269.15",
            "p95": "205.64",
            "p99": "183.73",
            "min": "180.64",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "301.14",
            "p50": "259.04",
            "p95": "197.79",
            "p99": "184.68",
            "min": "182.74",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "298.99",
            "p50": "265.51",
            "p95": "212.39",
            "p99": "176.19",
            "min": "174.50",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "302.70",
            "p50": "265.26",
            "p95": "205.12",
            "p99": "187.50",
            "min": "187.24",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.32",
            "p50": "101.41",
            "p95": "89.91",
            "p99": "82.52",
            "min": "82.22",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.68",
            "p50": "101.21",
            "p95": "90.18",
            "p99": "85.39",
            "min": "84.01",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.57",
            "p50": "94.10",
            "p95": "81.01",
            "p99": "77.09",
            "min": "76.56",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "250.16",
            "p50": "229.83",
            "p95": "182.12",
            "p99": "161.27",
            "min": "160.28",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.56",
            "p50": "94.66",
            "p95": "85.91",
            "p99": "81.98",
            "min": "81.50",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "241.98",
            "p50": "222.96",
            "p95": "180.97",
            "p99": "151.09",
            "min": "148.92",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "186.87",
            "p50": "174.11",
            "p95": "141.30",
            "p99": "127.41",
            "min": "126.99",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "155.67",
            "p50": "144.90",
            "p95": "125.13",
            "p99": "75.04",
            "min": "43.41",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "435.21",
            "p50": "382.34",
            "p95": "264.02",
            "p99": "214.58",
            "min": "214.46",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4798.40",
            "p50": "2182.50",
            "p95": "517.16",
            "p99": "452.08",
            "min": "447.88",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "441.74",
            "p50": "372.33",
            "p95": "277.32",
            "p99": "225.20",
            "min": "211.99",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "12596.86",
            "p50": "2798.82",
            "p95": "983.80",
            "p99": "743.92",
            "min": "640.22",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3273.98",
            "p50": "1813.04",
            "p95": "491.52",
            "p99": "424.96",
            "min": "423.05",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "210.45",
            "p50": "190.74",
            "p95": "160.85",
            "p99": "140.61",
            "min": "139.64",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "233.30",
            "p50": "216.51",
            "p95": "174.15",
            "p99": "149.96",
            "min": "149.48",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "127.02",
            "p50": "119.85",
            "p95": "107.23",
            "p99": "99.15",
            "min": "98.84",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "211.23",
            "p50": "194.87",
            "p95": "155.23",
            "p99": "135.27",
            "min": "129.22",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "142.37",
            "p50": "133.82",
            "p95": "111.38",
            "p99": "102.91",
            "min": "102.67",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "177.56",
            "p50": "165.53",
            "p95": "143.10",
            "p99": "125.06",
            "min": "123.29",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "187.22",
            "p50": "173.37",
            "p95": "150.62",
            "p99": "133.54",
            "min": "133.29",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "185.61",
            "p50": "173.40",
            "p95": "139.75",
            "p99": "126.62",
            "min": "125.77",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "298.31",
            "p50": "250.21",
            "p95": "162.40",
            "p99": "167.82",
            "min": "153.32",
            "n": "89",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "144.15",
            "p50": "135.63",
            "p95": "116.64",
            "p99": "120.83",
            "min": "108.81",
            "n": "65",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "87.77",
            "p50": "84.21",
            "p95": "76.85",
            "p99": "72.84",
            "min": "72.77",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "88.79",
            "p50": "85.26",
            "p95": "82.31",
            "p99": "76.73",
            "min": "75.84",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "88.73",
            "p50": "84.89",
            "p95": "80.67",
            "p99": "77.74",
            "min": "77.65",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "192.48",
            "p50": "182.63",
            "p95": "173.09",
            "p99": "131.16",
            "min": "113.50",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "95.33",
            "p50": "89.68",
            "p95": "86.42",
            "p99": "85.47",
            "min": "85.39",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "111.80",
            "p50": "109.64",
            "p95": "105.05",
            "p99": "102.83",
            "min": "102.64",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "122.15",
            "p50": "119.90",
            "p95": "106.35",
            "p99": "97.74",
            "min": "96.75",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "123.41",
            "p50": "120.46",
            "p95": "113.31",
            "p99": "111.39",
            "min": "111.24",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "98.86",
            "p50": "96.81",
            "p95": "76.33",
            "p99": "73.47",
            "min": "72.52",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "98.37",
            "p50": "95.59",
            "p95": "89.54",
            "p99": "86.43",
            "min": "85.98",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.49",
            "p50": "96.06",
            "p95": "89.63",
            "p99": "87.97",
            "min": "87.86",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "125.54",
            "p50": "122.23",
            "p95": "109.97",
            "p99": "108.11",
            "min": "107.74",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "122.34",
            "p50": "118.31",
            "p95": "107.31",
            "p99": "102.90",
            "min": "102.52",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "114.61",
            "p50": "112.65",
            "p95": "99.51",
            "p99": "98.84",
            "min": "98.83",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "85.35",
            "p50": "80.46",
            "p95": "76.36",
            "p99": "67.55",
            "min": "66.03",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "93.00",
            "p50": "91.88",
            "p95": "87.78",
            "p99": "87.51",
            "min": "84.56",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "60.86",
            "p50": "58.36",
            "p95": "56.07",
            "p99": "53.39",
            "min": "51.64",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "149.82",
            "p50": "118.98",
            "p95": "111.40",
            "p99": "127.49",
            "min": "110.64",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "103.73",
            "p50": "101.27",
            "p95": "97.01",
            "p99": "99.27",
            "min": "95.90",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "377.68",
            "p50": "367.32",
            "p95": "350.67",
            "p99": "339.68",
            "min": "335.74",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "510.28",
            "p50": "480.23",
            "p95": "439.85",
            "p99": "399.68",
            "min": "396.83",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "377.98",
            "p50": "366.82",
            "p95": "343.94",
            "p99": "319.69",
            "min": "317.16",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "381.04",
            "p50": "369.36",
            "p95": "346.79",
            "p99": "296.46",
            "min": "277.45",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "381.74",
            "p50": "372.05",
            "p95": "352.68",
            "p99": "320.55",
            "min": "307.64",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "468.67",
            "p50": "446.92",
            "p95": "428.35",
            "p99": "386.78",
            "min": "364.19",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "97.68",
            "p50": "95.48",
            "p95": "93.13",
            "p99": "91.71",
            "min": "91.68",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "99.18",
            "p50": "95.99",
            "p95": "94.46",
            "p99": "93.48",
            "min": "93.41",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "97.71",
            "p50": "94.84",
            "p95": "92.74",
            "p99": "90.25",
            "min": "90.16",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "89.15",
            "p50": "87.25",
            "p95": "85.48",
            "p99": "84.55",
            "min": "84.41",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.93",
            "p50": "85.98",
            "p95": "84.97",
            "p99": "84.40",
            "min": "84.39",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "91.61",
            "p50": "88.40",
            "p95": "86.47",
            "p99": "85.08",
            "min": "84.91",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "86.57",
            "p50": "84.24",
            "p95": "82.42",
            "p99": "79.68",
            "min": "79.38",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "86.75",
            "p50": "83.83",
            "p95": "82.59",
            "p99": "81.41",
            "min": "81.37",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "86.83",
            "p50": "83.97",
            "p95": "82.28",
            "p99": "81.19",
            "min": "81.06",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1415.15",
            "p50": "1284.15",
            "p95": "782.05",
            "p99": "344.90",
            "min": "296.94",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1412.10",
            "p50": "1256.08",
            "p95": "789.65",
            "p99": "516.66",
            "min": "475.21",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.47",
            "p50": "152.64",
            "p95": "138.53",
            "p99": "113.69",
            "min": "113.49",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3048.77",
            "p50": "2798.05",
            "p95": "1392.65",
            "p99": "851.61",
            "min": "676.23",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "155.32",
            "p50": "152.47",
            "p95": "136.13",
            "p99": "100.41",
            "min": "95.06",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3064.69",
            "p50": "2815.20",
            "p95": "1357.80",
            "p99": "993.08",
            "min": "988.23",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "99.29",
            "p50": "96.46",
            "p95": "89.86",
            "p99": "86.30",
            "min": "86.20",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "188.81",
            "p50": "183.81",
            "p95": "177.97",
            "p99": "173.54",
            "min": "173.54",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "391.67",
            "p50": "295.27",
            "p95": "229.76",
            "p99": "209.99",
            "min": "207.18",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "8950.50",
            "p50": "1824.60",
            "p95": "984.65",
            "p99": "738.78",
            "min": "673.07",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "374.21",
            "p50": "282.90",
            "p95": "228.17",
            "p99": "184.83",
            "min": "166.20",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "27894.10",
            "p50": "9399.71",
            "p95": "2372.23",
            "p99": "1904.89",
            "min": "1889.43",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "5264.97",
            "p50": "3382.13",
            "p95": "1966.51",
            "p99": "749.35",
            "min": "633.59",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "307.81",
            "p50": "246.24",
            "p95": "177.86",
            "p99": "145.33",
            "min": "135.04",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "151.20",
            "p50": "132.42",
            "p95": "116.72",
            "p99": "110.18",
            "min": "109.12",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "121.87",
            "p50": "118.96",
            "p95": "97.91",
            "p99": "91.30",
            "min": "90.97",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "129.54",
            "p50": "122.28",
            "p95": "119.17",
            "p99": "116.39",
            "min": "115.78",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "122.95",
            "p50": "118.84",
            "p95": "115.30",
            "p99": "110.63",
            "min": "110.29",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "158.84",
            "p50": "150.20",
            "p95": "147.85",
            "p99": "141.92",
            "min": "140.40",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "97.41",
            "p50": "93.33",
            "p95": "90.75",
            "p99": "88.52",
            "min": "88.04",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "116.26",
            "p50": "113.11",
            "p95": "109.85",
            "p99": "109.21",
            "min": "109.20",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "998.55",
            "p50": "919.54",
            "p95": "694.92",
            "p99": "645.15",
            "min": "644.29",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "123.26",
            "p50": "119.83",
            "p95": "103.99",
            "p99": "98.38",
            "min": "97.25",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}