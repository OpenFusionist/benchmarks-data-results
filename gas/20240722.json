{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "169.97",
            "p50": "168.14",
            "p95": "157.08",
            "p99": "149.38",
            "min": "148.16",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "170.61",
            "p50": "168.53",
            "p95": "167.13",
            "p99": "163.86",
            "min": "163.61",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "169.91",
            "p50": "167.89",
            "p95": "163.97",
            "p99": "162.83",
            "min": "162.81",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "760.13",
            "p50": "745.83",
            "p95": "474.47",
            "p99": "432.39",
            "min": "430.54",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "401.26",
            "p50": "394.56",
            "p95": "386.58",
            "p99": "381.32",
            "min": "381.27",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "438.14",
            "p50": "428.72",
            "p95": "419.76",
            "p99": "400.02",
            "min": "398.84",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "323.86",
            "p50": "317.88",
            "p95": "306.10",
            "p99": "281.13",
            "min": "277.28",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "187.15",
            "p50": "185.66",
            "p95": "182.18",
            "p99": "175.53",
            "min": "175.29",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "267.31",
            "p50": "259.01",
            "p95": "240.18",
            "p99": "227.26",
            "min": "225.96",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "263.70",
            "p50": "254.16",
            "p95": "250.32",
            "p99": "244.20",
            "min": "243.66",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "258.89",
            "p50": "256.18",
            "p95": "251.81",
            "p99": "241.99",
            "min": "241.96",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "190.33",
            "p50": "187.97",
            "p95": "185.83",
            "p99": "181.81",
            "min": "181.39",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "317.95",
            "p50": "315.16",
            "p95": "302.34",
            "p99": "213.45",
            "min": "178.41",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "310.28",
            "p50": "304.47",
            "p95": "293.82",
            "p99": "291.03",
            "min": "290.83",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "111.00",
            "p50": "107.01",
            "p95": "104.71",
            "p99": "103.67",
            "min": "103.35",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "170.43",
            "p50": "167.95",
            "p95": "164.68",
            "p99": "163.35",
            "min": "159.54",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "295.23",
            "p50": "243.19",
            "p95": "230.44",
            "p99": "229.50",
            "min": "214.09",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "242.25",
            "p50": "193.87",
            "p95": "181.99",
            "p99": "207.44",
            "min": "181.18",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "167.30",
            "p50": "164.44",
            "p95": "162.81",
            "p99": "164.62",
            "min": "162.59",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "885.73",
            "p50": "825.15",
            "p95": "778.62",
            "p99": "743.86",
            "min": "731.33",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "844.01",
            "p50": "817.26",
            "p95": "788.49",
            "p99": "761.04",
            "min": "747.66",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1052.22",
            "p50": "943.83",
            "p95": "880.53",
            "p99": "846.09",
            "min": "827.73",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1084.47",
            "p50": "969.22",
            "p95": "910.79",
            "p99": "876.00",
            "min": "865.45",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1085.95",
            "p50": "972.11",
            "p95": "917.13",
            "p99": "870.89",
            "min": "870.21",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "853.73",
            "p50": "815.85",
            "p95": "780.96",
            "p99": "755.77",
            "min": "743.22",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "196.92",
            "p50": "184.69",
            "p95": "174.25",
            "p99": "172.78",
            "min": "172.74",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "196.09",
            "p50": "184.77",
            "p95": "173.77",
            "p99": "171.26",
            "min": "171.08",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "196.43",
            "p50": "185.63",
            "p95": "175.25",
            "p99": "171.41",
            "min": "170.61",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "224.85",
            "p50": "210.01",
            "p95": "200.01",
            "p99": "197.92",
            "min": "197.85",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.89",
            "p50": "87.32",
            "p95": "86.56",
            "p99": "86.08",
            "min": "85.97",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "341.66",
            "p50": "304.01",
            "p95": "278.60",
            "p99": "147.13",
            "min": "114.14",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "335.05",
            "p50": "296.74",
            "p95": "276.88",
            "p99": "264.47",
            "min": "263.51",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "335.34",
            "p50": "299.84",
            "p95": "274.11",
            "p99": "189.24",
            "min": "167.45",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "332.95",
            "p50": "298.84",
            "p95": "267.05",
            "p99": "79.15",
            "min": "65.81",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2407.02",
            "p50": "2265.95",
            "p95": "1951.96",
            "p99": "1599.44",
            "min": "1495.71",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2305.82",
            "p50": "2189.68",
            "p95": "1994.46",
            "p99": "1063.90",
            "min": "127.53",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "93.72",
            "p50": "93.14",
            "p95": "92.50",
            "p99": "90.86",
            "min": "90.32",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "5635.38",
            "p50": "5058.16",
            "p95": "2256.43",
            "p99": "1799.16",
            "min": "1725.95",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "93.80",
            "p50": "93.21",
            "p95": "92.49",
            "p99": "90.93",
            "min": "90.74",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3200.61",
            "p50": "2978.51",
            "p95": "2310.64",
            "p99": "838.07",
            "min": "85.53",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "261.52",
            "p50": "252.12",
            "p95": "248.85",
            "p99": "238.21",
            "min": "236.33",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "538.91",
            "p50": "531.04",
            "p95": "518.70",
            "p99": "499.65",
            "min": "488.35",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1265.73",
            "p50": "1198.85",
            "p95": "417.29",
            "p99": "375.22",
            "min": "373.14",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "17461.01",
            "p50": "8141.95",
            "p95": "2130.42",
            "p99": "1028.75",
            "min": "132.91",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1151.67",
            "p50": "1107.07",
            "p95": "344.89",
            "p99": "339.83",
            "min": "339.37",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "50832.50",
            "p50": "9149.06",
            "p95": "2669.75",
            "p99": "1712.75",
            "min": "1691.63",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "16163.64",
            "p50": "7516.69",
            "p95": "2598.50",
            "p99": "926.47",
            "min": "296.57",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "536.45",
            "p50": "495.38",
            "p95": "435.40",
            "p99": "352.68",
            "min": "339.63",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "516.59",
            "p50": "507.45",
            "p95": "494.41",
            "p99": "488.02",
            "min": "487.70",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "203.86",
            "p50": "201.75",
            "p95": "197.34",
            "p99": "192.97",
            "min": "192.28",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "435.90",
            "p50": "424.42",
            "p95": "413.57",
            "p99": "403.20",
            "min": "402.27",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "204.39",
            "p50": "200.99",
            "p95": "196.88",
            "p99": "191.25",
            "min": "190.53",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "329.53",
            "p50": "322.68",
            "p95": "313.73",
            "p99": "306.51",
            "min": "305.52",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "270.53",
            "p50": "265.96",
            "p95": "250.99",
            "p99": "244.13",
            "min": "242.64",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "514.30",
            "p50": "506.56",
            "p95": "488.53",
            "p99": "474.47",
            "min": "472.97",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1479.21",
            "p50": "1169.07",
            "p95": "838.25",
            "p99": "764.60",
            "min": "759.47",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "316.03",
            "p50": "309.68",
            "p95": "301.94",
            "p99": "290.98",
            "min": "288.76",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.21",
            "p50": "84.54",
            "p95": "78.02",
            "p99": "71.60",
            "min": "70.88",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "80.74",
            "p50": "77.50",
            "p95": "71.26",
            "p99": "67.30",
            "min": "66.98",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "82.44",
            "p50": "79.33",
            "p95": "72.84",
            "p99": "70.07",
            "min": "69.83",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "225.88",
            "p50": "209.12",
            "p95": "175.34",
            "p99": "160.00",
            "min": "158.78",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "171.82",
            "p50": "161.51",
            "p95": "133.92",
            "p99": "131.45",
            "min": "131.31",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "179.20",
            "p50": "166.90",
            "p95": "143.04",
            "p99": "113.25",
            "min": "103.86",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "172.99",
            "p50": "158.80",
            "p95": "129.37",
            "p99": "111.79",
            "min": "108.59",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "172.19",
            "p50": "158.75",
            "p95": "134.09",
            "p99": "95.56",
            "min": "86.12",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "193.72",
            "p50": "179.45",
            "p95": "147.98",
            "p99": "140.54",
            "min": "140.52",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "176.68",
            "p50": "162.76",
            "p95": "139.16",
            "p99": "134.07",
            "min": "133.87",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "196.87",
            "p50": "179.05",
            "p95": "152.32",
            "p99": "135.78",
            "min": "134.58",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "146.10",
            "p50": "136.75",
            "p95": "122.74",
            "p99": "111.02",
            "min": "109.74",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "215.21",
            "p50": "199.36",
            "p95": "169.56",
            "p99": "157.03",
            "min": "156.78",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "175.25",
            "p50": "162.05",
            "p95": "136.43",
            "p99": "91.55",
            "min": "80.95",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.53",
            "p50": "64.92",
            "p95": "60.53",
            "p99": "58.25",
            "min": "57.79",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "136.52",
            "p50": "128.67",
            "p95": "113.45",
            "p99": "117.05",
            "min": "106.56",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "417.78",
            "p50": "319.07",
            "p95": "229.97",
            "p99": "229.33",
            "min": "185.12",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "172.61",
            "p50": "141.22",
            "p95": "133.98",
            "p99": "148.78",
            "min": "130.80",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "131.18",
            "p50": "122.68",
            "p95": "109.96",
            "p99": "118.37",
            "min": "108.71",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1182.68",
            "p50": "881.58",
            "p95": "444.75",
            "p99": "414.44",
            "min": "409.92",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1032.29",
            "p50": "791.72",
            "p95": "512.65",
            "p99": "420.80",
            "min": "406.78",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1369.16",
            "p50": "1066.98",
            "p95": "546.02",
            "p99": "441.92",
            "min": "430.80",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1298.31",
            "p50": "989.63",
            "p95": "563.43",
            "p99": "385.88",
            "min": "342.82",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1277.08",
            "p50": "912.33",
            "p95": "547.75",
            "p99": "442.49",
            "min": "420.13",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1070.17",
            "p50": "824.30",
            "p95": "497.03",
            "p99": "399.88",
            "min": "399.81",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "677.69",
            "p50": "538.41",
            "p95": "368.39",
            "p99": "344.15",
            "min": "342.99",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "697.70",
            "p50": "545.60",
            "p95": "376.16",
            "p99": "317.31",
            "min": "309.10",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "708.67",
            "p50": "550.46",
            "p95": "364.63",
            "p99": "330.46",
            "min": "326.91",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "703.18",
            "p50": "572.45",
            "p95": "363.77",
            "p99": "342.90",
            "min": "342.54",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "294.21",
            "p50": "265.15",
            "p95": "216.42",
            "p99": "196.37",
            "min": "191.56",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "574.43",
            "p50": "458.37",
            "p95": "338.41",
            "p99": "264.98",
            "min": "259.80",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "576.13",
            "p50": "459.23",
            "p95": "335.10",
            "p99": "298.59",
            "min": "296.72",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "591.76",
            "p50": "484.55",
            "p95": "324.50",
            "p99": "250.26",
            "min": "232.79",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "608.75",
            "p50": "488.59",
            "p95": "329.15",
            "p99": "304.82",
            "min": "301.72",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.66",
            "p50": "102.12",
            "p95": "92.09",
            "p99": "84.55",
            "min": "82.89",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.21",
            "p50": "102.00",
            "p95": "90.00",
            "p99": "82.63",
            "min": "81.28",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.64",
            "p50": "94.83",
            "p95": "85.82",
            "p99": "82.82",
            "min": "82.15",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "255.28",
            "p50": "232.13",
            "p95": "187.96",
            "p99": "166.69",
            "min": "166.33",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.19",
            "p50": "94.74",
            "p95": "85.83",
            "p99": "80.00",
            "min": "78.47",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "247.55",
            "p50": "227.14",
            "p95": "186.55",
            "p99": "172.39",
            "min": "171.85",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "197.72",
            "p50": "179.54",
            "p95": "146.25",
            "p99": "140.76",
            "min": "140.47",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "199.13",
            "p50": "185.23",
            "p95": "157.03",
            "p99": "147.43",
            "min": "147.14",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "462.30",
            "p50": "406.09",
            "p95": "305.51",
            "p99": "277.50",
            "min": "275.26",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5614.57",
            "p50": "2096.25",
            "p95": "942.91",
            "p99": "704.68",
            "min": "647.13",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "446.81",
            "p50": "389.19",
            "p95": "282.76",
            "p99": "269.82",
            "min": "268.65",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "16260.30",
            "p50": "3920.90",
            "p95": "1347.75",
            "p99": "871.38",
            "min": "861.97",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3072.46",
            "p50": "1822.92",
            "p95": "717.48",
            "p99": "583.86",
            "min": "583.74",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "231.82",
            "p50": "208.48",
            "p95": "182.13",
            "p99": "166.57",
            "min": "165.10",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "246.72",
            "p50": "223.98",
            "p95": "189.28",
            "p99": "182.72",
            "min": "182.09",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "92.06",
            "p50": "87.95",
            "p95": "79.45",
            "p99": "71.95",
            "min": "70.17",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "223.60",
            "p50": "206.81",
            "p95": "168.09",
            "p99": "143.14",
            "min": "139.36",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "172.89",
            "p50": "161.23",
            "p95": "132.97",
            "p99": "95.09",
            "min": "86.10",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "200.76",
            "p50": "185.69",
            "p95": "158.11",
            "p99": "84.22",
            "min": "82.26",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "195.48",
            "p50": "179.86",
            "p95": "151.65",
            "p99": "143.95",
            "min": "143.39",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "196.92",
            "p50": "183.50",
            "p95": "148.97",
            "p99": "144.36",
            "min": "143.11",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1116.97",
            "p50": "890.47",
            "p95": "573.15",
            "p99": "456.64",
            "min": "454.32",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "177.35",
            "p50": "165.40",
            "p95": "121.15",
            "p99": "109.73",
            "min": "106.75",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.73",
            "p50": "188.52",
            "p95": "172.60",
            "p99": "161.58",
            "min": "161.43",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.53",
            "p50": "188.34",
            "p95": "170.27",
            "p99": "160.27",
            "min": "159.69",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.19",
            "p50": "189.72",
            "p95": "172.75",
            "p99": "161.29",
            "min": "161.13",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1186.52",
            "p50": "1080.00",
            "p95": "702.96",
            "p99": "541.25",
            "min": "528.04",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "703.80",
            "p50": "630.27",
            "p95": "468.24",
            "p99": "417.69",
            "min": "409.62",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "810.56",
            "p50": "743.42",
            "p95": "551.68",
            "p99": "465.44",
            "min": "451.71",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "752.91",
            "p50": "675.16",
            "p95": "474.81",
            "p99": "413.48",
            "min": "412.47",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "264.62",
            "p50": "254.55",
            "p95": "227.22",
            "p99": "219.33",
            "min": "219.16",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "904.98",
            "p50": "786.17",
            "p95": "588.13",
            "p99": "459.61",
            "min": "458.51",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "874.59",
            "p50": "772.80",
            "p95": "566.62",
            "p99": "447.38",
            "min": "443.55",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "871.65",
            "p50": "766.35",
            "p95": "520.13",
            "p99": "468.31",
            "min": "466.38",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "286.97",
            "p50": "274.04",
            "p95": "234.35",
            "p99": "221.56",
            "min": "221.46",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "652.35",
            "p50": "593.35",
            "p95": "457.74",
            "p99": "397.11",
            "min": "393.51",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "835.90",
            "p50": "740.38",
            "p95": "525.68",
            "p99": "444.41",
            "min": "442.88",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "111.91",
            "p50": "106.31",
            "p95": "101.03",
            "p99": "96.08",
            "min": "96.01",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "96.38",
            "p50": "94.16",
            "p95": "90.14",
            "p99": "90.66",
            "min": "87.58",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "414.53",
            "p50": "379.06",
            "p95": "310.65",
            "p99": "314.96",
            "min": "291.60",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "131.54",
            "p50": "103.20",
            "p95": "96.14",
            "p99": "111.03",
            "min": "95.55",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "91.15",
            "p50": "88.04",
            "p95": "85.24",
            "p99": "86.90",
            "min": "83.70",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1697.34",
            "p50": "1498.66",
            "p95": "823.17",
            "p99": "642.37",
            "min": "567.44",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1634.75",
            "p50": "1388.70",
            "p95": "830.09",
            "p99": "619.79",
            "min": "617.96",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2043.15",
            "p50": "1706.34",
            "p95": "793.65",
            "p99": "639.39",
            "min": "633.46",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2007.72",
            "p50": "1587.77",
            "p95": "819.51",
            "p99": "707.07",
            "min": "653.75",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2000.58",
            "p50": "1624.41",
            "p95": "900.45",
            "p99": "688.15",
            "min": "631.96",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1649.39",
            "p50": "1365.67",
            "p95": "721.81",
            "p99": "596.10",
            "min": "595.27",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "633.23",
            "p50": "559.47",
            "p95": "428.34",
            "p99": "374.44",
            "min": "370.91",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "626.16",
            "p50": "551.37",
            "p95": "444.75",
            "p99": "414.27",
            "min": "413.01",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "633.83",
            "p50": "571.12",
            "p95": "437.96",
            "p99": "406.23",
            "min": "402.18",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "654.97",
            "p50": "587.47",
            "p95": "446.37",
            "p99": "387.09",
            "min": "384.94",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.06",
            "p50": "85.90",
            "p95": "81.48",
            "p99": "79.75",
            "min": "79.55",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "572.17",
            "p50": "520.87",
            "p95": "426.81",
            "p99": "364.73",
            "min": "360.96",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "537.96",
            "p50": "484.62",
            "p95": "390.40",
            "p99": "342.20",
            "min": "340.59",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "541.04",
            "p50": "485.98",
            "p95": "386.30",
            "p99": "353.24",
            "min": "352.46",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "545.43",
            "p50": "493.77",
            "p95": "407.54",
            "p99": "349.94",
            "min": "349.48",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1355.99",
            "p50": "1156.77",
            "p95": "719.83",
            "p99": "548.69",
            "min": "539.72",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1660.76",
            "p50": "1415.87",
            "p95": "798.98",
            "p99": "630.47",
            "min": "607.20",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.13",
            "p50": "71.24",
            "p95": "68.80",
            "p99": "67.12",
            "min": "67.06",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "8845.97",
            "p50": "3785.16",
            "p95": "2283.61",
            "p99": "1885.37",
            "min": "1772.78",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.17",
            "p50": "71.20",
            "p95": "68.53",
            "p99": "66.80",
            "min": "66.74",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "220.72",
            "p50": "216.58",
            "p95": "194.61",
            "p99": "177.21",
            "min": "175.88",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "870.10",
            "p50": "764.30",
            "p95": "568.42",
            "p99": "478.31",
            "min": "462.49",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "667.84",
            "p50": "602.39",
            "p95": "442.90",
            "p99": "387.71",
            "min": "386.96",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1127.43",
            "p50": "1028.56",
            "p95": "666.82",
            "p99": "593.88",
            "min": "591.98",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "27439.24",
            "p50": "8618.84",
            "p95": "2717.07",
            "p99": "2300.02",
            "min": "2206.64",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1138.46",
            "p50": "985.04",
            "p95": "682.62",
            "p99": "535.13",
            "min": "512.86",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "53349.30",
            "p50": "9670.87",
            "p95": "2695.62",
            "p99": "2088.79",
            "min": "1788.62",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15266.53",
            "p50": "5880.49",
            "p95": "1166.09",
            "p99": "789.92",
            "min": "780.61",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "566.77",
            "p50": "501.54",
            "p95": "415.13",
            "p99": "366.78",
            "min": "365.43",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "988.12",
            "p50": "876.27",
            "p95": "625.78",
            "p99": "492.54",
            "min": "489.22",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "286.94",
            "p50": "277.06",
            "p95": "244.17",
            "p99": "237.77",
            "min": "237.18",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1213.98",
            "p50": "1081.33",
            "p95": "728.48",
            "p99": "573.48",
            "min": "533.13",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "264.73",
            "p50": "255.91",
            "p95": "228.68",
            "p99": "211.27",
            "min": "209.57",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "538.65",
            "p50": "515.89",
            "p95": "412.51",
            "p99": "356.16",
            "min": "340.93",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "838.06",
            "p50": "772.62",
            "p95": "557.48",
            "p99": "463.68",
            "min": "454.65",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "918.05",
            "p50": "819.03",
            "p95": "572.01",
            "p99": "477.85",
            "min": "472.88",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2297.75",
            "p50": "1917.66",
            "p95": "1008.97",
            "p99": "936.40",
            "min": "933.96",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "895.44",
            "p50": "792.80",
            "p95": "582.51",
            "p99": "480.35",
            "min": "474.80",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "81.71",
            "p50": "78.75",
            "p95": "70.57",
            "p99": "66.76",
            "min": "66.65",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "75.10",
            "p50": "72.50",
            "p95": "65.93",
            "p99": "61.84",
            "min": "61.47",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "76.69",
            "p50": "73.48",
            "p95": "66.28",
            "p99": "60.52",
            "min": "59.87",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "209.65",
            "p50": "189.07",
            "p95": "154.15",
            "p99": "141.59",
            "min": "137.50",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.54",
            "p50": "97.09",
            "p95": "83.28",
            "p99": "64.08",
            "min": "62.39",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.18",
            "p50": "103.63",
            "p95": "88.16",
            "p99": "73.37",
            "min": "70.52",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "139.42",
            "p50": "131.37",
            "p95": "115.58",
            "p99": "97.41",
            "min": "96.88",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "140.26",
            "p50": "131.98",
            "p95": "113.46",
            "p99": "90.74",
            "min": "87.65",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "185.93",
            "p50": "170.14",
            "p95": "134.34",
            "p99": "118.72",
            "min": "118.44",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "181.66",
            "p50": "169.50",
            "p95": "133.51",
            "p99": "113.07",
            "min": "111.89",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "182.00",
            "p50": "167.81",
            "p95": "134.10",
            "p99": "117.42",
            "min": "117.07",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.66",
            "p50": "119.69",
            "p95": "105.73",
            "p99": "91.08",
            "min": "87.74",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "202.88",
            "p50": "186.04",
            "p95": "149.21",
            "p99": "126.58",
            "min": "126.37",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "186.43",
            "p50": "174.13",
            "p95": "131.20",
            "p99": "112.11",
            "min": "110.43",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "70.90",
            "p50": "66.96",
            "p95": "62.24",
            "p99": "59.83",
            "min": "59.59",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "130.55",
            "p50": "121.22",
            "p95": "99.25",
            "p99": "106.22",
            "min": "93.13",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "210.01",
            "p50": "186.90",
            "p95": "159.62",
            "p99": "147.71",
            "min": "133.10",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "152.11",
            "p50": "137.11",
            "p95": "127.02",
            "p99": "134.68",
            "min": "121.54",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "124.66",
            "p50": "115.81",
            "p95": "104.17",
            "p99": "109.75",
            "min": "98.51",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1024.68",
            "p50": "708.77",
            "p95": "388.09",
            "p99": "249.77",
            "min": "240.63",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1010.37",
            "p50": "694.02",
            "p95": "398.08",
            "p99": "264.58",
            "min": "245.66",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1128.04",
            "p50": "762.98",
            "p95": "381.03",
            "p99": "283.94",
            "min": "274.02",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1077.93",
            "p50": "722.19",
            "p95": "308.36",
            "p99": "261.90",
            "min": "251.47",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1011.34",
            "p50": "718.41",
            "p95": "344.97",
            "p99": "257.47",
            "min": "233.99",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1012.07",
            "p50": "692.91",
            "p95": "376.55",
            "p99": "316.25",
            "min": "303.60",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "342.87",
            "p50": "292.11",
            "p95": "225.37",
            "p99": "144.18",
            "min": "137.10",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "331.89",
            "p50": "289.31",
            "p95": "222.48",
            "p99": "182.27",
            "min": "180.89",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "332.80",
            "p50": "293.76",
            "p95": "215.98",
            "p99": "170.70",
            "min": "163.64",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "364.59",
            "p50": "319.03",
            "p95": "224.97",
            "p99": "201.07",
            "min": "200.31",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "282.71",
            "p50": "247.30",
            "p95": "195.69",
            "p99": "156.55",
            "min": "155.75",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "286.48",
            "p50": "256.41",
            "p95": "198.77",
            "p99": "171.92",
            "min": "171.32",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "283.46",
            "p50": "250.90",
            "p95": "192.90",
            "p99": "152.68",
            "min": "151.10",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "292.37",
            "p50": "253.45",
            "p95": "198.65",
            "p99": "150.24",
            "min": "148.47",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "292.20",
            "p50": "253.92",
            "p95": "203.67",
            "p99": "145.87",
            "min": "142.57",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.55",
            "p50": "99.98",
            "p95": "87.42",
            "p99": "79.77",
            "min": "79.06",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.42",
            "p50": "100.03",
            "p95": "87.72",
            "p99": "78.44",
            "min": "77.71",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.85",
            "p50": "92.73",
            "p95": "82.07",
            "p99": "75.19",
            "min": "74.81",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "249.96",
            "p50": "222.43",
            "p95": "169.40",
            "p99": "149.31",
            "min": "148.78",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.01",
            "p50": "92.65",
            "p95": "82.80",
            "p99": "74.28",
            "min": "74.07",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "242.57",
            "p50": "217.82",
            "p95": "163.72",
            "p99": "140.92",
            "min": "138.75",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "183.80",
            "p50": "171.00",
            "p95": "135.55",
            "p99": "122.86",
            "min": "122.32",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "153.47",
            "p50": "142.00",
            "p95": "119.07",
            "p99": "100.78",
            "min": "96.49",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "438.45",
            "p50": "360.71",
            "p95": "241.73",
            "p99": "206.12",
            "min": "192.68",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4335.12",
            "p50": "1388.70",
            "p95": "410.98",
            "p99": "345.84",
            "min": "340.87",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "438.96",
            "p50": "361.41",
            "p95": "260.01",
            "p99": "176.60",
            "min": "173.25",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "10275.02",
            "p50": "1893.73",
            "p95": "614.48",
            "p99": "489.24",
            "min": "463.86",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2547.23",
            "p50": "1191.09",
            "p95": "399.17",
            "p99": "313.57",
            "min": "283.51",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "205.93",
            "p50": "186.20",
            "p95": "151.32",
            "p99": "131.78",
            "min": "130.37",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "231.51",
            "p50": "208.73",
            "p95": "158.90",
            "p99": "132.17",
            "min": "129.26",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "127.84",
            "p50": "120.32",
            "p95": "105.01",
            "p99": "91.60",
            "min": "90.88",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "208.59",
            "p50": "188.93",
            "p95": "149.08",
            "p99": "112.15",
            "min": "105.69",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "140.15",
            "p50": "131.58",
            "p95": "110.96",
            "p99": "98.27",
            "min": "97.66",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "174.60",
            "p50": "161.49",
            "p95": "127.78",
            "p99": "110.87",
            "min": "110.82",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "182.92",
            "p50": "167.50",
            "p95": "132.16",
            "p99": "109.30",
            "min": "109.23",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "185.72",
            "p50": "169.73",
            "p95": "137.96",
            "p99": "118.07",
            "min": "116.08",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "286.13",
            "p50": "213.41",
            "p95": "133.31",
            "p99": "131.17",
            "min": "123.01",
            "n": "94",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "142.89",
            "p50": "133.10",
            "p95": "110.36",
            "p99": "109.63",
            "min": "98.55",
            "n": "74",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.54",
            "p50": "85.42",
            "p95": "79.36",
            "p99": "76.34",
            "min": "76.15",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "89.79",
            "p50": "86.89",
            "p95": "81.47",
            "p99": "78.19",
            "min": "77.94",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "89.40",
            "p50": "86.25",
            "p95": "82.77",
            "p99": "81.49",
            "min": "81.44",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "189.99",
            "p50": "182.08",
            "p95": "175.17",
            "p99": "142.49",
            "min": "132.13",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "98.46",
            "p50": "90.89",
            "p95": "87.93",
            "p99": "84.76",
            "min": "84.50",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "115.42",
            "p50": "111.76",
            "p95": "106.69",
            "p99": "103.52",
            "min": "103.29",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "123.61",
            "p50": "120.40",
            "p95": "106.79",
            "p99": "102.01",
            "min": "101.66",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "126.85",
            "p50": "123.46",
            "p95": "120.58",
            "p99": "112.19",
            "min": "111.49",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "97.20",
            "p50": "94.93",
            "p95": "92.72",
            "p99": "90.32",
            "min": "90.12",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.54",
            "p50": "96.03",
            "p95": "94.05",
            "p99": "91.68",
            "min": "91.50",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.11",
            "p50": "96.18",
            "p95": "94.12",
            "p99": "91.90",
            "min": "91.69",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.29",
            "p50": "121.94",
            "p95": "119.72",
            "p99": "115.74",
            "min": "115.54",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "121.11",
            "p50": "118.48",
            "p95": "115.33",
            "p99": "112.76",
            "min": "112.69",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "115.93",
            "p50": "113.25",
            "p95": "110.31",
            "p99": "108.47",
            "min": "108.31",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "76.06",
            "p50": "73.35",
            "p95": "70.05",
            "p99": "66.78",
            "min": "66.68",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "99.39",
            "p50": "98.15",
            "p95": "96.49",
            "p99": "94.09",
            "min": "91.24",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "62.08",
            "p50": "59.43",
            "p95": "56.84",
            "p99": "56.66",
            "min": "55.39",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "159.23",
            "p50": "127.74",
            "p95": "119.74",
            "p99": "135.97",
            "min": "118.43",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "109.97",
            "p50": "108.22",
            "p95": "106.56",
            "p99": "105.72",
            "min": "102.52",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "376.51",
            "p50": "367.77",
            "p95": "347.62",
            "p99": "325.08",
            "min": "316.01",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "511.00",
            "p50": "484.46",
            "p95": "469.13",
            "p99": "418.30",
            "min": "412.48",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "376.77",
            "p50": "363.48",
            "p95": "341.50",
            "p99": "313.49",
            "min": "299.17",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "378.34",
            "p50": "366.21",
            "p95": "349.30",
            "p99": "330.89",
            "min": "316.06",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "382.26",
            "p50": "368.55",
            "p95": "343.16",
            "p99": "294.41",
            "min": "277.69",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "468.64",
            "p50": "449.47",
            "p95": "426.55",
            "p99": "359.31",
            "min": "341.12",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "96.89",
            "p50": "94.13",
            "p95": "90.84",
            "p99": "89.01",
            "min": "88.73",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "97.57",
            "p50": "94.84",
            "p95": "90.97",
            "p99": "88.89",
            "min": "88.42",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "96.18",
            "p50": "93.45",
            "p95": "90.30",
            "p99": "89.66",
            "min": "89.65",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "88.70",
            "p50": "86.42",
            "p95": "83.67",
            "p99": "82.38",
            "min": "82.18",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.86",
            "p50": "86.44",
            "p95": "83.86",
            "p99": "81.61",
            "min": "80.70",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "89.80",
            "p50": "87.26",
            "p95": "83.46",
            "p99": "81.67",
            "min": "81.45",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "85.68",
            "p50": "82.82",
            "p95": "79.05",
            "p99": "77.47",
            "min": "77.46",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "85.31",
            "p50": "82.76",
            "p95": "78.95",
            "p99": "78.02",
            "min": "77.93",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "85.31",
            "p50": "82.78",
            "p95": "79.21",
            "p99": "76.78",
            "min": "76.52",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1365.98",
            "p50": "1216.29",
            "p95": "768.48",
            "p99": "565.48",
            "min": "560.66",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1315.42",
            "p50": "1207.07",
            "p95": "778.28",
            "p99": "566.82",
            "min": "459.73",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "90.19",
            "p50": "89.21",
            "p95": "83.90",
            "p99": "70.30",
            "min": "68.02",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "2045.76",
            "p50": "1815.36",
            "p95": "1070.65",
            "p99": "641.49",
            "min": "385.76",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "90.36",
            "p50": "89.31",
            "p95": "85.97",
            "p99": "82.08",
            "min": "81.84",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "1655.14",
            "p50": "1498.26",
            "p95": "748.93",
            "p99": "429.12",
            "min": "285.32",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "97.52",
            "p50": "96.14",
            "p95": "94.26",
            "p99": "90.93",
            "min": "90.57",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "185.47",
            "p50": "176.19",
            "p95": "167.00",
            "p99": "93.92",
            "min": "44.08",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "416.89",
            "p50": "366.10",
            "p95": "274.57",
            "p99": "240.99",
            "min": "227.32",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7267.37",
            "p50": "2299.62",
            "p95": "1073.01",
            "p99": "649.12",
            "min": "476.64",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "445.90",
            "p50": "401.34",
            "p95": "290.42",
            "p99": "271.21",
            "min": "269.36",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "31321.18",
            "p50": "9131.93",
            "p95": "2372.68",
            "p99": "1904.95",
            "min": "1850.33",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4617.90",
            "p50": "3006.01",
            "p95": "1130.55",
            "p99": "650.49",
            "min": "630.64",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "377.27",
            "p50": "321.35",
            "p95": "246.16",
            "p99": "232.53",
            "min": "227.08",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "154.35",
            "p50": "143.64",
            "p95": "125.34",
            "p99": "101.75",
            "min": "94.93",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "123.13",
            "p50": "112.55",
            "p95": "106.49",
            "p99": "101.90",
            "min": "101.50",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "137.79",
            "p50": "134.77",
            "p95": "118.55",
            "p99": "117.55",
            "min": "117.50",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "126.02",
            "p50": "121.08",
            "p95": "116.60",
            "p99": "115.19",
            "min": "115.13",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "173.74",
            "p50": "170.52",
            "p95": "142.29",
            "p99": "128.12",
            "min": "121.18",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "94.56",
            "p50": "92.45",
            "p95": "90.69",
            "p99": "89.56",
            "min": "89.55",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "116.41",
            "p50": "112.29",
            "p95": "106.88",
            "p99": "104.69",
            "min": "104.05",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "916.02",
            "p50": "839.91",
            "p95": "319.90",
            "p99": "307.45",
            "min": "306.29",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "124.63",
            "p50": "120.82",
            "p95": "115.83",
            "p99": "106.88",
            "min": "106.59",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}