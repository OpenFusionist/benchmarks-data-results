{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "112.11",
            "p50": "109.48",
            "p95": "102.81",
            "p99": "100.07",
            "min": "99.97",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "992.11",
            "p50": "968.77",
            "p95": "931.99",
            "p99": "880.74",
            "min": "872.54",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "112.80",
            "p50": "109.86",
            "p95": "105.80",
            "p99": "96.33",
            "min": "93.99",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "726.76",
            "p50": "713.53",
            "p95": "492.49",
            "p99": "469.22",
            "min": "460.25",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "367.37",
            "p50": "362.22",
            "p95": "356.25",
            "p99": "346.30",
            "min": "345.73",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "397.10",
            "p50": "389.69",
            "p95": "378.70",
            "p99": "314.57",
            "min": "295.60",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "310.87",
            "p50": "305.85",
            "p95": "188.93",
            "p99": "186.65",
            "min": "186.53",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "188.33",
            "p50": "180.63",
            "p95": "177.42",
            "p99": "122.34",
            "min": "109.12",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "247.37",
            "p50": "237.81",
            "p95": "222.32",
            "p99": "220.47",
            "min": "220.32",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "251.17",
            "p50": "237.71",
            "p95": "230.11",
            "p99": "225.57",
            "min": "224.88",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "255.55",
            "p50": "249.81",
            "p95": "245.45",
            "p99": "236.05",
            "min": "235.55",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "202.79",
            "p50": "198.08",
            "p95": "192.39",
            "p99": "189.22",
            "min": "188.80",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "314.15",
            "p50": "308.90",
            "p95": "274.90",
            "p99": "269.57",
            "min": "269.28",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "296.81",
            "p50": "289.77",
            "p95": "253.78",
            "p99": "249.81",
            "min": "249.60",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "7068.29",
            "p50": "6078.05",
            "p95": "2494.82",
            "p99": "2146.54",
            "min": "2096.49",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2542.55",
            "p50": "2229.89",
            "p95": "1906.05",
            "p99": "1803.10",
            "min": "1404.94",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "284.32",
            "p50": "252.31",
            "p95": "240.24",
            "p99": "245.26",
            "min": "236.09",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1423.45",
            "p50": "949.01",
            "p95": "460.77",
            "p99": "796.42",
            "min": "323.40",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7504.97",
            "p50": "4502.01",
            "p95": "2285.45",
            "p99": "4215.76",
            "min": "1734.42",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "808.68",
            "p50": "784.00",
            "p95": "537.58",
            "p99": "526.67",
            "min": "525.52",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "818.84",
            "p50": "801.83",
            "p95": "757.09",
            "p99": "731.88",
            "min": "728.48",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "913.57",
            "p50": "884.99",
            "p95": "740.26",
            "p99": "650.24",
            "min": "646.66",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2207.87",
            "p50": "2079.81",
            "p95": "1852.18",
            "p99": "1728.93",
            "min": "1725.02",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2221.74",
            "p50": "2091.62",
            "p95": "1874.50",
            "p99": "1631.42",
            "min": "1572.46",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "806.82",
            "p50": "790.37",
            "p95": "749.68",
            "p99": "721.66",
            "min": "720.12",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "163.44",
            "p50": "154.91",
            "p95": "134.01",
            "p99": "129.85",
            "min": "129.52",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "507.67",
            "p50": "481.12",
            "p95": "393.46",
            "p99": "141.00",
            "min": "90.11",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "162.94",
            "p50": "149.20",
            "p95": "140.41",
            "p99": "138.17",
            "min": "138.02",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "182.04",
            "p50": "175.67",
            "p95": "155.99",
            "p99": "151.47",
            "min": "151.25",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "33672.60",
            "p50": "8586.57",
            "p95": "2367.19",
            "p99": "1630.66",
            "min": "1254.43",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "379.84",
            "p50": "312.77",
            "p95": "304.88",
            "p99": "295.94",
            "min": "294.97",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "359.11",
            "p50": "297.65",
            "p95": "289.96",
            "p99": "288.23",
            "min": "288.22",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "361.51",
            "p50": "304.48",
            "p95": "289.08",
            "p99": "246.65",
            "min": "239.33",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "360.38",
            "p50": "296.80",
            "p95": "289.42",
            "p99": "286.74",
            "min": "286.62",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "14728.79",
            "p50": "7228.26",
            "p95": "2640.09",
            "p99": "2295.63",
            "min": "2249.19",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "14105.19",
            "p50": "8661.91",
            "p95": "2500.35",
            "p99": "2022.25",
            "min": "1846.99",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "13479.18",
            "p50": "6366.77",
            "p95": "2448.19",
            "p99": "2247.75",
            "min": "2243.80",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "14241.63",
            "p50": "6560.34",
            "p95": "2514.97",
            "p99": "2333.26",
            "min": "2328.43",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "13686.33",
            "p50": "7012.36",
            "p95": "2381.60",
            "p99": "1535.29",
            "min": "1508.66",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "14420.04",
            "p50": "7367.69",
            "p95": "2416.08",
            "p99": "1308.74",
            "min": "251.01",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "247.58",
            "p50": "238.81",
            "p95": "233.06",
            "p99": "228.44",
            "min": "227.29",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "525.83",
            "p50": "518.09",
            "p95": "500.73",
            "p99": "263.62",
            "min": "90.49",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1635.36",
            "p50": "1564.70",
            "p95": "378.66",
            "p99": "356.99",
            "min": "338.20",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "22460.07",
            "p50": "6409.08",
            "p95": "300.95",
            "p99": "235.51",
            "min": "229.36",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1427.18",
            "p50": "1376.65",
            "p95": "279.77",
            "p99": "268.17",
            "min": "262.69",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "53224.87",
            "p50": "9470.20",
            "p95": "2439.47",
            "p99": "1275.81",
            "min": "283.75",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15868.96",
            "p50": "7617.66",
            "p95": "269.76",
            "p99": "159.75",
            "min": "58.88",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "575.50",
            "p50": "537.88",
            "p95": "465.96",
            "p99": "428.73",
            "min": "425.36",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "517.18",
            "p50": "506.95",
            "p95": "485.83",
            "p99": "475.16",
            "min": "473.35",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "204.78",
            "p50": "198.66",
            "p95": "194.47",
            "p99": "186.45",
            "min": "185.94",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "383.27",
            "p50": "374.34",
            "p95": "367.20",
            "p99": "353.33",
            "min": "350.40",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "206.14",
            "p50": "199.07",
            "p95": "196.22",
            "p99": "170.73",
            "min": "166.69",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "341.04",
            "p50": "335.88",
            "p95": "324.41",
            "p99": "302.42",
            "min": "293.99",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "257.31",
            "p50": "253.73",
            "p95": "248.62",
            "p99": "234.50",
            "min": "234.30",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "522.61",
            "p50": "507.96",
            "p95": "480.40",
            "p99": "475.64",
            "min": "474.25",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1440.06",
            "p50": "1282.61",
            "p95": "972.31",
            "p99": "931.96",
            "min": "928.85",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "309.97",
            "p50": "304.43",
            "p95": "280.75",
            "p99": "269.48",
            "min": "266.60",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "90.36",
            "p50": "89.43",
            "p95": "84.24",
            "p99": "81.47",
            "min": "81.37",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "82.35",
            "p50": "81.36",
            "p95": "77.74",
            "p99": "72.70",
            "min": "71.93",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "84.02",
            "p50": "83.17",
            "p95": "78.96",
            "p99": "75.41",
            "min": "74.80",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "250.16",
            "p50": "244.76",
            "p95": "213.27",
            "p99": "194.04",
            "min": "191.22",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "186.56",
            "p50": "182.38",
            "p95": "164.18",
            "p99": "107.99",
            "min": "96.55",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "195.35",
            "p50": "192.80",
            "p95": "173.57",
            "p99": "141.37",
            "min": "133.89",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "185.68",
            "p50": "177.85",
            "p95": "154.89",
            "p99": "137.56",
            "min": "136.28",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "182.83",
            "p50": "175.17",
            "p95": "158.32",
            "p99": "150.38",
            "min": "149.86",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "209.09",
            "p50": "203.10",
            "p95": "178.15",
            "p99": "158.37",
            "min": "155.26",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "186.93",
            "p50": "180.30",
            "p95": "166.55",
            "p99": "114.93",
            "min": "103.09",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "210.36",
            "p50": "202.86",
            "p95": "182.49",
            "p99": "162.61",
            "min": "161.16",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "153.75",
            "p50": "148.64",
            "p95": "135.21",
            "p99": "113.42",
            "min": "108.29",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "225.47",
            "p50": "221.71",
            "p95": "196.91",
            "p99": "181.62",
            "min": "180.98",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "186.92",
            "p50": "183.78",
            "p95": "163.39",
            "p99": "155.01",
            "min": "154.34",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.69",
            "p50": "66.63",
            "p95": "63.86",
            "p99": "63.00",
            "min": "62.84",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "142.51",
            "p50": "139.93",
            "p95": "127.18",
            "p99": "129.71",
            "min": "122.82",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "446.78",
            "p50": "373.25",
            "p95": "296.79",
            "p99": "296.13",
            "min": "260.80",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "196.86",
            "p50": "153.79",
            "p95": "140.89",
            "p99": "164.66",
            "min": "140.37",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "136.10",
            "p50": "133.01",
            "p95": "122.09",
            "p99": "125.08",
            "min": "116.76",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1236.92",
            "p50": "1160.33",
            "p95": "715.56",
            "p99": "571.76",
            "min": "563.38",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1064.78",
            "p50": "1036.72",
            "p95": "675.62",
            "p99": "483.22",
            "min": "469.45",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1479.27",
            "p50": "1375.31",
            "p95": "843.81",
            "p99": "623.78",
            "min": "587.35",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1367.35",
            "p50": "1249.44",
            "p95": "808.71",
            "p99": "613.07",
            "min": "531.26",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1342.58",
            "p50": "1248.90",
            "p95": "736.51",
            "p99": "535.00",
            "min": "527.73",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1101.52",
            "p50": "1074.98",
            "p95": "769.42",
            "p99": "629.31",
            "min": "567.92",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "743.97",
            "p50": "647.31",
            "p95": "492.84",
            "p99": "381.70",
            "min": "379.04",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "742.19",
            "p50": "647.13",
            "p95": "483.34",
            "p99": "370.78",
            "min": "368.73",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "751.77",
            "p50": "666.66",
            "p95": "465.53",
            "p99": "349.11",
            "min": "333.16",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "743.47",
            "p50": "710.84",
            "p95": "520.76",
            "p99": "410.56",
            "min": "407.45",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "296.22",
            "p50": "292.09",
            "p95": "246.36",
            "p99": "220.40",
            "min": "219.49",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "663.47",
            "p50": "552.91",
            "p95": "450.10",
            "p99": "376.86",
            "min": "371.68",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "646.04",
            "p50": "554.43",
            "p95": "430.04",
            "p99": "380.89",
            "min": "375.83",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "660.73",
            "p50": "585.41",
            "p95": "460.71",
            "p99": "381.05",
            "min": "378.66",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "676.10",
            "p50": "583.24",
            "p95": "449.63",
            "p99": "360.64",
            "min": "358.19",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "107.17",
            "p50": "105.52",
            "p95": "98.41",
            "p99": "96.49",
            "min": "95.98",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "107.19",
            "p50": "105.77",
            "p95": "98.08",
            "p99": "92.99",
            "min": "89.16",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.80",
            "p50": "98.40",
            "p95": "92.93",
            "p99": "89.45",
            "min": "88.94",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "257.35",
            "p50": "253.03",
            "p95": "214.10",
            "p99": "197.22",
            "min": "196.04",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.82",
            "p50": "98.09",
            "p95": "92.56",
            "p99": "88.82",
            "min": "88.47",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "249.90",
            "p50": "244.50",
            "p95": "212.18",
            "p99": "200.04",
            "min": "196.78",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "210.40",
            "p50": "207.40",
            "p95": "183.48",
            "p99": "168.10",
            "min": "167.25",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "243.14",
            "p50": "237.16",
            "p95": "207.59",
            "p99": "195.93",
            "min": "191.22",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "461.31",
            "p50": "450.73",
            "p95": "366.02",
            "p99": "319.25",
            "min": "306.08",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7427.31",
            "p50": "4557.97",
            "p95": "2177.67",
            "p99": "1731.87",
            "min": "1688.82",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "440.39",
            "p50": "431.83",
            "p95": "361.56",
            "p99": "314.50",
            "min": "310.10",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "17630.00",
            "p50": "6785.19",
            "p95": "2408.56",
            "p99": "2054.60",
            "min": "1908.94",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4382.57",
            "p50": "3632.20",
            "p95": "2004.97",
            "p99": "1595.28",
            "min": "1562.75",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "213.71",
            "p50": "187.08",
            "p95": "168.21",
            "p99": "143.52",
            "min": "136.03",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "265.98",
            "p50": "261.86",
            "p95": "223.71",
            "p99": "213.63",
            "min": "213.13",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "95.20",
            "p50": "94.10",
            "p95": "88.59",
            "p99": "86.43",
            "min": "86.21",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "247.37",
            "p50": "241.81",
            "p95": "214.37",
            "p99": "174.50",
            "min": "161.25",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "183.22",
            "p50": "178.92",
            "p95": "159.63",
            "p99": "139.47",
            "min": "136.80",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "223.81",
            "p50": "219.54",
            "p95": "191.57",
            "p99": "110.12",
            "min": "61.03",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "210.79",
            "p50": "206.50",
            "p95": "179.44",
            "p99": "90.47",
            "min": "89.58",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "208.55",
            "p50": "205.07",
            "p95": "183.69",
            "p99": "169.13",
            "min": "168.08",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1249.86",
            "p50": "1098.92",
            "p95": "864.66",
            "p99": "709.02",
            "min": "687.81",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "183.35",
            "p50": "180.05",
            "p95": "162.66",
            "p99": "154.22",
            "min": "153.34",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.45",
            "p50": "192.49",
            "p95": "188.88",
            "p99": "169.77",
            "min": "167.25",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.80",
            "p50": "193.34",
            "p95": "187.85",
            "p99": "173.25",
            "min": "171.01",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.03",
            "p50": "193.71",
            "p95": "188.55",
            "p99": "167.94",
            "min": "165.53",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1190.37",
            "p50": "1165.59",
            "p95": "983.23",
            "p99": "698.86",
            "min": "601.76",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "702.87",
            "p50": "693.88",
            "p95": "649.20",
            "p99": "544.56",
            "min": "543.07",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "809.68",
            "p50": "798.71",
            "p95": "716.12",
            "p99": "532.46",
            "min": "529.32",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "737.27",
            "p50": "723.96",
            "p95": "638.76",
            "p99": "446.32",
            "min": "443.82",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "746.97",
            "p50": "731.99",
            "p95": "626.58",
            "p99": "467.38",
            "min": "448.34",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "920.95",
            "p50": "902.42",
            "p95": "707.02",
            "p99": "529.30",
            "min": "525.44",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "849.51",
            "p50": "837.79",
            "p95": "784.42",
            "p99": "744.35",
            "min": "743.50",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "874.58",
            "p50": "837.31",
            "p95": "609.42",
            "p99": "192.74",
            "min": "93.58",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "840.36",
            "p50": "826.70",
            "p95": "743.23",
            "p99": "560.55",
            "min": "558.71",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "889.44",
            "p50": "870.19",
            "p95": "791.15",
            "p99": "707.00",
            "min": "692.02",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "878.95",
            "p50": "835.53",
            "p95": "671.06",
            "p99": "500.04",
            "min": "498.34",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "109.80",
            "p50": "105.56",
            "p95": "102.98",
            "p99": "100.14",
            "min": "100.04",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "96.29",
            "p50": "95.29",
            "p95": "91.91",
            "p99": "92.23",
            "min": "90.04",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "576.67",
            "p50": "558.49",
            "p95": "490.94",
            "p99": "490.30",
            "min": "470.04",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "130.00",
            "p50": "103.89",
            "p95": "96.56",
            "p99": "110.20",
            "min": "95.26",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "89.76",
            "p50": "88.06",
            "p95": "86.30",
            "p99": "87.35",
            "min": "85.52",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1890.05",
            "p50": "1844.38",
            "p95": "1427.14",
            "p99": "1199.14",
            "min": "1196.78",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1640.87",
            "p50": "1607.20",
            "p95": "1192.74",
            "p99": "812.15",
            "min": "803.39",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2395.68",
            "p50": "2313.32",
            "p95": "1668.55",
            "p99": "1103.62",
            "min": "976.94",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2374.74",
            "p50": "2305.00",
            "p95": "1812.83",
            "p99": "1158.47",
            "min": "1039.50",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2363.02",
            "p50": "2294.49",
            "p95": "1538.55",
            "p99": "861.40",
            "min": "799.83",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1699.01",
            "p50": "1661.92",
            "p95": "1451.50",
            "p99": "974.19",
            "min": "932.54",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "826.93",
            "p50": "794.93",
            "p95": "665.86",
            "p99": "518.90",
            "min": "517.33",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "815.21",
            "p50": "792.52",
            "p95": "665.90",
            "p99": "569.97",
            "min": "551.82",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "823.79",
            "p50": "798.18",
            "p95": "673.66",
            "p99": "549.07",
            "min": "548.50",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "833.21",
            "p50": "813.34",
            "p95": "731.02",
            "p99": "603.09",
            "min": "599.49",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.72",
            "p50": "86.26",
            "p95": "82.69",
            "p99": "80.83",
            "min": "80.78",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "765.37",
            "p50": "742.79",
            "p95": "645.51",
            "p99": "499.05",
            "min": "492.80",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "733.91",
            "p50": "704.92",
            "p95": "632.63",
            "p99": "470.17",
            "min": "453.71",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "726.84",
            "p50": "703.03",
            "p95": "649.85",
            "p99": "535.65",
            "min": "533.51",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "731.87",
            "p50": "712.54",
            "p95": "605.42",
            "p99": "417.53",
            "min": "401.67",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2029.41",
            "p50": "1965.25",
            "p95": "1352.00",
            "p99": "937.98",
            "min": "930.61",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2334.95",
            "p50": "2256.54",
            "p95": "1652.22",
            "p99": "1013.13",
            "min": "870.91",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.48",
            "p50": "72.05",
            "p95": "71.26",
            "p99": "69.00",
            "min": "68.33",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9922.32",
            "p50": "8123.75",
            "p95": "2436.84",
            "p99": "2185.66",
            "min": "1946.00",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.48",
            "p50": "72.08",
            "p95": "70.86",
            "p99": "69.29",
            "min": "69.26",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "223.73",
            "p50": "222.04",
            "p95": "214.80",
            "p99": "198.58",
            "min": "196.13",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "849.99",
            "p50": "835.97",
            "p95": "700.55",
            "p99": "580.10",
            "min": "557.13",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.67",
            "p50": "662.28",
            "p95": "597.47",
            "p99": "487.11",
            "min": "472.22",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2351.99",
            "p50": "2216.56",
            "p95": "1337.09",
            "p99": "1171.76",
            "min": "1145.86",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "29590.65",
            "p50": "9533.66",
            "p95": "2576.15",
            "p99": "2327.61",
            "min": "2307.53",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2181.67",
            "p50": "2072.22",
            "p95": "1168.11",
            "p99": "960.02",
            "min": "926.50",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "80134.19",
            "p50": "9466.32",
            "p95": "2520.55",
            "p99": "1916.09",
            "min": "1485.18",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "18911.97",
            "p50": "8983.17",
            "p95": "2525.07",
            "p99": "2305.89",
            "min": "2252.58",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "871.58",
            "p50": "734.11",
            "p95": "619.64",
            "p99": "553.77",
            "min": "548.57",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "989.41",
            "p50": "971.69",
            "p95": "847.01",
            "p99": "617.81",
            "min": "546.20",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "841.54",
            "p50": "823.07",
            "p95": "748.01",
            "p99": "538.06",
            "min": "499.82",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1199.61",
            "p50": "1173.42",
            "p95": "934.81",
            "p99": "665.14",
            "min": "598.98",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "747.05",
            "p50": "735.10",
            "p95": "665.20",
            "p99": "585.18",
            "min": "579.42",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1152.97",
            "p50": "1130.06",
            "p95": "858.98",
            "p99": "686.21",
            "min": "608.55",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "859.42",
            "p50": "835.45",
            "p95": "693.20",
            "p99": "521.73",
            "min": "509.78",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "928.33",
            "p50": "911.25",
            "p95": "717.07",
            "p99": "634.59",
            "min": "628.34",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2590.47",
            "p50": "2397.64",
            "p95": "1933.11",
            "p99": "1397.45",
            "min": "1372.01",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "859.23",
            "p50": "835.01",
            "p95": "693.01",
            "p99": "517.42",
            "min": "506.19",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "124.82",
            "p50": "120.55",
            "p95": "112.68",
            "p99": "97.19",
            "min": "97.17",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "124.90",
            "p50": "120.91",
            "p95": "105.33",
            "p99": "97.53",
            "min": "97.19",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "124.48",
            "p50": "120.53",
            "p95": "110.30",
            "p99": "96.21",
            "min": "95.47",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "215.20",
            "p50": "201.86",
            "p95": "176.76",
            "p99": "129.04",
            "min": "115.73",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "105.51",
            "p50": "102.35",
            "p95": "92.69",
            "p99": "85.18",
            "min": "84.10",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "111.24",
            "p50": "107.85",
            "p95": "97.93",
            "p99": "91.93",
            "min": "91.79",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "143.52",
            "p50": "137.34",
            "p95": "120.43",
            "p99": "98.29",
            "min": "96.09",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "144.22",
            "p50": "138.85",
            "p95": "120.33",
            "p99": "109.68",
            "min": "108.11",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "188.50",
            "p50": "178.94",
            "p95": "153.08",
            "p99": "136.88",
            "min": "135.72",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "186.43",
            "p50": "175.84",
            "p95": "153.39",
            "p99": "133.24",
            "min": "132.87",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "186.37",
            "p50": "176.56",
            "p95": "157.78",
            "p99": "128.26",
            "min": "127.51",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.09",
            "p50": "123.60",
            "p95": "110.69",
            "p99": "96.01",
            "min": "95.24",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "207.67",
            "p50": "193.71",
            "p95": "161.01",
            "p99": "119.20",
            "min": "108.60",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "190.63",
            "p50": "182.45",
            "p95": "153.23",
            "p99": "136.92",
            "min": "136.41",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "71.69",
            "p50": "68.73",
            "p95": "63.66",
            "p99": "61.05",
            "min": "60.74",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "135.21",
            "p50": "129.63",
            "p95": "116.02",
            "p99": "122.05",
            "min": "114.96",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "221.92",
            "p50": "202.61",
            "p95": "167.49",
            "p99": "171.12",
            "min": "159.21",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "170.48",
            "p50": "145.49",
            "p95": "136.62",
            "p99": "150.21",
            "min": "134.93",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "130.02",
            "p50": "123.39",
            "p95": "111.27",
            "p99": "116.53",
            "min": "106.36",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1068.35",
            "p50": "881.95",
            "p95": "432.87",
            "p99": "343.33",
            "min": "328.50",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1036.95",
            "p50": "845.74",
            "p95": "504.31",
            "p99": "382.70",
            "min": "363.25",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1170.26",
            "p50": "933.14",
            "p95": "584.62",
            "p99": "378.96",
            "min": "371.74",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1113.13",
            "p50": "908.33",
            "p95": "462.01",
            "p99": "356.58",
            "min": "347.52",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1059.95",
            "p50": "865.04",
            "p95": "463.05",
            "p99": "418.28",
            "min": "414.83",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1043.26",
            "p50": "876.17",
            "p95": "510.30",
            "p99": "354.28",
            "min": "328.96",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "353.45",
            "p50": "316.73",
            "p95": "258.62",
            "p99": "226.93",
            "min": "225.78",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "356.66",
            "p50": "316.90",
            "p95": "254.49",
            "p99": "218.39",
            "min": "217.91",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "355.14",
            "p50": "319.69",
            "p95": "255.97",
            "p99": "214.51",
            "min": "209.98",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "390.06",
            "p50": "344.25",
            "p95": "275.86",
            "p99": "228.43",
            "min": "226.33",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "288.76",
            "p50": "268.06",
            "p95": "226.33",
            "p99": "173.50",
            "min": "173.19",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "308.66",
            "p50": "278.25",
            "p95": "214.68",
            "p99": "190.28",
            "min": "189.50",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "301.52",
            "p50": "269.50",
            "p95": "228.57",
            "p99": "192.22",
            "min": "191.44",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "301.54",
            "p50": "273.01",
            "p95": "222.29",
            "p99": "212.80",
            "min": "211.76",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "307.69",
            "p50": "273.41",
            "p95": "232.00",
            "p99": "195.25",
            "min": "194.95",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.66",
            "p50": "102.56",
            "p95": "93.18",
            "p99": "86.94",
            "min": "85.69",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.04",
            "p50": "102.90",
            "p95": "95.08",
            "p99": "89.54",
            "min": "88.04",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.06",
            "p50": "95.25",
            "p95": "87.92",
            "p99": "83.08",
            "min": "82.98",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "250.91",
            "p50": "237.09",
            "p95": "199.18",
            "p99": "171.17",
            "min": "170.29",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.97",
            "p50": "95.46",
            "p95": "88.13",
            "p99": "84.26",
            "min": "83.62",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "242.70",
            "p50": "227.80",
            "p95": "194.84",
            "p99": "168.90",
            "min": "158.98",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "186.95",
            "p50": "178.05",
            "p95": "146.62",
            "p99": "126.53",
            "min": "125.86",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "154.64",
            "p50": "148.34",
            "p95": "133.00",
            "p99": "120.31",
            "min": "119.31",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "433.78",
            "p50": "386.20",
            "p95": "270.63",
            "p99": "219.60",
            "min": "217.16",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5367.21",
            "p50": "2567.77",
            "p95": "698.57",
            "p99": "520.16",
            "min": "485.89",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "432.37",
            "p50": "390.54",
            "p95": "290.12",
            "p99": "249.36",
            "min": "249.28",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14890.91",
            "p50": "3609.94",
            "p95": "1438.08",
            "p99": "1130.30",
            "min": "1105.70",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3478.54",
            "p50": "1986.04",
            "p95": "683.43",
            "p99": "456.82",
            "min": "422.70",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "207.25",
            "p50": "194.71",
            "p95": "165.27",
            "p99": "140.97",
            "min": "139.26",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "237.46",
            "p50": "222.47",
            "p95": "187.27",
            "p99": "139.44",
            "min": "137.56",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "128.60",
            "p50": "123.94",
            "p95": "111.99",
            "p99": "103.08",
            "min": "100.54",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "212.85",
            "p50": "200.77",
            "p95": "170.53",
            "p99": "146.01",
            "min": "138.42",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "143.94",
            "p50": "138.38",
            "p95": "118.79",
            "p99": "104.53",
            "min": "103.90",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "178.67",
            "p50": "169.94",
            "p95": "144.57",
            "p99": "88.30",
            "min": "70.55",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "187.35",
            "p50": "176.01",
            "p95": "154.06",
            "p99": "128.85",
            "min": "128.24",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "185.30",
            "p50": "175.83",
            "p95": "150.57",
            "p99": "137.27",
            "min": "135.26",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "309.00",
            "p50": "262.26",
            "p95": "118.14",
            "p99": "108.04",
            "min": "107.99",
            "n": "103",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "146.68",
            "p50": "139.37",
            "p95": "84.43",
            "p99": "81.67",
            "min": "81.51",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.23",
            "p50": "84.71",
            "p95": "77.33",
            "p99": "74.54",
            "min": "74.42",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "89.39",
            "p50": "85.75",
            "p95": "84.35",
            "p99": "80.10",
            "min": "79.52",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "89.01",
            "p50": "85.33",
            "p95": "84.01",
            "p99": "82.62",
            "min": "82.52",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "186.93",
            "p50": "182.90",
            "p95": "174.22",
            "p99": "128.88",
            "min": "107.03",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "93.58",
            "p50": "89.23",
            "p95": "86.07",
            "p99": "83.66",
            "min": "83.45",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.86",
            "p50": "108.49",
            "p95": "105.82",
            "p99": "103.61",
            "min": "103.12",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "123.27",
            "p50": "121.32",
            "p95": "104.61",
            "p99": "96.15",
            "min": "95.46",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "126.45",
            "p50": "123.44",
            "p95": "120.54",
            "p99": "95.82",
            "min": "91.28",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "96.88",
            "p50": "94.73",
            "p95": "92.47",
            "p99": "88.48",
            "min": "87.93",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "98.36",
            "p50": "96.10",
            "p95": "94.19",
            "p99": "90.68",
            "min": "90.52",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.15",
            "p50": "96.26",
            "p95": "94.28",
            "p99": "91.53",
            "min": "91.05",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "125.81",
            "p50": "122.17",
            "p95": "120.18",
            "p99": "117.14",
            "min": "116.94",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "117.64",
            "p50": "113.08",
            "p95": "110.54",
            "p99": "107.72",
            "min": "107.56",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "115.74",
            "p50": "113.19",
            "p95": "109.52",
            "p99": "103.79",
            "min": "103.72",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "86.40",
            "p50": "82.84",
            "p95": "79.35",
            "p99": "70.81",
            "min": "70.41",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "93.13",
            "p50": "92.34",
            "p95": "89.12",
            "p99": "90.27",
            "min": "88.74",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "60.56",
            "p50": "58.10",
            "p95": "54.97",
            "p99": "55.45",
            "min": "54.25",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "150.33",
            "p50": "120.57",
            "p95": "112.87",
            "p99": "128.68",
            "min": "112.34",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "103.87",
            "p50": "101.78",
            "p95": "100.46",
            "p99": "101.67",
            "min": "100.01",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "375.97",
            "p50": "367.23",
            "p95": "354.04",
            "p99": "342.20",
            "min": "341.13",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "490.08",
            "p50": "482.54",
            "p95": "470.67",
            "p99": "395.54",
            "min": "389.68",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "373.81",
            "p50": "365.89",
            "p95": "345.28",
            "p99": "341.38",
            "min": "339.72",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "380.05",
            "p50": "369.66",
            "p95": "347.56",
            "p99": "306.10",
            "min": "302.03",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "379.63",
            "p50": "371.46",
            "p95": "349.55",
            "p99": "324.04",
            "min": "309.47",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "455.95",
            "p50": "447.37",
            "p95": "419.85",
            "p99": "343.43",
            "min": "332.46",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "97.13",
            "p50": "94.74",
            "p95": "89.89",
            "p99": "89.40",
            "min": "89.38",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "98.04",
            "p50": "95.11",
            "p95": "89.92",
            "p99": "88.53",
            "min": "88.36",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "96.44",
            "p50": "93.96",
            "p95": "89.29",
            "p99": "88.14",
            "min": "88.01",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "87.90",
            "p50": "86.28",
            "p95": "82.72",
            "p99": "82.16",
            "min": "82.12",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.84",
            "p50": "86.36",
            "p95": "85.44",
            "p99": "84.75",
            "min": "84.52",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "89.65",
            "p50": "87.83",
            "p95": "81.34",
            "p99": "80.64",
            "min": "80.59",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "85.73",
            "p50": "83.86",
            "p95": "77.37",
            "p99": "76.38",
            "min": "76.22",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "85.18",
            "p50": "83.75",
            "p95": "77.52",
            "p99": "76.11",
            "min": "75.85",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "85.03",
            "p50": "83.60",
            "p95": "77.36",
            "p99": "73.49",
            "min": "73.26",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1436.10",
            "p50": "1313.07",
            "p95": "1016.83",
            "p99": "657.97",
            "min": "618.91",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1450.33",
            "p50": "1324.26",
            "p95": "819.14",
            "p99": "637.59",
            "min": "590.82",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "156.13",
            "p50": "153.10",
            "p95": "140.01",
            "p99": "133.85",
            "min": "133.04",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3048.21",
            "p50": "2820.16",
            "p95": "1506.44",
            "p99": "1096.96",
            "min": "1082.41",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "156.15",
            "p50": "153.07",
            "p95": "140.12",
            "p99": "126.45",
            "min": "124.14",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3075.44",
            "p50": "2832.45",
            "p95": "1792.22",
            "p99": "695.48",
            "min": "530.05",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.81",
            "p50": "96.59",
            "p95": "92.23",
            "p99": "88.72",
            "min": "88.65",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "187.21",
            "p50": "174.43",
            "p95": "168.14",
            "p99": "164.70",
            "min": "164.16",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "395.02",
            "p50": "328.86",
            "p95": "255.91",
            "p99": "235.78",
            "min": "234.91",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9630.15",
            "p50": "1982.26",
            "p95": "1039.61",
            "p99": "778.70",
            "min": "607.60",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "424.01",
            "p50": "362.15",
            "p95": "278.78",
            "p99": "255.86",
            "min": "243.54",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "29456.09",
            "p50": "9377.89",
            "p95": "2445.61",
            "p99": "1006.00",
            "min": "837.64",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6260.42",
            "p50": "3254.24",
            "p95": "1674.06",
            "p99": "944.38",
            "min": "726.56",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "351.42",
            "p50": "308.17",
            "p95": "232.86",
            "p99": "213.70",
            "min": "213.42",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "155.32",
            "p50": "141.11",
            "p95": "125.52",
            "p99": "110.52",
            "min": "110.43",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "124.98",
            "p50": "111.38",
            "p95": "104.21",
            "p99": "97.52",
            "min": "96.23",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "136.05",
            "p50": "123.62",
            "p95": "115.95",
            "p99": "111.35",
            "min": "111.07",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "126.86",
            "p50": "119.64",
            "p95": "113.05",
            "p99": "110.50",
            "min": "110.45",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "175.07",
            "p50": "156.96",
            "p95": "142.16",
            "p99": "134.87",
            "min": "131.93",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "93.82",
            "p50": "92.25",
            "p95": "77.96",
            "p99": "75.08",
            "min": "74.72",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "117.59",
            "p50": "112.29",
            "p95": "105.06",
            "p99": "103.13",
            "min": "102.53",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1129.36",
            "p50": "1043.64",
            "p95": "353.87",
            "p99": "342.35",
            "min": "342.12",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "125.18",
            "p50": "119.64",
            "p95": "106.81",
            "p99": "105.03",
            "min": "104.76",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}