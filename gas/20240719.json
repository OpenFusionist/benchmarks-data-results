{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "169.91",
            "p50": "168.23",
            "p95": "160.18",
            "p99": "154.07",
            "min": "153.19",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "170.16",
            "p50": "168.86",
            "p95": "167.18",
            "p99": "164.13",
            "min": "163.68",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "169.80",
            "p50": "168.17",
            "p95": "164.16",
            "p99": "162.58",
            "min": "162.50",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "758.12",
            "p50": "746.57",
            "p95": "475.70",
            "p99": "434.76",
            "min": "431.53",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "402.56",
            "p50": "393.45",
            "p95": "382.06",
            "p99": "362.19",
            "min": "361.93",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "438.59",
            "p50": "427.84",
            "p95": "412.21",
            "p99": "343.32",
            "min": "321.61",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "322.02",
            "p50": "317.11",
            "p95": "305.59",
            "p99": "286.33",
            "min": "284.48",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "186.53",
            "p50": "184.56",
            "p95": "181.35",
            "p99": "174.49",
            "min": "174.39",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "265.19",
            "p50": "261.46",
            "p95": "242.72",
            "p99": "238.76",
            "min": "238.51",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "256.07",
            "p50": "253.79",
            "p95": "249.76",
            "p99": "245.74",
            "min": "245.65",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "258.96",
            "p50": "256.66",
            "p95": "252.21",
            "p99": "244.80",
            "min": "244.25",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "191.28",
            "p50": "188.18",
            "p95": "184.60",
            "p99": "177.84",
            "min": "176.45",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "319.82",
            "p50": "315.90",
            "p95": "301.38",
            "p99": "226.24",
            "min": "199.09",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "308.80",
            "p50": "304.09",
            "p95": "295.60",
            "p99": "234.99",
            "min": "219.99",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "111.07",
            "p50": "106.63",
            "p95": "104.52",
            "p99": "103.39",
            "min": "103.13",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "170.17",
            "p50": "167.41",
            "p95": "162.78",
            "p99": "162.50",
            "min": "158.37",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "292.03",
            "p50": "239.18",
            "p95": "226.69",
            "p99": "236.00",
            "min": "222.86",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "242.33",
            "p50": "193.76",
            "p95": "181.41",
            "p99": "207.43",
            "min": "181.10",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "167.37",
            "p50": "164.38",
            "p95": "162.68",
            "p99": "164.39",
            "min": "162.15",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "884.12",
            "p50": "821.13",
            "p95": "782.50",
            "p99": "737.28",
            "min": "728.95",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "843.35",
            "p50": "817.17",
            "p95": "790.37",
            "p99": "757.13",
            "min": "734.19",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1035.05",
            "p50": "941.36",
            "p95": "895.22",
            "p99": "509.33",
            "min": "88.82",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1078.47",
            "p50": "964.72",
            "p95": "915.82",
            "p99": "891.77",
            "min": "884.74",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1083.98",
            "p50": "971.62",
            "p95": "916.14",
            "p99": "891.23",
            "min": "882.24",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "852.89",
            "p50": "817.07",
            "p95": "787.55",
            "p99": "756.73",
            "min": "746.17",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "196.78",
            "p50": "185.90",
            "p95": "182.48",
            "p99": "180.68",
            "min": "180.57",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "197.20",
            "p50": "185.89",
            "p95": "182.24",
            "p99": "175.97",
            "min": "175.39",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "198.22",
            "p50": "186.78",
            "p95": "182.79",
            "p99": "178.80",
            "min": "178.54",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "222.57",
            "p50": "212.94",
            "p95": "208.24",
            "p99": "200.66",
            "min": "200.56",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.79",
            "p50": "87.37",
            "p95": "86.78",
            "p99": "86.58",
            "min": "86.56",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "344.53",
            "p50": "304.12",
            "p95": "282.00",
            "p99": "94.91",
            "min": "48.19",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "327.92",
            "p50": "295.63",
            "p95": "278.89",
            "p99": "131.20",
            "min": "97.54",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "330.35",
            "p50": "297.04",
            "p95": "282.02",
            "p99": "185.42",
            "min": "161.94",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "336.07",
            "p50": "296.74",
            "p95": "281.13",
            "p99": "160.86",
            "min": "132.22",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2408.10",
            "p50": "2265.23",
            "p95": "2096.62",
            "p99": "1608.17",
            "min": "1513.89",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2313.59",
            "p50": "2195.01",
            "p95": "2011.71",
            "p99": "963.37",
            "min": "129.04",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "94.02",
            "p50": "92.99",
            "p95": "92.26",
            "p99": "90.18",
            "min": "89.71",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "5698.44",
            "p50": "5091.35",
            "p95": "2554.50",
            "p99": "2270.19",
            "min": "2176.32",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "94.06",
            "p50": "93.03",
            "p95": "92.34",
            "p99": "91.45",
            "min": "91.38",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3186.75",
            "p50": "2977.42",
            "p95": "2299.61",
            "p99": "1440.36",
            "min": "1307.95",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "255.60",
            "p50": "251.44",
            "p95": "248.05",
            "p99": "247.11",
            "min": "247.07",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "538.47",
            "p50": "530.91",
            "p95": "519.15",
            "p99": "476.35",
            "min": "464.02",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1267.80",
            "p50": "1213.55",
            "p95": "383.65",
            "p99": "374.72",
            "min": "373.76",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "17445.73",
            "p50": "7782.76",
            "p95": "2641.96",
            "p99": "1631.83",
            "min": "1585.70",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1159.14",
            "p50": "1113.45",
            "p95": "344.22",
            "p99": "327.20",
            "min": "323.59",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "48135.09",
            "p50": "9015.06",
            "p95": "2583.14",
            "p99": "1667.90",
            "min": "1531.68",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "16159.88",
            "p50": "6614.09",
            "p95": "2500.03",
            "p99": "1071.57",
            "min": "518.10",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "537.10",
            "p50": "491.00",
            "p95": "438.37",
            "p99": "374.01",
            "min": "370.96",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "515.20",
            "p50": "508.26",
            "p95": "495.15",
            "p99": "481.15",
            "min": "480.95",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "203.93",
            "p50": "201.41",
            "p95": "195.60",
            "p99": "184.71",
            "min": "182.50",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "435.81",
            "p50": "426.69",
            "p95": "408.35",
            "p99": "399.58",
            "min": "398.11",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "203.67",
            "p50": "201.57",
            "p95": "198.04",
            "p99": "170.23",
            "min": "163.84",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "329.73",
            "p50": "323.39",
            "p95": "305.15",
            "p99": "297.11",
            "min": "294.78",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "270.03",
            "p50": "267.51",
            "p95": "262.35",
            "p99": "256.33",
            "min": "255.89",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "513.74",
            "p50": "506.36",
            "p95": "490.32",
            "p99": "476.08",
            "min": "474.38",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1527.73",
            "p50": "1158.18",
            "p95": "835.74",
            "p99": "759.01",
            "min": "751.95",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "316.19",
            "p50": "311.57",
            "p95": "300.12",
            "p99": "295.09",
            "min": "294.58",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.57",
            "p50": "85.14",
            "p95": "78.43",
            "p99": "71.70",
            "min": "70.71",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "80.46",
            "p50": "77.83",
            "p95": "72.31",
            "p99": "61.51",
            "min": "59.41",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "82.27",
            "p50": "79.56",
            "p95": "72.79",
            "p99": "69.44",
            "min": "69.16",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "226.54",
            "p50": "210.30",
            "p95": "178.01",
            "p99": "102.34",
            "min": "87.22",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "172.02",
            "p50": "161.67",
            "p95": "140.07",
            "p99": "123.40",
            "min": "120.61",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "179.52",
            "p50": "167.77",
            "p95": "141.67",
            "p99": "116.04",
            "min": "107.22",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "173.54",
            "p50": "161.64",
            "p95": "136.12",
            "p99": "128.92",
            "min": "128.24",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "173.81",
            "p50": "160.52",
            "p95": "139.92",
            "p99": "127.70",
            "min": "127.14",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "196.93",
            "p50": "180.36",
            "p95": "156.00",
            "p99": "133.38",
            "min": "127.52",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "173.42",
            "p50": "163.22",
            "p95": "137.99",
            "p99": "124.31",
            "min": "122.32",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "196.13",
            "p50": "179.94",
            "p95": "156.58",
            "p99": "141.17",
            "min": "139.53",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "145.95",
            "p50": "136.86",
            "p95": "114.51",
            "p99": "96.80",
            "min": "94.81",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "213.97",
            "p50": "199.58",
            "p95": "168.42",
            "p99": "153.11",
            "min": "151.13",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "175.62",
            "p50": "163.00",
            "p95": "138.84",
            "p99": "103.97",
            "min": "96.01",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.33",
            "p50": "64.98",
            "p95": "60.77",
            "p99": "58.08",
            "min": "58.00",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "138.38",
            "p50": "128.63",
            "p95": "113.60",
            "p99": "119.05",
            "min": "108.63",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "420.45",
            "p50": "327.82",
            "p95": "225.75",
            "p99": "243.48",
            "min": "201.96",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "174.99",
            "p50": "142.17",
            "p95": "134.63",
            "p99": "150.58",
            "min": "132.17",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "129.19",
            "p50": "121.29",
            "p95": "108.63",
            "p99": "115.25",
            "min": "104.73",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1183.99",
            "p50": "910.52",
            "p95": "597.41",
            "p99": "441.12",
            "min": "433.44",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1036.63",
            "p50": "824.76",
            "p95": "492.75",
            "p99": "415.52",
            "min": "415.49",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1393.87",
            "p50": "1066.48",
            "p95": "568.87",
            "p99": "459.31",
            "min": "456.25",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1310.23",
            "p50": "995.50",
            "p95": "610.92",
            "p99": "450.42",
            "min": "445.38",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1240.96",
            "p50": "925.56",
            "p95": "552.83",
            "p99": "439.58",
            "min": "428.84",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1079.07",
            "p50": "887.35",
            "p95": "534.23",
            "p99": "415.49",
            "min": "413.29",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "693.25",
            "p50": "547.12",
            "p95": "399.41",
            "p99": "344.49",
            "min": "341.78",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "700.57",
            "p50": "536.76",
            "p95": "384.98",
            "p99": "359.29",
            "min": "358.09",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "714.72",
            "p50": "550.61",
            "p95": "390.30",
            "p99": "306.11",
            "min": "293.26",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "699.87",
            "p50": "582.88",
            "p95": "412.91",
            "p99": "286.40",
            "min": "269.42",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "291.42",
            "p50": "265.30",
            "p95": "213.12",
            "p99": "182.42",
            "min": "174.30",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "611.03",
            "p50": "472.29",
            "p95": "364.18",
            "p99": "282.09",
            "min": "268.24",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "580.00",
            "p50": "466.92",
            "p95": "338.29",
            "p99": "234.74",
            "min": "218.97",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "599.16",
            "p50": "496.28",
            "p95": "345.87",
            "p99": "281.85",
            "min": "267.18",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "615.77",
            "p50": "484.08",
            "p95": "352.17",
            "p99": "306.98",
            "min": "305.20",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.78",
            "p50": "101.94",
            "p95": "92.68",
            "p99": "84.83",
            "min": "84.53",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.79",
            "p50": "102.26",
            "p95": "92.29",
            "p99": "87.14",
            "min": "85.31",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.02",
            "p50": "95.47",
            "p95": "88.60",
            "p99": "85.67",
            "min": "85.30",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "253.45",
            "p50": "235.80",
            "p95": "194.48",
            "p99": "179.29",
            "min": "178.63",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.01",
            "p50": "94.93",
            "p95": "84.48",
            "p99": "80.74",
            "min": "80.24",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "248.66",
            "p50": "226.94",
            "p95": "191.92",
            "p99": "174.32",
            "min": "173.48",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "193.77",
            "p50": "181.61",
            "p95": "148.86",
            "p99": "127.72",
            "min": "124.02",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "198.41",
            "p50": "185.94",
            "p95": "155.01",
            "p99": "142.20",
            "min": "138.05",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "467.92",
            "p50": "407.37",
            "p95": "318.50",
            "p99": "272.62",
            "min": "266.90",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5245.56",
            "p50": "2407.34",
            "p95": "934.27",
            "p99": "583.46",
            "min": "501.28",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "448.92",
            "p50": "389.17",
            "p95": "291.80",
            "p99": "245.50",
            "min": "222.21",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "16561.12",
            "p50": "4271.15",
            "p95": "1267.23",
            "p99": "659.35",
            "min": "532.51",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3224.16",
            "p50": "1794.36",
            "p95": "769.28",
            "p99": "547.76",
            "min": "530.47",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "232.17",
            "p50": "208.31",
            "p95": "173.85",
            "p99": "158.10",
            "min": "154.83",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "249.51",
            "p50": "227.85",
            "p95": "184.87",
            "p99": "129.36",
            "min": "111.79",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "92.03",
            "p50": "88.34",
            "p95": "81.50",
            "p99": "67.85",
            "min": "65.57",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "224.11",
            "p50": "208.75",
            "p95": "173.87",
            "p99": "158.39",
            "min": "155.87",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "173.95",
            "p50": "162.12",
            "p95": "139.23",
            "p99": "101.39",
            "min": "92.68",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "202.82",
            "p50": "187.91",
            "p95": "154.81",
            "p99": "115.52",
            "min": "103.26",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "195.47",
            "p50": "183.08",
            "p95": "159.43",
            "p99": "149.30",
            "min": "148.39",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "196.71",
            "p50": "184.55",
            "p95": "158.48",
            "p99": "149.21",
            "min": "149.16",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1133.41",
            "p50": "914.33",
            "p95": "605.63",
            "p99": "459.80",
            "min": "453.47",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "177.68",
            "p50": "167.75",
            "p95": "121.36",
            "p99": "114.64",
            "min": "114.37",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.73",
            "p50": "187.19",
            "p95": "168.39",
            "p99": "161.98",
            "min": "161.81",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.38",
            "p50": "188.15",
            "p95": "168.28",
            "p99": "161.56",
            "min": "161.53",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "194.83",
            "p50": "189.15",
            "p95": "172.74",
            "p99": "159.15",
            "min": "158.34",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1189.31",
            "p50": "1092.74",
            "p95": "728.79",
            "p99": "557.63",
            "min": "518.49",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "703.90",
            "p50": "648.44",
            "p95": "485.55",
            "p99": "397.48",
            "min": "396.54",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "814.05",
            "p50": "760.21",
            "p95": "539.00",
            "p99": "479.23",
            "min": "478.11",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "750.96",
            "p50": "671.17",
            "p95": "526.89",
            "p99": "442.92",
            "min": "433.78",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "265.09",
            "p50": "256.25",
            "p95": "235.31",
            "p99": "206.98",
            "min": "206.75",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "903.20",
            "p50": "779.95",
            "p95": "586.63",
            "p99": "539.54",
            "min": "536.95",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "872.91",
            "p50": "757.07",
            "p95": "587.83",
            "p99": "524.12",
            "min": "522.91",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "872.62",
            "p50": "767.56",
            "p95": "575.26",
            "p99": "454.88",
            "min": "449.25",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "287.67",
            "p50": "276.08",
            "p95": "244.92",
            "p99": "221.21",
            "min": "221.04",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "652.14",
            "p50": "594.58",
            "p95": "459.21",
            "p99": "392.08",
            "min": "391.61",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "837.01",
            "p50": "757.65",
            "p95": "538.38",
            "p99": "457.01",
            "min": "445.43",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "111.62",
            "p50": "107.12",
            "p95": "99.70",
            "p99": "95.37",
            "min": "94.99",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "96.58",
            "p50": "94.04",
            "p95": "89.82",
            "p99": "90.47",
            "min": "87.18",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "414.35",
            "p50": "382.60",
            "p95": "325.20",
            "p99": "318.25",
            "min": "295.71",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "131.95",
            "p50": "103.30",
            "p95": "96.26",
            "p99": "111.03",
            "min": "95.25",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "91.45",
            "p50": "88.76",
            "p95": "83.45",
            "p99": "86.45",
            "min": "82.68",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1697.52",
            "p50": "1433.42",
            "p95": "801.31",
            "p99": "656.67",
            "min": "598.06",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1638.40",
            "p50": "1417.87",
            "p95": "828.41",
            "p99": "651.95",
            "min": "602.12",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2042.04",
            "p50": "1637.21",
            "p95": "790.25",
            "p99": "635.39",
            "min": "631.20",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1995.70",
            "p50": "1655.27",
            "p95": "836.04",
            "p99": "633.18",
            "min": "624.70",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2003.36",
            "p50": "1586.47",
            "p95": "906.99",
            "p99": "650.76",
            "min": "649.67",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1653.71",
            "p50": "1472.27",
            "p95": "792.04",
            "p99": "678.91",
            "min": "627.46",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "630.59",
            "p50": "576.00",
            "p95": "469.04",
            "p99": "389.82",
            "min": "381.20",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "632.20",
            "p50": "568.67",
            "p95": "466.60",
            "p99": "382.81",
            "min": "379.67",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "632.65",
            "p50": "572.28",
            "p95": "449.69",
            "p99": "385.51",
            "min": "385.20",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "651.46",
            "p50": "589.20",
            "p95": "442.85",
            "p99": "393.01",
            "min": "383.80",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.10",
            "p50": "85.69",
            "p95": "81.39",
            "p99": "80.27",
            "min": "79.99",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "571.12",
            "p50": "507.25",
            "p95": "403.20",
            "p99": "351.98",
            "min": "350.36",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "537.07",
            "p50": "481.46",
            "p95": "373.02",
            "p99": "341.76",
            "min": "339.37",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "544.20",
            "p50": "492.70",
            "p95": "378.06",
            "p99": "351.47",
            "min": "348.20",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "546.80",
            "p50": "486.97",
            "p95": "388.26",
            "p99": "349.26",
            "min": "348.62",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1357.47",
            "p50": "1185.57",
            "p95": "761.94",
            "p99": "641.23",
            "min": "627.09",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1661.21",
            "p50": "1386.15",
            "p95": "739.16",
            "p99": "620.99",
            "min": "606.20",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.08",
            "p50": "71.27",
            "p95": "68.72",
            "p99": "67.29",
            "min": "67.26",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "8871.50",
            "p50": "3701.57",
            "p95": "2273.58",
            "p99": "1887.33",
            "min": "1675.34",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.18",
            "p50": "71.29",
            "p95": "68.59",
            "p99": "67.30",
            "min": "67.21",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "221.56",
            "p50": "216.94",
            "p95": "188.87",
            "p99": "178.22",
            "min": "177.76",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "873.47",
            "p50": "753.15",
            "p95": "579.19",
            "p99": "459.32",
            "min": "450.40",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "669.63",
            "p50": "623.17",
            "p95": "474.85",
            "p99": "390.44",
            "min": "387.78",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1133.05",
            "p50": "1017.37",
            "p95": "670.13",
            "p99": "595.10",
            "min": "588.59",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "25083.40",
            "p50": "9210.79",
            "p95": "2637.14",
            "p99": "1725.96",
            "min": "1667.66",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1136.09",
            "p50": "1037.76",
            "p95": "688.19",
            "p99": "563.88",
            "min": "559.32",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "55622.84",
            "p50": "9928.35",
            "p95": "2692.21",
            "p99": "1950.36",
            "min": "1874.87",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14761.53",
            "p50": "5525.49",
            "p95": "1133.92",
            "p99": "788.77",
            "min": "788.65",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "569.79",
            "p50": "495.91",
            "p95": "400.82",
            "p99": "346.76",
            "min": "340.20",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "990.47",
            "p50": "911.77",
            "p95": "611.73",
            "p99": "505.42",
            "min": "504.25",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "287.08",
            "p50": "278.50",
            "p95": "248.44",
            "p99": "226.05",
            "min": "222.28",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1213.08",
            "p50": "1109.22",
            "p95": "670.20",
            "p99": "581.37",
            "min": "560.67",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "266.08",
            "p50": "257.53",
            "p95": "228.22",
            "p99": "210.39",
            "min": "208.99",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "537.66",
            "p50": "519.08",
            "p95": "413.80",
            "p99": "377.68",
            "min": "375.74",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "881.09",
            "p50": "744.32",
            "p95": "549.99",
            "p99": "450.84",
            "min": "450.38",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "912.55",
            "p50": "816.59",
            "p95": "608.63",
            "p99": "525.95",
            "min": "523.10",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2291.80",
            "p50": "1918.71",
            "p95": "1110.15",
            "p99": "931.27",
            "min": "920.84",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "897.51",
            "p50": "821.89",
            "p95": "551.51",
            "p99": "474.25",
            "min": "472.26",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "81.50",
            "p50": "79.07",
            "p95": "71.28",
            "p99": "61.38",
            "min": "60.57",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "74.81",
            "p50": "72.78",
            "p95": "64.49",
            "p99": "61.40",
            "min": "61.21",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "76.90",
            "p50": "73.82",
            "p95": "66.72",
            "p99": "64.30",
            "min": "64.18",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "209.18",
            "p50": "190.61",
            "p95": "155.24",
            "p99": "130.25",
            "min": "123.64",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.38",
            "p50": "98.03",
            "p95": "83.90",
            "p99": "79.56",
            "min": "79.50",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.29",
            "p50": "103.48",
            "p95": "92.83",
            "p99": "82.69",
            "min": "81.06",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "140.13",
            "p50": "132.62",
            "p95": "115.64",
            "p99": "104.91",
            "min": "103.74",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "140.11",
            "p50": "133.51",
            "p95": "115.70",
            "p99": "103.24",
            "min": "103.17",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "185.86",
            "p50": "170.99",
            "p95": "133.64",
            "p99": "126.55",
            "min": "126.19",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "182.15",
            "p50": "170.36",
            "p95": "141.88",
            "p99": "124.55",
            "min": "122.88",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "183.97",
            "p50": "170.81",
            "p95": "140.92",
            "p99": "124.16",
            "min": "123.49",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.79",
            "p50": "120.76",
            "p95": "105.00",
            "p99": "92.90",
            "min": "91.72",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "203.57",
            "p50": "185.45",
            "p95": "150.30",
            "p99": "125.65",
            "min": "122.66",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "188.22",
            "p50": "174.16",
            "p95": "139.75",
            "p99": "122.44",
            "min": "120.76",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "70.93",
            "p50": "67.14",
            "p95": "61.22",
            "p99": "53.91",
            "min": "51.28",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "129.93",
            "p50": "121.34",
            "p95": "105.64",
            "p99": "106.94",
            "min": "94.57",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "210.66",
            "p50": "188.79",
            "p95": "142.36",
            "p99": "146.71",
            "min": "131.70",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "152.10",
            "p50": "137.09",
            "p95": "131.28",
            "p99": "138.06",
            "min": "127.46",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "125.03",
            "p50": "118.63",
            "p95": "105.63",
            "p99": "113.36",
            "min": "104.56",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1028.55",
            "p50": "716.97",
            "p95": "407.26",
            "p99": "223.60",
            "min": "175.47",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1016.26",
            "p50": "715.22",
            "p95": "360.50",
            "p99": "266.05",
            "min": "263.45",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1157.03",
            "p50": "760.98",
            "p95": "416.82",
            "p99": "323.76",
            "min": "285.53",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1088.26",
            "p50": "752.30",
            "p95": "419.89",
            "p99": "290.17",
            "min": "271.53",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1013.18",
            "p50": "713.74",
            "p95": "368.98",
            "p99": "243.91",
            "min": "231.38",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1015.68",
            "p50": "717.86",
            "p95": "369.64",
            "p99": "314.08",
            "min": "303.41",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "338.79",
            "p50": "296.44",
            "p95": "233.22",
            "p99": "176.62",
            "min": "173.11",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "338.44",
            "p50": "291.37",
            "p95": "217.65",
            "p99": "180.80",
            "min": "180.29",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "332.52",
            "p50": "293.12",
            "p95": "229.56",
            "p99": "172.30",
            "min": "169.98",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "371.31",
            "p50": "320.80",
            "p95": "231.50",
            "p99": "205.55",
            "min": "202.86",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "283.55",
            "p50": "248.51",
            "p95": "191.28",
            "p99": "159.58",
            "min": "157.92",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "293.25",
            "p50": "258.76",
            "p95": "201.63",
            "p99": "162.21",
            "min": "161.05",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "280.93",
            "p50": "255.01",
            "p95": "205.10",
            "p99": "159.53",
            "min": "159.40",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "287.01",
            "p50": "254.91",
            "p95": "200.14",
            "p99": "169.54",
            "min": "169.31",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "288.30",
            "p50": "257.36",
            "p95": "191.20",
            "p99": "168.62",
            "min": "166.83",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.03",
            "p50": "100.18",
            "p95": "88.26",
            "p99": "81.56",
            "min": "80.31",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.18",
            "p50": "100.42",
            "p95": "87.51",
            "p99": "83.00",
            "min": "81.06",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.41",
            "p50": "93.25",
            "p95": "83.38",
            "p99": "80.36",
            "min": "80.24",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "249.92",
            "p50": "224.37",
            "p95": "172.09",
            "p99": "146.57",
            "min": "142.68",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.34",
            "p50": "92.52",
            "p95": "84.11",
            "p99": "78.28",
            "min": "77.86",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "241.09",
            "p50": "217.31",
            "p95": "169.63",
            "p99": "147.15",
            "min": "142.57",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "185.78",
            "p50": "170.98",
            "p95": "139.01",
            "p99": "126.39",
            "min": "126.20",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "153.90",
            "p50": "142.99",
            "p95": "121.03",
            "p99": "109.05",
            "min": "107.39",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "438.78",
            "p50": "365.37",
            "p95": "236.52",
            "p99": "182.94",
            "min": "182.60",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4205.00",
            "p50": "1478.41",
            "p95": "435.20",
            "p99": "335.17",
            "min": "331.55",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "438.36",
            "p50": "366.40",
            "p95": "231.37",
            "p99": "206.46",
            "min": "205.87",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "10466.01",
            "p50": "1973.86",
            "p95": "606.86",
            "p99": "484.86",
            "min": "476.63",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2682.91",
            "p50": "1211.80",
            "p95": "425.60",
            "p99": "356.32",
            "min": "343.56",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "205.66",
            "p50": "187.05",
            "p95": "149.97",
            "p99": "137.96",
            "min": "137.17",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "231.86",
            "p50": "209.94",
            "p95": "165.01",
            "p99": "144.29",
            "min": "142.20",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "127.22",
            "p50": "121.04",
            "p95": "103.23",
            "p99": "92.94",
            "min": "92.00",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "206.29",
            "p50": "188.90",
            "p95": "154.07",
            "p99": "139.09",
            "min": "138.00",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "140.83",
            "p50": "132.25",
            "p95": "114.12",
            "p99": "110.22",
            "min": "110.07",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "174.05",
            "p50": "160.47",
            "p95": "132.03",
            "p99": "94.45",
            "min": "83.95",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "182.75",
            "p50": "171.08",
            "p95": "139.96",
            "p99": "123.31",
            "min": "122.80",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "184.57",
            "p50": "170.46",
            "p95": "142.69",
            "p99": "130.77",
            "min": "128.98",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "284.42",
            "p50": "214.11",
            "p95": "127.27",
            "p99": "126.97",
            "min": "113.28",
            "n": "91",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "142.17",
            "p50": "133.40",
            "p95": "110.36",
            "p99": "114.13",
            "min": "103.76",
            "n": "72",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "89.20",
            "p50": "85.49",
            "p95": "79.63",
            "p99": "75.97",
            "min": "75.95",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "90.39",
            "p50": "86.69",
            "p95": "82.16",
            "p99": "80.06",
            "min": "80.01",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "89.66",
            "p50": "86.27",
            "p95": "82.16",
            "p99": "77.57",
            "min": "77.22",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "189.46",
            "p50": "182.06",
            "p95": "176.72",
            "p99": "137.33",
            "min": "117.13",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "92.67",
            "p50": "90.82",
            "p95": "87.38",
            "p99": "84.55",
            "min": "84.41",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "113.27",
            "p50": "110.64",
            "p95": "106.20",
            "p99": "104.38",
            "min": "104.20",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "127.80",
            "p50": "121.71",
            "p95": "108.85",
            "p99": "100.10",
            "min": "99.49",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "128.25",
            "p50": "124.31",
            "p95": "121.38",
            "p99": "116.88",
            "min": "116.84",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "97.07",
            "p50": "94.71",
            "p95": "77.94",
            "p99": "74.51",
            "min": "73.66",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.99",
            "p50": "96.43",
            "p95": "95.02",
            "p99": "90.61",
            "min": "90.11",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.11",
            "p50": "96.43",
            "p95": "94.85",
            "p99": "93.79",
            "min": "93.67",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.93",
            "p50": "123.40",
            "p95": "120.84",
            "p99": "118.54",
            "min": "118.42",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "121.04",
            "p50": "118.48",
            "p95": "114.16",
            "p99": "104.22",
            "min": "102.07",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "116.73",
            "p50": "114.25",
            "p95": "111.51",
            "p99": "106.50",
            "min": "106.41",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "76.63",
            "p50": "73.38",
            "p95": "67.77",
            "p99": "63.74",
            "min": "63.38",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "99.05",
            "p50": "98.27",
            "p95": "96.53",
            "p99": "95.11",
            "min": "92.99",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "61.31",
            "p50": "60.13",
            "p95": "57.51",
            "p99": "56.92",
            "min": "55.89",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "159.51",
            "p50": "127.79",
            "p95": "120.01",
            "p99": "136.15",
            "min": "118.53",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "110.10",
            "p50": "108.38",
            "p95": "105.32",
            "p99": "107.01",
            "min": "104.68",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "384.82",
            "p50": "369.75",
            "p95": "349.17",
            "p99": "317.11",
            "min": "305.75",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "513.62",
            "p50": "487.77",
            "p95": "473.49",
            "p99": "436.59",
            "min": "434.24",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "380.04",
            "p50": "367.04",
            "p95": "336.43",
            "p99": "307.98",
            "min": "297.97",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "382.75",
            "p50": "370.64",
            "p95": "353.84",
            "p99": "328.23",
            "min": "319.13",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "384.63",
            "p50": "372.09",
            "p95": "347.21",
            "p99": "297.60",
            "min": "288.23",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "474.73",
            "p50": "452.15",
            "p95": "435.33",
            "p99": "374.83",
            "min": "366.03",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "97.09",
            "p50": "94.95",
            "p95": "90.74",
            "p99": "89.44",
            "min": "89.39",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "97.73",
            "p50": "95.44",
            "p95": "91.38",
            "p99": "89.56",
            "min": "89.27",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "96.28",
            "p50": "94.38",
            "p95": "90.39",
            "p99": "85.53",
            "min": "84.52",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "88.61",
            "p50": "87.07",
            "p95": "84.25",
            "p99": "83.44",
            "min": "83.37",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.89",
            "p50": "86.30",
            "p95": "83.34",
            "p99": "80.25",
            "min": "79.75",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "90.64",
            "p50": "87.61",
            "p95": "82.89",
            "p99": "82.29",
            "min": "82.24",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "86.09",
            "p50": "83.36",
            "p95": "78.47",
            "p99": "77.82",
            "min": "77.78",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "86.02",
            "p50": "83.06",
            "p95": "78.63",
            "p99": "74.55",
            "min": "73.60",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "85.86",
            "p50": "83.14",
            "p95": "78.65",
            "p99": "77.54",
            "min": "77.37",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1341.76",
            "p50": "1217.58",
            "p95": "690.42",
            "p99": "434.97",
            "min": "337.36",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1313.69",
            "p50": "1204.45",
            "p95": "831.15",
            "p99": "428.69",
            "min": "409.74",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "90.07",
            "p50": "89.25",
            "p95": "83.93",
            "p99": "79.94",
            "min": "79.63",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "2054.99",
            "p50": "1791.24",
            "p95": "1033.42",
            "p99": "664.09",
            "min": "645.09",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "90.38",
            "p50": "89.21",
            "p95": "84.20",
            "p99": "78.65",
            "min": "77.15",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "1652.89",
            "p50": "1482.99",
            "p95": "844.31",
            "p99": "334.99",
            "min": "328.54",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "97.94",
            "p50": "96.57",
            "p95": "94.12",
            "p99": "91.07",
            "min": "90.83",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "184.95",
            "p50": "176.38",
            "p95": "171.16",
            "p99": "168.10",
            "min": "167.96",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "412.19",
            "p50": "360.60",
            "p95": "270.49",
            "p99": "257.01",
            "min": "252.75",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5506.85",
            "p50": "2277.57",
            "p95": "847.07",
            "p99": "542.92",
            "min": "508.32",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "438.00",
            "p50": "380.97",
            "p95": "300.43",
            "p99": "266.82",
            "min": "263.17",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "29144.57",
            "p50": "8794.10",
            "p95": "2639.51",
            "p99": "1868.18",
            "min": "1811.77",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4972.05",
            "p50": "2991.75",
            "p95": "1308.62",
            "p99": "915.24",
            "min": "845.13",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "360.06",
            "p50": "319.85",
            "p95": "247.67",
            "p99": "195.54",
            "min": "179.24",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "154.32",
            "p50": "142.24",
            "p95": "121.49",
            "p99": "97.09",
            "min": "94.78",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "124.08",
            "p50": "111.85",
            "p95": "103.24",
            "p99": "96.20",
            "min": "95.91",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "136.93",
            "p50": "122.89",
            "p95": "117.87",
            "p99": "102.55",
            "min": "97.72",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "125.45",
            "p50": "118.35",
            "p95": "114.86",
            "p99": "112.83",
            "min": "112.48",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "173.01",
            "p50": "148.37",
            "p95": "142.58",
            "p99": "135.10",
            "min": "134.36",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "94.74",
            "p50": "92.55",
            "p95": "90.34",
            "p99": "88.97",
            "min": "88.82",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "117.92",
            "p50": "109.44",
            "p95": "105.94",
            "p99": "102.13",
            "min": "100.47",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "898.09",
            "p50": "835.59",
            "p95": "320.59",
            "p99": "306.54",
            "min": "303.96",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "124.82",
            "p50": "117.79",
            "p95": "112.57",
            "p99": "105.76",
            "min": "104.75",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}