{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "113.66",
            "p50": "107.96",
            "p95": "99.19",
            "p99": "95.19",
            "min": "94.42",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1105.00",
            "p50": "919.43",
            "p95": "574.48",
            "p99": "461.06",
            "min": "443.29",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "113.43",
            "p50": "108.63",
            "p95": "99.88",
            "p99": "91.14",
            "min": "90.26",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "752.10",
            "p50": "693.01",
            "p95": "461.73",
            "p99": "400.19",
            "min": "379.88",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "401.63",
            "p50": "370.33",
            "p95": "323.68",
            "p99": "293.85",
            "min": "292.33",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "426.49",
            "p50": "394.07",
            "p95": "321.33",
            "p99": "280.30",
            "min": "278.96",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "291.37",
            "p50": "275.49",
            "p95": "192.42",
            "p99": "190.16",
            "min": "190.07",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "183.19",
            "p50": "173.13",
            "p95": "158.60",
            "p99": "144.57",
            "min": "142.18",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "254.45",
            "p50": "232.75",
            "p95": "209.69",
            "p99": "195.62",
            "min": "194.15",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "257.08",
            "p50": "238.21",
            "p95": "210.81",
            "p99": "195.54",
            "min": "194.33",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "258.66",
            "p50": "237.17",
            "p95": "208.18",
            "p99": "190.90",
            "min": "188.61",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "200.97",
            "p50": "190.33",
            "p95": "172.04",
            "p99": "159.20",
            "min": "157.47",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "333.76",
            "p50": "308.23",
            "p95": "261.50",
            "p99": "237.82",
            "min": "237.09",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "297.07",
            "p50": "275.40",
            "p95": "233.97",
            "p99": "172.59",
            "min": "159.71",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8695.98",
            "p50": "3730.63",
            "p95": "2250.36",
            "p99": "1521.89",
            "min": "1467.64",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2976.84",
            "p50": "1492.47",
            "p95": "947.02",
            "p99": "1636.73",
            "min": "915.12",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "324.18",
            "p50": "291.30",
            "p95": "248.20",
            "p99": "247.36",
            "min": "229.34",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1416.75",
            "p50": "746.06",
            "p95": "340.62",
            "p99": "798.29",
            "min": "331.73",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7364.56",
            "p50": "3546.95",
            "p95": "1545.49",
            "p99": "3943.84",
            "min": "1363.30",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "823.65",
            "p50": "694.35",
            "p95": "498.45",
            "p99": "440.54",
            "min": "427.55",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "808.75",
            "p50": "743.87",
            "p95": "536.84",
            "p99": "456.95",
            "min": "428.43",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "949.81",
            "p50": "779.78",
            "p95": "531.03",
            "p99": "468.77",
            "min": "450.69",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2410.91",
            "p50": "1749.74",
            "p95": "961.37",
            "p99": "752.71",
            "min": "733.24",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2403.52",
            "p50": "1811.86",
            "p95": "918.10",
            "p99": "770.68",
            "min": "766.48",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "796.42",
            "p50": "711.70",
            "p95": "521.69",
            "p99": "457.13",
            "min": "432.22",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "167.51",
            "p50": "155.83",
            "p95": "145.48",
            "p99": "138.56",
            "min": "137.92",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "557.51",
            "p50": "473.04",
            "p95": "374.19",
            "p99": "239.06",
            "min": "217.84",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "169.45",
            "p50": "154.29",
            "p95": "144.40",
            "p99": "139.42",
            "min": "138.97",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "187.48",
            "p50": "172.38",
            "p95": "156.32",
            "p99": "149.73",
            "min": "149.08",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "32672.95",
            "p50": "8013.25",
            "p95": "2260.51",
            "p99": "1274.08",
            "min": "811.88",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "420.96",
            "p50": "371.30",
            "p95": "300.37",
            "p99": "286.00",
            "min": "285.38",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "394.87",
            "p50": "354.57",
            "p95": "307.28",
            "p99": "176.81",
            "min": "149.12",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "401.51",
            "p50": "355.73",
            "p95": "290.58",
            "p99": "271.55",
            "min": "271.01",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "399.82",
            "p50": "356.73",
            "p95": "312.87",
            "p99": "276.68",
            "min": "273.43",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "16790.21",
            "p50": "5335.17",
            "p95": "2415.05",
            "p99": "2248.34",
            "min": "2247.94",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "16932.73",
            "p50": "5868.05",
            "p95": "2372.14",
            "p99": "1478.02",
            "min": "1432.34",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "15807.43",
            "p50": "5071.02",
            "p95": "2413.88",
            "p99": "1850.55",
            "min": "1737.71",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "16477.50",
            "p50": "5512.70",
            "p95": "2436.22",
            "p99": "2005.45",
            "min": "1939.99",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "16004.69",
            "p50": "5061.46",
            "p95": "2351.73",
            "p99": "2225.52",
            "min": "2211.79",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "16884.58",
            "p50": "5313.30",
            "p95": "2442.41",
            "p99": "2090.07",
            "min": "1873.07",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "259.80",
            "p50": "233.85",
            "p95": "204.27",
            "p99": "189.57",
            "min": "189.54",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "516.41",
            "p50": "469.84",
            "p95": "375.98",
            "p99": "334.50",
            "min": "327.84",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1634.84",
            "p50": "1300.58",
            "p95": "375.65",
            "p99": "289.02",
            "min": "287.86",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "19994.08",
            "p50": "4784.35",
            "p95": "198.68",
            "p99": "169.03",
            "min": "167.95",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1404.45",
            "p50": "1225.91",
            "p95": "677.51",
            "p99": "575.09",
            "min": "550.16",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "55292.70",
            "p50": "9202.00",
            "p95": "2345.39",
            "p99": "1154.79",
            "min": "467.95",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13296.23",
            "p50": "6184.23",
            "p95": "190.28",
            "p99": "176.49",
            "min": "174.55",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "563.56",
            "p50": "484.64",
            "p95": "392.38",
            "p99": "363.93",
            "min": "362.32",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "543.04",
            "p50": "495.31",
            "p95": "381.15",
            "p99": "350.23",
            "min": "345.57",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "199.58",
            "p50": "190.11",
            "p95": "173.90",
            "p99": "164.91",
            "min": "164.25",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "384.03",
            "p50": "353.86",
            "p95": "305.67",
            "p99": "267.64",
            "min": "267.23",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "199.58",
            "p50": "190.13",
            "p95": "173.82",
            "p99": "164.73",
            "min": "164.14",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "336.26",
            "p50": "313.49",
            "p95": "263.48",
            "p99": "166.02",
            "min": "155.43",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "259.87",
            "p50": "241.46",
            "p95": "212.37",
            "p99": "203.70",
            "min": "202.57",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "573.76",
            "p50": "518.46",
            "p95": "402.47",
            "p99": "362.15",
            "min": "352.19",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1417.78",
            "p50": "1208.82",
            "p95": "901.00",
            "p99": "690.00",
            "min": "634.37",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "287.05",
            "p50": "269.25",
            "p95": "236.58",
            "p99": "224.88",
            "min": "223.55",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "140.76",
            "p50": "131.13",
            "p95": "117.01",
            "p99": "104.18",
            "min": "102.42",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "139.14",
            "p50": "131.04",
            "p95": "115.60",
            "p99": "107.17",
            "min": "105.80",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "138.16",
            "p50": "131.16",
            "p95": "116.64",
            "p99": "113.32",
            "min": "113.29",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "251.48",
            "p50": "227.55",
            "p95": "190.58",
            "p99": "165.38",
            "min": "155.56",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "188.72",
            "p50": "175.43",
            "p95": "152.62",
            "p99": "144.40",
            "min": "143.92",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "200.96",
            "p50": "186.39",
            "p95": "153.51",
            "p99": "118.89",
            "min": "107.51",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "185.58",
            "p50": "169.61",
            "p95": "151.01",
            "p99": "122.81",
            "min": "117.83",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "181.47",
            "p50": "168.50",
            "p95": "142.73",
            "p99": "93.82",
            "min": "81.73",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "207.03",
            "p50": "190.74",
            "p95": "161.53",
            "p99": "142.53",
            "min": "138.56",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "183.45",
            "p50": "169.45",
            "p95": "144.23",
            "p99": "98.21",
            "min": "90.80",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "204.92",
            "p50": "188.36",
            "p95": "159.64",
            "p99": "134.16",
            "min": "130.04",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "150.48",
            "p50": "140.51",
            "p95": "122.74",
            "p99": "98.43",
            "min": "93.58",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "226.43",
            "p50": "207.20",
            "p95": "182.34",
            "p99": "148.48",
            "min": "144.62",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "182.58",
            "p50": "167.84",
            "p95": "144.95",
            "p99": "133.85",
            "min": "133.76",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "102.92",
            "p50": "95.16",
            "p95": "87.52",
            "p99": "83.06",
            "min": "82.38",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "136.16",
            "p50": "128.19",
            "p95": "112.82",
            "p99": "118.99",
            "min": "109.74",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "433.14",
            "p50": "336.34",
            "p95": "269.51",
            "p99": "246.77",
            "min": "203.06",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "177.02",
            "p50": "140.77",
            "p95": "132.93",
            "p99": "151.62",
            "min": "132.45",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "130.22",
            "p50": "121.31",
            "p95": "109.69",
            "p99": "117.16",
            "min": "107.31",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1160.28",
            "p50": "880.70",
            "p95": "583.25",
            "p99": "453.44",
            "min": "445.89",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1008.22",
            "p50": "820.39",
            "p95": "482.31",
            "p99": "405.39",
            "min": "399.50",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1391.29",
            "p50": "1046.07",
            "p95": "572.78",
            "p99": "465.86",
            "min": "453.42",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1296.13",
            "p50": "993.24",
            "p95": "566.09",
            "p99": "458.61",
            "min": "454.32",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1286.73",
            "p50": "979.02",
            "p95": "549.13",
            "p99": "447.61",
            "min": "446.56",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1056.03",
            "p50": "822.06",
            "p95": "552.26",
            "p99": "421.17",
            "min": "418.52",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "668.57",
            "p50": "550.56",
            "p95": "366.62",
            "p99": "326.44",
            "min": "319.60",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "684.92",
            "p50": "548.60",
            "p95": "369.11",
            "p99": "355.48",
            "min": "353.58",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "686.35",
            "p50": "551.99",
            "p95": "380.38",
            "p99": "305.44",
            "min": "297.00",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "690.67",
            "p50": "560.34",
            "p95": "366.84",
            "p99": "301.96",
            "min": "294.87",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "287.90",
            "p50": "263.91",
            "p95": "209.06",
            "p99": "186.34",
            "min": "181.65",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "608.08",
            "p50": "465.87",
            "p95": "363.39",
            "p99": "295.65",
            "min": "291.72",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "592.40",
            "p50": "492.85",
            "p95": "346.79",
            "p99": "294.03",
            "min": "286.51",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "615.06",
            "p50": "488.08",
            "p95": "352.72",
            "p99": "280.27",
            "min": "268.87",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "615.57",
            "p50": "487.36",
            "p95": "351.93",
            "p99": "295.10",
            "min": "291.00",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.33",
            "p50": "101.14",
            "p95": "93.48",
            "p99": "88.65",
            "min": "88.02",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.93",
            "p50": "101.22",
            "p95": "92.63",
            "p99": "88.20",
            "min": "87.63",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.43",
            "p50": "93.71",
            "p95": "85.24",
            "p99": "81.71",
            "min": "80.98",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "252.90",
            "p50": "232.89",
            "p95": "190.22",
            "p99": "176.05",
            "min": "174.35",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.46",
            "p50": "93.65",
            "p95": "85.52",
            "p99": "82.44",
            "min": "82.39",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "245.24",
            "p50": "225.27",
            "p95": "186.55",
            "p99": "173.33",
            "min": "171.39",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "205.21",
            "p50": "189.57",
            "p95": "168.96",
            "p99": "153.38",
            "min": "153.05",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "237.55",
            "p50": "217.94",
            "p95": "182.03",
            "p99": "169.96",
            "min": "168.70",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "574.31",
            "p50": "489.46",
            "p95": "355.33",
            "p99": "313.40",
            "min": "307.82",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5748.23",
            "p50": "2600.73",
            "p95": "1202.06",
            "p99": "949.17",
            "min": "948.52",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "529.35",
            "p50": "458.45",
            "p95": "345.49",
            "p99": "290.14",
            "min": "287.37",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "16344.26",
            "p50": "4447.94",
            "p95": "1317.19",
            "p99": "896.66",
            "min": "715.00",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3436.51",
            "p50": "2049.92",
            "p95": "870.78",
            "p99": "770.06",
            "min": "743.07",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "226.14",
            "p50": "199.13",
            "p95": "159.87",
            "p99": "153.39",
            "min": "153.03",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "261.73",
            "p50": "236.26",
            "p95": "194.74",
            "p99": "163.61",
            "min": "156.56",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "151.91",
            "p50": "143.43",
            "p95": "128.25",
            "p99": "120.76",
            "min": "120.24",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "241.42",
            "p50": "222.20",
            "p95": "184.59",
            "p99": "173.87",
            "min": "172.93",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "180.27",
            "p50": "169.34",
            "p95": "145.57",
            "p99": "135.42",
            "min": "134.42",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "218.48",
            "p50": "203.35",
            "p95": "175.94",
            "p99": "163.82",
            "min": "162.03",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "207.74",
            "p50": "192.16",
            "p95": "155.69",
            "p99": "141.44",
            "min": "140.23",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "206.36",
            "p50": "190.84",
            "p95": "166.03",
            "p99": "128.70",
            "min": "124.51",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1259.01",
            "p50": "1057.64",
            "p95": "745.78",
            "p99": "476.26",
            "min": "467.83",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "179.25",
            "p50": "168.17",
            "p95": "146.98",
            "p99": "101.96",
            "min": "87.15",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "191.53",
            "p50": "187.67",
            "p95": "168.18",
            "p99": "157.48",
            "min": "155.67",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "192.52",
            "p50": "187.86",
            "p95": "177.50",
            "p99": "165.55",
            "min": "164.48",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "193.50",
            "p50": "189.04",
            "p95": "179.45",
            "p99": "169.68",
            "min": "168.65",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1135.34",
            "p50": "1093.94",
            "p95": "826.99",
            "p99": "649.65",
            "min": "629.75",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "618.87",
            "p50": "602.49",
            "p95": "497.37",
            "p99": "450.67",
            "min": "450.45",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "672.29",
            "p50": "651.41",
            "p95": "516.92",
            "p99": "116.81",
            "min": "116.49",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "673.34",
            "p50": "656.13",
            "p95": "556.12",
            "p99": "490.87",
            "min": "484.93",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "774.91",
            "p50": "751.47",
            "p95": "630.79",
            "p99": "491.93",
            "min": "472.41",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "910.35",
            "p50": "865.06",
            "p95": "672.99",
            "p99": "511.29",
            "min": "505.09",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "865.49",
            "p50": "824.94",
            "p95": "602.33",
            "p99": "477.52",
            "min": "470.17",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "863.49",
            "p50": "830.80",
            "p95": "626.75",
            "p99": "464.70",
            "min": "455.56",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "837.23",
            "p50": "793.78",
            "p95": "625.63",
            "p99": "589.01",
            "min": "584.77",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "738.43",
            "p50": "714.70",
            "p95": "584.34",
            "p99": "556.71",
            "min": "550.23",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "851.42",
            "p50": "822.81",
            "p95": "686.61",
            "p99": "576.04",
            "min": "568.34",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "118.57",
            "p50": "112.32",
            "p95": "109.47",
            "p99": "105.90",
            "min": "105.83",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "94.93",
            "p50": "93.09",
            "p95": "90.12",
            "p99": "89.56",
            "min": "86.67",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "511.83",
            "p50": "496.73",
            "p95": "428.95",
            "p99": "367.85",
            "min": "334.07",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "128.59",
            "p50": "101.53",
            "p95": "94.38",
            "p99": "108.33",
            "min": "93.04",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "88.68",
            "p50": "86.63",
            "p95": "84.18",
            "p99": "85.01",
            "min": "82.25",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1824.30",
            "p50": "1735.32",
            "p95": "1255.73",
            "p99": "764.95",
            "min": "701.79",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1640.02",
            "p50": "1565.13",
            "p95": "934.92",
            "p99": "700.84",
            "min": "697.99",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2283.73",
            "p50": "2148.59",
            "p95": "1200.64",
            "p99": "844.93",
            "min": "842.50",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2288.96",
            "p50": "2152.71",
            "p95": "1332.77",
            "p99": "720.88",
            "min": "684.61",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2240.13",
            "p50": "2117.95",
            "p95": "1186.11",
            "p99": "806.24",
            "min": "753.83",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1685.35",
            "p50": "1606.91",
            "p95": "1067.99",
            "p99": "638.21",
            "min": "597.93",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "767.87",
            "p50": "728.94",
            "p95": "596.32",
            "p99": "459.65",
            "min": "455.93",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "768.48",
            "p50": "729.46",
            "p95": "602.55",
            "p99": "443.37",
            "min": "423.21",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "776.62",
            "p50": "735.62",
            "p95": "613.42",
            "p99": "476.42",
            "min": "463.92",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "769.21",
            "p50": "736.63",
            "p95": "528.49",
            "p99": "444.74",
            "min": "437.31",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.21",
            "p50": "85.46",
            "p95": "38.80",
            "p99": "37.94",
            "min": "37.94",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "721.08",
            "p50": "691.20",
            "p95": "597.64",
            "p99": "500.75",
            "min": "483.38",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "684.83",
            "p50": "645.74",
            "p95": "536.73",
            "p99": "439.19",
            "min": "437.76",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "682.13",
            "p50": "654.35",
            "p95": "567.19",
            "p99": "480.64",
            "min": "478.37",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "688.11",
            "p50": "650.24",
            "p95": "547.34",
            "p99": "437.62",
            "min": "427.61",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2442.02",
            "p50": "2295.28",
            "p95": "1365.09",
            "p99": "964.36",
            "min": "904.84",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2792.84",
            "p50": "2631.98",
            "p95": "1593.03",
            "p99": "915.02",
            "min": "905.46",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "105.26",
            "p50": "103.05",
            "p95": "99.89",
            "p99": "94.28",
            "min": "94.06",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "15164.84",
            "p50": "7797.52",
            "p95": "2434.84",
            "p99": "1878.50",
            "min": "1418.11",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "105.09",
            "p50": "103.05",
            "p95": "100.07",
            "p99": "94.95",
            "min": "94.83",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "6088.99",
            "p50": "5445.09",
            "p95": "2123.52",
            "p99": "1602.51",
            "min": "1508.24",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "861.21",
            "p50": "823.56",
            "p95": "636.46",
            "p99": "552.06",
            "min": "545.82",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "664.14",
            "p50": "639.21",
            "p95": "544.24",
            "p99": "440.86",
            "min": "428.78",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2180.88",
            "p50": "2037.14",
            "p95": "1301.02",
            "p99": "769.20",
            "min": "737.40",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "20575.82",
            "p50": "8451.22",
            "p95": "2371.11",
            "p99": "1890.42",
            "min": "1476.81",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2011.57",
            "p50": "1891.00",
            "p95": "1142.47",
            "p99": "663.48",
            "min": "656.38",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "78111.19",
            "p50": "9242.24",
            "p95": "2354.82",
            "p99": "1808.76",
            "min": "1445.81",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "17236.39",
            "p50": "8439.94",
            "p95": "2403.94",
            "p99": "2113.10",
            "min": "2043.94",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "680.79",
            "p50": "579.95",
            "p95": "472.30",
            "p99": "408.41",
            "min": "393.83",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "919.89",
            "p50": "897.68",
            "p95": "650.84",
            "p99": "516.51",
            "min": "513.81",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "833.31",
            "p50": "798.94",
            "p95": "613.00",
            "p99": "456.48",
            "min": "433.24",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1147.43",
            "p50": "1102.02",
            "p95": "780.21",
            "p99": "537.98",
            "min": "520.59",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "770.63",
            "p50": "750.86",
            "p95": "555.91",
            "p99": "412.54",
            "min": "400.76",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1134.67",
            "p50": "1074.82",
            "p95": "825.65",
            "p99": "705.47",
            "min": "684.41",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "805.61",
            "p50": "772.97",
            "p95": "620.76",
            "p99": "475.73",
            "min": "474.65",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "879.46",
            "p50": "841.74",
            "p95": "658.68",
            "p99": "495.12",
            "min": "466.07",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2177.12",
            "p50": "1972.38",
            "p95": "1580.90",
            "p99": "1179.05",
            "min": "1129.42",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "850.01",
            "p50": "808.66",
            "p95": "616.91",
            "p99": "439.82",
            "min": "421.35",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "122.07",
            "p50": "116.78",
            "p95": "103.03",
            "p99": "93.57",
            "min": "93.40",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "122.08",
            "p50": "116.83",
            "p95": "101.77",
            "p99": "97.04",
            "min": "96.82",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "122.04",
            "p50": "117.07",
            "p95": "106.62",
            "p99": "99.66",
            "min": "99.32",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "209.37",
            "p50": "191.78",
            "p95": "158.83",
            "p99": "144.66",
            "min": "143.87",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.20",
            "p50": "97.17",
            "p95": "84.34",
            "p99": "79.44",
            "min": "78.81",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "108.41",
            "p50": "102.01",
            "p95": "87.48",
            "p99": "82.82",
            "min": "82.78",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "135.07",
            "p50": "125.70",
            "p95": "101.73",
            "p99": "98.54",
            "min": "98.42",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "136.82",
            "p50": "127.08",
            "p95": "105.84",
            "p99": "101.09",
            "min": "100.94",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "181.13",
            "p50": "164.48",
            "p95": "132.78",
            "p99": "123.63",
            "min": "123.24",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "176.30",
            "p50": "163.14",
            "p95": "129.78",
            "p99": "121.72",
            "min": "121.41",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "176.43",
            "p50": "162.60",
            "p95": "129.11",
            "p99": "121.25",
            "min": "120.93",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "125.64",
            "p50": "118.53",
            "p95": "100.38",
            "p99": "96.96",
            "min": "96.89",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "200.98",
            "p50": "182.11",
            "p95": "147.23",
            "p99": "134.29",
            "min": "134.08",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "179.96",
            "p50": "164.46",
            "p95": "128.20",
            "p99": "116.85",
            "min": "115.06",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "75.13",
            "p50": "69.97",
            "p95": "63.66",
            "p99": "60.41",
            "min": "60.19",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "129.54",
            "p50": "119.88",
            "p95": "98.78",
            "p99": "108.27",
            "min": "96.82",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "203.89",
            "p50": "181.59",
            "p95": "147.15",
            "p99": "150.19",
            "min": "137.60",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "154.39",
            "p50": "133.76",
            "p95": "130.22",
            "p99": "132.24",
            "min": "115.53",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "123.08",
            "p50": "114.80",
            "p95": "97.35",
            "p99": "107.30",
            "min": "95.40",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1027.56",
            "p50": "665.19",
            "p95": "350.49",
            "p99": "255.53",
            "min": "251.35",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1000.55",
            "p50": "651.13",
            "p95": "287.65",
            "p99": "262.91",
            "min": "261.71",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1109.09",
            "p50": "701.64",
            "p95": "350.27",
            "p99": "284.19",
            "min": "278.28",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1048.08",
            "p50": "686.99",
            "p95": "345.13",
            "p99": "262.76",
            "min": "255.87",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "989.46",
            "p50": "684.53",
            "p95": "326.57",
            "p99": "246.02",
            "min": "236.56",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "986.60",
            "p50": "672.60",
            "p95": "318.58",
            "p99": "273.29",
            "min": "272.38",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "330.18",
            "p50": "281.56",
            "p95": "202.40",
            "p99": "177.17",
            "min": "176.50",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "327.17",
            "p50": "284.09",
            "p95": "207.29",
            "p99": "174.15",
            "min": "171.11",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "323.04",
            "p50": "278.57",
            "p95": "216.30",
            "p99": "184.17",
            "min": "182.99",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "356.77",
            "p50": "301.58",
            "p95": "216.35",
            "p99": "177.14",
            "min": "176.66",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "283.41",
            "p50": "242.94",
            "p95": "182.84",
            "p99": "166.44",
            "min": "164.04",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "271.26",
            "p50": "245.04",
            "p95": "177.15",
            "p99": "160.48",
            "min": "160.09",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "278.09",
            "p50": "236.90",
            "p95": "174.27",
            "p99": "155.65",
            "min": "155.34",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "284.59",
            "p50": "245.84",
            "p95": "191.15",
            "p99": "162.52",
            "min": "161.96",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "282.04",
            "p50": "247.12",
            "p95": "179.73",
            "p99": "167.95",
            "min": "167.83",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "103.35",
            "p50": "97.84",
            "p95": "83.68",
            "p99": "81.29",
            "min": "81.05",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "103.78",
            "p50": "97.89",
            "p95": "85.54",
            "p99": "79.33",
            "min": "78.94",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "96.11",
            "p50": "90.91",
            "p95": "80.90",
            "p99": "77.99",
            "min": "77.82",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "244.39",
            "p50": "217.81",
            "p95": "167.07",
            "p99": "150.56",
            "min": "149.19",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "96.37",
            "p50": "90.75",
            "p95": "81.50",
            "p99": "74.46",
            "min": "73.55",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "240.43",
            "p50": "211.29",
            "p95": "154.36",
            "p99": "148.88",
            "min": "146.87",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "179.87",
            "p50": "165.37",
            "p95": "134.81",
            "p99": "122.74",
            "min": "122.38",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "152.13",
            "p50": "138.87",
            "p95": "111.31",
            "p99": "65.83",
            "min": "44.16",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "438.16",
            "p50": "385.05",
            "p95": "251.17",
            "p99": "214.69",
            "min": "212.59",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5154.36",
            "p50": "2235.91",
            "p95": "639.49",
            "p99": "447.91",
            "min": "382.36",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "437.04",
            "p50": "383.83",
            "p95": "284.92",
            "p99": "240.83",
            "min": "238.11",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14430.04",
            "p50": "3028.37",
            "p95": "1130.85",
            "p99": "869.56",
            "min": "861.95",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3362.76",
            "p50": "1817.48",
            "p95": "596.50",
            "p99": "521.94",
            "min": "519.94",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "204.71",
            "p50": "188.27",
            "p95": "156.60",
            "p99": "141.41",
            "min": "140.91",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "232.23",
            "p50": "212.48",
            "p95": "165.72",
            "p99": "145.25",
            "min": "142.34",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "128.91",
            "p50": "120.18",
            "p95": "105.61",
            "p99": "84.10",
            "min": "78.43",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "208.51",
            "p50": "184.06",
            "p95": "138.48",
            "p99": "130.74",
            "min": "130.22",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "136.11",
            "p50": "127.37",
            "p95": "109.05",
            "p99": "82.59",
            "min": "77.69",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "173.38",
            "p50": "157.22",
            "p95": "127.70",
            "p99": "102.00",
            "min": "98.51",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "175.73",
            "p50": "161.81",
            "p95": "127.99",
            "p99": "118.26",
            "min": "118.07",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "179.89",
            "p50": "163.12",
            "p95": "133.41",
            "p99": "120.45",
            "min": "119.64",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "295.73",
            "p50": "246.03",
            "p95": "53.67",
            "p99": "49.33",
            "min": "49.19",
            "n": "106",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "143.52",
            "p50": "136.78",
            "p95": "111.14",
            "p99": "60.02",
            "min": "57.96",
            "n": "105",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "86.93",
            "p50": "85.11",
            "p95": "75.86",
            "p99": "72.53",
            "min": "72.19",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "87.83",
            "p50": "86.26",
            "p95": "82.11",
            "p99": "79.92",
            "min": "79.50",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "87.59",
            "p50": "85.61",
            "p95": "80.86",
            "p99": "77.82",
            "min": "77.77",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "189.95",
            "p50": "178.20",
            "p95": "168.37",
            "p99": "151.88",
            "min": "151.35",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "96.27",
            "p50": "94.06",
            "p95": "88.32",
            "p99": "83.27",
            "min": "82.35",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "108.47",
            "p50": "107.16",
            "p95": "101.32",
            "p99": "97.36",
            "min": "96.77",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "123.40",
            "p50": "120.19",
            "p95": "109.85",
            "p99": "101.05",
            "min": "100.81",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "127.45",
            "p50": "121.99",
            "p95": "116.27",
            "p99": "114.81",
            "min": "114.69",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "96.74",
            "p50": "93.22",
            "p95": "71.80",
            "p99": "70.48",
            "min": "70.41",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "100.67",
            "p50": "97.88",
            "p95": "94.80",
            "p99": "92.18",
            "min": "91.78",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "101.78",
            "p50": "98.03",
            "p95": "95.21",
            "p99": "91.56",
            "min": "91.02",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.37",
            "p50": "121.99",
            "p95": "117.64",
            "p99": "110.15",
            "min": "109.60",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "135.83",
            "p50": "132.45",
            "p95": "122.15",
            "p99": "113.29",
            "min": "111.68",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "116.16",
            "p50": "114.11",
            "p95": "103.56",
            "p99": "100.04",
            "min": "100.02",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "88.46",
            "p50": "83.55",
            "p95": "77.05",
            "p99": "69.82",
            "min": "69.19",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "100.93",
            "p50": "98.99",
            "p95": "93.45",
            "p99": "95.25",
            "min": "92.19",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "73.64",
            "p50": "71.18",
            "p95": "67.63",
            "p99": "67.85",
            "min": "66.49",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "157.30",
            "p50": "125.02",
            "p95": "117.53",
            "p99": "133.38",
            "min": "115.35",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "108.98",
            "p50": "106.09",
            "p95": "102.43",
            "p99": "103.50",
            "min": "99.37",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "419.98",
            "p50": "404.48",
            "p95": "374.12",
            "p99": "317.29",
            "min": "309.87",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "479.78",
            "p50": "470.64",
            "p95": "447.28",
            "p99": "354.07",
            "min": "310.62",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "451.05",
            "p50": "431.68",
            "p95": "402.82",
            "p99": "342.86",
            "min": "341.27",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "453.98",
            "p50": "435.88",
            "p95": "398.88",
            "p99": "354.32",
            "min": "343.76",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "458.23",
            "p50": "439.37",
            "p95": "417.86",
            "p99": "372.18",
            "min": "369.90",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "461.58",
            "p50": "452.56",
            "p95": "423.29",
            "p99": "371.28",
            "min": "370.25",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "120.27",
            "p50": "116.25",
            "p95": "110.40",
            "p99": "106.46",
            "min": "105.91",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "121.29",
            "p50": "116.67",
            "p95": "111.25",
            "p99": "106.73",
            "min": "106.32",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "119.85",
            "p50": "114.75",
            "p95": "109.29",
            "p99": "102.68",
            "min": "101.57",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "103.05",
            "p50": "99.20",
            "p95": "96.34",
            "p99": "94.97",
            "min": "94.96",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "85.71",
            "p50": "84.31",
            "p95": "83.34",
            "p99": "81.24",
            "min": "80.56",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "119.11",
            "p50": "114.95",
            "p95": "107.27",
            "p99": "102.32",
            "min": "101.63",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "113.81",
            "p50": "108.52",
            "p95": "100.23",
            "p99": "92.89",
            "min": "92.43",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "112.09",
            "p50": "108.57",
            "p95": "102.01",
            "p99": "101.02",
            "min": "101.00",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "112.12",
            "p50": "106.88",
            "p95": "98.85",
            "p99": "89.81",
            "min": "88.51",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1549.59",
            "p50": "1377.50",
            "p95": "667.56",
            "p99": "414.69",
            "min": "393.09",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1552.79",
            "p50": "1370.52",
            "p95": "736.47",
            "p99": "458.38",
            "min": "392.17",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "154.05",
            "p50": "151.28",
            "p95": "139.21",
            "p99": "134.11",
            "min": "133.85",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3877.31",
            "p50": "3427.39",
            "p95": "1411.67",
            "p99": "751.94",
            "min": "613.19",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "153.85",
            "p50": "150.98",
            "p95": "135.96",
            "p99": "122.98",
            "min": "121.62",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3885.51",
            "p50": "3491.30",
            "p95": "1630.93",
            "p99": "513.49",
            "min": "354.59",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "101.72",
            "p50": "98.63",
            "p95": "91.97",
            "p99": "84.28",
            "min": "83.88",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "181.22",
            "p50": "178.06",
            "p95": "174.46",
            "p99": "166.69",
            "min": "163.50",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "345.60",
            "p50": "254.29",
            "p95": "190.03",
            "p99": "161.13",
            "min": "145.86",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9365.66",
            "p50": "1543.71",
            "p95": "793.90",
            "p99": "639.47",
            "min": "638.21",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "344.48",
            "p50": "250.23",
            "p95": "199.35",
            "p99": "172.14",
            "min": "162.21",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "25366.21",
            "p50": "8433.70",
            "p95": "2294.23",
            "p99": "1464.04",
            "min": "1369.65",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6199.03",
            "p50": "3203.40",
            "p95": "1610.75",
            "p99": "1116.30",
            "min": "887.68",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "297.42",
            "p50": "229.79",
            "p95": "168.12",
            "p99": "130.09",
            "min": "121.52",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "150.18",
            "p50": "133.73",
            "p95": "118.07",
            "p99": "108.91",
            "min": "108.25",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "125.60",
            "p50": "118.68",
            "p95": "92.44",
            "p99": "88.98",
            "min": "88.20",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "129.44",
            "p50": "126.25",
            "p95": "102.31",
            "p99": "99.37",
            "min": "98.98",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "124.78",
            "p50": "119.45",
            "p95": "116.21",
            "p99": "112.30",
            "min": "111.64",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "162.12",
            "p50": "156.06",
            "p95": "147.18",
            "p99": "131.20",
            "min": "121.95",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "96.93",
            "p50": "94.43",
            "p95": "76.84",
            "p99": "74.91",
            "min": "74.90",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "121.12",
            "p50": "114.66",
            "p95": "109.88",
            "p99": "105.42",
            "min": "104.77",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1201.57",
            "p50": "1113.91",
            "p95": "382.72",
            "p99": "366.38",
            "min": "364.37",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "126.11",
            "p50": "121.09",
            "p95": "107.08",
            "p99": "99.08",
            "min": "97.18",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}