{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "112.12",
            "p50": "109.50",
            "p95": "101.19",
            "p99": "97.36",
            "min": "97.22",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "995.47",
            "p50": "972.29",
            "p95": "941.97",
            "p99": "903.69",
            "min": "897.10",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "112.87",
            "p50": "110.24",
            "p95": "105.94",
            "p99": "104.44",
            "min": "104.34",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "730.50",
            "p50": "718.48",
            "p95": "498.54",
            "p99": "469.88",
            "min": "461.23",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "368.72",
            "p50": "365.16",
            "p95": "360.18",
            "p99": "353.56",
            "min": "353.22",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "397.56",
            "p50": "393.02",
            "p95": "382.02",
            "p99": "374.14",
            "min": "374.06",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "313.77",
            "p50": "306.58",
            "p95": "191.60",
            "p99": "187.06",
            "min": "186.96",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "187.49",
            "p50": "185.17",
            "p95": "177.29",
            "p99": "171.78",
            "min": "170.65",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "245.45",
            "p50": "237.28",
            "p95": "223.35",
            "p99": "220.16",
            "min": "219.81",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "249.84",
            "p50": "238.04",
            "p95": "229.54",
            "p99": "211.47",
            "min": "207.57",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "256.33",
            "p50": "251.50",
            "p95": "245.67",
            "p99": "241.66",
            "min": "241.18",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "203.00",
            "p50": "199.37",
            "p95": "192.42",
            "p99": "183.75",
            "min": "182.84",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "313.71",
            "p50": "309.60",
            "p95": "275.24",
            "p99": "270.68",
            "min": "270.60",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "297.06",
            "p50": "290.54",
            "p95": "255.48",
            "p99": "250.06",
            "min": "249.44",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "7054.52",
            "p50": "5998.18",
            "p95": "2384.19",
            "p99": "2078.07",
            "min": "1974.45",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2627.04",
            "p50": "2235.25",
            "p95": "1895.65",
            "p99": "2137.82",
            "min": "1874.40",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "287.92",
            "p50": "252.86",
            "p95": "234.57",
            "p99": "236.20",
            "min": "224.07",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1443.42",
            "p50": "953.53",
            "p95": "466.31",
            "p99": "825.49",
            "min": "359.33",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7327.21",
            "p50": "4635.39",
            "p95": "2215.04",
            "p99": "4128.45",
            "min": "1715.35",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "809.75",
            "p50": "781.48",
            "p95": "535.58",
            "p99": "523.29",
            "min": "522.75",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "819.03",
            "p50": "799.43",
            "p95": "752.08",
            "p99": "732.92",
            "min": "727.45",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "917.91",
            "p50": "889.09",
            "p95": "722.85",
            "p99": "649.61",
            "min": "646.32",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2195.04",
            "p50": "2073.52",
            "p95": "1786.35",
            "p99": "1678.42",
            "min": "1608.08",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2218.90",
            "p50": "2079.99",
            "p95": "1793.09",
            "p99": "1738.60",
            "min": "1723.66",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "809.01",
            "p50": "792.32",
            "p95": "741.93",
            "p99": "728.07",
            "min": "726.81",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "163.38",
            "p50": "156.28",
            "p95": "136.75",
            "p99": "132.15",
            "min": "132.12",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "508.15",
            "p50": "478.37",
            "p95": "401.08",
            "p99": "377.76",
            "min": "372.95",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "163.86",
            "p50": "153.31",
            "p95": "142.46",
            "p99": "132.58",
            "min": "132.58",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "185.00",
            "p50": "176.77",
            "p95": "153.30",
            "p99": "150.73",
            "min": "150.58",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "35181.44",
            "p50": "8482.25",
            "p95": "2535.66",
            "p99": "1468.88",
            "min": "937.95",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "376.88",
            "p50": "313.53",
            "p95": "305.83",
            "p99": "261.94",
            "min": "252.23",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "359.78",
            "p50": "298.79",
            "p95": "291.53",
            "p99": "285.95",
            "min": "285.44",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "361.88",
            "p50": "305.70",
            "p95": "291.26",
            "p99": "288.41",
            "min": "288.28",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "357.95",
            "p50": "298.52",
            "p95": "290.30",
            "p99": "281.34",
            "min": "279.75",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "13703.61",
            "p50": "7452.17",
            "p95": "2613.29",
            "p99": "1890.14",
            "min": "1513.33",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "14376.32",
            "p50": "7820.95",
            "p95": "2502.50",
            "p99": "2271.56",
            "min": "2261.28",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "13799.39",
            "p50": "6611.18",
            "p95": "2469.06",
            "p99": "1902.41",
            "min": "1764.17",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "13986.89",
            "p50": "6506.51",
            "p95": "2485.72",
            "p99": "2252.75",
            "min": "2251.53",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "13097.17",
            "p50": "5734.84",
            "p95": "2272.34",
            "p99": "1609.51",
            "min": "1564.25",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "14524.08",
            "p50": "7250.71",
            "p95": "2445.17",
            "p99": "1935.01",
            "min": "1529.10",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "249.11",
            "p50": "238.55",
            "p95": "228.88",
            "p99": "195.15",
            "min": "186.80",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "525.21",
            "p50": "516.59",
            "p95": "497.54",
            "p99": "461.42",
            "min": "458.13",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1634.70",
            "p50": "1555.58",
            "p95": "377.15",
            "p99": "336.46",
            "min": "307.77",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "21816.73",
            "p50": "5982.19",
            "p95": "192.97",
            "p99": "170.48",
            "min": "168.25",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1423.17",
            "p50": "1360.95",
            "p95": "276.33",
            "p99": "109.36",
            "min": "80.96",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "52694.77",
            "p50": "8835.75",
            "p95": "2503.44",
            "p99": "267.38",
            "min": "183.85",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15749.81",
            "p50": "7721.58",
            "p95": "192.05",
            "p99": "177.56",
            "min": "177.24",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "568.46",
            "p50": "533.48",
            "p95": "449.30",
            "p99": "398.13",
            "min": "387.00",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "516.60",
            "p50": "507.00",
            "p95": "475.59",
            "p99": "441.23",
            "min": "434.61",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "204.23",
            "p50": "201.26",
            "p95": "193.93",
            "p99": "190.03",
            "min": "188.71",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "383.59",
            "p50": "372.69",
            "p95": "367.61",
            "p99": "362.59",
            "min": "361.83",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "205.45",
            "p50": "202.22",
            "p95": "194.39",
            "p99": "192.47",
            "min": "192.33",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "343.05",
            "p50": "335.61",
            "p95": "326.06",
            "p99": "313.35",
            "min": "311.56",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "257.32",
            "p50": "254.10",
            "p95": "241.11",
            "p99": "219.13",
            "min": "215.79",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "525.21",
            "p50": "509.84",
            "p95": "474.42",
            "p99": "453.42",
            "min": "448.01",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1438.21",
            "p50": "1276.64",
            "p95": "943.83",
            "p99": "826.10",
            "min": "793.53",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "312.26",
            "p50": "303.76",
            "p95": "285.07",
            "p99": "277.18",
            "min": "277.12",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "90.29",
            "p50": "89.39",
            "p95": "84.42",
            "p99": "76.30",
            "min": "74.67",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "82.33",
            "p50": "81.50",
            "p95": "77.98",
            "p99": "75.25",
            "min": "74.97",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "84.09",
            "p50": "83.30",
            "p95": "78.48",
            "p99": "74.92",
            "min": "74.57",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "250.15",
            "p50": "245.64",
            "p95": "217.88",
            "p99": "172.47",
            "min": "154.49",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "185.99",
            "p50": "182.44",
            "p95": "166.68",
            "p99": "125.37",
            "min": "119.41",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "195.61",
            "p50": "193.30",
            "p95": "168.97",
            "p99": "112.91",
            "min": "94.96",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "185.57",
            "p50": "178.66",
            "p95": "161.87",
            "p99": "100.44",
            "min": "87.89",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "183.23",
            "p50": "177.10",
            "p95": "160.92",
            "p99": "154.09",
            "min": "153.48",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "208.89",
            "p50": "201.18",
            "p95": "177.84",
            "p99": "161.51",
            "min": "157.95",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "186.89",
            "p50": "179.34",
            "p95": "164.67",
            "p99": "145.57",
            "min": "143.56",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "209.92",
            "p50": "206.03",
            "p95": "183.77",
            "p99": "174.37",
            "min": "174.32",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "153.98",
            "p50": "149.81",
            "p95": "139.11",
            "p99": "129.76",
            "min": "129.24",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "226.59",
            "p50": "220.96",
            "p95": "196.68",
            "p99": "167.45",
            "min": "163.10",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "186.74",
            "p50": "180.13",
            "p95": "164.60",
            "p99": "135.09",
            "min": "130.07",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.79",
            "p50": "66.55",
            "p95": "62.84",
            "p99": "60.49",
            "min": "60.43",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "142.48",
            "p50": "139.29",
            "p95": "128.74",
            "p99": "131.55",
            "min": "125.67",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "443.52",
            "p50": "379.09",
            "p95": "282.41",
            "p99": "231.15",
            "min": "181.34",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "196.35",
            "p50": "153.45",
            "p95": "142.89",
            "p99": "164.55",
            "min": "140.56",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.61",
            "p50": "132.88",
            "p95": "120.43",
            "p99": "125.21",
            "min": "117.37",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1233.90",
            "p50": "1188.00",
            "p95": "738.15",
            "p99": "533.45",
            "min": "506.17",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1065.63",
            "p50": "1035.46",
            "p95": "680.35",
            "p99": "518.22",
            "min": "482.81",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1483.01",
            "p50": "1395.33",
            "p95": "901.52",
            "p99": "711.49",
            "min": "575.65",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1374.98",
            "p50": "1255.85",
            "p95": "835.64",
            "p99": "651.60",
            "min": "561.71",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1341.99",
            "p50": "1259.99",
            "p95": "800.70",
            "p99": "570.49",
            "min": "525.32",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1099.33",
            "p50": "1076.53",
            "p95": "730.83",
            "p99": "592.01",
            "min": "564.61",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "742.80",
            "p50": "631.46",
            "p95": "466.94",
            "p99": "405.90",
            "min": "399.13",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "740.80",
            "p50": "669.05",
            "p95": "449.09",
            "p99": "350.62",
            "min": "349.22",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "751.44",
            "p50": "648.84",
            "p95": "456.30",
            "p99": "411.88",
            "min": "407.60",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "740.06",
            "p50": "670.52",
            "p95": "490.02",
            "p99": "391.19",
            "min": "376.31",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "296.46",
            "p50": "292.75",
            "p95": "244.41",
            "p99": "224.00",
            "min": "222.05",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "664.41",
            "p50": "554.34",
            "p95": "416.12",
            "p99": "355.10",
            "min": "354.78",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "644.44",
            "p50": "553.94",
            "p95": "378.53",
            "p99": "344.39",
            "min": "343.95",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "662.71",
            "p50": "600.78",
            "p95": "421.36",
            "p99": "374.94",
            "min": "369.85",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "676.23",
            "p50": "600.64",
            "p95": "422.03",
            "p99": "316.05",
            "min": "297.24",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "107.20",
            "p50": "106.05",
            "p95": "99.32",
            "p99": "94.55",
            "min": "93.17",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "107.15",
            "p50": "105.86",
            "p95": "100.74",
            "p99": "95.74",
            "min": "95.21",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.69",
            "p50": "98.32",
            "p95": "93.34",
            "p99": "91.06",
            "min": "90.78",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "257.32",
            "p50": "251.54",
            "p95": "219.82",
            "p99": "187.72",
            "min": "178.29",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.76",
            "p50": "97.79",
            "p95": "93.17",
            "p99": "89.43",
            "min": "88.94",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "249.90",
            "p50": "245.95",
            "p95": "218.21",
            "p99": "195.83",
            "min": "193.60",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "210.28",
            "p50": "207.30",
            "p95": "188.31",
            "p99": "179.81",
            "min": "179.03",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "242.98",
            "p50": "236.42",
            "p95": "203.45",
            "p99": "191.48",
            "min": "190.55",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "462.20",
            "p50": "452.87",
            "p95": "358.42",
            "p99": "315.25",
            "min": "313.68",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7486.55",
            "p50": "4810.80",
            "p95": "1981.45",
            "p99": "1813.38",
            "min": "1809.94",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "440.30",
            "p50": "432.00",
            "p95": "365.18",
            "p99": "339.33",
            "min": "337.78",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "18445.68",
            "p50": "6441.74",
            "p95": "2535.02",
            "p99": "1954.37",
            "min": "1737.47",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4261.80",
            "p50": "3428.19",
            "p95": "1532.12",
            "p99": "1178.10",
            "min": "1157.20",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "217.21",
            "p50": "188.03",
            "p95": "169.23",
            "p99": "159.52",
            "min": "156.85",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "266.10",
            "p50": "261.18",
            "p95": "226.17",
            "p99": "172.46",
            "min": "167.61",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "95.23",
            "p50": "93.64",
            "p95": "87.85",
            "p99": "85.87",
            "min": "85.69",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "247.98",
            "p50": "242.92",
            "p95": "216.10",
            "p99": "189.14",
            "min": "181.54",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "183.41",
            "p50": "178.94",
            "p95": "157.19",
            "p99": "150.17",
            "min": "149.98",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "224.61",
            "p50": "218.93",
            "p95": "194.74",
            "p99": "148.09",
            "min": "129.73",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "210.98",
            "p50": "206.24",
            "p95": "178.37",
            "p99": "84.75",
            "min": "83.93",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "207.92",
            "p50": "204.75",
            "p95": "180.85",
            "p99": "175.04",
            "min": "174.62",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1238.69",
            "p50": "1091.52",
            "p95": "866.34",
            "p99": "670.20",
            "min": "661.76",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "183.34",
            "p50": "179.47",
            "p95": "158.72",
            "p99": "149.53",
            "min": "148.06",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.43",
            "p50": "192.09",
            "p95": "184.35",
            "p99": "170.01",
            "min": "168.12",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.36",
            "p50": "192.44",
            "p95": "184.06",
            "p99": "169.81",
            "min": "168.11",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "194.78",
            "p50": "193.12",
            "p95": "184.21",
            "p99": "174.59",
            "min": "173.18",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1189.28",
            "p50": "1165.09",
            "p95": "956.22",
            "p99": "633.81",
            "min": "603.50",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "702.90",
            "p50": "692.09",
            "p95": "585.20",
            "p99": "454.34",
            "min": "444.43",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "811.93",
            "p50": "798.62",
            "p95": "716.09",
            "p99": "282.53",
            "min": "177.15",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "739.40",
            "p50": "725.81",
            "p95": "653.14",
            "p99": "571.35",
            "min": "571.26",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "751.36",
            "p50": "739.78",
            "p95": "638.08",
            "p99": "512.07",
            "min": "503.27",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "920.67",
            "p50": "904.17",
            "p95": "805.91",
            "p99": "667.29",
            "min": "641.30",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "889.42",
            "p50": "875.34",
            "p95": "773.73",
            "p99": "538.05",
            "min": "526.35",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "889.39",
            "p50": "874.13",
            "p95": "726.18",
            "p99": "580.59",
            "min": "560.62",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "845.47",
            "p50": "829.30",
            "p95": "707.13",
            "p99": "627.32",
            "min": "626.52",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "888.61",
            "p50": "869.78",
            "p95": "729.40",
            "p99": "635.65",
            "min": "616.42",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "888.50",
            "p50": "871.52",
            "p95": "730.01",
            "p99": "569.19",
            "min": "553.61",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "109.80",
            "p50": "105.81",
            "p95": "103.33",
            "p99": "99.18",
            "min": "97.43",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "96.04",
            "p50": "95.33",
            "p95": "91.50",
            "p99": "92.18",
            "min": "90.11",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "605.87",
            "p50": "587.79",
            "p95": "460.05",
            "p99": "446.68",
            "min": "409.34",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "130.00",
            "p50": "103.76",
            "p95": "96.22",
            "p99": "110.09",
            "min": "95.06",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "89.59",
            "p50": "88.02",
            "p95": "85.79",
            "p99": "86.44",
            "min": "84.06",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1926.97",
            "p50": "1875.83",
            "p95": "1148.29",
            "p99": "892.78",
            "min": "880.67",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1642.85",
            "p50": "1603.83",
            "p95": "1269.39",
            "p99": "765.12",
            "min": "722.95",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2482.34",
            "p50": "2396.78",
            "p95": "1493.43",
            "p99": "986.03",
            "min": "968.41",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2487.79",
            "p50": "2384.94",
            "p95": "1441.21",
            "p99": "1032.01",
            "min": "960.11",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2450.05",
            "p50": "2378.01",
            "p95": "1737.63",
            "p99": "1448.15",
            "min": "1445.09",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1708.09",
            "p50": "1670.47",
            "p95": "1242.28",
            "p99": "786.15",
            "min": "726.93",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "878.05",
            "p50": "841.97",
            "p95": "794.13",
            "p99": "722.70",
            "min": "719.32",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "867.83",
            "p50": "836.86",
            "p95": "695.13",
            "p99": "553.61",
            "min": "548.86",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "876.45",
            "p50": "848.03",
            "p95": "757.69",
            "p99": "611.88",
            "min": "606.77",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "877.82",
            "p50": "857.30",
            "p95": "799.82",
            "p99": "551.20",
            "min": "513.88",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.71",
            "p50": "86.18",
            "p95": "83.11",
            "p99": "82.62",
            "min": "82.61",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "814.05",
            "p50": "776.17",
            "p95": "689.90",
            "p99": "551.07",
            "min": "550.15",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "765.94",
            "p50": "733.36",
            "p95": "645.20",
            "p99": "487.98",
            "min": "460.43",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "760.04",
            "p50": "727.74",
            "p95": "614.57",
            "p99": "498.64",
            "min": "487.89",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "770.16",
            "p50": "732.91",
            "p95": "525.19",
            "p99": "436.74",
            "min": "434.28",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2038.77",
            "p50": "1981.56",
            "p95": "1356.32",
            "p99": "865.06",
            "min": "860.34",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2345.80",
            "p50": "2262.05",
            "p95": "1442.86",
            "p99": "865.36",
            "min": "855.90",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.46",
            "p50": "72.02",
            "p95": "70.20",
            "p99": "67.90",
            "min": "67.82",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "10124.66",
            "p50": "8316.54",
            "p95": "2526.02",
            "p99": "2132.27",
            "min": "2077.82",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.49",
            "p50": "72.01",
            "p95": "70.90",
            "p99": "68.76",
            "min": "68.29",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "223.87",
            "p50": "221.96",
            "p95": "214.76",
            "p99": "192.99",
            "min": "188.95",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "889.69",
            "p50": "873.63",
            "p95": "746.98",
            "p99": "583.43",
            "min": "572.20",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "671.88",
            "p50": "663.44",
            "p95": "584.13",
            "p99": "528.22",
            "min": "526.30",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2363.50",
            "p50": "2200.60",
            "p95": "1292.06",
            "p99": "834.40",
            "min": "707.50",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "25864.71",
            "p50": "9672.04",
            "p95": "2603.25",
            "p99": "2242.69",
            "min": "2215.36",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2185.75",
            "p50": "2071.50",
            "p95": "1340.95",
            "p99": "902.24",
            "min": "800.14",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "79945.33",
            "p50": "9539.15",
            "p95": "2551.07",
            "p99": "1820.72",
            "min": "1493.12",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15265.26",
            "p50": "8672.59",
            "p95": "2628.27",
            "p99": "2345.59",
            "min": "2298.94",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "859.19",
            "p50": "723.68",
            "p95": "581.46",
            "p99": "522.12",
            "min": "518.67",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "988.36",
            "p50": "976.52",
            "p95": "906.01",
            "p99": "609.94",
            "min": "566.28",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "842.25",
            "p50": "822.64",
            "p95": "721.25",
            "p99": "636.59",
            "min": "630.89",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1200.95",
            "p50": "1176.48",
            "p95": "946.97",
            "p99": "663.83",
            "min": "605.10",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "752.60",
            "p50": "738.70",
            "p95": "625.08",
            "p99": "485.22",
            "min": "476.87",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1155.68",
            "p50": "1131.80",
            "p95": "978.06",
            "p99": "826.40",
            "min": "754.36",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "876.64",
            "p50": "837.81",
            "p95": "741.92",
            "p99": "514.79",
            "min": "489.46",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "938.04",
            "p50": "916.77",
            "p95": "723.20",
            "p99": "517.75",
            "min": "517.04",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2469.64",
            "p50": "2252.15",
            "p95": "1723.69",
            "p99": "1205.47",
            "min": "1152.36",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "880.30",
            "p50": "861.89",
            "p95": "725.22",
            "p99": "573.10",
            "min": "567.46",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "66.11",
            "p50": "64.41",
            "p95": "60.74",
            "p99": "58.24",
            "min": "58.23",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "58.61",
            "p50": "57.02",
            "p95": "53.23",
            "p99": "52.12",
            "min": "52.04",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "60.00",
            "p50": "58.71",
            "p95": "55.73",
            "p99": "51.68",
            "min": "51.52",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "213.79",
            "p50": "195.65",
            "p95": "158.68",
            "p99": "139.02",
            "min": "135.03",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "104.69",
            "p50": "100.29",
            "p95": "85.35",
            "p99": "71.38",
            "min": "69.07",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.42",
            "p50": "105.58",
            "p95": "95.81",
            "p99": "89.49",
            "min": "88.91",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "142.71",
            "p50": "134.84",
            "p95": "115.18",
            "p99": "102.29",
            "min": "100.44",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "141.55",
            "p50": "134.58",
            "p95": "112.79",
            "p99": "106.49",
            "min": "106.29",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "187.21",
            "p50": "174.08",
            "p95": "150.36",
            "p99": "129.96",
            "min": "129.43",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "184.44",
            "p50": "171.73",
            "p95": "134.71",
            "p99": "106.63",
            "min": "101.32",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "185.21",
            "p50": "173.15",
            "p95": "133.15",
            "p99": "94.05",
            "min": "91.87",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.65",
            "p50": "120.65",
            "p95": "105.97",
            "p99": "99.91",
            "min": "99.65",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "206.52",
            "p50": "190.33",
            "p95": "158.89",
            "p99": "142.98",
            "min": "140.52",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "190.55",
            "p50": "177.62",
            "p95": "139.61",
            "p99": "125.27",
            "min": "123.52",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "71.22",
            "p50": "67.57",
            "p95": "62.52",
            "p99": "60.32",
            "min": "60.16",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "133.03",
            "p50": "123.70",
            "p95": "107.65",
            "p99": "111.62",
            "min": "100.09",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "221.80",
            "p50": "195.06",
            "p95": "155.18",
            "p99": "155.77",
            "min": "140.28",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "171.23",
            "p50": "141.50",
            "p95": "132.36",
            "p99": "136.79",
            "min": "110.80",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "128.56",
            "p50": "119.84",
            "p95": "105.80",
            "p99": "114.00",
            "min": "103.02",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1049.16",
            "p50": "805.11",
            "p95": "437.57",
            "p99": "337.95",
            "min": "329.88",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1028.95",
            "p50": "756.25",
            "p95": "369.81",
            "p99": "283.06",
            "min": "280.86",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1174.83",
            "p50": "850.50",
            "p95": "488.18",
            "p99": "331.10",
            "min": "302.60",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1097.65",
            "p50": "814.62",
            "p95": "453.49",
            "p99": "342.08",
            "min": "313.37",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1032.13",
            "p50": "792.24",
            "p95": "462.51",
            "p99": "320.70",
            "min": "319.61",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1038.81",
            "p50": "775.61",
            "p95": "463.40",
            "p99": "345.27",
            "min": "340.47",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "351.92",
            "p50": "307.85",
            "p95": "228.19",
            "p99": "197.32",
            "min": "195.88",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "349.58",
            "p50": "303.47",
            "p95": "238.51",
            "p99": "209.67",
            "min": "209.38",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "358.12",
            "p50": "306.15",
            "p95": "232.54",
            "p99": "210.89",
            "min": "210.44",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "380.11",
            "p50": "328.44",
            "p95": "237.35",
            "p99": "205.31",
            "min": "201.67",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "288.01",
            "p50": "258.93",
            "p95": "198.92",
            "p99": "173.19",
            "min": "171.20",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "296.69",
            "p50": "264.91",
            "p95": "202.84",
            "p99": "179.01",
            "min": "175.59",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "291.60",
            "p50": "260.62",
            "p95": "213.00",
            "p99": "173.91",
            "min": "171.45",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "302.26",
            "p50": "265.70",
            "p95": "204.34",
            "p99": "166.28",
            "min": "160.89",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "303.08",
            "p50": "264.98",
            "p95": "186.09",
            "p99": "169.83",
            "min": "168.78",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.12",
            "p50": "100.95",
            "p95": "87.47",
            "p99": "84.66",
            "min": "84.50",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.18",
            "p50": "101.56",
            "p95": "89.11",
            "p99": "81.55",
            "min": "81.28",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.92",
            "p50": "94.09",
            "p95": "84.14",
            "p99": "79.66",
            "min": "79.46",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "249.00",
            "p50": "229.79",
            "p95": "181.11",
            "p99": "162.65",
            "min": "161.62",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.73",
            "p50": "93.96",
            "p95": "84.40",
            "p99": "78.22",
            "min": "76.53",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "241.96",
            "p50": "224.14",
            "p95": "185.38",
            "p99": "159.23",
            "min": "153.44",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "188.40",
            "p50": "173.86",
            "p95": "141.30",
            "p99": "128.02",
            "min": "127.39",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "154.84",
            "p50": "145.35",
            "p95": "121.55",
            "p99": "110.35",
            "min": "110.05",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "438.12",
            "p50": "379.81",
            "p95": "276.24",
            "p99": "234.81",
            "min": "228.43",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4990.33",
            "p50": "2195.39",
            "p95": "622.12",
            "p99": "508.77",
            "min": "505.81",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "438.49",
            "p50": "377.82",
            "p95": "263.40",
            "p99": "248.28",
            "min": "239.76",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "13165.71",
            "p50": "2731.38",
            "p95": "984.70",
            "p99": "728.51",
            "min": "624.19",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2974.59",
            "p50": "1751.54",
            "p95": "522.70",
            "p99": "448.60",
            "min": "445.18",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "206.93",
            "p50": "188.74",
            "p95": "166.46",
            "p99": "148.95",
            "min": "148.58",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "234.76",
            "p50": "217.82",
            "p95": "164.67",
            "p99": "126.74",
            "min": "118.43",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "126.12",
            "p50": "120.70",
            "p95": "105.87",
            "p99": "101.68",
            "min": "101.44",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "213.60",
            "p50": "196.19",
            "p95": "161.58",
            "p99": "147.15",
            "min": "146.32",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "141.08",
            "p50": "134.42",
            "p95": "116.52",
            "p99": "105.01",
            "min": "104.23",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "177.66",
            "p50": "164.69",
            "p95": "142.24",
            "p99": "128.55",
            "min": "128.00",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "185.03",
            "p50": "172.41",
            "p95": "144.38",
            "p99": "127.60",
            "min": "125.37",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "186.52",
            "p50": "174.07",
            "p95": "144.62",
            "p99": "127.61",
            "min": "125.71",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "303.48",
            "p50": "248.87",
            "p95": "151.64",
            "p99": "150.41",
            "min": "125.50",
            "n": "85",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "144.27",
            "p50": "137.70",
            "p95": "116.01",
            "p99": "122.94",
            "min": "112.43",
            "n": "66",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.07",
            "p50": "84.78",
            "p95": "76.55",
            "p99": "74.57",
            "min": "74.53",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "89.28",
            "p50": "85.91",
            "p95": "83.71",
            "p99": "79.44",
            "min": "78.76",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "88.88",
            "p50": "85.39",
            "p95": "83.47",
            "p99": "75.81",
            "min": "74.65",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "188.00",
            "p50": "184.53",
            "p95": "178.39",
            "p99": "168.15",
            "min": "166.09",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "90.31",
            "p50": "89.19",
            "p95": "85.54",
            "p99": "83.72",
            "min": "83.37",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "113.20",
            "p50": "109.25",
            "p95": "107.22",
            "p99": "105.97",
            "min": "105.97",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "123.53",
            "p50": "122.02",
            "p95": "105.19",
            "p99": "94.52",
            "min": "93.26",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "126.00",
            "p50": "123.99",
            "p95": "116.19",
            "p99": "114.14",
            "min": "113.76",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "96.56",
            "p50": "95.20",
            "p95": "77.33",
            "p99": "74.99",
            "min": "74.85",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "98.17",
            "p50": "96.31",
            "p95": "94.49",
            "p99": "88.20",
            "min": "88.05",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.29",
            "p50": "96.25",
            "p95": "94.74",
            "p99": "93.07",
            "min": "93.06",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.06",
            "p50": "123.08",
            "p95": "121.34",
            "p99": "119.00",
            "min": "118.57",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "120.25",
            "p50": "115.07",
            "p95": "110.92",
            "p99": "109.33",
            "min": "109.26",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "116.64",
            "p50": "114.16",
            "p95": "112.02",
            "p99": "110.21",
            "min": "110.01",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "86.40",
            "p50": "83.02",
            "p95": "79.64",
            "p99": "78.98",
            "min": "78.86",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "93.16",
            "p50": "91.99",
            "p95": "89.58",
            "p99": "90.51",
            "min": "89.08",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "59.78",
            "p50": "57.65",
            "p95": "55.93",
            "p99": "56.01",
            "min": "55.13",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "150.04",
            "p50": "120.25",
            "p95": "112.89",
            "p99": "128.50",
            "min": "112.26",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "103.67",
            "p50": "101.65",
            "p95": "100.32",
            "p99": "100.68",
            "min": "98.42",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "374.65",
            "p50": "365.64",
            "p95": "358.35",
            "p99": "337.05",
            "min": "333.54",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "489.66",
            "p50": "481.28",
            "p95": "467.91",
            "p99": "341.95",
            "min": "330.86",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "373.30",
            "p50": "362.09",
            "p95": "348.84",
            "p99": "293.60",
            "min": "285.23",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "375.54",
            "p50": "366.40",
            "p95": "356.80",
            "p99": "331.14",
            "min": "329.89",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "376.96",
            "p50": "367.95",
            "p95": "354.99",
            "p99": "324.80",
            "min": "315.43",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "454.04",
            "p50": "446.66",
            "p95": "427.91",
            "p99": "379.31",
            "min": "332.50",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "96.21",
            "p50": "94.05",
            "p95": "92.30",
            "p99": "89.40",
            "min": "88.87",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "96.58",
            "p50": "94.34",
            "p95": "92.63",
            "p99": "90.01",
            "min": "89.69",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "95.62",
            "p50": "93.16",
            "p95": "91.99",
            "p99": "89.95",
            "min": "89.51",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "87.42",
            "p50": "85.94",
            "p95": "84.34",
            "p99": "83.45",
            "min": "83.44",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.86",
            "p50": "86.36",
            "p95": "85.40",
            "p99": "84.31",
            "min": "84.22",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "89.25",
            "p50": "86.98",
            "p95": "84.84",
            "p99": "84.04",
            "min": "83.88",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "85.16",
            "p50": "83.04",
            "p95": "80.96",
            "p99": "79.02",
            "min": "78.93",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "84.82",
            "p50": "82.30",
            "p95": "80.99",
            "p99": "75.68",
            "min": "75.39",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "85.01",
            "p50": "82.43",
            "p95": "80.89",
            "p99": "77.69",
            "min": "76.89",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1442.94",
            "p50": "1319.49",
            "p95": "926.83",
            "p99": "761.94",
            "min": "757.59",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1439.27",
            "p50": "1316.56",
            "p95": "865.81",
            "p99": "650.30",
            "min": "561.69",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "156.14",
            "p50": "153.48",
            "p95": "142.44",
            "p99": "134.73",
            "min": "133.78",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3038.07",
            "p50": "2812.43",
            "p95": "1480.31",
            "p99": "1098.10",
            "min": "910.17",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "156.08",
            "p50": "153.17",
            "p95": "140.66",
            "p99": "118.53",
            "min": "111.63",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3025.41",
            "p50": "2796.44",
            "p95": "1695.02",
            "p99": "1160.72",
            "min": "1160.29",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.80",
            "p50": "97.03",
            "p95": "93.39",
            "p99": "89.33",
            "min": "88.96",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "187.02",
            "p50": "182.34",
            "p95": "171.03",
            "p99": "162.95",
            "min": "160.62",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "388.55",
            "p50": "327.24",
            "p95": "259.60",
            "p99": "221.82",
            "min": "217.97",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9145.00",
            "p50": "1687.54",
            "p95": "973.40",
            "p99": "388.21",
            "min": "383.29",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "423.52",
            "p50": "351.13",
            "p95": "272.62",
            "p99": "244.19",
            "min": "239.21",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "29155.86",
            "p50": "9402.82",
            "p95": "2455.89",
            "p99": "2249.81",
            "min": "2232.75",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6276.69",
            "p50": "3360.76",
            "p95": "1610.18",
            "p99": "632.83",
            "min": "595.00",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "345.17",
            "p50": "291.34",
            "p95": "225.29",
            "p99": "208.15",
            "min": "206.37",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "154.53",
            "p50": "141.25",
            "p95": "122.29",
            "p99": "112.95",
            "min": "111.35",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "122.03",
            "p50": "108.96",
            "p95": "102.41",
            "p99": "96.67",
            "min": "96.17",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "136.33",
            "p50": "128.82",
            "p95": "118.27",
            "p99": "116.40",
            "min": "116.08",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "124.89",
            "p50": "119.59",
            "p95": "103.27",
            "p99": "100.62",
            "min": "100.60",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "171.44",
            "p50": "168.45",
            "p95": "146.42",
            "p99": "129.94",
            "min": "122.10",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "93.77",
            "p50": "92.54",
            "p95": "88.96",
            "p99": "87.34",
            "min": "87.19",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "117.81",
            "p50": "112.76",
            "p95": "105.61",
            "p99": "99.10",
            "min": "97.35",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1136.76",
            "p50": "1050.14",
            "p95": "354.82",
            "p99": "341.06",
            "min": "340.87",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "125.13",
            "p50": "119.78",
            "p95": "77.96",
            "p99": "73.67",
            "min": "73.40",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}