{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "113.13",
            "p50": "108.67",
            "p95": "98.28",
            "p99": "92.85",
            "min": "92.31",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1099.60",
            "p50": "955.99",
            "p95": "638.08",
            "p99": "497.39",
            "min": "491.48",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "113.69",
            "p50": "109.26",
            "p95": "102.66",
            "p99": "99.08",
            "min": "98.87",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "753.67",
            "p50": "705.92",
            "p95": "468.41",
            "p99": "415.15",
            "min": "410.91",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "402.96",
            "p50": "369.15",
            "p95": "302.75",
            "p99": "217.05",
            "min": "215.03",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "428.02",
            "p50": "396.08",
            "p95": "334.65",
            "p99": "279.01",
            "min": "278.71",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "290.49",
            "p50": "272.22",
            "p95": "192.78",
            "p99": "187.62",
            "min": "187.30",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "179.71",
            "p50": "172.66",
            "p95": "158.71",
            "p99": "150.18",
            "min": "148.86",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "255.82",
            "p50": "235.78",
            "p95": "206.26",
            "p99": "192.93",
            "min": "191.04",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "260.54",
            "p50": "242.85",
            "p95": "217.31",
            "p99": "194.79",
            "min": "192.35",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "259.24",
            "p50": "241.72",
            "p95": "213.13",
            "p99": "195.66",
            "min": "194.94",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "201.72",
            "p50": "192.11",
            "p95": "171.61",
            "p99": "164.20",
            "min": "163.78",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "335.19",
            "p50": "314.20",
            "p95": "267.21",
            "p99": "251.44",
            "min": "249.59",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "297.53",
            "p50": "276.17",
            "p95": "231.48",
            "p99": "219.79",
            "min": "218.16",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8726.75",
            "p50": "3822.65",
            "p95": "2073.86",
            "p99": "1505.04",
            "min": "1428.37",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2974.35",
            "p50": "1805.17",
            "p95": "884.87",
            "p99": "1591.16",
            "min": "846.36",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "323.62",
            "p50": "297.76",
            "p95": "250.10",
            "p99": "252.95",
            "min": "236.38",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1440.11",
            "p50": "784.65",
            "p95": "328.12",
            "p99": "801.27",
            "min": "319.34",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7375.23",
            "p50": "3624.22",
            "p95": "1454.46",
            "p99": "3947.41",
            "min": "1361.52",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "828.24",
            "p50": "705.20",
            "p95": "508.84",
            "p99": "455.49",
            "min": "452.98",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "812.54",
            "p50": "727.04",
            "p95": "570.64",
            "p99": "465.14",
            "min": "460.06",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "946.24",
            "p50": "782.34",
            "p95": "551.70",
            "p99": "496.40",
            "min": "488.19",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2406.43",
            "p50": "1805.54",
            "p95": "1064.61",
            "p99": "785.30",
            "min": "747.08",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2390.05",
            "p50": "1844.09",
            "p95": "955.29",
            "p99": "754.63",
            "min": "729.15",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "808.36",
            "p50": "733.31",
            "p95": "527.48",
            "p99": "463.76",
            "min": "425.39",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "172.80",
            "p50": "156.05",
            "p95": "142.55",
            "p99": "136.71",
            "min": "136.66",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "559.06",
            "p50": "492.28",
            "p95": "380.86",
            "p99": "330.65",
            "min": "327.87",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "170.63",
            "p50": "157.48",
            "p95": "147.40",
            "p99": "142.67",
            "min": "142.55",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "190.61",
            "p50": "175.00",
            "p95": "154.18",
            "p99": "148.79",
            "min": "148.17",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "31910.46",
            "p50": "8172.52",
            "p95": "2351.19",
            "p99": "1108.85",
            "min": "502.06",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "413.30",
            "p50": "366.66",
            "p95": "287.38",
            "p99": "183.28",
            "min": "157.75",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "399.12",
            "p50": "351.35",
            "p95": "302.59",
            "p99": "281.13",
            "min": "278.13",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "395.10",
            "p50": "355.44",
            "p95": "300.02",
            "p99": "236.50",
            "min": "225.49",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "395.87",
            "p50": "353.20",
            "p95": "286.69",
            "p99": "266.03",
            "min": "265.94",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "16785.78",
            "p50": "5613.87",
            "p95": "2422.04",
            "p99": "2126.89",
            "min": "2011.23",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "16693.65",
            "p50": "5459.05",
            "p95": "2352.50",
            "p99": "2123.43",
            "min": "2025.47",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "15831.64",
            "p50": "4996.47",
            "p95": "2388.87",
            "p99": "1516.26",
            "min": "1420.18",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "16689.07",
            "p50": "5407.48",
            "p95": "2389.12",
            "p99": "2193.66",
            "min": "2176.26",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "16076.30",
            "p50": "5260.40",
            "p95": "2424.32",
            "p99": "1999.72",
            "min": "1970.39",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "17315.04",
            "p50": "5297.62",
            "p95": "2327.41",
            "p99": "1397.61",
            "min": "1349.79",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "260.40",
            "p50": "237.66",
            "p95": "205.66",
            "p99": "193.47",
            "min": "191.78",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "516.82",
            "p50": "480.00",
            "p95": "384.76",
            "p99": "341.60",
            "min": "333.74",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1636.63",
            "p50": "1368.27",
            "p95": "363.92",
            "p99": "295.88",
            "min": "292.95",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "23293.54",
            "p50": "4692.63",
            "p95": "276.81",
            "p99": "244.26",
            "min": "241.74",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1420.48",
            "p50": "1175.78",
            "p95": "801.30",
            "p99": "416.27",
            "min": "269.60",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "52566.90",
            "p50": "9137.91",
            "p95": "2386.86",
            "p99": "1000.33",
            "min": "531.96",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13534.40",
            "p50": "6116.07",
            "p95": "294.63",
            "p99": "251.12",
            "min": "244.34",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "572.24",
            "p50": "492.62",
            "p95": "389.04",
            "p99": "338.17",
            "min": "336.38",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "545.11",
            "p50": "500.81",
            "p95": "364.58",
            "p99": "257.65",
            "min": "223.05",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "199.09",
            "p50": "190.21",
            "p95": "171.36",
            "p99": "164.77",
            "min": "164.47",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "383.78",
            "p50": "361.22",
            "p95": "296.74",
            "p99": "263.90",
            "min": "256.85",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "199.49",
            "p50": "192.11",
            "p95": "171.18",
            "p99": "162.14",
            "min": "161.28",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "337.82",
            "p50": "316.64",
            "p95": "260.79",
            "p99": "138.70",
            "min": "131.19",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "255.61",
            "p50": "242.70",
            "p95": "212.45",
            "p99": "201.80",
            "min": "201.16",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "568.60",
            "p50": "528.64",
            "p95": "406.60",
            "p99": "362.52",
            "min": "361.57",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1462.62",
            "p50": "1237.23",
            "p95": "908.16",
            "p99": "816.46",
            "min": "795.54",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "287.81",
            "p50": "270.94",
            "p95": "241.09",
            "p99": "221.60",
            "min": "221.17",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "140.50",
            "p50": "133.11",
            "p95": "118.71",
            "p99": "109.42",
            "min": "108.22",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "139.88",
            "p50": "133.19",
            "p95": "117.51",
            "p99": "113.68",
            "min": "113.43",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "141.27",
            "p50": "132.97",
            "p95": "118.04",
            "p99": "114.47",
            "min": "114.37",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "248.02",
            "p50": "229.96",
            "p95": "197.07",
            "p99": "155.75",
            "min": "141.21",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "189.48",
            "p50": "176.14",
            "p95": "152.88",
            "p99": "142.59",
            "min": "142.56",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "200.27",
            "p50": "187.51",
            "p95": "162.01",
            "p99": "155.00",
            "min": "153.86",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "183.47",
            "p50": "172.05",
            "p95": "148.80",
            "p99": "98.21",
            "min": "86.73",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "181.83",
            "p50": "169.51",
            "p95": "149.08",
            "p99": "142.50",
            "min": "141.57",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "210.50",
            "p50": "191.40",
            "p95": "161.53",
            "p99": "143.96",
            "min": "139.11",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "181.45",
            "p50": "169.34",
            "p95": "142.22",
            "p99": "125.49",
            "min": "121.72",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "209.12",
            "p50": "193.38",
            "p95": "166.36",
            "p99": "144.28",
            "min": "143.23",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "145.28",
            "p50": "136.91",
            "p95": "120.72",
            "p99": "117.78",
            "min": "117.68",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "226.72",
            "p50": "211.09",
            "p95": "180.28",
            "p99": "115.57",
            "min": "92.38",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "183.39",
            "p50": "171.75",
            "p95": "146.81",
            "p99": "115.38",
            "min": "109.35",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "102.37",
            "p50": "95.36",
            "p95": "85.85",
            "p99": "81.52",
            "min": "80.64",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "137.74",
            "p50": "131.58",
            "p95": "116.63",
            "p99": "121.23",
            "min": "112.34",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "445.96",
            "p50": "349.24",
            "p95": "285.75",
            "p99": "286.26",
            "min": "248.80",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "175.73",
            "p50": "141.90",
            "p95": "134.12",
            "p99": "151.29",
            "min": "132.86",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "128.91",
            "p50": "122.67",
            "p95": "109.84",
            "p99": "117.56",
            "min": "109.00",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1180.27",
            "p50": "973.31",
            "p95": "619.34",
            "p99": "452.45",
            "min": "433.46",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1031.02",
            "p50": "895.54",
            "p95": "528.81",
            "p99": "398.12",
            "min": "394.04",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1403.48",
            "p50": "1124.82",
            "p95": "584.22",
            "p99": "424.65",
            "min": "366.24",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1305.78",
            "p50": "1058.07",
            "p95": "647.76",
            "p99": "456.78",
            "min": "456.43",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1276.58",
            "p50": "1021.36",
            "p95": "569.01",
            "p99": "471.91",
            "min": "465.10",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1067.77",
            "p50": "851.90",
            "p95": "564.58",
            "p99": "415.44",
            "min": "411.99",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "684.95",
            "p50": "555.93",
            "p95": "367.41",
            "p99": "263.14",
            "min": "252.09",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "678.76",
            "p50": "552.97",
            "p95": "381.54",
            "p99": "313.44",
            "min": "309.96",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "676.96",
            "p50": "582.51",
            "p95": "401.31",
            "p99": "332.19",
            "min": "330.30",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "688.34",
            "p50": "576.24",
            "p95": "440.74",
            "p99": "355.69",
            "min": "350.03",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "291.22",
            "p50": "263.72",
            "p95": "225.96",
            "p99": "194.67",
            "min": "192.48",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "613.20",
            "p50": "481.26",
            "p95": "378.08",
            "p99": "300.96",
            "min": "294.43",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "598.80",
            "p50": "503.42",
            "p95": "383.23",
            "p99": "314.36",
            "min": "308.19",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "622.45",
            "p50": "498.93",
            "p95": "355.24",
            "p99": "324.32",
            "min": "322.72",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "628.32",
            "p50": "515.02",
            "p95": "394.77",
            "p99": "348.59",
            "min": "343.89",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.23",
            "p50": "101.28",
            "p95": "92.79",
            "p99": "87.33",
            "min": "86.94",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.07",
            "p50": "101.84",
            "p95": "92.69",
            "p99": "89.94",
            "min": "89.63",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.15",
            "p50": "94.39",
            "p95": "87.14",
            "p99": "84.86",
            "min": "84.81",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "251.91",
            "p50": "237.11",
            "p95": "195.08",
            "p99": "171.74",
            "min": "171.58",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.43",
            "p50": "94.56",
            "p95": "86.60",
            "p99": "83.69",
            "min": "83.40",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "245.20",
            "p50": "229.92",
            "p95": "191.68",
            "p99": "167.64",
            "min": "163.68",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "207.71",
            "p50": "193.76",
            "p95": "164.49",
            "p99": "154.26",
            "min": "153.02",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "239.00",
            "p50": "221.32",
            "p95": "182.05",
            "p99": "136.14",
            "min": "106.67",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "529.41",
            "p50": "465.27",
            "p95": "368.71",
            "p99": "306.48",
            "min": "304.96",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "6244.57",
            "p50": "2932.69",
            "p95": "1347.64",
            "p99": "1076.97",
            "min": "1070.61",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "483.89",
            "p50": "433.21",
            "p95": "340.19",
            "p99": "280.36",
            "min": "279.28",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "17800.99",
            "p50": "4877.59",
            "p95": "1804.88",
            "p99": "1305.43",
            "min": "1296.81",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3612.73",
            "p50": "2324.51",
            "p95": "1151.43",
            "p99": "917.23",
            "min": "905.60",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "225.27",
            "p50": "191.59",
            "p95": "157.18",
            "p99": "134.63",
            "min": "133.80",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "257.34",
            "p50": "241.70",
            "p95": "190.01",
            "p99": "179.97",
            "min": "179.43",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "144.39",
            "p50": "136.34",
            "p95": "120.10",
            "p99": "114.35",
            "min": "113.60",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "243.27",
            "p50": "224.13",
            "p95": "198.92",
            "p99": "162.89",
            "min": "147.08",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "182.93",
            "p50": "170.47",
            "p95": "153.86",
            "p99": "138.60",
            "min": "137.07",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "221.01",
            "p50": "205.52",
            "p95": "180.37",
            "p99": "161.13",
            "min": "160.36",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "209.09",
            "p50": "196.05",
            "p95": "159.49",
            "p99": "152.68",
            "min": "152.08",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "207.71",
            "p50": "192.33",
            "p95": "173.81",
            "p99": "153.55",
            "min": "153.53",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1355.13",
            "p50": "1082.49",
            "p95": "757.35",
            "p99": "638.16",
            "min": "628.01",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "179.57",
            "p50": "169.39",
            "p95": "147.90",
            "p99": "141.45",
            "min": "140.81",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "192.41",
            "p50": "188.33",
            "p95": "180.14",
            "p99": "166.03",
            "min": "165.52",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "192.13",
            "p50": "187.52",
            "p95": "175.57",
            "p99": "168.51",
            "min": "167.79",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "192.25",
            "p50": "188.47",
            "p95": "181.04",
            "p99": "169.96",
            "min": "169.35",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1141.59",
            "p50": "1097.59",
            "p95": "854.54",
            "p99": "124.86",
            "min": "86.19",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "618.65",
            "p50": "601.96",
            "p95": "534.28",
            "p99": "416.44",
            "min": "409.70",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "667.69",
            "p50": "651.20",
            "p95": "516.36",
            "p99": "331.24",
            "min": "281.91",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "623.75",
            "p50": "607.85",
            "p95": "511.96",
            "p99": "429.45",
            "min": "424.93",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "771.62",
            "p50": "752.25",
            "p95": "627.62",
            "p99": "495.24",
            "min": "481.21",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "907.12",
            "p50": "877.53",
            "p95": "731.14",
            "p99": "649.76",
            "min": "628.62",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "847.52",
            "p50": "818.02",
            "p95": "604.95",
            "p99": "436.73",
            "min": "422.69",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "845.18",
            "p50": "821.72",
            "p95": "714.15",
            "p99": "512.82",
            "min": "502.65",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "834.88",
            "p50": "809.78",
            "p95": "601.35",
            "p99": "464.68",
            "min": "449.56",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "736.55",
            "p50": "714.15",
            "p95": "559.30",
            "p99": "441.12",
            "min": "424.27",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "842.51",
            "p50": "814.11",
            "p95": "617.20",
            "p99": "445.45",
            "min": "431.51",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "118.49",
            "p50": "112.70",
            "p95": "109.44",
            "p99": "105.24",
            "min": "103.99",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "95.20",
            "p50": "93.30",
            "p95": "89.39",
            "p99": "91.38",
            "min": "89.32",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "519.61",
            "p50": "495.62",
            "p95": "435.24",
            "p99": "425.37",
            "min": "403.27",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "127.46",
            "p50": "101.95",
            "p95": "95.29",
            "p99": "108.13",
            "min": "93.56",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "88.29",
            "p50": "86.45",
            "p95": "83.81",
            "p99": "85.56",
            "min": "83.51",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1816.62",
            "p50": "1746.26",
            "p95": "987.83",
            "p99": "837.49",
            "min": "829.79",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1637.57",
            "p50": "1565.43",
            "p95": "1075.68",
            "p99": "731.58",
            "min": "694.96",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2291.94",
            "p50": "2162.81",
            "p95": "1386.15",
            "p99": "915.37",
            "min": "907.13",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2265.03",
            "p50": "2152.18",
            "p95": "1255.60",
            "p99": "883.24",
            "min": "881.75",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2245.33",
            "p50": "2132.05",
            "p95": "1280.39",
            "p99": "776.36",
            "min": "680.90",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1685.89",
            "p50": "1613.14",
            "p95": "1061.24",
            "p99": "662.24",
            "min": "656.60",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "770.55",
            "p50": "732.72",
            "p95": "624.70",
            "p99": "473.96",
            "min": "467.35",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "765.64",
            "p50": "735.52",
            "p95": "620.53",
            "p99": "522.72",
            "min": "504.57",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "780.28",
            "p50": "740.10",
            "p95": "604.79",
            "p99": "531.44",
            "min": "526.93",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "763.86",
            "p50": "741.29",
            "p95": "570.86",
            "p99": "465.04",
            "min": "464.61",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.05",
            "p50": "85.47",
            "p95": "38.85",
            "p99": "37.98",
            "min": "37.84",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "728.11",
            "p50": "696.33",
            "p95": "587.87",
            "p99": "431.28",
            "min": "411.78",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "683.46",
            "p50": "658.23",
            "p95": "524.36",
            "p99": "330.46",
            "min": "300.07",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "688.69",
            "p50": "659.31",
            "p95": "566.36",
            "p99": "447.12",
            "min": "438.31",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "701.44",
            "p50": "649.70",
            "p95": "546.94",
            "p99": "487.41",
            "min": "479.69",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2441.52",
            "p50": "2299.46",
            "p95": "1352.75",
            "p99": "1085.07",
            "min": "1083.96",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2799.11",
            "p50": "2633.37",
            "p95": "1497.17",
            "p99": "927.69",
            "min": "845.37",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "105.25",
            "p50": "103.18",
            "p95": "98.75",
            "p99": "94.43",
            "min": "92.74",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "15154.62",
            "p50": "7108.68",
            "p95": "2417.36",
            "p99": "1689.21",
            "min": "1438.55",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "105.34",
            "p50": "103.14",
            "p95": "99.03",
            "p99": "97.10",
            "min": "97.00",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "6075.97",
            "p50": "5347.32",
            "p95": "1897.93",
            "p99": "1659.55",
            "min": "1633.51",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "868.19",
            "p50": "838.17",
            "p95": "665.01",
            "p99": "554.88",
            "min": "540.89",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "663.84",
            "p50": "640.56",
            "p95": "523.77",
            "p99": "401.43",
            "min": "378.70",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2180.17",
            "p50": "2046.82",
            "p95": "1228.88",
            "p99": "642.58",
            "min": "626.14",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "20343.44",
            "p50": "8931.56",
            "p95": "2270.60",
            "p99": "1733.86",
            "min": "1680.11",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2008.91",
            "p50": "1879.50",
            "p95": "1174.32",
            "p99": "760.29",
            "min": "621.84",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "79213.12",
            "p50": "9133.78",
            "p95": "2325.74",
            "p99": "1635.96",
            "min": "1400.07",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "17383.43",
            "p50": "8005.83",
            "p95": "2534.15",
            "p99": "1972.44",
            "min": "1858.83",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "686.31",
            "p50": "591.01",
            "p95": "496.31",
            "p99": "380.01",
            "min": "362.23",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "923.61",
            "p50": "892.11",
            "p95": "710.82",
            "p99": "658.38",
            "min": "653.47",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "838.34",
            "p50": "806.57",
            "p95": "619.82",
            "p99": "419.02",
            "min": "411.15",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1149.10",
            "p50": "1106.86",
            "p95": "866.22",
            "p99": "680.85",
            "min": "632.72",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "689.69",
            "p50": "670.72",
            "p95": "542.24",
            "p99": "399.20",
            "min": "397.85",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1136.76",
            "p50": "1096.39",
            "p95": "791.00",
            "p99": "156.22",
            "min": "88.12",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "803.98",
            "p50": "781.34",
            "p95": "583.65",
            "p99": "472.13",
            "min": "467.51",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "881.33",
            "p50": "850.40",
            "p95": "682.74",
            "p99": "484.98",
            "min": "449.68",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2171.72",
            "p50": "1965.05",
            "p95": "1726.15",
            "p99": "1475.88",
            "min": "1468.45",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "848.88",
            "p50": "822.71",
            "p95": "638.59",
            "p99": "549.70",
            "min": "535.99",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "121.56",
            "p50": "117.92",
            "p95": "104.36",
            "p99": "97.69",
            "min": "97.34",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "121.89",
            "p50": "118.29",
            "p95": "107.41",
            "p99": "103.60",
            "min": "103.46",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "121.51",
            "p50": "117.96",
            "p95": "104.11",
            "p99": "95.24",
            "min": "95.15",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "211.07",
            "p50": "199.64",
            "p95": "162.16",
            "p99": "148.18",
            "min": "146.28",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "103.16",
            "p50": "99.15",
            "p95": "89.16",
            "p99": "80.18",
            "min": "79.66",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "108.37",
            "p50": "103.57",
            "p95": "88.56",
            "p99": "82.25",
            "min": "80.73",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "139.33",
            "p50": "132.32",
            "p95": "115.65",
            "p99": "104.13",
            "min": "102.94",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "138.27",
            "p50": "131.58",
            "p95": "110.55",
            "p99": "104.78",
            "min": "104.41",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "183.31",
            "p50": "170.17",
            "p95": "136.93",
            "p99": "108.60",
            "min": "99.85",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "179.83",
            "p50": "167.92",
            "p95": "137.82",
            "p99": "121.86",
            "min": "119.78",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "178.14",
            "p50": "167.33",
            "p95": "144.51",
            "p99": "133.66",
            "min": "133.48",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.89",
            "p50": "121.96",
            "p95": "105.60",
            "p99": "97.25",
            "min": "96.93",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "204.56",
            "p50": "190.07",
            "p95": "158.76",
            "p99": "139.12",
            "min": "137.64",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "184.09",
            "p50": "171.44",
            "p95": "143.68",
            "p99": "133.98",
            "min": "133.80",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "75.19",
            "p50": "70.90",
            "p95": "65.80",
            "p99": "63.23",
            "min": "63.09",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "130.89",
            "p50": "124.29",
            "p95": "106.88",
            "p99": "110.62",
            "min": "99.71",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "213.12",
            "p50": "193.59",
            "p95": "153.73",
            "p99": "162.60",
            "min": "150.74",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "167.99",
            "p50": "140.89",
            "p95": "133.67",
            "p99": "146.61",
            "min": "130.48",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "126.48",
            "p50": "119.13",
            "p95": "106.39",
            "p99": "111.31",
            "min": "99.88",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1020.28",
            "p50": "764.47",
            "p95": "381.47",
            "p99": "321.11",
            "min": "315.74",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1000.26",
            "p50": "768.20",
            "p95": "386.27",
            "p99": "280.90",
            "min": "277.68",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1137.08",
            "p50": "812.73",
            "p95": "442.18",
            "p99": "316.76",
            "min": "290.36",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1074.31",
            "p50": "806.57",
            "p95": "393.22",
            "p99": "315.76",
            "min": "313.21",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1010.98",
            "p50": "791.14",
            "p95": "405.14",
            "p99": "327.08",
            "min": "322.54",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1015.16",
            "p50": "771.16",
            "p95": "412.80",
            "p99": "316.57",
            "min": "310.19",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "340.44",
            "p50": "297.80",
            "p95": "226.11",
            "p99": "203.18",
            "min": "202.21",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "333.47",
            "p50": "297.40",
            "p95": "225.07",
            "p99": "196.91",
            "min": "196.56",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "334.50",
            "p50": "297.98",
            "p95": "225.97",
            "p99": "187.81",
            "min": "184.22",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "364.90",
            "p50": "321.51",
            "p95": "239.28",
            "p99": "209.43",
            "min": "206.56",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "286.92",
            "p50": "255.58",
            "p95": "198.80",
            "p99": "164.16",
            "min": "161.04",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "288.04",
            "p50": "258.05",
            "p95": "194.94",
            "p99": "178.57",
            "min": "178.20",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "295.39",
            "p50": "251.53",
            "p95": "194.98",
            "p99": "169.16",
            "min": "166.70",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "285.42",
            "p50": "262.24",
            "p95": "194.28",
            "p99": "174.21",
            "min": "172.54",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "294.89",
            "p50": "258.39",
            "p95": "186.83",
            "p99": "178.77",
            "min": "177.92",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "104.20",
            "p50": "99.80",
            "p95": "91.71",
            "p99": "86.34",
            "min": "84.51",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "104.21",
            "p50": "99.92",
            "p95": "91.01",
            "p99": "83.36",
            "min": "81.74",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "96.62",
            "p50": "92.64",
            "p95": "83.08",
            "p99": "79.02",
            "min": "78.95",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "247.90",
            "p50": "227.20",
            "p95": "178.80",
            "p99": "161.80",
            "min": "161.27",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "96.41",
            "p50": "92.53",
            "p95": "83.73",
            "p99": "78.69",
            "min": "78.38",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "240.27",
            "p50": "219.83",
            "p95": "180.57",
            "p99": "159.47",
            "min": "157.57",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "181.72",
            "p50": "170.16",
            "p95": "137.00",
            "p99": "113.82",
            "min": "109.48",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "148.14",
            "p50": "139.10",
            "p95": "119.23",
            "p99": "110.26",
            "min": "109.99",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "439.66",
            "p50": "396.94",
            "p95": "288.82",
            "p99": "245.65",
            "min": "244.73",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "6033.61",
            "p50": "2473.00",
            "p95": "824.34",
            "p99": "664.20",
            "min": "655.37",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "436.72",
            "p50": "394.14",
            "p95": "278.72",
            "p99": "224.05",
            "min": "198.70",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "15218.75",
            "p50": "3875.51",
            "p95": "1279.16",
            "p99": "1103.11",
            "min": "1089.30",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3291.69",
            "p50": "2081.86",
            "p95": "745.43",
            "p99": "672.86",
            "min": "657.96",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "207.33",
            "p50": "190.20",
            "p95": "164.76",
            "p99": "148.07",
            "min": "147.92",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "230.50",
            "p50": "217.96",
            "p95": "180.41",
            "p99": "156.19",
            "min": "154.51",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "128.79",
            "p50": "123.04",
            "p95": "107.97",
            "p99": "98.85",
            "min": "97.78",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "209.01",
            "p50": "189.73",
            "p95": "156.93",
            "p99": "143.34",
            "min": "142.78",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "138.25",
            "p50": "131.74",
            "p95": "115.90",
            "p99": "107.20",
            "min": "106.65",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "175.47",
            "p50": "159.89",
            "p95": "137.46",
            "p99": "108.05",
            "min": "96.57",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "177.38",
            "p50": "166.02",
            "p95": "133.46",
            "p99": "125.64",
            "min": "124.49",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "179.79",
            "p50": "168.09",
            "p95": "141.08",
            "p99": "129.83",
            "min": "129.80",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "302.25",
            "p50": "250.23",
            "p95": "59.36",
            "p99": "51.46",
            "min": "51.19",
            "n": "105",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "144.75",
            "p50": "138.69",
            "p95": "115.48",
            "p99": "58.11",
            "min": "58.10",
            "n": "108",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "86.55",
            "p50": "84.35",
            "p95": "73.76",
            "p99": "69.97",
            "min": "69.89",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "88.63",
            "p50": "85.59",
            "p95": "80.48",
            "p99": "73.48",
            "min": "72.06",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "87.47",
            "p50": "84.89",
            "p95": "79.87",
            "p99": "78.36",
            "min": "78.34",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "191.46",
            "p50": "181.36",
            "p95": "166.71",
            "p99": "152.22",
            "min": "150.54",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "98.21",
            "p50": "94.61",
            "p95": "89.78",
            "p99": "86.68",
            "min": "86.57",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "112.19",
            "p50": "108.06",
            "p95": "105.43",
            "p99": "102.32",
            "min": "101.92",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "123.31",
            "p50": "120.22",
            "p95": "109.34",
            "p99": "104.59",
            "min": "104.24",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "127.84",
            "p50": "123.00",
            "p95": "117.88",
            "p99": "112.55",
            "min": "111.58",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "96.65",
            "p50": "93.52",
            "p95": "71.87",
            "p99": "68.51",
            "min": "67.54",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "100.62",
            "p50": "98.34",
            "p95": "75.03",
            "p99": "73.97",
            "min": "73.96",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "100.79",
            "p50": "98.85",
            "p95": "74.67",
            "p99": "73.32",
            "min": "73.20",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "125.07",
            "p50": "121.41",
            "p95": "87.40",
            "p99": "85.60",
            "min": "85.44",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "136.42",
            "p50": "131.99",
            "p95": "121.55",
            "p99": "118.47",
            "min": "118.26",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "115.73",
            "p50": "112.71",
            "p95": "98.58",
            "p99": "80.43",
            "min": "80.30",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "88.81",
            "p50": "83.60",
            "p95": "79.05",
            "p99": "72.35",
            "min": "70.47",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "100.65",
            "p50": "98.86",
            "p95": "93.73",
            "p99": "95.05",
            "min": "92.04",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "76.93",
            "p50": "71.50",
            "p95": "67.36",
            "p99": "67.96",
            "min": "65.85",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "155.76",
            "p50": "125.19",
            "p95": "116.67",
            "p99": "132.46",
            "min": "114.89",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "108.22",
            "p50": "106.30",
            "p95": "105.65",
            "p99": "106.68",
            "min": "105.52",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "419.26",
            "p50": "403.66",
            "p95": "372.24",
            "p99": "310.93",
            "min": "292.46",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "477.10",
            "p50": "468.59",
            "p95": "454.66",
            "p99": "393.28",
            "min": "344.92",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "450.45",
            "p50": "428.51",
            "p95": "398.71",
            "p99": "338.56",
            "min": "308.25",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "455.11",
            "p50": "434.09",
            "p95": "413.15",
            "p99": "344.53",
            "min": "334.79",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "460.75",
            "p50": "436.29",
            "p95": "409.84",
            "p99": "348.78",
            "min": "320.51",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "461.55",
            "p50": "450.56",
            "p95": "415.59",
            "p99": "352.51",
            "min": "341.71",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "120.64",
            "p50": "114.61",
            "p95": "109.90",
            "p99": "105.65",
            "min": "105.26",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "121.58",
            "p50": "115.50",
            "p95": "110.11",
            "p99": "106.79",
            "min": "106.63",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "119.48",
            "p50": "113.57",
            "p95": "108.53",
            "p99": "103.66",
            "min": "102.61",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "102.85",
            "p50": "98.32",
            "p95": "95.53",
            "p99": "94.61",
            "min": "94.47",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "85.55",
            "p50": "84.30",
            "p95": "83.37",
            "p99": "80.54",
            "min": "79.89",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "120.27",
            "p50": "114.37",
            "p95": "107.37",
            "p99": "105.00",
            "min": "104.99",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "113.96",
            "p50": "107.88",
            "p95": "101.65",
            "p99": "95.04",
            "min": "94.65",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "113.34",
            "p50": "107.83",
            "p95": "101.59",
            "p99": "99.21",
            "min": "99.07",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "113.13",
            "p50": "107.68",
            "p95": "101.20",
            "p99": "93.93",
            "min": "93.11",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1566.98",
            "p50": "1376.65",
            "p95": "820.01",
            "p99": "457.47",
            "min": "437.85",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1601.72",
            "p50": "1424.64",
            "p95": "875.41",
            "p99": "531.21",
            "min": "499.29",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.68",
            "p50": "151.60",
            "p95": "136.72",
            "p99": "110.09",
            "min": "110.00",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3944.08",
            "p50": "3503.10",
            "p95": "1308.66",
            "p99": "744.81",
            "min": "638.10",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "154.76",
            "p50": "151.18",
            "p95": "135.57",
            "p99": "111.92",
            "min": "107.95",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3945.85",
            "p50": "3439.94",
            "p95": "1514.02",
            "p99": "403.01",
            "min": "340.30",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "101.72",
            "p50": "98.90",
            "p95": "83.78",
            "p99": "82.58",
            "min": "82.47",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "180.68",
            "p50": "177.14",
            "p95": "171.34",
            "p99": "158.30",
            "min": "158.23",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "338.61",
            "p50": "253.28",
            "p95": "200.58",
            "p99": "173.09",
            "min": "166.11",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9511.03",
            "p50": "1562.86",
            "p95": "923.76",
            "p99": "682.95",
            "min": "629.96",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "339.12",
            "p50": "252.14",
            "p95": "204.84",
            "p99": "186.09",
            "min": "185.11",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "25024.45",
            "p50": "8504.58",
            "p95": "2320.60",
            "p99": "1445.47",
            "min": "790.26",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "5775.86",
            "p50": "3258.00",
            "p95": "1470.94",
            "p99": "530.42",
            "min": "394.59",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "283.17",
            "p50": "228.29",
            "p95": "169.85",
            "p99": "152.18",
            "min": "149.03",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "151.72",
            "p50": "137.21",
            "p95": "114.16",
            "p99": "107.64",
            "min": "107.59",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "125.82",
            "p50": "119.79",
            "p95": "101.99",
            "p99": "82.10",
            "min": "81.32",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "127.76",
            "p50": "125.95",
            "p95": "119.86",
            "p99": "118.09",
            "min": "117.67",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "123.01",
            "p50": "119.21",
            "p95": "115.64",
            "p99": "109.93",
            "min": "108.72",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "156.81",
            "p50": "152.70",
            "p95": "146.92",
            "p99": "139.16",
            "min": "137.37",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "97.96",
            "p50": "94.96",
            "p95": "90.15",
            "p99": "86.80",
            "min": "86.63",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "119.63",
            "p50": "115.09",
            "p95": "112.99",
            "p99": "110.42",
            "min": "109.57",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1188.68",
            "p50": "1102.69",
            "p95": "375.05",
            "p99": "364.46",
            "min": "364.39",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "125.78",
            "p50": "121.24",
            "p95": "108.50",
            "p99": "98.26",
            "min": "97.70",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}