{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "113.01",
            "p50": "107.79",
            "p95": "99.54",
            "p99": "96.42",
            "min": "96.35",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1101.14",
            "p50": "955.14",
            "p95": "641.81",
            "p99": "518.68",
            "min": "513.70",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "113.66",
            "p50": "107.72",
            "p95": "99.77",
            "p99": "96.77",
            "min": "96.62",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "752.05",
            "p50": "688.75",
            "p95": "446.39",
            "p99": "386.33",
            "min": "361.63",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "401.28",
            "p50": "367.52",
            "p95": "298.52",
            "p99": "277.08",
            "min": "276.46",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "428.29",
            "p50": "397.17",
            "p95": "318.53",
            "p99": "297.19",
            "min": "296.72",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "291.10",
            "p50": "271.27",
            "p95": "193.12",
            "p99": "158.22",
            "min": "150.53",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "181.45",
            "p50": "172.24",
            "p95": "158.59",
            "p99": "151.45",
            "min": "151.13",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "256.03",
            "p50": "238.53",
            "p95": "211.55",
            "p99": "203.11",
            "min": "202.68",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "260.91",
            "p50": "241.21",
            "p95": "212.16",
            "p99": "199.90",
            "min": "199.54",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "259.10",
            "p50": "239.19",
            "p95": "213.67",
            "p99": "204.33",
            "min": "204.18",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "202.79",
            "p50": "189.78",
            "p95": "172.01",
            "p99": "162.76",
            "min": "162.10",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "335.13",
            "p50": "313.59",
            "p95": "266.95",
            "p99": "252.54",
            "min": "250.94",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "297.43",
            "p50": "275.40",
            "p95": "235.02",
            "p99": "221.76",
            "min": "220.98",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8448.19",
            "p50": "3739.70",
            "p95": "2245.27",
            "p99": "1593.23",
            "min": "1475.88",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2940.80",
            "p50": "1626.26",
            "p95": "967.34",
            "p99": "1572.51",
            "min": "835.74",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "321.50",
            "p50": "295.87",
            "p95": "266.57",
            "p99": "254.10",
            "min": "238.29",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1417.62",
            "p50": "750.32",
            "p95": "318.01",
            "p99": "789.14",
            "min": "315.02",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7210.16",
            "p50": "3570.58",
            "p95": "1408.57",
            "p99": "3872.50",
            "min": "1354.63",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "819.90",
            "p50": "701.33",
            "p95": "482.24",
            "p99": "414.24",
            "min": "407.22",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "812.58",
            "p50": "727.77",
            "p95": "522.08",
            "p99": "450.12",
            "min": "441.14",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "942.50",
            "p50": "785.70",
            "p95": "576.46",
            "p99": "484.70",
            "min": "468.72",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2376.81",
            "p50": "1823.47",
            "p95": "916.63",
            "p99": "764.10",
            "min": "739.97",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2393.77",
            "p50": "1681.66",
            "p95": "921.20",
            "p99": "706.47",
            "min": "670.80",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "803.45",
            "p50": "710.78",
            "p95": "523.04",
            "p99": "483.53",
            "min": "478.27",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "170.64",
            "p50": "155.62",
            "p95": "140.30",
            "p99": "104.03",
            "min": "103.77",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "555.43",
            "p50": "492.30",
            "p95": "397.17",
            "p99": "360.15",
            "min": "359.69",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "168.92",
            "p50": "156.30",
            "p95": "147.54",
            "p99": "105.52",
            "min": "105.44",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "189.30",
            "p50": "172.32",
            "p95": "123.82",
            "p99": "113.23",
            "min": "112.78",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "32534.42",
            "p50": "7474.93",
            "p95": "2363.76",
            "p99": "1143.95",
            "min": "989.37",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "415.54",
            "p50": "370.23",
            "p95": "309.99",
            "p99": "293.87",
            "min": "293.79",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "395.56",
            "p50": "349.68",
            "p95": "293.67",
            "p99": "264.65",
            "min": "263.16",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "391.18",
            "p50": "352.91",
            "p95": "300.80",
            "p99": "275.48",
            "min": "274.95",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "395.62",
            "p50": "356.21",
            "p95": "302.85",
            "p99": "283.69",
            "min": "282.24",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "17141.49",
            "p50": "5153.57",
            "p95": "2373.24",
            "p99": "1449.89",
            "min": "1415.54",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "16998.53",
            "p50": "5360.00",
            "p95": "2402.57",
            "p99": "1123.60",
            "min": "691.16",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "16248.07",
            "p50": "5134.19",
            "p95": "2323.30",
            "p99": "1632.94",
            "min": "1560.67",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "16909.46",
            "p50": "5432.50",
            "p95": "2414.43",
            "p99": "2082.72",
            "min": "2079.32",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "15560.54",
            "p50": "5301.54",
            "p95": "2342.54",
            "p99": "1664.92",
            "min": "1457.80",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "16711.89",
            "p50": "5449.42",
            "p95": "2509.57",
            "p99": "2251.57",
            "min": "2171.86",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "260.35",
            "p50": "239.52",
            "p95": "212.11",
            "p99": "197.62",
            "min": "197.04",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "516.16",
            "p50": "482.63",
            "p95": "386.08",
            "p99": "351.40",
            "min": "349.21",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1643.01",
            "p50": "1358.41",
            "p95": "359.95",
            "p99": "295.92",
            "min": "295.40",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "14209.56",
            "p50": "4946.11",
            "p95": "189.61",
            "p99": "177.29",
            "min": "176.88",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1411.99",
            "p50": "1147.30",
            "p95": "732.62",
            "p99": "471.76",
            "min": "322.35",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "53353.39",
            "p50": "9064.83",
            "p95": "2363.18",
            "p99": "2222.56",
            "min": "2208.21",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "12802.36",
            "p50": "5949.10",
            "p95": "192.36",
            "p99": "166.37",
            "min": "165.26",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "559.32",
            "p50": "490.91",
            "p95": "374.56",
            "p99": "339.97",
            "min": "331.01",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "545.77",
            "p50": "496.45",
            "p95": "390.55",
            "p99": "348.80",
            "min": "348.48",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "199.71",
            "p50": "189.37",
            "p95": "171.68",
            "p99": "164.26",
            "min": "164.03",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "383.08",
            "p50": "360.46",
            "p95": "300.17",
            "p99": "269.68",
            "min": "267.90",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "199.40",
            "p50": "189.51",
            "p95": "166.69",
            "p99": "161.26",
            "min": "160.72",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "336.70",
            "p50": "315.56",
            "p95": "262.02",
            "p99": "201.07",
            "min": "166.65",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "259.14",
            "p50": "240.59",
            "p95": "211.03",
            "p99": "200.10",
            "min": "198.14",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "566.88",
            "p50": "515.89",
            "p95": "418.72",
            "p99": "360.64",
            "min": "357.17",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1421.78",
            "p50": "1210.12",
            "p95": "927.67",
            "p99": "712.97",
            "min": "693.78",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "287.36",
            "p50": "269.09",
            "p95": "234.74",
            "p99": "218.38",
            "min": "217.67",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "138.58",
            "p50": "130.37",
            "p95": "115.04",
            "p99": "107.59",
            "min": "106.72",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "139.49",
            "p50": "130.40",
            "p95": "115.70",
            "p99": "100.84",
            "min": "98.11",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "138.98",
            "p50": "130.94",
            "p95": "116.97",
            "p99": "111.24",
            "min": "110.33",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "248.34",
            "p50": "227.68",
            "p95": "183.53",
            "p99": "161.63",
            "min": "150.79",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "190.69",
            "p50": "174.83",
            "p95": "154.12",
            "p99": "142.10",
            "min": "141.44",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "202.22",
            "p50": "187.12",
            "p95": "152.93",
            "p99": "146.86",
            "min": "145.85",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "185.90",
            "p50": "171.49",
            "p95": "149.94",
            "p99": "141.90",
            "min": "141.51",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "181.74",
            "p50": "168.83",
            "p95": "143.84",
            "p99": "91.15",
            "min": "82.53",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "205.23",
            "p50": "191.43",
            "p95": "165.67",
            "p99": "157.35",
            "min": "155.61",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "183.77",
            "p50": "169.52",
            "p95": "142.75",
            "p99": "141.36",
            "min": "141.09",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "204.82",
            "p50": "188.98",
            "p95": "159.24",
            "p99": "141.14",
            "min": "138.65",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "152.60",
            "p50": "141.20",
            "p95": "126.24",
            "p99": "120.24",
            "min": "120.09",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "225.67",
            "p50": "210.79",
            "p95": "175.73",
            "p99": "166.94",
            "min": "166.06",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "181.27",
            "p50": "169.01",
            "p95": "147.05",
            "p99": "137.89",
            "min": "136.98",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "101.49",
            "p50": "94.69",
            "p95": "87.75",
            "p99": "83.29",
            "min": "82.92",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "137.29",
            "p50": "128.61",
            "p95": "112.96",
            "p99": "113.63",
            "min": "100.89",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "428.58",
            "p50": "340.00",
            "p95": "288.40",
            "p99": "251.31",
            "min": "209.73",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "168.69",
            "p50": "141.54",
            "p95": "133.16",
            "p99": "147.23",
            "min": "131.05",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "129.40",
            "p50": "122.20",
            "p95": "110.82",
            "p99": "116.98",
            "min": "107.62",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1158.96",
            "p50": "922.67",
            "p95": "547.81",
            "p99": "447.50",
            "min": "441.74",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1038.64",
            "p50": "810.09",
            "p95": "494.99",
            "p99": "408.24",
            "min": "395.40",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1422.62",
            "p50": "1071.36",
            "p95": "558.97",
            "p99": "441.63",
            "min": "427.11",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1321.38",
            "p50": "973.83",
            "p95": "540.77",
            "p99": "434.82",
            "min": "428.84",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1257.04",
            "p50": "963.18",
            "p95": "561.93",
            "p99": "431.45",
            "min": "427.71",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1048.16",
            "p50": "834.52",
            "p95": "522.21",
            "p99": "409.59",
            "min": "397.15",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "688.72",
            "p50": "558.55",
            "p95": "398.62",
            "p99": "366.46",
            "min": "365.78",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "704.88",
            "p50": "553.34",
            "p95": "377.31",
            "p99": "276.05",
            "min": "274.15",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "705.84",
            "p50": "575.88",
            "p95": "435.25",
            "p99": "296.99",
            "min": "295.52",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "681.49",
            "p50": "567.48",
            "p95": "386.71",
            "p99": "329.77",
            "min": "326.56",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "289.31",
            "p50": "261.93",
            "p95": "214.01",
            "p99": "195.34",
            "min": "194.22",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "607.22",
            "p50": "469.88",
            "p95": "374.89",
            "p99": "300.77",
            "min": "298.46",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "607.31",
            "p50": "482.79",
            "p95": "393.27",
            "p99": "330.01",
            "min": "327.49",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "640.55",
            "p50": "486.51",
            "p95": "357.57",
            "p99": "305.73",
            "min": "302.38",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "644.13",
            "p50": "501.42",
            "p95": "363.25",
            "p99": "288.95",
            "min": "273.68",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.94",
            "p50": "100.77",
            "p95": "91.22",
            "p99": "88.65",
            "min": "88.01",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.67",
            "p50": "100.69",
            "p95": "90.20",
            "p99": "85.70",
            "min": "85.38",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.37",
            "p50": "93.31",
            "p95": "85.63",
            "p99": "83.33",
            "min": "83.15",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "253.12",
            "p50": "231.74",
            "p95": "196.37",
            "p99": "175.93",
            "min": "173.98",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.03",
            "p50": "93.65",
            "p95": "85.84",
            "p99": "78.16",
            "min": "76.16",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "244.19",
            "p50": "223.36",
            "p95": "187.88",
            "p99": "173.44",
            "min": "172.57",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "204.11",
            "p50": "190.17",
            "p95": "161.92",
            "p99": "153.96",
            "min": "153.53",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "237.31",
            "p50": "218.20",
            "p95": "181.81",
            "p99": "167.59",
            "min": "167.58",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "569.28",
            "p50": "488.83",
            "p95": "360.76",
            "p99": "300.44",
            "min": "298.36",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5398.65",
            "p50": "2574.36",
            "p95": "1260.07",
            "p99": "1048.09",
            "min": "981.43",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "531.89",
            "p50": "462.61",
            "p95": "347.48",
            "p99": "270.55",
            "min": "253.17",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "15360.02",
            "p50": "4208.15",
            "p95": "1320.45",
            "p99": "740.23",
            "min": "583.07",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3460.39",
            "p50": "2062.87",
            "p95": "997.98",
            "p99": "669.27",
            "min": "599.36",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "229.01",
            "p50": "202.27",
            "p95": "166.32",
            "p99": "139.14",
            "min": "129.98",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "262.95",
            "p50": "234.98",
            "p95": "198.36",
            "p99": "166.54",
            "min": "160.71",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "152.57",
            "p50": "142.26",
            "p95": "125.91",
            "p99": "118.90",
            "min": "118.46",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "243.08",
            "p50": "221.78",
            "p95": "191.81",
            "p99": "140.14",
            "min": "122.48",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "182.67",
            "p50": "168.54",
            "p95": "141.72",
            "p99": "130.09",
            "min": "129.98",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "218.86",
            "p50": "202.43",
            "p95": "173.38",
            "p99": "111.93",
            "min": "77.90",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "206.67",
            "p50": "191.17",
            "p95": "164.26",
            "p99": "145.27",
            "min": "143.16",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "205.31",
            "p50": "190.07",
            "p95": "161.28",
            "p99": "111.06",
            "min": "88.14",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1282.18",
            "p50": "1064.66",
            "p95": "749.23",
            "p99": "529.23",
            "min": "471.67",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "180.01",
            "p50": "168.59",
            "p95": "150.24",
            "p99": "140.34",
            "min": "138.97",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "189.37",
            "p50": "186.40",
            "p95": "168.96",
            "p99": "160.60",
            "min": "160.17",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "188.48",
            "p50": "185.91",
            "p95": "170.12",
            "p99": "163.39",
            "min": "163.39",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "190.01",
            "p50": "186.72",
            "p95": "169.87",
            "p99": "161.19",
            "min": "161.08",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1138.76",
            "p50": "1081.72",
            "p95": "788.24",
            "p99": "392.23",
            "min": "230.73",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "617.20",
            "p50": "601.18",
            "p95": "474.68",
            "p99": "410.90",
            "min": "409.15",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "665.39",
            "p50": "646.30",
            "p95": "483.29",
            "p99": "425.07",
            "min": "423.98",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "739.21",
            "p50": "723.98",
            "p95": "530.50",
            "p99": "459.65",
            "min": "454.01",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "824.32",
            "p50": "761.65",
            "p95": "582.22",
            "p99": "481.05",
            "min": "470.91",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "854.22",
            "p50": "761.18",
            "p95": "597.13",
            "p99": "488.69",
            "min": "481.17",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "861.66",
            "p50": "759.02",
            "p95": "612.37",
            "p99": "550.43",
            "min": "548.46",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "806.02",
            "p50": "763.34",
            "p95": "594.34",
            "p99": "438.16",
            "min": "426.60",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "776.74",
            "p50": "758.03",
            "p95": "609.99",
            "p99": "472.36",
            "min": "471.01",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "765.74",
            "p50": "748.30",
            "p95": "600.34",
            "p99": "519.62",
            "min": "518.94",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "859.23",
            "p50": "819.46",
            "p95": "607.96",
            "p99": "531.56",
            "min": "521.59",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "116.41",
            "p50": "111.31",
            "p95": "107.53",
            "p99": "100.95",
            "min": "99.02",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "88.73",
            "p50": "87.25",
            "p95": "83.80",
            "p99": "84.39",
            "min": "82.06",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "608.32",
            "p50": "596.90",
            "p95": "460.49",
            "p99": "440.19",
            "min": "400.75",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "118.84",
            "p50": "94.89",
            "p95": "87.78",
            "p99": "100.88",
            "min": "87.32",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "81.96",
            "p50": "80.32",
            "p95": "77.40",
            "p99": "77.86",
            "min": "74.77",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1906.09",
            "p50": "1827.73",
            "p95": "1222.67",
            "p99": "890.56",
            "min": "779.72",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1621.68",
            "p50": "1568.47",
            "p95": "1170.64",
            "p99": "682.51",
            "min": "577.54",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2473.86",
            "p50": "2339.88",
            "p95": "1328.23",
            "p99": "895.86",
            "min": "876.59",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2470.27",
            "p50": "2303.00",
            "p95": "1286.95",
            "p99": "914.33",
            "min": "909.82",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2459.06",
            "p50": "2312.71",
            "p95": "1293.97",
            "p99": "840.49",
            "min": "816.36",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1704.52",
            "p50": "1614.69",
            "p95": "1109.39",
            "p99": "741.81",
            "min": "661.10",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "684.56",
            "p50": "672.58",
            "p95": "550.11",
            "p99": "451.36",
            "min": "447.33",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "689.56",
            "p50": "673.07",
            "p95": "542.26",
            "p99": "443.39",
            "min": "434.48",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "696.18",
            "p50": "674.32",
            "p95": "565.84",
            "p99": "464.73",
            "min": "460.08",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "520.67",
            "p50": "514.51",
            "p95": "433.11",
            "p99": "384.10",
            "min": "380.93",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.42",
            "p50": "85.03",
            "p95": "38.15",
            "p99": "37.69",
            "min": "37.68",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "817.81",
            "p50": "795.14",
            "p95": "629.19",
            "p99": "488.08",
            "min": "475.73",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "765.11",
            "p50": "748.84",
            "p95": "588.87",
            "p99": "505.42",
            "min": "501.37",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "770.27",
            "p50": "747.63",
            "p95": "584.61",
            "p99": "480.57",
            "min": "471.21",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "771.16",
            "p50": "750.39",
            "p95": "612.25",
            "p99": "463.78",
            "min": "447.89",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2414.94",
            "p50": "2241.15",
            "p95": "1322.29",
            "p99": "876.28",
            "min": "873.32",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2792.72",
            "p50": "2590.84",
            "p95": "1130.91",
            "p99": "900.39",
            "min": "889.19",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "105.88",
            "p50": "104.16",
            "p95": "99.68",
            "p99": "93.91",
            "min": "92.26",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "14941.89",
            "p50": "7759.87",
            "p95": "2373.51",
            "p99": "1556.71",
            "min": "1430.50",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "105.78",
            "p50": "104.04",
            "p95": "100.25",
            "p99": "96.60",
            "min": "96.11",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "6218.14",
            "p50": "5398.24",
            "p95": "2153.47",
            "p99": "1795.04",
            "min": "1687.47",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "840.78",
            "p50": "761.51",
            "p95": "560.30",
            "p99": "463.87",
            "min": "462.94",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "658.80",
            "p50": "642.84",
            "p95": "509.82",
            "p99": "443.77",
            "min": "428.20",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2373.23",
            "p50": "2190.54",
            "p95": "1400.61",
            "p99": "876.85",
            "min": "801.36",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "14534.78",
            "p50": "8808.71",
            "p95": "2260.05",
            "p99": "1876.19",
            "min": "1853.46",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2181.09",
            "p50": "2047.29",
            "p95": "1153.65",
            "p99": "750.25",
            "min": "719.75",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "75614.88",
            "p50": "9206.45",
            "p95": "2344.15",
            "p99": "1902.16",
            "min": "1837.93",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13956.66",
            "p50": "8036.61",
            "p95": "2335.80",
            "p99": "2124.62",
            "min": "2063.34",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "750.78",
            "p50": "606.61",
            "p95": "513.09",
            "p99": "439.50",
            "min": "431.34",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "930.56",
            "p50": "908.46",
            "p95": "647.58",
            "p99": "530.11",
            "min": "523.98",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "792.30",
            "p50": "758.59",
            "p95": "582.31",
            "p99": "438.65",
            "min": "428.82",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1171.87",
            "p50": "1090.31",
            "p95": "825.74",
            "p99": "640.25",
            "min": "585.58",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "814.22",
            "p50": "755.28",
            "p95": "525.07",
            "p99": "470.16",
            "min": "469.85",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1152.61",
            "p50": "1085.00",
            "p95": "807.96",
            "p99": "578.45",
            "min": "544.14",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "806.83",
            "p50": "758.57",
            "p95": "594.62",
            "p99": "472.54",
            "min": "472.22",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "876.74",
            "p50": "854.30",
            "p95": "623.54",
            "p99": "440.02",
            "min": "420.81",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2012.82",
            "p50": "1747.48",
            "p95": "1442.69",
            "p99": "1121.14",
            "min": "1097.20",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "866.98",
            "p50": "753.66",
            "p95": "596.14",
            "p99": "467.43",
            "min": "460.35",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "122.00",
            "p50": "117.16",
            "p95": "101.61",
            "p99": "96.29",
            "min": "95.82",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "121.98",
            "p50": "116.60",
            "p95": "100.99",
            "p99": "96.24",
            "min": "96.15",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "121.82",
            "p50": "116.19",
            "p95": "101.96",
            "p99": "95.62",
            "min": "95.34",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "206.46",
            "p50": "188.77",
            "p95": "160.35",
            "p99": "139.89",
            "min": "136.23",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.14",
            "p50": "97.48",
            "p95": "82.66",
            "p99": "76.71",
            "min": "76.15",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "108.09",
            "p50": "101.28",
            "p95": "89.65",
            "p99": "82.36",
            "min": "82.31",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "135.75",
            "p50": "126.22",
            "p95": "99.12",
            "p99": "47.21",
            "min": "41.62",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "136.43",
            "p50": "127.69",
            "p95": "109.40",
            "p99": "92.94",
            "min": "90.38",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "181.68",
            "p50": "164.40",
            "p95": "130.53",
            "p99": "123.60",
            "min": "123.60",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "177.81",
            "p50": "162.48",
            "p95": "131.34",
            "p99": "123.63",
            "min": "123.53",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "177.41",
            "p50": "164.03",
            "p95": "133.93",
            "p99": "118.67",
            "min": "116.42",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.11",
            "p50": "118.39",
            "p95": "99.97",
            "p99": "69.73",
            "min": "67.40",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "200.66",
            "p50": "180.31",
            "p95": "142.76",
            "p99": "133.64",
            "min": "133.62",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "179.27",
            "p50": "164.71",
            "p95": "135.41",
            "p99": "122.01",
            "min": "120.75",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "74.15",
            "p50": "69.67",
            "p95": "63.61",
            "p99": "60.46",
            "min": "60.38",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "128.55",
            "p50": "118.83",
            "p95": "105.33",
            "p99": "109.67",
            "min": "99.51",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "208.79",
            "p50": "183.20",
            "p95": "147.79",
            "p99": "154.56",
            "min": "141.84",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "154.74",
            "p50": "134.73",
            "p95": "130.88",
            "p99": "140.74",
            "min": "130.19",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "125.64",
            "p50": "113.40",
            "p95": "98.25",
            "p99": "108.88",
            "min": "96.24",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1028.33",
            "p50": "660.78",
            "p95": "333.79",
            "p99": "269.90",
            "min": "263.04",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1002.94",
            "p50": "651.88",
            "p95": "338.15",
            "p99": "270.63",
            "min": "255.00",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1116.31",
            "p50": "696.62",
            "p95": "337.31",
            "p99": "245.69",
            "min": "218.66",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1049.32",
            "p50": "680.20",
            "p95": "342.21",
            "p99": "271.46",
            "min": "262.25",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "970.69",
            "p50": "647.97",
            "p95": "349.79",
            "p99": "272.31",
            "min": "263.80",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1003.61",
            "p50": "646.91",
            "p95": "348.97",
            "p99": "255.96",
            "min": "254.46",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "328.26",
            "p50": "282.90",
            "p95": "196.91",
            "p99": "186.26",
            "min": "186.20",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "329.79",
            "p50": "281.03",
            "p95": "200.77",
            "p99": "185.80",
            "min": "185.37",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "322.64",
            "p50": "282.10",
            "p95": "209.40",
            "p99": "182.81",
            "min": "182.18",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "356.66",
            "p50": "301.40",
            "p95": "203.17",
            "p99": "187.78",
            "min": "185.57",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "284.18",
            "p50": "243.67",
            "p95": "173.71",
            "p99": "158.74",
            "min": "155.99",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "277.77",
            "p50": "246.60",
            "p95": "182.63",
            "p99": "169.32",
            "min": "169.14",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "271.61",
            "p50": "237.82",
            "p95": "181.27",
            "p99": "164.15",
            "min": "164.09",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "290.13",
            "p50": "243.97",
            "p95": "173.57",
            "p99": "157.26",
            "min": "156.45",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "285.45",
            "p50": "242.38",
            "p95": "176.80",
            "p99": "166.40",
            "min": "166.10",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "103.69",
            "p50": "97.99",
            "p95": "87.43",
            "p99": "79.86",
            "min": "78.82",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "103.29",
            "p50": "98.18",
            "p95": "84.89",
            "p99": "80.29",
            "min": "79.94",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "96.43",
            "p50": "90.59",
            "p95": "81.27",
            "p99": "74.81",
            "min": "73.30",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "247.02",
            "p50": "218.52",
            "p95": "163.38",
            "p99": "142.79",
            "min": "141.27",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "96.30",
            "p50": "90.91",
            "p95": "80.11",
            "p99": "75.42",
            "min": "75.09",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "237.74",
            "p50": "213.18",
            "p95": "159.31",
            "p99": "143.13",
            "min": "142.28",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "181.99",
            "p50": "165.80",
            "p95": "131.48",
            "p99": "121.73",
            "min": "120.32",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "151.09",
            "p50": "137.94",
            "p95": "113.21",
            "p99": "79.62",
            "min": "58.24",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "437.21",
            "p50": "386.81",
            "p95": "245.47",
            "p99": "215.30",
            "min": "209.73",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4825.47",
            "p50": "2156.38",
            "p95": "596.83",
            "p99": "558.34",
            "min": "548.05",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "436.02",
            "p50": "383.24",
            "p95": "250.93",
            "p99": "195.41",
            "min": "181.64",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14209.70",
            "p50": "3469.41",
            "p95": "1198.32",
            "p99": "890.70",
            "min": "888.30",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3194.86",
            "p50": "1804.56",
            "p95": "626.71",
            "p99": "499.08",
            "min": "471.57",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "204.01",
            "p50": "188.81",
            "p95": "154.32",
            "p99": "137.40",
            "min": "136.65",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "232.27",
            "p50": "213.91",
            "p95": "182.96",
            "p99": "146.23",
            "min": "143.59",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "128.20",
            "p50": "120.70",
            "p95": "100.10",
            "p99": "80.52",
            "min": "75.28",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "207.75",
            "p50": "185.78",
            "p95": "142.97",
            "p99": "118.99",
            "min": "113.42",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "136.42",
            "p50": "127.52",
            "p95": "99.17",
            "p99": "70.59",
            "min": "69.12",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "173.84",
            "p50": "158.12",
            "p95": "125.48",
            "p99": "116.25",
            "min": "113.67",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "178.21",
            "p50": "162.00",
            "p95": "125.68",
            "p99": "122.72",
            "min": "122.53",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "179.76",
            "p50": "162.63",
            "p95": "131.53",
            "p99": "112.89",
            "min": "105.30",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "298.95",
            "p50": "239.81",
            "p95": "59.19",
            "p99": "53.66",
            "min": "53.57",
            "n": "107",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "143.79",
            "p50": "136.48",
            "p95": "61.09",
            "p99": "55.32",
            "min": "55.19",
            "n": "110",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "86.42",
            "p50": "82.86",
            "p95": "74.32",
            "p99": "72.28",
            "min": "72.13",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "87.97",
            "p50": "84.04",
            "p95": "82.29",
            "p99": "80.93",
            "min": "80.68",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "87.29",
            "p50": "83.39",
            "p95": "80.49",
            "p99": "79.69",
            "min": "79.69",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "236.33",
            "p50": "178.78",
            "p95": "173.52",
            "p99": "170.07",
            "min": "168.75",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "95.55",
            "p50": "94.22",
            "p95": "88.63",
            "p99": "87.31",
            "min": "87.31",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.98",
            "p50": "109.02",
            "p95": "103.12",
            "p99": "99.93",
            "min": "99.87",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "122.07",
            "p50": "119.16",
            "p95": "106.41",
            "p99": "101.72",
            "min": "101.59",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "123.95",
            "p50": "120.19",
            "p95": "116.89",
            "p99": "112.75",
            "min": "111.77",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "94.85",
            "p50": "92.34",
            "p95": "71.10",
            "p99": "68.92",
            "min": "68.31",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "100.09",
            "p50": "98.29",
            "p95": "96.15",
            "p99": "90.26",
            "min": "89.11",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "100.96",
            "p50": "98.42",
            "p95": "95.64",
            "p99": "92.16",
            "min": "91.92",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "123.37",
            "p50": "120.15",
            "p95": "117.04",
            "p99": "113.60",
            "min": "113.29",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "135.62",
            "p50": "130.96",
            "p95": "119.98",
            "p99": "112.31",
            "min": "111.76",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "113.51",
            "p50": "111.46",
            "p95": "108.48",
            "p99": "99.29",
            "min": "99.26",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "88.74",
            "p50": "83.70",
            "p95": "78.71",
            "p99": "71.52",
            "min": "70.28",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "100.38",
            "p50": "99.67",
            "p95": "96.04",
            "p99": "95.43",
            "min": "92.76",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "75.33",
            "p50": "73.68",
            "p95": "70.45",
            "p99": "68.65",
            "min": "67.08",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "155.97",
            "p50": "124.93",
            "p95": "117.08",
            "p99": "132.16",
            "min": "114.20",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "108.29",
            "p50": "106.14",
            "p95": "103.57",
            "p99": "104.17",
            "min": "101.07",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "424.81",
            "p50": "414.33",
            "p95": "394.18",
            "p99": "362.83",
            "min": "350.21",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "478.53",
            "p50": "468.25",
            "p95": "431.60",
            "p99": "349.25",
            "min": "345.20",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "451.53",
            "p50": "442.44",
            "p95": "421.23",
            "p99": "362.95",
            "min": "353.61",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "458.33",
            "p50": "448.27",
            "p95": "422.92",
            "p99": "392.23",
            "min": "384.94",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "461.65",
            "p50": "450.69",
            "p95": "415.91",
            "p99": "347.32",
            "min": "334.63",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "462.46",
            "p50": "453.82",
            "p95": "432.44",
            "p99": "386.66",
            "min": "362.12",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "121.13",
            "p50": "118.36",
            "p95": "115.48",
            "p99": "111.51",
            "min": "110.79",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "122.02",
            "p50": "119.21",
            "p95": "116.31",
            "p99": "110.28",
            "min": "109.64",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "119.64",
            "p50": "116.86",
            "p95": "111.12",
            "p99": "106.23",
            "min": "106.22",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "103.20",
            "p50": "100.98",
            "p95": "99.27",
            "p99": "94.69",
            "min": "94.37",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "85.61",
            "p50": "84.34",
            "p95": "83.58",
            "p99": "82.08",
            "min": "81.79",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "121.13",
            "p50": "117.73",
            "p95": "113.90",
            "p99": "111.26",
            "min": "110.86",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "114.46",
            "p50": "111.44",
            "p95": "104.79",
            "p99": "93.85",
            "min": "92.80",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "114.50",
            "p50": "111.19",
            "p95": "107.97",
            "p99": "104.83",
            "min": "104.29",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "114.07",
            "p50": "111.22",
            "p95": "106.24",
            "p99": "90.84",
            "min": "89.33",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1568.10",
            "p50": "1419.31",
            "p95": "763.96",
            "p99": "415.16",
            "min": "318.21",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1583.58",
            "p50": "1406.96",
            "p95": "689.89",
            "p99": "530.10",
            "min": "502.13",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.10",
            "p50": "152.15",
            "p95": "140.16",
            "p99": "130.75",
            "min": "128.25",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3938.80",
            "p50": "3630.51",
            "p95": "1319.24",
            "p99": "513.94",
            "min": "437.77",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "154.37",
            "p50": "151.53",
            "p95": "136.63",
            "p99": "112.32",
            "min": "107.15",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3935.49",
            "p50": "3542.22",
            "p95": "1375.95",
            "p99": "858.13",
            "min": "853.92",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "101.04",
            "p50": "98.49",
            "p95": "92.09",
            "p99": "83.81",
            "min": "82.78",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "171.36",
            "p50": "169.55",
            "p95": "160.20",
            "p99": "148.26",
            "min": "146.34",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "352.32",
            "p50": "262.70",
            "p95": "208.03",
            "p99": "179.55",
            "min": "174.48",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9539.42",
            "p50": "1595.82",
            "p95": "762.75",
            "p99": "427.06",
            "min": "380.66",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "345.09",
            "p50": "262.24",
            "p95": "207.80",
            "p99": "183.08",
            "min": "181.34",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "25570.28",
            "p50": "8675.85",
            "p95": "2438.61",
            "p99": "1960.30",
            "min": "1738.44",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6096.86",
            "p50": "3217.45",
            "p95": "1635.30",
            "p99": "996.88",
            "min": "881.12",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "302.46",
            "p50": "232.77",
            "p95": "171.69",
            "p99": "131.99",
            "min": "114.40",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "154.45",
            "p50": "132.27",
            "p95": "109.14",
            "p99": "101.80",
            "min": "100.58",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "121.97",
            "p50": "116.24",
            "p95": "89.23",
            "p99": "81.56",
            "min": "80.79",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "122.03",
            "p50": "118.50",
            "p95": "102.96",
            "p99": "100.91",
            "min": "100.11",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "122.47",
            "p50": "119.10",
            "p95": "114.77",
            "p99": "110.95",
            "min": "110.39",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "151.29",
            "p50": "146.91",
            "p95": "142.05",
            "p99": "118.95",
            "min": "104.78",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "94.80",
            "p50": "92.16",
            "p95": "75.77",
            "p99": "74.33",
            "min": "74.33",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "126.14",
            "p50": "115.20",
            "p95": "109.97",
            "p99": "107.55",
            "min": "106.68",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1203.20",
            "p50": "1109.79",
            "p95": "383.24",
            "p99": "360.60",
            "min": "357.67",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "123.91",
            "p50": "119.55",
            "p95": "102.75",
            "p99": "91.65",
            "min": "91.23",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}