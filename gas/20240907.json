{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "170.19",
            "p50": "168.16",
            "p95": "157.65",
            "p99": "150.00",
            "min": "149.41",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "170.71",
            "p50": "168.42",
            "p95": "166.70",
            "p99": "165.08",
            "min": "164.85",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "170.43",
            "p50": "167.85",
            "p95": "163.90",
            "p99": "162.78",
            "min": "162.71",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "755.04",
            "p50": "744.32",
            "p95": "509.62",
            "p99": "458.17",
            "min": "455.39",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "401.40",
            "p50": "393.75",
            "p95": "383.94",
            "p99": "370.61",
            "min": "369.19",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "437.66",
            "p50": "428.71",
            "p95": "418.19",
            "p99": "351.82",
            "min": "327.06",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "324.69",
            "p50": "316.10",
            "p95": "298.91",
            "p99": "291.58",
            "min": "290.68",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "186.65",
            "p50": "184.44",
            "p95": "179.65",
            "p99": "169.67",
            "min": "167.35",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "264.85",
            "p50": "258.58",
            "p95": "241.07",
            "p99": "231.02",
            "min": "228.95",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "257.54",
            "p50": "253.92",
            "p95": "243.80",
            "p99": "233.55",
            "min": "232.47",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "260.27",
            "p50": "257.01",
            "p95": "244.00",
            "p99": "243.26",
            "min": "243.24",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "191.22",
            "p50": "188.04",
            "p95": "183.48",
            "p99": "181.14",
            "min": "181.10",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "320.28",
            "p50": "316.73",
            "p95": "303.22",
            "p99": "301.19",
            "min": "300.99",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "309.39",
            "p50": "303.04",
            "p95": "283.22",
            "p99": "258.32",
            "min": "253.12",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "7754.66",
            "p50": "5876.99",
            "p95": "2360.51",
            "p99": "1988.36",
            "min": "1978.20",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2534.83",
            "p50": "2142.86",
            "p95": "1086.03",
            "p99": "1536.62",
            "min": "999.12",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "295.32",
            "p50": "244.70",
            "p95": "225.40",
            "p99": "236.33",
            "min": "222.50",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "8216.67",
            "p50": "4269.74",
            "p95": "1094.81",
            "p99": "4145.32",
            "min": "1073.96",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "8108.20",
            "p50": "4582.16",
            "p95": "2339.56",
            "p99": "4464.35",
            "min": "1715.48",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1829.82",
            "p50": "1656.77",
            "p95": "572.66",
            "p99": "451.59",
            "min": "344.86",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "19845.27",
            "p50": "4658.63",
            "p95": "795.72",
            "p99": "755.62",
            "min": "754.85",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1312.20",
            "p50": "1187.04",
            "p95": "502.73",
            "p99": "417.98",
            "min": "361.83",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2142.79",
            "p50": "1983.29",
            "p95": "1647.04",
            "p99": "675.22",
            "min": "592.11",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2169.10",
            "p50": "1994.73",
            "p95": "751.68",
            "p99": "337.49",
            "min": "287.81",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "6223.69",
            "p50": "5399.12",
            "p95": "776.66",
            "p99": "730.78",
            "min": "728.18",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "300.29",
            "p50": "262.30",
            "p95": "145.05",
            "p99": "140.75",
            "min": "140.40",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "497.47",
            "p50": "456.79",
            "p95": "389.75",
            "p99": "371.99",
            "min": "370.77",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "342.53",
            "p50": "299.99",
            "p95": "58.33",
            "p99": "56.09",
            "min": "55.99",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "424.00",
            "p50": "390.36",
            "p95": "88.92",
            "p99": "58.73",
            "min": "54.97",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "37800.60",
            "p50": "8603.33",
            "p95": "2528.48",
            "p99": "767.99",
            "min": "278.12",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "372.47",
            "p50": "352.97",
            "p95": "301.23",
            "p99": "275.74",
            "min": "271.78",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "355.08",
            "p50": "337.35",
            "p95": "281.75",
            "p99": "167.48",
            "min": "137.89",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "354.69",
            "p50": "338.41",
            "p95": "286.48",
            "p99": "279.24",
            "min": "278.81",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "360.26",
            "p50": "337.39",
            "p95": "284.82",
            "p99": "113.37",
            "min": "69.42",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "15014.94",
            "p50": "7580.11",
            "p95": "2518.32",
            "p99": "1597.12",
            "min": "1461.32",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "15398.14",
            "p50": "8385.51",
            "p95": "2562.23",
            "p99": "1585.60",
            "min": "1571.11",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "14661.88",
            "p50": "6405.67",
            "p95": "2164.55",
            "p99": "782.31",
            "min": "366.97",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "15158.84",
            "p50": "6442.38",
            "p95": "2621.42",
            "p99": "1697.80",
            "min": "1478.09",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "14509.17",
            "p50": "6558.66",
            "p95": "2744.81",
            "p99": "1852.19",
            "min": "1718.33",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "15059.21",
            "p50": "7741.84",
            "p95": "2506.57",
            "p99": "1049.46",
            "min": "50.60",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "257.31",
            "p50": "253.78",
            "p95": "246.35",
            "p99": "240.40",
            "min": "239.44",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "538.56",
            "p50": "530.66",
            "p95": "516.50",
            "p99": "485.28",
            "min": "484.46",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1184.07",
            "p50": "1128.83",
            "p95": "375.99",
            "p99": "346.12",
            "min": "342.48",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "20357.51",
            "p50": "9048.13",
            "p95": "2436.15",
            "p99": "1425.92",
            "min": "1331.51",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1094.52",
            "p50": "1049.74",
            "p95": "346.47",
            "p99": "325.39",
            "min": "319.15",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "47749.06",
            "p50": "9097.27",
            "p95": "2220.94",
            "p99": "1774.44",
            "min": "1770.12",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "16717.17",
            "p50": "7153.68",
            "p95": "2577.16",
            "p99": "1682.00",
            "min": "1662.59",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "523.46",
            "p50": "497.27",
            "p95": "421.23",
            "p99": "179.86",
            "min": "110.73",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "518.16",
            "p50": "508.38",
            "p95": "496.21",
            "p99": "480.50",
            "min": "479.79",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "204.14",
            "p50": "202.43",
            "p95": "195.10",
            "p99": "185.62",
            "min": "182.98",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "434.72",
            "p50": "426.54",
            "p95": "401.37",
            "p99": "392.99",
            "min": "390.53",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "205.42",
            "p50": "202.28",
            "p95": "200.09",
            "p99": "197.08",
            "min": "197.08",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "332.80",
            "p50": "322.75",
            "p95": "303.89",
            "p99": "204.69",
            "min": "184.49",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "272.44",
            "p50": "267.54",
            "p95": "253.43",
            "p99": "250.81",
            "min": "250.47",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "519.11",
            "p50": "508.32",
            "p95": "490.36",
            "p99": "427.70",
            "min": "420.44",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1478.25",
            "p50": "1188.73",
            "p95": "881.56",
            "p99": "783.43",
            "min": "764.56",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "317.80",
            "p50": "314.65",
            "p95": "306.00",
            "p99": "300.34",
            "min": "299.34",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.49",
            "p50": "85.22",
            "p95": "76.69",
            "p99": "76.30",
            "min": "76.28",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "80.83",
            "p50": "78.22",
            "p95": "71.87",
            "p99": "70.78",
            "min": "70.70",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "82.56",
            "p50": "79.49",
            "p95": "72.96",
            "p99": "68.66",
            "min": "68.46",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "226.21",
            "p50": "209.44",
            "p95": "178.96",
            "p99": "161.11",
            "min": "160.40",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "176.21",
            "p50": "162.69",
            "p95": "138.82",
            "p99": "120.38",
            "min": "116.95",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "181.17",
            "p50": "169.36",
            "p95": "151.46",
            "p99": "117.49",
            "min": "108.39",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "171.42",
            "p50": "157.26",
            "p95": "135.99",
            "p99": "131.29",
            "min": "131.26",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "167.53",
            "p50": "156.79",
            "p95": "137.17",
            "p99": "125.65",
            "min": "123.76",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "192.21",
            "p50": "177.20",
            "p95": "153.13",
            "p99": "145.89",
            "min": "145.64",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "173.94",
            "p50": "160.04",
            "p95": "137.24",
            "p99": "132.36",
            "min": "132.11",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "192.59",
            "p50": "179.43",
            "p95": "150.24",
            "p99": "134.09",
            "min": "131.70",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "140.66",
            "p50": "132.16",
            "p95": "113.34",
            "p99": "103.71",
            "min": "101.81",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "219.40",
            "p50": "202.02",
            "p95": "168.78",
            "p99": "158.82",
            "min": "158.69",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "172.39",
            "p50": "159.97",
            "p95": "134.95",
            "p99": "124.63",
            "min": "124.09",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.17",
            "p50": "65.01",
            "p95": "60.51",
            "p99": "56.75",
            "min": "55.95",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "139.61",
            "p50": "128.52",
            "p95": "112.59",
            "p99": "119.45",
            "min": "108.60",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "395.15",
            "p50": "310.95",
            "p95": "226.20",
            "p99": "235.33",
            "min": "197.84",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "169.66",
            "p50": "140.44",
            "p95": "133.53",
            "p99": "148.95",
            "min": "133.33",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "131.37",
            "p50": "120.95",
            "p95": "112.70",
            "p99": "120.24",
            "min": "111.84",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1169.68",
            "p50": "878.48",
            "p95": "517.54",
            "p99": "348.00",
            "min": "265.62",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1028.43",
            "p50": "822.65",
            "p95": "467.26",
            "p99": "418.63",
            "min": "415.21",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1319.69",
            "p50": "1018.46",
            "p95": "524.64",
            "p99": "461.75",
            "min": "460.82",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1249.26",
            "p50": "944.18",
            "p95": "532.01",
            "p99": "455.82",
            "min": "450.20",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1228.88",
            "p50": "921.30",
            "p95": "523.99",
            "p99": "415.28",
            "min": "408.05",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1063.06",
            "p50": "839.36",
            "p95": "530.73",
            "p99": "426.58",
            "min": "412.94",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "656.20",
            "p50": "517.92",
            "p95": "364.10",
            "p99": "240.94",
            "min": "228.16",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "660.83",
            "p50": "522.83",
            "p95": "382.09",
            "p99": "350.53",
            "min": "349.71",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "627.09",
            "p50": "506.37",
            "p95": "366.07",
            "p99": "319.20",
            "min": "313.81",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "666.34",
            "p50": "527.07",
            "p95": "349.22",
            "p99": "285.46",
            "min": "279.78",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "289.84",
            "p50": "262.45",
            "p95": "205.60",
            "p99": "195.47",
            "min": "195.41",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "550.61",
            "p50": "433.81",
            "p95": "313.16",
            "p99": "263.17",
            "min": "262.59",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "566.83",
            "p50": "447.73",
            "p95": "312.16",
            "p99": "236.77",
            "min": "225.76",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "541.52",
            "p50": "447.50",
            "p95": "338.88",
            "p99": "277.73",
            "min": "268.11",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "573.29",
            "p50": "460.19",
            "p95": "325.14",
            "p99": "291.18",
            "min": "290.66",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.53",
            "p50": "102.06",
            "p95": "92.75",
            "p99": "88.75",
            "min": "88.57",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.57",
            "p50": "102.21",
            "p95": "91.71",
            "p99": "86.80",
            "min": "84.42",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.25",
            "p50": "95.20",
            "p95": "86.33",
            "p99": "83.05",
            "min": "82.86",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "253.72",
            "p50": "235.79",
            "p95": "191.49",
            "p99": "167.13",
            "min": "160.33",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.83",
            "p50": "94.44",
            "p95": "86.04",
            "p99": "83.06",
            "min": "82.78",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "246.67",
            "p50": "225.30",
            "p95": "185.53",
            "p99": "171.81",
            "min": "171.38",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "195.92",
            "p50": "179.07",
            "p95": "153.13",
            "p99": "120.66",
            "min": "116.25",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "199.12",
            "p50": "185.82",
            "p95": "151.78",
            "p99": "114.67",
            "min": "88.21",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "354.70",
            "p50": "312.90",
            "p95": "248.03",
            "p99": "220.21",
            "min": "219.52",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5322.66",
            "p50": "2225.77",
            "p95": "925.62",
            "p99": "579.27",
            "min": "544.67",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "341.80",
            "p50": "307.10",
            "p95": "249.13",
            "p99": "201.49",
            "min": "182.94",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14935.82",
            "p50": "3508.49",
            "p95": "1321.87",
            "p99": "784.02",
            "min": "719.28",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3103.96",
            "p50": "1794.09",
            "p95": "816.53",
            "p99": "687.80",
            "min": "687.17",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "180.06",
            "p50": "166.06",
            "p95": "132.78",
            "p99": "124.80",
            "min": "122.65",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "247.08",
            "p50": "227.93",
            "p95": "189.46",
            "p99": "173.26",
            "min": "173.13",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "91.08",
            "p50": "87.75",
            "p95": "79.77",
            "p99": "77.08",
            "min": "77.03",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "222.35",
            "p50": "206.60",
            "p95": "174.75",
            "p99": "159.83",
            "min": "159.83",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "170.18",
            "p50": "159.36",
            "p95": "133.46",
            "p99": "127.87",
            "min": "127.04",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "201.38",
            "p50": "185.91",
            "p95": "159.89",
            "p99": "149.75",
            "min": "148.30",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "194.23",
            "p50": "179.00",
            "p95": "151.37",
            "p99": "135.34",
            "min": "134.73",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "195.62",
            "p50": "182.10",
            "p95": "154.06",
            "p99": "130.66",
            "min": "126.46",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1106.93",
            "p50": "876.02",
            "p95": "564.59",
            "p99": "512.96",
            "min": "507.37",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "173.28",
            "p50": "164.26",
            "p95": "122.17",
            "p99": "112.26",
            "min": "110.76",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "193.87",
            "p50": "188.78",
            "p95": "171.67",
            "p99": "156.50",
            "min": "155.52",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.32",
            "p50": "188.16",
            "p95": "169.05",
            "p99": "160.72",
            "min": "160.60",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.06",
            "p50": "188.81",
            "p95": "173.47",
            "p99": "162.03",
            "min": "160.41",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1186.27",
            "p50": "1086.12",
            "p95": "689.26",
            "p99": "529.39",
            "min": "521.33",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "699.69",
            "p50": "632.33",
            "p95": "485.84",
            "p99": "404.40",
            "min": "404.32",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "811.93",
            "p50": "727.41",
            "p95": "538.40",
            "p99": "470.29",
            "min": "463.55",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "722.57",
            "p50": "664.93",
            "p95": "479.56",
            "p99": "410.07",
            "min": "399.35",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "731.18",
            "p50": "668.43",
            "p95": "496.82",
            "p99": "407.37",
            "min": "406.32",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "893.45",
            "p50": "819.74",
            "p95": "546.32",
            "p99": "463.02",
            "min": "461.84",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "831.81",
            "p50": "743.71",
            "p95": "508.72",
            "p99": "446.28",
            "min": "440.43",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "848.09",
            "p50": "733.35",
            "p95": "561.25",
            "p99": "451.39",
            "min": "449.96",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "819.90",
            "p50": "719.82",
            "p95": "547.15",
            "p99": "440.83",
            "min": "439.81",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "882.36",
            "p50": "790.74",
            "p95": "553.95",
            "p99": "485.11",
            "min": "467.79",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "858.86",
            "p50": "751.04",
            "p95": "501.89",
            "p99": "458.25",
            "min": "454.02",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "64.40",
            "p50": "62.53",
            "p95": "60.41",
            "p99": "58.70",
            "min": "58.39",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "97.26",
            "p50": "95.08",
            "p95": "64.78",
            "p99": "75.72",
            "min": "64.12",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "483.65",
            "p50": "442.79",
            "p95": "356.58",
            "p99": "366.70",
            "min": "339.27",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "132.06",
            "p50": "101.89",
            "p95": "68.53",
            "p99": "94.73",
            "min": "66.57",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "91.41",
            "p50": "86.98",
            "p95": "59.51",
            "p99": "72.53",
            "min": "58.29",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1792.05",
            "p50": "1564.30",
            "p95": "902.71",
            "p99": "676.49",
            "min": "601.23",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1639.88",
            "p50": "1408.95",
            "p95": "853.21",
            "p99": "612.67",
            "min": "607.13",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2251.55",
            "p50": "1791.07",
            "p95": "926.73",
            "p99": "697.79",
            "min": "690.89",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2224.97",
            "p50": "1774.85",
            "p95": "965.03",
            "p99": "675.16",
            "min": "663.60",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2206.32",
            "p50": "1631.98",
            "p95": "821.33",
            "p99": "684.15",
            "min": "683.40",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1679.26",
            "p50": "1481.18",
            "p95": "914.43",
            "p99": "625.08",
            "min": "613.90",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "707.18",
            "p50": "620.68",
            "p95": "474.69",
            "p99": "408.57",
            "min": "408.56",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "710.68",
            "p50": "624.33",
            "p95": "487.88",
            "p99": "408.49",
            "min": "407.53",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "723.33",
            "p50": "626.95",
            "p95": "491.85",
            "p99": "438.92",
            "min": "431.39",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "728.99",
            "p50": "637.83",
            "p95": "471.64",
            "p99": "439.14",
            "min": "436.49",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.71",
            "p50": "85.60",
            "p95": "81.57",
            "p99": "79.37",
            "min": "79.26",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "633.87",
            "p50": "563.09",
            "p95": "418.38",
            "p99": "383.34",
            "min": "383.20",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "599.59",
            "p50": "540.43",
            "p95": "414.68",
            "p99": "372.70",
            "min": "370.00",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "600.05",
            "p50": "539.59",
            "p95": "431.90",
            "p99": "376.35",
            "min": "371.02",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "609.22",
            "p50": "553.92",
            "p95": "465.13",
            "p99": "379.38",
            "min": "372.35",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1920.53",
            "p50": "1686.21",
            "p95": "873.68",
            "p99": "635.17",
            "min": "622.16",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2201.77",
            "p50": "1877.73",
            "p95": "916.25",
            "p99": "702.11",
            "min": "671.55",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.81",
            "p50": "72.06",
            "p95": "69.50",
            "p99": "67.26",
            "min": "67.11",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9330.10",
            "p50": "4245.40",
            "p95": "2421.38",
            "p99": "1766.72",
            "min": "1734.95",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.89",
            "p50": "71.84",
            "p95": "69.33",
            "p99": "67.93",
            "min": "67.66",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "221.86",
            "p50": "217.12",
            "p95": "197.71",
            "p99": "180.82",
            "min": "180.62",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "829.14",
            "p50": "741.56",
            "p95": "514.53",
            "p99": "434.80",
            "min": "431.83",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.50",
            "p50": "620.75",
            "p95": "472.73",
            "p99": "390.15",
            "min": "385.00",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1065.72",
            "p50": "988.44",
            "p95": "694.54",
            "p99": "579.43",
            "min": "574.57",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "27053.96",
            "p50": "8785.19",
            "p95": "2688.52",
            "p99": "2068.53",
            "min": "1808.35",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1067.10",
            "p50": "993.74",
            "p95": "671.27",
            "p99": "569.73",
            "min": "537.13",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "53045.07",
            "p50": "9587.60",
            "p95": "2762.16",
            "p99": "1890.87",
            "min": "1605.41",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15947.55",
            "p50": "6261.57",
            "p95": "1531.81",
            "p99": "1009.73",
            "min": "1004.96",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "555.16",
            "p50": "488.68",
            "p95": "409.45",
            "p99": "330.39",
            "min": "329.41",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "978.34",
            "p50": "894.44",
            "p95": "564.26",
            "p99": "483.23",
            "min": "475.33",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "817.14",
            "p50": "741.31",
            "p95": "537.98",
            "p99": "463.90",
            "min": "457.04",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1201.91",
            "p50": "1079.32",
            "p95": "694.42",
            "p99": "590.67",
            "min": "570.03",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "732.69",
            "p50": "674.35",
            "p95": "512.70",
            "p99": "440.42",
            "min": "435.54",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1156.00",
            "p50": "994.85",
            "p95": "671.36",
            "p99": "524.19",
            "min": "519.71",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "873.55",
            "p50": "764.65",
            "p95": "573.52",
            "p99": "458.83",
            "min": "455.69",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "907.81",
            "p50": "803.85",
            "p95": "617.15",
            "p99": "477.84",
            "min": "469.79",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2363.22",
            "p50": "1980.98",
            "p95": "1066.22",
            "p99": "968.96",
            "min": "964.03",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "852.26",
            "p50": "801.22",
            "p95": "522.00",
            "p99": "445.62",
            "min": "443.41",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "81.71",
            "p50": "79.18",
            "p95": "73.21",
            "p99": "68.55",
            "min": "68.40",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "75.26",
            "p50": "72.92",
            "p95": "65.59",
            "p99": "62.45",
            "min": "62.22",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "76.59",
            "p50": "74.29",
            "p95": "67.66",
            "p99": "63.78",
            "min": "63.52",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "211.74",
            "p50": "197.25",
            "p95": "158.37",
            "p99": "136.58",
            "min": "131.75",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "104.17",
            "p50": "100.00",
            "p95": "89.50",
            "p99": "84.98",
            "min": "84.62",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.97",
            "p50": "104.82",
            "p95": "94.49",
            "p99": "86.72",
            "min": "86.29",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "142.57",
            "p50": "133.67",
            "p95": "114.36",
            "p99": "106.81",
            "min": "105.41",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "142.20",
            "p50": "134.11",
            "p95": "112.11",
            "p99": "73.04",
            "min": "64.58",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "188.62",
            "p50": "174.08",
            "p95": "141.40",
            "p99": "127.25",
            "min": "126.76",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "184.80",
            "p50": "172.35",
            "p95": "141.08",
            "p99": "127.38",
            "min": "126.62",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "185.82",
            "p50": "172.97",
            "p95": "147.91",
            "p99": "123.66",
            "min": "122.09",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.31",
            "p50": "121.33",
            "p95": "104.68",
            "p99": "95.00",
            "min": "94.92",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "205.39",
            "p50": "189.50",
            "p95": "156.12",
            "p99": "138.06",
            "min": "137.17",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "192.00",
            "p50": "176.13",
            "p95": "139.96",
            "p99": "123.82",
            "min": "122.27",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "72.73",
            "p50": "69.05",
            "p95": "63.02",
            "p99": "60.37",
            "min": "59.37",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "133.80",
            "p50": "124.98",
            "p95": "105.35",
            "p99": "114.22",
            "min": "103.67",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "216.33",
            "p50": "192.05",
            "p95": "151.34",
            "p99": "154.34",
            "min": "139.80",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "162.60",
            "p50": "139.03",
            "p95": "133.02",
            "p99": "144.51",
            "min": "130.87",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "128.81",
            "p50": "120.26",
            "p95": "107.02",
            "p99": "112.63",
            "min": "100.43",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1042.36",
            "p50": "757.61",
            "p95": "427.72",
            "p99": "367.62",
            "min": "367.35",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1029.02",
            "p50": "735.88",
            "p95": "385.54",
            "p99": "297.62",
            "min": "289.71",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1156.46",
            "p50": "830.37",
            "p95": "447.44",
            "p99": "357.65",
            "min": "306.36",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1095.70",
            "p50": "770.78",
            "p95": "435.33",
            "p99": "324.97",
            "min": "323.62",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1035.58",
            "p50": "747.18",
            "p95": "438.69",
            "p99": "395.39",
            "min": "388.97",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1030.76",
            "p50": "771.08",
            "p95": "424.73",
            "p99": "318.15",
            "min": "311.76",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "344.75",
            "p50": "293.83",
            "p95": "210.99",
            "p99": "186.59",
            "min": "183.95",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "344.26",
            "p50": "295.88",
            "p95": "228.65",
            "p99": "193.46",
            "min": "192.43",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "338.01",
            "p50": "299.19",
            "p95": "215.60",
            "p99": "202.17",
            "min": "200.80",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "372.47",
            "p50": "314.72",
            "p95": "218.26",
            "p99": "200.60",
            "min": "198.10",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "288.10",
            "p50": "256.85",
            "p95": "204.30",
            "p99": "169.09",
            "min": "167.88",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "296.65",
            "p50": "264.79",
            "p95": "210.43",
            "p99": "175.90",
            "min": "171.73",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "295.80",
            "p50": "262.32",
            "p95": "197.17",
            "p99": "171.47",
            "min": "168.89",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "307.91",
            "p50": "267.86",
            "p95": "201.90",
            "p99": "177.67",
            "min": "177.07",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "298.68",
            "p50": "262.46",
            "p95": "202.21",
            "p99": "168.42",
            "min": "164.99",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.98",
            "p50": "100.94",
            "p95": "91.57",
            "p99": "84.12",
            "min": "83.56",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.53",
            "p50": "100.90",
            "p95": "90.21",
            "p99": "83.40",
            "min": "82.04",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.95",
            "p50": "94.30",
            "p95": "86.15",
            "p99": "81.83",
            "min": "81.26",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "249.15",
            "p50": "228.53",
            "p95": "176.96",
            "p99": "150.50",
            "min": "150.46",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.02",
            "p50": "93.83",
            "p95": "85.99",
            "p99": "81.41",
            "min": "81.17",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "244.50",
            "p50": "223.89",
            "p95": "167.09",
            "p99": "156.41",
            "min": "156.23",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "188.75",
            "p50": "174.86",
            "p95": "136.40",
            "p99": "129.60",
            "min": "129.51",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "155.12",
            "p50": "145.21",
            "p95": "125.82",
            "p99": "94.17",
            "min": "83.08",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "442.92",
            "p50": "374.46",
            "p95": "257.14",
            "p99": "211.46",
            "min": "211.00",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5286.87",
            "p50": "1916.71",
            "p95": "535.67",
            "p99": "450.13",
            "min": "409.20",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "440.04",
            "p50": "373.69",
            "p95": "268.77",
            "p99": "233.32",
            "min": "232.24",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "12034.25",
            "p50": "2661.91",
            "p95": "902.04",
            "p99": "614.54",
            "min": "555.29",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3185.75",
            "p50": "1273.97",
            "p95": "466.80",
            "p99": "427.03",
            "min": "412.19",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "206.96",
            "p50": "190.97",
            "p95": "154.77",
            "p99": "133.30",
            "min": "126.75",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "235.62",
            "p50": "213.33",
            "p95": "173.34",
            "p99": "155.22",
            "min": "154.33",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "129.19",
            "p50": "121.97",
            "p95": "107.79",
            "p99": "91.14",
            "min": "87.48",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "210.16",
            "p50": "192.41",
            "p95": "146.05",
            "p99": "104.92",
            "min": "82.84",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "141.55",
            "p50": "134.81",
            "p95": "113.33",
            "p99": "100.70",
            "min": "98.58",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "174.94",
            "p50": "162.08",
            "p95": "130.05",
            "p99": "106.58",
            "min": "98.76",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "187.42",
            "p50": "173.54",
            "p95": "140.22",
            "p99": "93.65",
            "min": "84.70",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "186.71",
            "p50": "171.44",
            "p95": "139.91",
            "p99": "130.47",
            "min": "129.69",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "298.97",
            "p50": "241.59",
            "p95": "147.21",
            "p99": "146.94",
            "min": "138.93",
            "n": "94",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "144.25",
            "p50": "136.83",
            "p95": "111.06",
            "p99": "107.41",
            "min": "96.41",
            "n": "76",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.19",
            "p50": "85.91",
            "p95": "78.91",
            "p99": "75.37",
            "min": "75.00",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "89.35",
            "p50": "87.08",
            "p95": "82.28",
            "p99": "80.67",
            "min": "80.66",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "88.98",
            "p50": "86.35",
            "p95": "80.33",
            "p99": "79.03",
            "min": "78.96",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "191.89",
            "p50": "182.53",
            "p95": "176.89",
            "p99": "146.51",
            "min": "142.51",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "93.94",
            "p50": "89.25",
            "p95": "85.90",
            "p99": "84.29",
            "min": "84.25",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.90",
            "p50": "107.33",
            "p95": "104.86",
            "p99": "99.49",
            "min": "98.44",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "124.59",
            "p50": "120.90",
            "p95": "108.38",
            "p99": "99.76",
            "min": "99.71",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "125.11",
            "p50": "121.82",
            "p95": "117.50",
            "p99": "114.18",
            "min": "114.09",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "98.91",
            "p50": "96.69",
            "p95": "77.03",
            "p99": "74.40",
            "min": "73.57",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "98.01",
            "p50": "95.53",
            "p95": "93.41",
            "p99": "92.33",
            "min": "92.23",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.33",
            "p50": "95.67",
            "p95": "93.53",
            "p99": "88.79",
            "min": "88.01",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.95",
            "p50": "123.04",
            "p95": "116.87",
            "p99": "114.50",
            "min": "114.40",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "122.90",
            "p50": "113.96",
            "p95": "109.29",
            "p99": "103.31",
            "min": "103.07",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "115.79",
            "p50": "113.18",
            "p95": "109.01",
            "p99": "103.01",
            "min": "103.00",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "75.20",
            "p50": "71.60",
            "p95": "67.29",
            "p99": "61.48",
            "min": "60.65",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "98.01",
            "p50": "96.71",
            "p95": "91.40",
            "p99": "93.05",
            "min": "90.37",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "58.14",
            "p50": "56.70",
            "p95": "55.04",
            "p99": "54.53",
            "min": "53.68",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "158.43",
            "p50": "127.01",
            "p95": "119.11",
            "p99": "134.29",
            "min": "116.08",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "110.00",
            "p50": "107.78",
            "p95": "103.89",
            "p99": "106.26",
            "min": "103.44",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "374.09",
            "p50": "362.41",
            "p95": "344.54",
            "p99": "308.17",
            "min": "301.09",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "509.51",
            "p50": "496.85",
            "p95": "456.14",
            "p99": "368.08",
            "min": "358.46",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "367.42",
            "p50": "355.68",
            "p95": "342.57",
            "p99": "292.57",
            "min": "278.62",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "370.36",
            "p50": "357.19",
            "p95": "338.99",
            "p99": "267.41",
            "min": "267.24",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "372.79",
            "p50": "358.60",
            "p95": "347.06",
            "p99": "302.75",
            "min": "285.63",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "465.95",
            "p50": "455.03",
            "p95": "429.47",
            "p99": "388.38",
            "min": "385.23",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "94.66",
            "p50": "91.68",
            "p95": "89.88",
            "p99": "87.71",
            "min": "87.51",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "95.91",
            "p50": "92.16",
            "p95": "89.90",
            "p99": "88.08",
            "min": "88.04",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "94.53",
            "p50": "91.09",
            "p95": "88.99",
            "p99": "86.91",
            "min": "86.71",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "87.21",
            "p50": "84.76",
            "p95": "83.36",
            "p99": "78.62",
            "min": "78.01",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.00",
            "p50": "86.00",
            "p95": "85.46",
            "p99": "83.08",
            "min": "82.52",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "87.64",
            "p50": "84.74",
            "p95": "82.48",
            "p99": "79.91",
            "min": "79.60",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "83.68",
            "p50": "80.52",
            "p95": "78.82",
            "p99": "71.61",
            "min": "70.43",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "83.60",
            "p50": "80.31",
            "p95": "77.56",
            "p99": "73.91",
            "min": "73.12",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "83.35",
            "p50": "80.43",
            "p95": "78.23",
            "p99": "77.11",
            "min": "77.10",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "370.67",
            "p50": "358.57",
            "p95": "268.54",
            "p99": "222.10",
            "min": "191.19",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "372.08",
            "p50": "357.38",
            "p95": "304.54",
            "p99": "201.62",
            "min": "155.94",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.26",
            "p50": "151.87",
            "p95": "133.27",
            "p99": "118.21",
            "min": "113.47",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "475.73",
            "p50": "452.34",
            "p95": "339.38",
            "p99": "271.52",
            "min": "220.14",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "154.42",
            "p50": "151.81",
            "p95": "133.96",
            "p99": "104.21",
            "min": "98.62",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "276.03",
            "p50": "267.62",
            "p95": "226.94",
            "p99": "183.48",
            "min": "168.19",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.46",
            "p50": "96.13",
            "p95": "87.69",
            "p99": "78.95",
            "min": "78.49",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "185.81",
            "p50": "183.20",
            "p95": "178.87",
            "p99": "165.09",
            "min": "163.71",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "402.28",
            "p50": "306.18",
            "p95": "219.25",
            "p99": "195.54",
            "min": "195.20",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7273.89",
            "p50": "2126.65",
            "p95": "843.99",
            "p99": "541.67",
            "min": "442.39",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "379.04",
            "p50": "297.28",
            "p95": "246.59",
            "p99": "209.03",
            "min": "206.16",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "28502.73",
            "p50": "9758.87",
            "p95": "2646.69",
            "p99": "1959.59",
            "min": "1947.07",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4512.66",
            "p50": "3092.22",
            "p95": "1442.12",
            "p99": "1032.72",
            "min": "989.30",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "323.58",
            "p50": "260.25",
            "p95": "197.62",
            "p99": "158.08",
            "min": "152.24",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "150.27",
            "p50": "132.86",
            "p95": "113.97",
            "p99": "107.55",
            "min": "106.16",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "123.66",
            "p50": "118.91",
            "p95": "96.93",
            "p99": "93.27",
            "min": "92.86",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "129.45",
            "p50": "121.01",
            "p95": "103.22",
            "p99": "100.67",
            "min": "100.20",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "123.64",
            "p50": "118.70",
            "p95": "115.25",
            "p99": "111.04",
            "min": "110.52",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "155.90",
            "p50": "149.43",
            "p95": "145.43",
            "p99": "141.84",
            "min": "141.69",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "95.98",
            "p50": "92.68",
            "p95": "74.56",
            "p99": "71.91",
            "min": "71.31",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "119.17",
            "p50": "113.22",
            "p95": "110.42",
            "p99": "108.84",
            "min": "108.41",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "937.00",
            "p50": "871.96",
            "p95": "648.22",
            "p99": "554.35",
            "min": "538.31",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "121.45",
            "p50": "119.51",
            "p95": "102.25",
            "p99": "95.08",
            "min": "94.39",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}