{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "169.93",
            "p50": "168.32",
            "p95": "157.73",
            "p99": "148.36",
            "min": "148.10",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "170.34",
            "p50": "168.72",
            "p95": "166.73",
            "p99": "164.48",
            "min": "164.41",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "169.88",
            "p50": "168.28",
            "p95": "164.28",
            "p99": "161.92",
            "min": "161.72",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "759.09",
            "p50": "746.88",
            "p95": "468.13",
            "p99": "432.70",
            "min": "430.88",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "401.72",
            "p50": "393.57",
            "p95": "382.36",
            "p99": "375.64",
            "min": "375.32",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "437.29",
            "p50": "428.65",
            "p95": "415.22",
            "p99": "400.18",
            "min": "396.55",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "324.59",
            "p50": "318.19",
            "p95": "309.28",
            "p99": "295.86",
            "min": "294.44",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "187.71",
            "p50": "184.90",
            "p95": "182.63",
            "p99": "148.49",
            "min": "140.46",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "268.22",
            "p50": "263.04",
            "p95": "244.54",
            "p99": "237.69",
            "min": "237.21",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "264.00",
            "p50": "260.76",
            "p95": "251.27",
            "p99": "249.43",
            "min": "249.26",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "266.12",
            "p50": "258.60",
            "p95": "253.61",
            "p99": "249.81",
            "min": "249.51",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "190.41",
            "p50": "188.33",
            "p95": "183.60",
            "p99": "177.32",
            "min": "176.05",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "320.82",
            "p50": "315.04",
            "p95": "301.44",
            "p99": "291.84",
            "min": "290.10",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "310.99",
            "p50": "304.82",
            "p95": "296.16",
            "p99": "286.33",
            "min": "284.67",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "110.48",
            "p50": "106.96",
            "p95": "104.88",
            "p99": "104.41",
            "min": "104.34",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "170.47",
            "p50": "167.91",
            "p95": "163.05",
            "p99": "163.85",
            "min": "160.29",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "293.09",
            "p50": "241.72",
            "p95": "228.67",
            "p99": "239.30",
            "min": "226.69",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "241.71",
            "p50": "193.84",
            "p95": "181.09",
            "p99": "206.82",
            "min": "180.49",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "167.38",
            "p50": "164.35",
            "p95": "163.12",
            "p99": "164.84",
            "min": "162.92",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "890.64",
            "p50": "822.51",
            "p95": "777.86",
            "p99": "750.42",
            "min": "746.04",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "844.04",
            "p50": "817.04",
            "p95": "793.84",
            "p99": "775.92",
            "min": "767.85",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1042.86",
            "p50": "945.86",
            "p95": "896.92",
            "p99": "876.94",
            "min": "867.54",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1068.43",
            "p50": "967.94",
            "p95": "924.07",
            "p99": "887.68",
            "min": "871.53",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1077.84",
            "p50": "976.52",
            "p95": "942.21",
            "p99": "909.75",
            "min": "901.82",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "850.32",
            "p50": "817.76",
            "p95": "788.78",
            "p99": "769.71",
            "min": "765.38",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "197.50",
            "p50": "184.29",
            "p95": "178.29",
            "p99": "174.14",
            "min": "173.74",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "199.38",
            "p50": "184.23",
            "p95": "178.79",
            "p99": "171.18",
            "min": "169.84",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "198.25",
            "p50": "185.48",
            "p95": "178.71",
            "p99": "171.96",
            "min": "171.73",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "225.06",
            "p50": "209.90",
            "p95": "203.23",
            "p99": "201.27",
            "min": "201.06",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.89",
            "p50": "87.25",
            "p95": "86.56",
            "p99": "84.65",
            "min": "83.80",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "343.65",
            "p50": "305.98",
            "p95": "288.00",
            "p99": "143.13",
            "min": "107.04",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "337.73",
            "p50": "296.15",
            "p95": "285.88",
            "p99": "281.09",
            "min": "280.78",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "332.41",
            "p50": "297.98",
            "p95": "287.39",
            "p99": "275.64",
            "min": "274.86",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "330.85",
            "p50": "299.18",
            "p95": "286.45",
            "p99": "152.51",
            "min": "121.58",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2384.35",
            "p50": "2264.03",
            "p95": "2090.03",
            "p99": "1506.48",
            "min": "1389.83",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2301.30",
            "p50": "2191.30",
            "p95": "1976.23",
            "p99": "32.44",
            "min": "30.01",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "94.11",
            "p50": "93.00",
            "p95": "92.28",
            "p99": "88.06",
            "min": "87.91",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "5694.26",
            "p50": "5091.88",
            "p95": "2670.23",
            "p99": "33.68",
            "min": "32.30",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "94.12",
            "p50": "93.11",
            "p95": "92.38",
            "p99": "92.13",
            "min": "92.12",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3193.35",
            "p50": "2986.49",
            "p95": "2400.87",
            "p99": "1707.94",
            "min": "1664.97",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "263.14",
            "p50": "257.41",
            "p95": "250.20",
            "p99": "217.85",
            "min": "209.81",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "539.49",
            "p50": "530.74",
            "p95": "515.99",
            "p99": "484.15",
            "min": "483.20",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1271.07",
            "p50": "1180.87",
            "p95": "418.89",
            "p99": "363.64",
            "min": "359.99",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "18096.57",
            "p50": "7810.81",
            "p95": "2501.43",
            "p99": "1021.55",
            "min": "239.12",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1147.72",
            "p50": "1084.11",
            "p95": "345.31",
            "p99": "329.48",
            "min": "329.06",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "48806.95",
            "p50": "9125.07",
            "p95": "2634.30",
            "p99": "1843.57",
            "min": "1510.70",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "16764.03",
            "p50": "6985.67",
            "p95": "2543.48",
            "p99": "1758.69",
            "min": "1746.82",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "531.40",
            "p50": "487.17",
            "p95": "443.44",
            "p99": "418.01",
            "min": "415.34",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "519.72",
            "p50": "509.29",
            "p95": "493.96",
            "p99": "452.37",
            "min": "439.09",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "205.07",
            "p50": "202.06",
            "p95": "197.31",
            "p99": "188.43",
            "min": "187.19",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "437.77",
            "p50": "428.88",
            "p95": "415.44",
            "p99": "312.55",
            "min": "253.93",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "203.88",
            "p50": "201.45",
            "p95": "198.24",
            "p99": "191.85",
            "min": "190.63",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "328.50",
            "p50": "321.37",
            "p95": "313.58",
            "p99": "302.68",
            "min": "302.42",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "270.33",
            "p50": "265.85",
            "p95": "253.65",
            "p99": "251.20",
            "min": "251.17",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "514.71",
            "p50": "502.39",
            "p95": "485.74",
            "p99": "462.46",
            "min": "455.22",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1465.04",
            "p50": "1184.00",
            "p95": "851.69",
            "p99": "770.84",
            "min": "766.15",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "317.58",
            "p50": "310.45",
            "p95": "303.00",
            "p99": "293.64",
            "min": "292.14",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.85",
            "p50": "84.51",
            "p95": "77.16",
            "p99": "74.78",
            "min": "74.67",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "80.45",
            "p50": "78.01",
            "p95": "71.58",
            "p99": "68.36",
            "min": "68.15",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "82.73",
            "p50": "79.41",
            "p95": "72.38",
            "p99": "68.39",
            "min": "68.13",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "226.25",
            "p50": "208.98",
            "p95": "173.64",
            "p99": "119.45",
            "min": "85.10",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "173.38",
            "p50": "161.98",
            "p95": "141.28",
            "p99": "133.07",
            "min": "132.86",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "181.53",
            "p50": "169.69",
            "p95": "147.70",
            "p99": "128.38",
            "min": "128.06",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "169.28",
            "p50": "157.73",
            "p95": "133.06",
            "p99": "116.60",
            "min": "115.60",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "170.39",
            "p50": "156.10",
            "p95": "138.97",
            "p99": "127.20",
            "min": "125.73",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "192.39",
            "p50": "178.23",
            "p95": "153.37",
            "p99": "145.54",
            "min": "145.12",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "171.62",
            "p50": "158.72",
            "p95": "133.25",
            "p99": "79.27",
            "min": "76.73",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "194.71",
            "p50": "178.23",
            "p95": "157.34",
            "p99": "135.18",
            "min": "132.98",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "140.60",
            "p50": "131.76",
            "p95": "113.35",
            "p99": "102.57",
            "min": "102.38",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "217.79",
            "p50": "200.67",
            "p95": "170.22",
            "p99": "144.48",
            "min": "141.58",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "171.78",
            "p50": "159.67",
            "p95": "140.52",
            "p99": "108.90",
            "min": "102.09",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.23",
            "p50": "64.94",
            "p95": "58.91",
            "p99": "57.41",
            "min": "57.13",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "139.34",
            "p50": "128.58",
            "p95": "113.15",
            "p99": "118.96",
            "min": "107.98",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "372.28",
            "p50": "302.99",
            "p95": "243.44",
            "p99": "226.09",
            "min": "191.80",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "175.58",
            "p50": "141.69",
            "p95": "133.10",
            "p99": "151.08",
            "min": "132.60",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "130.96",
            "p50": "122.13",
            "p95": "108.91",
            "p99": "116.86",
            "min": "106.22",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1144.48",
            "p50": "854.74",
            "p95": "471.47",
            "p99": "417.53",
            "min": "415.99",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1045.14",
            "p50": "786.64",
            "p95": "491.81",
            "p99": "400.61",
            "min": "389.90",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1357.81",
            "p50": "976.73",
            "p95": "584.98",
            "p99": "410.68",
            "min": "410.60",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1263.37",
            "p50": "904.51",
            "p95": "530.35",
            "p99": "471.03",
            "min": "455.94",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1255.54",
            "p50": "909.72",
            "p95": "530.19",
            "p99": "438.72",
            "min": "435.83",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1067.39",
            "p50": "834.57",
            "p95": "560.42",
            "p99": "473.03",
            "min": "458.97",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "631.21",
            "p50": "509.18",
            "p95": "379.16",
            "p99": "301.77",
            "min": "294.14",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "629.76",
            "p50": "512.07",
            "p95": "345.09",
            "p99": "287.16",
            "min": "284.35",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "661.96",
            "p50": "503.64",
            "p95": "359.22",
            "p99": "328.68",
            "min": "325.14",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "672.09",
            "p50": "528.08",
            "p95": "354.74",
            "p99": "288.94",
            "min": "278.79",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "288.96",
            "p50": "263.45",
            "p95": "212.81",
            "p99": "191.99",
            "min": "190.21",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "539.85",
            "p50": "419.58",
            "p95": "320.07",
            "p99": "293.85",
            "min": "290.74",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "542.12",
            "p50": "437.86",
            "p95": "313.32",
            "p99": "284.46",
            "min": "280.82",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "559.15",
            "p50": "448.98",
            "p95": "335.25",
            "p99": "316.11",
            "min": "315.63",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "568.33",
            "p50": "459.66",
            "p95": "328.36",
            "p99": "263.01",
            "min": "253.34",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.84",
            "p50": "102.05",
            "p95": "91.45",
            "p99": "84.83",
            "min": "82.91",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.96",
            "p50": "101.99",
            "p95": "92.07",
            "p99": "87.10",
            "min": "85.71",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.31",
            "p50": "94.60",
            "p95": "86.73",
            "p99": "78.37",
            "min": "75.08",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "252.89",
            "p50": "231.56",
            "p95": "196.87",
            "p99": "167.28",
            "min": "160.31",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.71",
            "p50": "94.69",
            "p95": "86.80",
            "p99": "83.08",
            "min": "82.68",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "246.26",
            "p50": "224.05",
            "p95": "189.84",
            "p99": "173.82",
            "min": "171.80",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "194.08",
            "p50": "179.65",
            "p95": "152.42",
            "p99": "145.50",
            "min": "145.05",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "199.96",
            "p50": "185.01",
            "p95": "160.08",
            "p99": "147.63",
            "min": "144.17",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "352.13",
            "p50": "316.85",
            "p95": "245.98",
            "p99": "199.57",
            "min": "184.45",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4953.89",
            "p50": "2206.93",
            "p95": "892.42",
            "p99": "641.53",
            "min": "568.70",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "346.36",
            "p50": "306.60",
            "p95": "244.46",
            "p99": "207.10",
            "min": "194.16",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14623.75",
            "p50": "3722.08",
            "p95": "1358.98",
            "p99": "597.37",
            "min": "524.80",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3325.32",
            "p50": "1816.60",
            "p95": "708.62",
            "p99": "523.34",
            "min": "507.17",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "181.12",
            "p50": "165.45",
            "p95": "142.37",
            "p99": "132.11",
            "min": "131.10",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "247.45",
            "p50": "223.93",
            "p95": "180.58",
            "p99": "174.48",
            "min": "174.34",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "91.25",
            "p50": "87.44",
            "p95": "78.00",
            "p99": "41.74",
            "min": "41.65",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "225.99",
            "p50": "206.81",
            "p95": "175.51",
            "p99": "162.81",
            "min": "161.92",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "169.20",
            "p50": "158.16",
            "p95": "140.19",
            "p99": "128.64",
            "min": "128.04",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "200.59",
            "p50": "187.40",
            "p95": "151.99",
            "p99": "135.60",
            "min": "126.14",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "195.12",
            "p50": "179.86",
            "p95": "149.06",
            "p99": "142.33",
            "min": "142.17",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "196.60",
            "p50": "181.94",
            "p95": "157.02",
            "p99": "145.98",
            "min": "145.55",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1114.88",
            "p50": "868.60",
            "p95": "508.37",
            "p99": "404.70",
            "min": "392.45",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "174.30",
            "p50": "162.98",
            "p95": "123.12",
            "p99": "115.60",
            "min": "115.55",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.46",
            "p50": "188.70",
            "p95": "172.60",
            "p99": "167.40",
            "min": "167.20",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "195.07",
            "p50": "189.09",
            "p95": "169.27",
            "p99": "161.32",
            "min": "161.29",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.24",
            "p50": "190.26",
            "p95": "169.76",
            "p99": "161.40",
            "min": "161.39",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1187.84",
            "p50": "1054.31",
            "p95": "653.44",
            "p99": "563.38",
            "min": "557.20",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "703.10",
            "p50": "639.23",
            "p95": "480.17",
            "p99": "446.47",
            "min": "445.86",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "810.43",
            "p50": "735.51",
            "p95": "499.20",
            "p99": "435.09",
            "min": "428.97",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "718.69",
            "p50": "660.05",
            "p95": "463.34",
            "p99": "407.31",
            "min": "404.06",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "727.16",
            "p50": "654.27",
            "p95": "472.69",
            "p99": "421.83",
            "min": "414.86",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "889.73",
            "p50": "807.38",
            "p95": "598.46",
            "p99": "521.25",
            "min": "517.54",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "862.95",
            "p50": "782.79",
            "p95": "539.61",
            "p99": "451.84",
            "min": "451.72",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "860.80",
            "p50": "763.42",
            "p95": "535.43",
            "p99": "512.50",
            "min": "512.07",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "821.11",
            "p50": "733.80",
            "p95": "512.24",
            "p99": "440.62",
            "min": "437.52",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "650.72",
            "p50": "601.13",
            "p95": "432.46",
            "p99": "178.81",
            "min": "175.76",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "859.13",
            "p50": "767.44",
            "p95": "547.62",
            "p99": "456.89",
            "min": "454.96",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "64.38",
            "p50": "62.57",
            "p95": "60.08",
            "p99": "59.23",
            "min": "59.09",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "97.24",
            "p50": "94.69",
            "p95": "88.41",
            "p99": "90.62",
            "min": "87.06",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "489.77",
            "p50": "459.05",
            "p95": "390.86",
            "p99": "400.45",
            "min": "379.50",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "131.84",
            "p50": "103.93",
            "p95": "96.99",
            "p99": "111.16",
            "min": "95.56",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "91.17",
            "p50": "87.80",
            "p95": "84.93",
            "p99": "86.65",
            "min": "83.24",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1789.82",
            "p50": "1550.21",
            "p95": "882.28",
            "p99": "614.62",
            "min": "603.02",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1637.97",
            "p50": "1440.28",
            "p95": "765.62",
            "p99": "607.76",
            "min": "599.74",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2246.27",
            "p50": "1908.48",
            "p95": "1005.92",
            "p99": "761.99",
            "min": "702.28",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2214.54",
            "p50": "1832.39",
            "p95": "875.40",
            "p99": "772.58",
            "min": "760.68",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2225.19",
            "p50": "1802.12",
            "p95": "1001.35",
            "p99": "722.11",
            "min": "692.76",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1677.88",
            "p50": "1437.75",
            "p95": "809.92",
            "p99": "613.22",
            "min": "601.95",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "717.80",
            "p50": "623.27",
            "p95": "467.95",
            "p99": "405.24",
            "min": "404.73",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "713.86",
            "p50": "636.29",
            "p95": "471.46",
            "p99": "396.22",
            "min": "394.92",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "719.36",
            "p50": "628.63",
            "p95": "465.73",
            "p99": "415.55",
            "min": "411.56",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "731.82",
            "p50": "645.41",
            "p95": "464.92",
            "p99": "411.22",
            "min": "408.26",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.73",
            "p50": "85.38",
            "p95": "81.18",
            "p99": "79.32",
            "min": "78.75",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "636.27",
            "p50": "581.97",
            "p95": "450.92",
            "p99": "392.95",
            "min": "386.40",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "596.48",
            "p50": "543.45",
            "p95": "418.11",
            "p99": "372.96",
            "min": "369.13",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "595.16",
            "p50": "533.32",
            "p95": "443.36",
            "p99": "378.34",
            "min": "373.94",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "612.21",
            "p50": "542.66",
            "p95": "439.44",
            "p99": "380.92",
            "min": "372.64",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1376.43",
            "p50": "1180.78",
            "p95": "709.38",
            "p99": "556.26",
            "min": "541.81",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1678.39",
            "p50": "1551.42",
            "p95": "746.81",
            "p99": "604.42",
            "min": "598.33",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.16",
            "p50": "71.32",
            "p95": "68.72",
            "p99": "67.06",
            "min": "67.02",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9387.44",
            "p50": "4628.96",
            "p95": "2369.67",
            "p99": "1639.41",
            "min": "1636.45",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.19",
            "p50": "71.23",
            "p95": "68.43",
            "p99": "66.91",
            "min": "66.80",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "221.76",
            "p50": "215.38",
            "p95": "190.78",
            "p99": "178.13",
            "min": "177.19",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "858.34",
            "p50": "748.81",
            "p95": "511.01",
            "p99": "456.26",
            "min": "455.27",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "669.88",
            "p50": "601.82",
            "p95": "410.82",
            "p99": "345.92",
            "min": "339.10",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1070.55",
            "p50": "961.88",
            "p95": "645.64",
            "p99": "549.95",
            "min": "541.81",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "27290.97",
            "p50": "8923.68",
            "p95": "2760.70",
            "p99": "1999.19",
            "min": "1637.87",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1064.14",
            "p50": "1003.97",
            "p95": "674.42",
            "p99": "521.29",
            "min": "520.20",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "51695.43",
            "p50": "9841.96",
            "p95": "2422.50",
            "p99": "1768.79",
            "min": "1735.49",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14495.53",
            "p50": "5689.13",
            "p95": "1395.16",
            "p99": "1002.37",
            "min": "982.31",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "538.48",
            "p50": "485.83",
            "p95": "383.36",
            "p99": "332.45",
            "min": "326.09",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "977.59",
            "p50": "888.35",
            "p95": "650.90",
            "p99": "507.63",
            "min": "484.82",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "799.43",
            "p50": "708.62",
            "p95": "506.31",
            "p99": "445.73",
            "min": "444.41",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1200.51",
            "p50": "1045.17",
            "p95": "697.26",
            "p99": "566.52",
            "min": "535.65",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "727.66",
            "p50": "661.59",
            "p95": "499.37",
            "p99": "418.97",
            "min": "416.67",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1151.82",
            "p50": "1081.73",
            "p95": "732.01",
            "p99": "535.57",
            "min": "531.64",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "870.88",
            "p50": "753.15",
            "p95": "555.07",
            "p99": "455.47",
            "min": "454.89",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "902.88",
            "p50": "800.68",
            "p95": "548.77",
            "p99": "459.87",
            "min": "455.16",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2340.74",
            "p50": "1959.26",
            "p95": "1055.13",
            "p99": "931.45",
            "min": "905.49",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "855.28",
            "p50": "775.85",
            "p95": "546.97",
            "p99": "454.30",
            "min": "454.26",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "82.98",
            "p50": "79.92",
            "p95": "72.10",
            "p99": "68.69",
            "min": "68.42",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "75.78",
            "p50": "73.43",
            "p95": "69.00",
            "p99": "64.47",
            "min": "63.88",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "77.47",
            "p50": "75.29",
            "p95": "69.42",
            "p99": "66.64",
            "min": "66.53",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "211.20",
            "p50": "194.77",
            "p95": "157.58",
            "p99": "100.42",
            "min": "84.56",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "104.03",
            "p50": "99.25",
            "p95": "86.71",
            "p99": "78.86",
            "min": "77.66",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.32",
            "p50": "105.50",
            "p95": "92.97",
            "p99": "85.42",
            "min": "84.85",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "144.48",
            "p50": "136.05",
            "p95": "118.09",
            "p99": "108.57",
            "min": "108.04",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "142.79",
            "p50": "134.65",
            "p95": "113.55",
            "p99": "106.65",
            "min": "106.57",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "188.20",
            "p50": "174.87",
            "p95": "145.61",
            "p99": "127.97",
            "min": "125.67",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "186.03",
            "p50": "174.12",
            "p95": "141.93",
            "p99": "129.36",
            "min": "128.62",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "184.90",
            "p50": "173.84",
            "p95": "137.99",
            "p99": "103.34",
            "min": "102.34",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.35",
            "p50": "122.77",
            "p95": "109.30",
            "p99": "100.21",
            "min": "100.21",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "204.29",
            "p50": "188.92",
            "p95": "148.02",
            "p99": "138.30",
            "min": "137.39",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "189.91",
            "p50": "177.54",
            "p95": "143.62",
            "p99": "131.40",
            "min": "131.01",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "72.95",
            "p50": "69.29",
            "p95": "63.35",
            "p99": "61.51",
            "min": "61.07",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "133.11",
            "p50": "125.42",
            "p95": "105.62",
            "p99": "110.71",
            "min": "98.64",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "215.10",
            "p50": "197.73",
            "p95": "155.26",
            "p99": "155.23",
            "min": "141.19",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "172.30",
            "p50": "140.84",
            "p95": "133.40",
            "p99": "149.02",
            "min": "131.47",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "128.19",
            "p50": "121.03",
            "p95": "104.84",
            "p99": "113.15",
            "min": "101.80",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1052.03",
            "p50": "747.64",
            "p95": "450.83",
            "p99": "350.91",
            "min": "345.95",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1028.75",
            "p50": "757.36",
            "p95": "388.60",
            "p99": "283.09",
            "min": "277.94",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1171.47",
            "p50": "840.12",
            "p95": "449.23",
            "p99": "325.58",
            "min": "314.55",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1064.92",
            "p50": "805.33",
            "p95": "456.96",
            "p99": "381.58",
            "min": "347.28",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1039.35",
            "p50": "764.89",
            "p95": "434.52",
            "p99": "324.68",
            "min": "315.41",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1026.17",
            "p50": "753.84",
            "p95": "379.34",
            "p99": "339.75",
            "min": "339.46",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "351.86",
            "p50": "299.00",
            "p95": "226.81",
            "p99": "196.02",
            "min": "192.97",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "344.86",
            "p50": "297.53",
            "p95": "214.86",
            "p99": "189.24",
            "min": "187.10",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "342.95",
            "p50": "301.61",
            "p95": "231.43",
            "p99": "197.27",
            "min": "195.23",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "367.09",
            "p50": "319.05",
            "p95": "222.61",
            "p99": "194.57",
            "min": "194.39",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "287.33",
            "p50": "257.61",
            "p95": "193.30",
            "p99": "175.54",
            "min": "171.67",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "298.08",
            "p50": "263.18",
            "p95": "203.11",
            "p99": "181.74",
            "min": "179.21",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "295.53",
            "p50": "258.10",
            "p95": "190.73",
            "p99": "168.68",
            "min": "165.10",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "302.56",
            "p50": "261.56",
            "p95": "194.99",
            "p99": "170.98",
            "min": "170.82",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "300.82",
            "p50": "267.41",
            "p95": "212.83",
            "p99": "175.87",
            "min": "174.70",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.84",
            "p50": "101.39",
            "p95": "90.97",
            "p99": "79.57",
            "min": "77.18",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.64",
            "p50": "101.46",
            "p95": "90.62",
            "p99": "86.20",
            "min": "85.86",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.60",
            "p50": "94.26",
            "p95": "86.14",
            "p99": "79.26",
            "min": "78.50",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "250.27",
            "p50": "229.88",
            "p95": "183.91",
            "p99": "165.52",
            "min": "164.97",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.02",
            "p50": "94.21",
            "p95": "84.95",
            "p99": "79.63",
            "min": "79.20",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "243.15",
            "p50": "224.73",
            "p95": "173.55",
            "p99": "148.25",
            "min": "147.12",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "187.98",
            "p50": "171.73",
            "p95": "146.15",
            "p99": "120.22",
            "min": "116.27",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "149.83",
            "p50": "141.13",
            "p95": "126.67",
            "p99": "116.47",
            "min": "115.68",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "442.92",
            "p50": "375.83",
            "p95": "262.07",
            "p99": "222.59",
            "min": "211.70",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4707.56",
            "p50": "1757.94",
            "p95": "487.47",
            "p99": "434.01",
            "min": "423.95",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "442.65",
            "p50": "370.78",
            "p95": "266.98",
            "p99": "213.05",
            "min": "177.39",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "13748.18",
            "p50": "2639.31",
            "p95": "1034.90",
            "p99": "701.99",
            "min": "692.32",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2858.72",
            "p50": "1377.40",
            "p95": "511.40",
            "p99": "437.20",
            "min": "422.77",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "209.80",
            "p50": "191.81",
            "p95": "157.96",
            "p99": "143.42",
            "min": "143.22",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "234.09",
            "p50": "212.86",
            "p95": "172.59",
            "p99": "158.64",
            "min": "155.07",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "129.01",
            "p50": "122.76",
            "p95": "108.34",
            "p99": "100.33",
            "min": "99.93",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "209.69",
            "p50": "192.99",
            "p95": "159.32",
            "p99": "131.72",
            "min": "123.45",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "143.28",
            "p50": "133.80",
            "p95": "115.14",
            "p99": "111.08",
            "min": "110.89",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "176.49",
            "p50": "162.43",
            "p95": "131.97",
            "p99": "97.47",
            "min": "76.84",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "183.87",
            "p50": "171.35",
            "p95": "139.65",
            "p99": "128.61",
            "min": "127.85",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "186.32",
            "p50": "173.48",
            "p95": "138.93",
            "p99": "106.68",
            "min": "95.73",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "311.09",
            "p50": "237.36",
            "p95": "157.14",
            "p99": "145.19",
            "min": "138.28",
            "n": "95",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "143.87",
            "p50": "135.03",
            "p95": "116.12",
            "p99": "113.96",
            "min": "105.52",
            "n": "77",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "89.53",
            "p50": "84.78",
            "p95": "79.05",
            "p99": "76.55",
            "min": "76.00",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "91.55",
            "p50": "86.03",
            "p95": "83.72",
            "p99": "81.95",
            "min": "81.89",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "90.12",
            "p50": "85.51",
            "p95": "82.86",
            "p99": "77.93",
            "min": "77.79",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "189.00",
            "p50": "180.33",
            "p95": "176.16",
            "p99": "160.41",
            "min": "158.33",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "93.66",
            "p50": "89.90",
            "p95": "85.47",
            "p99": "82.30",
            "min": "81.97",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "113.42",
            "p50": "109.72",
            "p95": "106.46",
            "p99": "99.69",
            "min": "99.53",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "125.47",
            "p50": "123.91",
            "p95": "110.02",
            "p99": "103.48",
            "min": "102.94",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "125.76",
            "p50": "123.95",
            "p95": "117.83",
            "p99": "113.62",
            "min": "113.42",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "98.41",
            "p50": "94.82",
            "p95": "92.57",
            "p99": "89.68",
            "min": "89.37",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "98.79",
            "p50": "96.17",
            "p95": "94.89",
            "p99": "93.80",
            "min": "93.66",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.45",
            "p50": "96.51",
            "p95": "94.36",
            "p99": "87.28",
            "min": "86.52",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.05",
            "p50": "123.78",
            "p95": "122.28",
            "p99": "114.42",
            "min": "112.99",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "119.04",
            "p50": "114.15",
            "p95": "108.93",
            "p99": "104.94",
            "min": "104.53",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "115.64",
            "p50": "113.94",
            "p95": "111.42",
            "p99": "108.34",
            "min": "108.03",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "76.42",
            "p50": "73.42",
            "p95": "69.86",
            "p99": "67.40",
            "min": "66.57",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "99.26",
            "p50": "98.62",
            "p95": "93.99",
            "p99": "92.58",
            "min": "88.98",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "62.04",
            "p50": "60.84",
            "p95": "59.22",
            "p99": "59.28",
            "min": "58.63",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "158.88",
            "p50": "127.79",
            "p95": "119.74",
            "p99": "136.53",
            "min": "119.67",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "110.01",
            "p50": "108.27",
            "p95": "107.57",
            "p99": "107.38",
            "min": "105.40",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "388.88",
            "p50": "379.44",
            "p95": "362.06",
            "p99": "327.91",
            "min": "315.87",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "512.71",
            "p50": "483.68",
            "p95": "468.98",
            "p99": "418.99",
            "min": "411.71",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "388.99",
            "p50": "381.02",
            "p95": "354.01",
            "p99": "300.44",
            "min": "299.78",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "393.28",
            "p50": "383.92",
            "p95": "363.23",
            "p99": "307.50",
            "min": "275.34",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "394.12",
            "p50": "385.63",
            "p95": "355.65",
            "p99": "306.03",
            "min": "300.91",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "475.33",
            "p50": "453.75",
            "p95": "394.17",
            "p99": "317.37",
            "min": "290.64",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "100.47",
            "p50": "99.31",
            "p95": "97.07",
            "p99": "96.38",
            "min": "96.33",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "101.10",
            "p50": "99.99",
            "p95": "97.91",
            "p99": "95.44",
            "min": "95.15",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "99.53",
            "p50": "98.45",
            "p95": "96.00",
            "p99": "93.51",
            "min": "93.50",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "90.94",
            "p50": "89.85",
            "p95": "88.00",
            "p99": "86.86",
            "min": "86.76",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.97",
            "p50": "86.47",
            "p95": "85.80",
            "p99": "82.55",
            "min": "82.21",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "94.50",
            "p50": "93.26",
            "p95": "90.61",
            "p99": "86.43",
            "min": "86.10",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "90.69",
            "p50": "88.88",
            "p95": "86.83",
            "p99": "83.71",
            "min": "83.40",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "89.90",
            "p50": "88.61",
            "p95": "86.47",
            "p99": "85.22",
            "min": "85.22",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "89.77",
            "p50": "88.76",
            "p95": "86.32",
            "p99": "84.70",
            "min": "84.62",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "371.06",
            "p50": "360.34",
            "p95": "317.60",
            "p99": "252.05",
            "min": "214.56",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "370.67",
            "p50": "360.84",
            "p95": "341.35",
            "p99": "292.08",
            "min": "287.57",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "154.49",
            "p50": "152.23",
            "p95": "139.16",
            "p99": "126.86",
            "min": "126.18",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "479.83",
            "p50": "461.98",
            "p95": "366.27",
            "p99": "300.81",
            "min": "272.15",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "154.53",
            "p50": "152.45",
            "p95": "142.08",
            "p99": "134.57",
            "min": "133.69",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "274.03",
            "p50": "267.12",
            "p95": "227.00",
            "p99": "194.57",
            "min": "177.02",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.98",
            "p50": "96.69",
            "p95": "91.43",
            "p99": "87.50",
            "min": "86.70",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "186.94",
            "p50": "173.72",
            "p95": "170.85",
            "p99": "162.27",
            "min": "158.18",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "410.15",
            "p50": "352.16",
            "p95": "270.01",
            "p99": "231.98",
            "min": "231.61",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7352.84",
            "p50": "1912.01",
            "p95": "946.61",
            "p99": "465.69",
            "min": "441.61",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "439.76",
            "p50": "377.30",
            "p95": "295.74",
            "p99": "271.28",
            "min": "256.92",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "30240.14",
            "p50": "8993.82",
            "p95": "2676.19",
            "p99": "1988.79",
            "min": "1954.47",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4697.09",
            "p50": "2928.96",
            "p95": "1289.88",
            "p99": "705.90",
            "min": "630.39",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "361.29",
            "p50": "314.76",
            "p95": "233.57",
            "p99": "199.96",
            "min": "190.48",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "154.70",
            "p50": "140.05",
            "p95": "118.18",
            "p99": "102.05",
            "min": "101.93",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "124.96",
            "p50": "112.29",
            "p95": "102.49",
            "p99": "100.39",
            "min": "99.98",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "138.02",
            "p50": "123.16",
            "p95": "116.28",
            "p99": "107.15",
            "min": "105.12",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "128.15",
            "p50": "120.49",
            "p95": "116.36",
            "p99": "111.68",
            "min": "111.32",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "172.38",
            "p50": "150.36",
            "p95": "141.85",
            "p99": "120.39",
            "min": "108.54",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "94.58",
            "p50": "92.74",
            "p95": "80.07",
            "p99": "77.89",
            "min": "77.67",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "119.11",
            "p50": "111.60",
            "p95": "106.82",
            "p99": "105.85",
            "min": "105.46",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "976.83",
            "p50": "908.94",
            "p95": "326.59",
            "p99": "316.23",
            "min": "315.70",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "126.54",
            "p50": "118.77",
            "p95": "107.76",
            "p99": "104.53",
            "min": "104.33",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}