{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "111.00",
            "p50": "106.27",
            "p95": "96.94",
            "p99": "90.89",
            "min": "89.80",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1120.63",
            "p50": "929.75",
            "p95": "575.84",
            "p99": "496.33",
            "min": "492.90",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "110.34",
            "p50": "106.58",
            "p95": "98.37",
            "p99": "96.70",
            "min": "96.64",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "765.05",
            "p50": "692.11",
            "p95": "457.78",
            "p99": "424.62",
            "min": "424.25",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "403.98",
            "p50": "370.52",
            "p95": "318.30",
            "p99": "292.75",
            "min": "290.54",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "431.49",
            "p50": "399.70",
            "p95": "347.73",
            "p99": "254.87",
            "min": "236.85",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "293.07",
            "p50": "274.33",
            "p95": "196.44",
            "p99": "191.71",
            "min": "191.60",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "185.05",
            "p50": "175.93",
            "p95": "163.33",
            "p99": "153.34",
            "min": "152.78",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "258.91",
            "p50": "238.44",
            "p95": "212.03",
            "p99": "194.38",
            "min": "193.65",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "262.85",
            "p50": "244.19",
            "p95": "215.74",
            "p99": "199.73",
            "min": "199.30",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "259.45",
            "p50": "239.89",
            "p95": "210.03",
            "p99": "197.76",
            "min": "196.55",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "204.91",
            "p50": "193.50",
            "p95": "170.41",
            "p99": "166.14",
            "min": "166.12",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "339.33",
            "p50": "315.92",
            "p95": "275.37",
            "p99": "252.98",
            "min": "250.82",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "300.54",
            "p50": "278.14",
            "p95": "233.81",
            "p99": "221.79",
            "min": "221.76",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8814.62",
            "p50": "3817.90",
            "p95": "2186.10",
            "p99": "1618.19",
            "min": "1587.19",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2977.58",
            "p50": "1837.00",
            "p95": "909.76",
            "p99": "1595.32",
            "min": "851.03",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "332.19",
            "p50": "297.80",
            "p95": "245.50",
            "p99": "257.37",
            "min": "239.83",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1432.59",
            "p50": "797.89",
            "p95": "370.94",
            "p99": "795.95",
            "min": "315.69",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7588.09",
            "p50": "3648.59",
            "p95": "1427.71",
            "p99": "4056.27",
            "min": "1391.92",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "822.04",
            "p50": "709.62",
            "p95": "519.93",
            "p99": "462.40",
            "min": "432.55",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "818.87",
            "p50": "745.70",
            "p95": "528.50",
            "p99": "458.53",
            "min": "443.57",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "939.94",
            "p50": "806.57",
            "p95": "583.01",
            "p99": "488.28",
            "min": "482.61",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2450.54",
            "p50": "2062.48",
            "p95": "1053.41",
            "p99": "914.86",
            "min": "883.74",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2422.85",
            "p50": "1861.31",
            "p95": "964.60",
            "p99": "743.88",
            "min": "721.44",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "805.23",
            "p50": "766.91",
            "p95": "539.04",
            "p99": "465.49",
            "min": "434.32",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "170.46",
            "p50": "158.06",
            "p95": "146.77",
            "p99": "136.95",
            "min": "136.47",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "558.70",
            "p50": "494.80",
            "p95": "392.00",
            "p99": "353.96",
            "min": "353.18",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "171.50",
            "p50": "158.92",
            "p95": "147.86",
            "p99": "142.75",
            "min": "142.60",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "191.81",
            "p50": "176.18",
            "p95": "164.00",
            "p99": "157.93",
            "min": "157.64",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "35572.50",
            "p50": "7971.75",
            "p95": "2414.08",
            "p99": "1512.61",
            "min": "1374.59",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "420.82",
            "p50": "382.14",
            "p95": "315.40",
            "p99": "286.60",
            "min": "284.12",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "398.23",
            "p50": "365.68",
            "p95": "306.14",
            "p99": "285.96",
            "min": "285.24",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "399.90",
            "p50": "360.81",
            "p95": "301.78",
            "p99": "263.69",
            "min": "258.63",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "401.05",
            "p50": "363.92",
            "p95": "311.42",
            "p99": "293.00",
            "min": "292.10",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "17195.34",
            "p50": "5556.12",
            "p95": "2362.36",
            "p99": "1709.12",
            "min": "1548.75",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "17331.60",
            "p50": "5474.52",
            "p95": "2476.97",
            "p99": "1778.20",
            "min": "1572.02",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "16483.50",
            "p50": "5398.03",
            "p95": "2405.97",
            "p99": "1977.86",
            "min": "1968.79",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "17298.78",
            "p50": "5415.64",
            "p95": "2451.99",
            "p99": "1862.16",
            "min": "1575.63",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "16664.91",
            "p50": "5021.12",
            "p95": "2366.97",
            "p99": "2019.02",
            "min": "2015.34",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "17131.17",
            "p50": "5304.69",
            "p95": "2241.34",
            "p99": "1439.85",
            "min": "1436.72",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "263.41",
            "p50": "241.42",
            "p95": "210.59",
            "p99": "194.71",
            "min": "194.01",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "524.89",
            "p50": "485.65",
            "p95": "413.47",
            "p99": "338.71",
            "min": "326.38",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1647.26",
            "p50": "1355.97",
            "p95": "372.62",
            "p99": "293.82",
            "min": "283.33",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "22531.13",
            "p50": "4824.46",
            "p95": "194.70",
            "p99": "167.52",
            "min": "166.48",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1421.25",
            "p50": "1190.19",
            "p95": "774.34",
            "p99": "587.39",
            "min": "538.53",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "54119.15",
            "p50": "8366.02",
            "p95": "2298.02",
            "p99": "1126.61",
            "min": "721.63",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14551.84",
            "p50": "6355.33",
            "p95": "195.07",
            "p99": "178.69",
            "min": "178.40",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "564.42",
            "p50": "500.39",
            "p95": "405.50",
            "p99": "344.40",
            "min": "343.92",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "550.06",
            "p50": "507.36",
            "p95": "373.54",
            "p99": "346.26",
            "min": "345.39",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "201.29",
            "p50": "193.74",
            "p95": "175.99",
            "p99": "170.13",
            "min": "169.23",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "387.44",
            "p50": "363.79",
            "p95": "297.85",
            "p99": "272.95",
            "min": "272.86",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "201.42",
            "p50": "192.43",
            "p95": "174.35",
            "p99": "161.73",
            "min": "160.98",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "339.07",
            "p50": "324.39",
            "p95": "267.01",
            "p99": "247.21",
            "min": "246.31",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "263.09",
            "p50": "243.55",
            "p95": "214.61",
            "p99": "193.88",
            "min": "189.31",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "574.94",
            "p50": "527.00",
            "p95": "392.08",
            "p99": "352.91",
            "min": "347.85",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1499.08",
            "p50": "1302.39",
            "p95": "1009.30",
            "p99": "886.62",
            "min": "850.24",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "290.27",
            "p50": "274.92",
            "p95": "235.27",
            "p99": "218.29",
            "min": "217.10",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "138.57",
            "p50": "136.18",
            "p95": "126.56",
            "p99": "122.52",
            "min": "122.49",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "138.10",
            "p50": "136.51",
            "p95": "126.12",
            "p99": "121.67",
            "min": "121.23",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "138.18",
            "p50": "136.02",
            "p95": "125.36",
            "p99": "120.78",
            "min": "120.35",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "233.16",
            "p50": "228.37",
            "p95": "203.42",
            "p99": "168.39",
            "min": "154.00",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "193.23",
            "p50": "187.44",
            "p95": "157.85",
            "p99": "102.21",
            "min": "100.57",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "205.32",
            "p50": "199.41",
            "p95": "177.82",
            "p99": "130.49",
            "min": "117.31",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "191.50",
            "p50": "183.02",
            "p95": "159.46",
            "p99": "135.72",
            "min": "133.47",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "187.00",
            "p50": "179.85",
            "p95": "160.42",
            "p99": "147.34",
            "min": "145.23",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "213.67",
            "p50": "206.43",
            "p95": "183.79",
            "p99": "166.63",
            "min": "165.60",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "184.59",
            "p50": "180.08",
            "p95": "161.88",
            "p99": "150.39",
            "min": "149.45",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "211.46",
            "p50": "206.83",
            "p95": "183.67",
            "p99": "167.33",
            "min": "166.14",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "148.32",
            "p50": "145.69",
            "p95": "130.57",
            "p99": "102.84",
            "min": "96.40",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "231.07",
            "p50": "224.93",
            "p95": "198.88",
            "p99": "182.61",
            "min": "182.34",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "184.25",
            "p50": "178.51",
            "p95": "158.74",
            "p99": "120.40",
            "min": "113.25",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "73.00",
            "p50": "70.57",
            "p95": "67.79",
            "p99": "64.33",
            "min": "63.47",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "142.85",
            "p50": "141.67",
            "p95": "126.24",
            "p99": "129.69",
            "min": "122.60",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "476.77",
            "p50": "390.81",
            "p95": "306.04",
            "p99": "276.06",
            "min": "228.98",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "196.25",
            "p50": "153.59",
            "p95": "141.50",
            "p99": "160.16",
            "min": "132.93",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.78",
            "p50": "132.91",
            "p95": "122.06",
            "p99": "125.37",
            "min": "117.51",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1248.97",
            "p50": "1174.66",
            "p95": "627.46",
            "p99": "520.91",
            "min": "519.62",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1065.18",
            "p50": "1033.38",
            "p95": "663.56",
            "p99": "508.34",
            "min": "499.00",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1503.17",
            "p50": "1352.14",
            "p95": "791.61",
            "p99": "557.81",
            "min": "542.16",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1394.18",
            "p50": "1310.09",
            "p95": "783.19",
            "p99": "597.74",
            "min": "541.53",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1368.15",
            "p50": "1217.60",
            "p95": "666.29",
            "p99": "544.28",
            "min": "530.67",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1105.52",
            "p50": "1066.51",
            "p95": "731.26",
            "p99": "540.50",
            "min": "503.67",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "742.86",
            "p50": "646.00",
            "p95": "457.07",
            "p99": "404.66",
            "min": "398.59",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "739.11",
            "p50": "644.95",
            "p95": "464.10",
            "p99": "302.30",
            "min": "300.18",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "746.11",
            "p50": "641.94",
            "p95": "449.01",
            "p99": "372.76",
            "min": "372.31",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "748.71",
            "p50": "653.35",
            "p95": "491.05",
            "p99": "437.16",
            "min": "435.07",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "296.60",
            "p50": "291.93",
            "p95": "259.93",
            "p99": "225.62",
            "min": "220.35",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "656.42",
            "p50": "554.77",
            "p95": "418.19",
            "p99": "332.08",
            "min": "322.53",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "642.29",
            "p50": "552.09",
            "p95": "436.46",
            "p99": "381.71",
            "min": "381.06",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "656.27",
            "p50": "588.41",
            "p95": "448.11",
            "p99": "395.78",
            "min": "385.56",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "666.63",
            "p50": "590.63",
            "p95": "386.81",
            "p99": "365.28",
            "min": "360.61",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "107.50",
            "p50": "105.99",
            "p95": "100.32",
            "p99": "96.22",
            "min": "95.46",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "107.59",
            "p50": "106.04",
            "p95": "99.94",
            "p99": "95.16",
            "min": "94.79",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.98",
            "p50": "98.08",
            "p95": "92.11",
            "p99": "85.60",
            "min": "85.59",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "258.03",
            "p50": "253.32",
            "p95": "221.36",
            "p99": "209.36",
            "min": "208.45",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "100.02",
            "p50": "98.08",
            "p95": "92.82",
            "p99": "89.35",
            "min": "89.21",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "250.78",
            "p50": "244.01",
            "p95": "218.64",
            "p99": "176.47",
            "min": "173.81",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "211.53",
            "p50": "207.21",
            "p95": "177.20",
            "p99": "148.41",
            "min": "146.34",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "241.15",
            "p50": "235.38",
            "p95": "208.27",
            "p99": "185.98",
            "min": "182.27",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "576.84",
            "p50": "562.43",
            "p95": "438.59",
            "p99": "366.76",
            "min": "347.45",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7733.73",
            "p50": "4755.17",
            "p95": "2181.35",
            "p99": "1614.68",
            "min": "1405.63",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "534.65",
            "p50": "521.06",
            "p95": "413.51",
            "p99": "383.03",
            "min": "378.26",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "20817.70",
            "p50": "6820.65",
            "p95": "2437.04",
            "p99": "1716.84",
            "min": "1503.35",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4394.83",
            "p50": "3546.43",
            "p95": "1541.17",
            "p99": "1259.12",
            "min": "1170.96",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "250.28",
            "p50": "217.54",
            "p95": "195.70",
            "p99": "161.56",
            "min": "152.37",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "267.19",
            "p50": "260.82",
            "p95": "224.05",
            "p99": "134.60",
            "min": "106.87",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "148.58",
            "p50": "144.93",
            "p95": "135.15",
            "p99": "128.19",
            "min": "127.30",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "243.83",
            "p50": "237.30",
            "p95": "206.12",
            "p99": "189.48",
            "min": "189.47",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "186.93",
            "p50": "183.31",
            "p95": "158.95",
            "p99": "97.78",
            "min": "86.27",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "221.22",
            "p50": "214.86",
            "p95": "184.02",
            "p99": "169.47",
            "min": "168.90",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "210.69",
            "p50": "205.85",
            "p95": "173.53",
            "p99": "160.66",
            "min": "159.66",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "210.75",
            "p50": "206.82",
            "p95": "178.59",
            "p99": "167.92",
            "min": "167.62",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1328.65",
            "p50": "1161.43",
            "p95": "833.28",
            "p99": "685.80",
            "min": "657.62",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "183.95",
            "p50": "180.51",
            "p95": "157.25",
            "p99": "113.97",
            "min": "104.41",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "193.06",
            "p50": "190.86",
            "p95": "183.04",
            "p99": "181.37",
            "min": "181.36",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "193.36",
            "p50": "191.05",
            "p95": "182.56",
            "p99": "167.07",
            "min": "166.95",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "193.97",
            "p50": "191.90",
            "p95": "185.24",
            "p99": "161.40",
            "min": "158.21",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1148.35",
            "p50": "1116.33",
            "p95": "854.17",
            "p99": "603.05",
            "min": "508.91",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "625.05",
            "p50": "610.36",
            "p95": "506.93",
            "p99": "387.78",
            "min": "371.05",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "676.58",
            "p50": "660.10",
            "p95": "589.47",
            "p99": "486.62",
            "min": "464.96",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "679.90",
            "p50": "666.29",
            "p95": "542.94",
            "p99": "400.39",
            "min": "388.62",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "753.06",
            "p50": "737.10",
            "p95": "554.55",
            "p99": "474.07",
            "min": "469.91",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "892.04",
            "p50": "835.23",
            "p95": "627.46",
            "p99": "506.10",
            "min": "502.02",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "868.36",
            "p50": "848.22",
            "p95": "712.37",
            "p99": "629.22",
            "min": "624.08",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "866.24",
            "p50": "849.06",
            "p95": "653.47",
            "p99": "469.85",
            "min": "447.51",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "837.75",
            "p50": "821.86",
            "p95": "672.61",
            "p99": "509.89",
            "min": "501.76",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "746.92",
            "p50": "728.29",
            "p95": "636.24",
            "p99": "473.49",
            "min": "456.92",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "846.07",
            "p50": "827.33",
            "p95": "698.70",
            "p99": "493.37",
            "min": "490.35",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "118.54",
            "p50": "113.71",
            "p95": "110.25",
            "p99": "101.99",
            "min": "100.85",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "95.57",
            "p50": "94.55",
            "p95": "91.72",
            "p99": "91.31",
            "min": "89.01",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "559.05",
            "p50": "544.28",
            "p95": "445.99",
            "p99": "414.26",
            "min": "380.30",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "129.96",
            "p50": "103.26",
            "p95": "96.58",
            "p99": "110.91",
            "min": "96.54",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "89.34",
            "p50": "87.66",
            "p95": "84.74",
            "p99": "86.27",
            "min": "83.95",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1872.23",
            "p50": "1811.41",
            "p95": "1146.96",
            "p99": "769.35",
            "min": "713.52",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1638.10",
            "p50": "1582.16",
            "p95": "1121.03",
            "p99": "710.22",
            "min": "553.73",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2392.85",
            "p50": "2291.26",
            "p95": "1371.87",
            "p99": "915.98",
            "min": "831.22",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2379.55",
            "p50": "2280.98",
            "p95": "1444.22",
            "p99": "933.32",
            "min": "927.88",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2353.42",
            "p50": "2264.01",
            "p95": "1544.73",
            "p99": "775.20",
            "min": "699.33",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1698.32",
            "p50": "1635.19",
            "p95": "1179.73",
            "p99": "849.98",
            "min": "788.74",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "817.56",
            "p50": "791.57",
            "p95": "686.35",
            "p99": "564.13",
            "min": "547.23",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "823.16",
            "p50": "797.91",
            "p95": "642.99",
            "p99": "609.64",
            "min": "608.73",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "825.22",
            "p50": "796.91",
            "p95": "631.75",
            "p99": "575.18",
            "min": "574.64",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "822.24",
            "p50": "802.94",
            "p95": "672.76",
            "p99": "509.66",
            "min": "479.32",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.55",
            "p50": "86.69",
            "p95": "83.46",
            "p99": "81.82",
            "min": "81.02",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "746.41",
            "p50": "718.13",
            "p95": "594.61",
            "p99": "468.44",
            "min": "452.40",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "705.19",
            "p50": "676.72",
            "p95": "585.30",
            "p99": "456.99",
            "min": "449.82",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "701.59",
            "p50": "672.29",
            "p95": "549.03",
            "p99": "486.64",
            "min": "475.88",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "705.21",
            "p50": "673.20",
            "p95": "557.91",
            "p99": "412.20",
            "min": "394.97",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2037.39",
            "p50": "1952.00",
            "p95": "1328.60",
            "p99": "1076.05",
            "min": "1000.47",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2348.85",
            "p50": "2236.92",
            "p95": "1522.85",
            "p99": "1060.61",
            "min": "959.61",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.39",
            "p50": "71.76",
            "p95": "70.55",
            "p99": "67.74",
            "min": "67.70",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9807.79",
            "p50": "7342.91",
            "p95": "2522.14",
            "p99": "2190.49",
            "min": "2160.01",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.42",
            "p50": "71.79",
            "p95": "70.78",
            "p99": "69.62",
            "min": "69.58",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "223.14",
            "p50": "220.79",
            "p95": "211.21",
            "p99": "195.26",
            "min": "194.84",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "858.28",
            "p50": "830.32",
            "p95": "606.22",
            "p99": "491.39",
            "min": "488.34",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "668.41",
            "p50": "655.53",
            "p95": "561.25",
            "p99": "429.50",
            "min": "425.15",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2390.53",
            "p50": "2226.14",
            "p95": "1221.69",
            "p99": "729.26",
            "min": "639.49",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "20597.00",
            "p50": "8912.10",
            "p95": "2417.60",
            "p99": "2052.89",
            "min": "1833.52",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2210.25",
            "p50": "2039.75",
            "p95": "1256.94",
            "p99": "758.43",
            "min": "729.20",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "83393.69",
            "p50": "9163.63",
            "p95": "2473.62",
            "p99": "1943.28",
            "min": "1826.06",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "17651.48",
            "p50": "8443.18",
            "p95": "2390.18",
            "p99": "2285.60",
            "min": "2280.87",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "822.19",
            "p50": "704.96",
            "p95": "578.67",
            "p99": "490.37",
            "min": "477.10",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "930.84",
            "p50": "904.34",
            "p95": "683.35",
            "p99": "539.84",
            "min": "513.36",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "841.70",
            "p50": "813.18",
            "p95": "620.27",
            "p99": "506.50",
            "min": "489.81",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1161.36",
            "p50": "1126.78",
            "p95": "921.15",
            "p99": "730.64",
            "min": "710.47",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "775.47",
            "p50": "759.36",
            "p95": "621.35",
            "p99": "459.86",
            "min": "451.87",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1150.40",
            "p50": "1117.17",
            "p95": "861.71",
            "p99": "623.56",
            "min": "571.58",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "811.95",
            "p50": "790.54",
            "p95": "600.73",
            "p99": "291.75",
            "min": "243.89",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "884.94",
            "p50": "862.98",
            "p95": "678.56",
            "p99": "548.06",
            "min": "539.63",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2191.39",
            "p50": "1995.42",
            "p95": "1677.27",
            "p99": "1390.41",
            "min": "1378.43",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "854.31",
            "p50": "833.54",
            "p95": "700.96",
            "p99": "501.67",
            "min": "494.68",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "125.20",
            "p50": "121.09",
            "p95": "107.09",
            "p99": "99.89",
            "min": "99.21",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "124.77",
            "p50": "120.96",
            "p95": "107.90",
            "p99": "102.13",
            "min": "101.19",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "125.07",
            "p50": "120.30",
            "p95": "107.92",
            "p99": "97.23",
            "min": "96.93",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "211.85",
            "p50": "195.59",
            "p95": "156.28",
            "p99": "138.23",
            "min": "137.92",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "103.42",
            "p50": "99.70",
            "p95": "85.57",
            "p99": "70.39",
            "min": "67.36",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.06",
            "p50": "103.47",
            "p95": "86.86",
            "p99": "79.45",
            "min": "77.75",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "139.45",
            "p50": "130.95",
            "p95": "112.01",
            "p99": "101.88",
            "min": "101.45",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "139.67",
            "p50": "129.82",
            "p95": "111.97",
            "p99": "101.34",
            "min": "100.49",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "182.12",
            "p50": "166.97",
            "p95": "134.04",
            "p99": "122.48",
            "min": "121.26",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "177.75",
            "p50": "162.86",
            "p95": "135.27",
            "p99": "121.14",
            "min": "120.12",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "178.47",
            "p50": "163.85",
            "p95": "127.01",
            "p99": "121.42",
            "min": "120.73",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.59",
            "p50": "120.58",
            "p95": "100.29",
            "p99": "96.02",
            "min": "95.33",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "204.66",
            "p50": "184.84",
            "p95": "148.02",
            "p99": "128.68",
            "min": "127.30",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "184.00",
            "p50": "169.29",
            "p95": "128.29",
            "p99": "123.63",
            "min": "123.61",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "75.89",
            "p50": "71.12",
            "p95": "64.88",
            "p99": "61.35",
            "min": "61.09",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "130.65",
            "p50": "120.17",
            "p95": "101.67",
            "p99": "111.75",
            "min": "101.57",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "206.69",
            "p50": "186.92",
            "p95": "146.62",
            "p99": "150.96",
            "min": "137.88",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "157.00",
            "p50": "136.08",
            "p95": "132.08",
            "p99": "142.38",
            "min": "131.35",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "127.25",
            "p50": "117.63",
            "p95": "100.54",
            "p99": "110.45",
            "min": "97.78",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1039.38",
            "p50": "699.09",
            "p95": "352.99",
            "p99": "272.88",
            "min": "267.13",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1009.61",
            "p50": "662.89",
            "p95": "347.24",
            "p99": "270.47",
            "min": "252.81",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1147.08",
            "p50": "718.08",
            "p95": "363.18",
            "p99": "285.78",
            "min": "276.48",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1075.91",
            "p50": "718.68",
            "p95": "343.14",
            "p99": "274.89",
            "min": "267.64",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1012.29",
            "p50": "676.31",
            "p95": "336.14",
            "p99": "280.27",
            "min": "278.12",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1017.18",
            "p50": "679.81",
            "p95": "357.90",
            "p99": "243.47",
            "min": "231.25",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "328.68",
            "p50": "292.13",
            "p95": "207.55",
            "p99": "173.86",
            "min": "172.46",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "338.93",
            "p50": "287.84",
            "p95": "212.05",
            "p99": "179.64",
            "min": "176.72",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "340.57",
            "p50": "286.01",
            "p95": "215.97",
            "p99": "186.14",
            "min": "183.80",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "360.65",
            "p50": "308.44",
            "p95": "221.76",
            "p99": "187.38",
            "min": "187.00",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "281.91",
            "p50": "248.80",
            "p95": "200.68",
            "p99": "174.04",
            "min": "167.76",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "291.18",
            "p50": "253.89",
            "p95": "186.86",
            "p99": "173.14",
            "min": "172.68",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "281.87",
            "p50": "250.36",
            "p95": "174.11",
            "p99": "161.14",
            "min": "159.37",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "288.16",
            "p50": "250.65",
            "p95": "180.45",
            "p99": "167.86",
            "min": "167.62",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "286.64",
            "p50": "248.50",
            "p95": "185.64",
            "p99": "172.27",
            "min": "172.09",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.08",
            "p50": "100.46",
            "p95": "87.07",
            "p99": "82.01",
            "min": "80.79",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.32",
            "p50": "99.58",
            "p95": "86.84",
            "p99": "81.88",
            "min": "81.45",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.81",
            "p50": "92.94",
            "p95": "82.06",
            "p99": "78.42",
            "min": "78.36",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "249.03",
            "p50": "218.84",
            "p95": "167.98",
            "p99": "151.72",
            "min": "150.70",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "96.82",
            "p50": "91.90",
            "p95": "81.12",
            "p99": "78.64",
            "min": "78.62",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "242.09",
            "p50": "215.14",
            "p95": "164.46",
            "p99": "148.88",
            "min": "148.41",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "182.50",
            "p50": "168.10",
            "p95": "137.75",
            "p99": "124.11",
            "min": "121.69",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "148.90",
            "p50": "138.48",
            "p95": "112.09",
            "p99": "99.80",
            "min": "93.49",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "443.95",
            "p50": "392.76",
            "p95": "278.84",
            "p99": "246.00",
            "min": "234.24",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5289.12",
            "p50": "2148.51",
            "p95": "748.56",
            "p99": "551.78",
            "min": "489.81",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "442.45",
            "p50": "397.36",
            "p95": "279.24",
            "p99": "240.79",
            "min": "239.27",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14525.89",
            "p50": "3307.07",
            "p95": "1255.45",
            "p99": "1011.48",
            "min": "1002.51",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3626.00",
            "p50": "1846.99",
            "p95": "695.02",
            "p99": "596.64",
            "min": "576.13",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "210.16",
            "p50": "195.23",
            "p95": "166.71",
            "p99": "146.76",
            "min": "144.35",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "234.42",
            "p50": "220.55",
            "p95": "180.48",
            "p99": "156.05",
            "min": "152.80",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "130.81",
            "p50": "122.70",
            "p95": "100.45",
            "p99": "94.20",
            "min": "93.58",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "210.70",
            "p50": "188.31",
            "p95": "148.97",
            "p99": "132.61",
            "min": "130.15",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "138.05",
            "p50": "129.88",
            "p95": "105.68",
            "p99": "100.55",
            "min": "99.81",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "177.43",
            "p50": "162.74",
            "p95": "131.75",
            "p99": "120.60",
            "min": "118.69",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "177.83",
            "p50": "162.45",
            "p95": "125.30",
            "p99": "118.31",
            "min": "118.26",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "181.67",
            "p50": "166.50",
            "p95": "135.05",
            "p99": "122.77",
            "min": "121.33",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "308.22",
            "p50": "255.16",
            "p95": "57.13",
            "p99": "51.29",
            "min": "51.16",
            "n": "104",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "146.77",
            "p50": "138.94",
            "p95": "118.37",
            "p99": "55.97",
            "min": "55.71",
            "n": "106",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.07",
            "p50": "84.17",
            "p95": "77.04",
            "p99": "74.67",
            "min": "74.57",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "89.35",
            "p50": "84.92",
            "p95": "81.40",
            "p99": "77.37",
            "min": "76.76",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "88.56",
            "p50": "84.33",
            "p95": "79.51",
            "p99": "74.32",
            "min": "73.94",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "185.06",
            "p50": "182.23",
            "p95": "175.74",
            "p99": "142.34",
            "min": "134.15",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "90.98",
            "p50": "89.00",
            "p95": "85.67",
            "p99": "84.25",
            "min": "84.25",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.36",
            "p50": "107.61",
            "p95": "105.27",
            "p99": "98.67",
            "min": "97.30",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "125.21",
            "p50": "121.37",
            "p95": "107.55",
            "p99": "99.85",
            "min": "99.49",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "128.16",
            "p50": "125.04",
            "p95": "120.57",
            "p99": "115.37",
            "min": "115.27",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "98.21",
            "p50": "96.10",
            "p95": "93.13",
            "p99": "88.79",
            "min": "88.36",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.61",
            "p50": "95.64",
            "p95": "78.88",
            "p99": "74.34",
            "min": "73.68",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "97.17",
            "p50": "95.87",
            "p95": "79.34",
            "p99": "76.56",
            "min": "76.55",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "129.01",
            "p50": "124.55",
            "p95": "86.92",
            "p99": "84.55",
            "min": "84.49",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "120.35",
            "p50": "112.04",
            "p95": "105.76",
            "p99": "89.34",
            "min": "88.63",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "117.52",
            "p50": "115.32",
            "p95": "92.75",
            "p99": "70.58",
            "min": "69.40",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "88.30",
            "p50": "83.32",
            "p95": "77.57",
            "p99": "69.64",
            "min": "68.55",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "101.81",
            "p50": "100.31",
            "p95": "95.32",
            "p99": "93.07",
            "min": "88.36",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "73.62",
            "p50": "71.00",
            "p95": "62.47",
            "p99": "62.77",
            "min": "60.22",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "158.81",
            "p50": "126.72",
            "p95": "118.40",
            "p99": "135.01",
            "min": "117.06",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "109.76",
            "p50": "107.78",
            "p95": "103.36",
            "p99": "105.08",
            "min": "101.55",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "419.30",
            "p50": "407.97",
            "p95": "368.99",
            "p99": "342.39",
            "min": "331.87",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "488.00",
            "p50": "476.51",
            "p95": "452.30",
            "p99": "383.46",
            "min": "343.81",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "442.47",
            "p50": "429.66",
            "p95": "379.59",
            "p99": "361.69",
            "min": "355.77",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "447.10",
            "p50": "436.25",
            "p95": "382.28",
            "p99": "337.27",
            "min": "315.77",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "453.03",
            "p50": "437.26",
            "p95": "386.24",
            "p99": "349.41",
            "min": "345.02",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "468.01",
            "p50": "458.56",
            "p95": "431.29",
            "p99": "359.92",
            "min": "327.61",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "118.64",
            "p50": "115.47",
            "p95": "100.11",
            "p99": "95.63",
            "min": "94.99",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "119.95",
            "p50": "116.13",
            "p95": "100.54",
            "p99": "93.57",
            "min": "92.98",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "117.75",
            "p50": "114.46",
            "p95": "99.44",
            "p99": "96.72",
            "min": "96.69",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "102.07",
            "p50": "99.44",
            "p95": "90.32",
            "p99": "89.25",
            "min": "89.16",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.80",
            "p50": "85.99",
            "p95": "84.73",
            "p99": "81.28",
            "min": "81.19",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "115.20",
            "p50": "111.72",
            "p95": "96.01",
            "p99": "94.92",
            "min": "94.84",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "110.45",
            "p50": "106.81",
            "p95": "90.92",
            "p99": "89.77",
            "min": "89.75",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "110.74",
            "p50": "106.54",
            "p95": "90.41",
            "p99": "88.27",
            "min": "88.08",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "109.98",
            "p50": "106.43",
            "p95": "90.41",
            "p99": "87.13",
            "min": "86.79",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1578.07",
            "p50": "1386.47",
            "p95": "840.67",
            "p99": "480.07",
            "min": "479.78",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1561.60",
            "p50": "1373.84",
            "p95": "819.30",
            "p99": "501.45",
            "min": "367.86",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "156.43",
            "p50": "153.78",
            "p95": "142.01",
            "p99": "128.35",
            "min": "128.16",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3826.53",
            "p50": "3274.10",
            "p95": "1305.46",
            "p99": "694.58",
            "min": "646.67",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "156.25",
            "p50": "153.25",
            "p95": "138.47",
            "p99": "111.82",
            "min": "109.73",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3798.38",
            "p50": "3364.80",
            "p95": "1461.51",
            "p99": "572.37",
            "min": "364.19",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.32",
            "p50": "96.25",
            "p95": "76.93",
            "p99": "71.49",
            "min": "71.00",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "187.68",
            "p50": "183.67",
            "p95": "177.53",
            "p99": "166.62",
            "min": "165.37",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "349.02",
            "p50": "263.72",
            "p95": "199.09",
            "p99": "182.05",
            "min": "175.92",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9289.57",
            "p50": "1853.80",
            "p95": "897.07",
            "p99": "482.46",
            "min": "475.92",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "348.90",
            "p50": "262.28",
            "p95": "210.50",
            "p99": "163.94",
            "min": "154.68",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "24938.61",
            "p50": "8866.45",
            "p95": "2522.46",
            "p99": "1656.88",
            "min": "1581.03",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "5933.21",
            "p50": "3210.69",
            "p95": "1739.63",
            "p99": "860.49",
            "min": "781.96",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "288.02",
            "p50": "231.81",
            "p95": "174.29",
            "p99": "142.68",
            "min": "142.05",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "153.44",
            "p50": "131.52",
            "p95": "85.69",
            "p99": "82.36",
            "min": "82.12",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "125.03",
            "p50": "119.75",
            "p95": "96.07",
            "p99": "89.66",
            "min": "89.08",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "129.17",
            "p50": "121.98",
            "p95": "83.67",
            "p99": "82.67",
            "min": "82.35",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "124.09",
            "p50": "120.59",
            "p95": "115.08",
            "p99": "112.01",
            "min": "111.87",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "160.79",
            "p50": "151.76",
            "p95": "147.26",
            "p99": "141.08",
            "min": "140.95",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "95.76",
            "p50": "92.98",
            "p95": "49.91",
            "p99": "49.53",
            "min": "49.51",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "121.15",
            "p50": "113.28",
            "p95": "109.54",
            "p99": "107.09",
            "min": "106.73",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1182.61",
            "p50": "1083.16",
            "p95": "749.12",
            "p99": "684.54",
            "min": "676.71",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "124.41",
            "p50": "121.07",
            "p95": "64.71",
            "p99": "62.88",
            "min": "62.20",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}