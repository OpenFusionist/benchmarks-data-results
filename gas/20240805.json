{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "169.90",
            "p50": "168.29",
            "p95": "156.97",
            "p99": "153.39",
            "min": "153.05",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "170.21",
            "p50": "168.74",
            "p95": "167.46",
            "p99": "166.91",
            "min": "166.89",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "170.02",
            "p50": "168.08",
            "p95": "164.28",
            "p99": "163.07",
            "min": "163.05",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "760.51",
            "p50": "747.24",
            "p95": "474.77",
            "p99": "431.89",
            "min": "429.47",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "402.89",
            "p50": "394.29",
            "p95": "382.89",
            "p99": "375.53",
            "min": "375.23",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "439.39",
            "p50": "428.75",
            "p95": "417.63",
            "p99": "407.96",
            "min": "407.84",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "324.48",
            "p50": "318.18",
            "p95": "308.10",
            "p99": "304.20",
            "min": "304.11",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "186.75",
            "p50": "184.38",
            "p95": "179.46",
            "p99": "173.71",
            "min": "173.63",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "270.35",
            "p50": "263.83",
            "p95": "245.18",
            "p99": "235.37",
            "min": "232.48",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "265.35",
            "p50": "260.29",
            "p95": "252.29",
            "p99": "240.60",
            "min": "238.89",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "267.17",
            "p50": "262.28",
            "p95": "254.41",
            "p99": "247.81",
            "min": "247.36",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "191.04",
            "p50": "187.81",
            "p95": "183.17",
            "p99": "182.22",
            "min": "182.17",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "320.76",
            "p50": "315.29",
            "p95": "302.93",
            "p99": "297.69",
            "min": "297.20",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "310.33",
            "p50": "303.53",
            "p95": "295.39",
            "p99": "282.88",
            "min": "280.39",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "111.17",
            "p50": "107.11",
            "p95": "105.16",
            "p99": "104.47",
            "min": "104.30",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "170.30",
            "p50": "167.87",
            "p95": "165.60",
            "p99": "165.32",
            "min": "162.63",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "295.84",
            "p50": "247.42",
            "p95": "230.90",
            "p99": "238.56",
            "min": "225.13",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "240.68",
            "p50": "193.82",
            "p95": "180.96",
            "p99": "206.35",
            "min": "180.46",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "166.40",
            "p50": "163.98",
            "p95": "162.83",
            "p99": "164.23",
            "min": "162.58",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "886.40",
            "p50": "821.41",
            "p95": "781.88",
            "p99": "761.77",
            "min": "760.01",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "842.04",
            "p50": "815.50",
            "p95": "792.03",
            "p99": "730.07",
            "min": "701.58",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1032.92",
            "p50": "938.81",
            "p95": "892.00",
            "p99": "882.22",
            "min": "881.08",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1083.21",
            "p50": "961.28",
            "p95": "915.21",
            "p99": "887.96",
            "min": "887.37",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1083.05",
            "p50": "973.43",
            "p95": "926.29",
            "p99": "894.49",
            "min": "886.62",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "851.93",
            "p50": "814.72",
            "p95": "770.30",
            "p99": "705.92",
            "min": "681.90",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "195.55",
            "p50": "183.85",
            "p95": "170.82",
            "p99": "165.34",
            "min": "164.35",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "195.64",
            "p50": "183.09",
            "p95": "170.90",
            "p99": "161.98",
            "min": "161.30",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "199.05",
            "p50": "183.81",
            "p95": "171.61",
            "p99": "169.70",
            "min": "169.68",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "224.13",
            "p50": "209.57",
            "p95": "197.08",
            "p99": "192.81",
            "min": "191.97",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.83",
            "p50": "87.05",
            "p95": "86.02",
            "p99": "84.66",
            "min": "84.61",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "340.46",
            "p50": "305.95",
            "p95": "288.58",
            "p99": "135.69",
            "min": "96.13",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "332.06",
            "p50": "297.97",
            "p95": "286.64",
            "p99": "281.36",
            "min": "280.75",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "333.53",
            "p50": "301.20",
            "p95": "290.63",
            "p99": "270.97",
            "min": "266.79",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "338.53",
            "p50": "301.21",
            "p95": "286.93",
            "p99": "156.41",
            "min": "125.99",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2412.62",
            "p50": "2262.08",
            "p95": "1981.82",
            "p99": "1604.05",
            "min": "1572.70",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2325.40",
            "p50": "2188.93",
            "p95": "1930.64",
            "p99": "879.63",
            "min": "142.09",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "93.96",
            "p50": "93.13",
            "p95": "92.25",
            "p99": "89.07",
            "min": "88.61",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "5789.07",
            "p50": "5115.58",
            "p95": "2554.31",
            "p99": "933.25",
            "min": "32.51",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "93.97",
            "p50": "93.27",
            "p95": "92.49",
            "p99": "91.77",
            "min": "91.67",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3209.65",
            "p50": "2983.35",
            "p95": "2138.03",
            "p99": "1599.30",
            "min": "1576.01",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "263.30",
            "p50": "258.52",
            "p95": "248.59",
            "p99": "164.33",
            "min": "161.33",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "538.53",
            "p50": "530.71",
            "p95": "514.36",
            "p99": "483.15",
            "min": "479.52",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1259.34",
            "p50": "1195.83",
            "p95": "387.82",
            "p99": "362.83",
            "min": "355.11",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "17673.96",
            "p50": "8024.74",
            "p95": "2442.77",
            "p99": "1011.86",
            "min": "270.37",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1154.26",
            "p50": "1097.95",
            "p95": "346.15",
            "p99": "336.88",
            "min": "333.81",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "48667.14",
            "p50": "9328.46",
            "p95": "2332.72",
            "p99": "1737.78",
            "min": "1575.82",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15130.09",
            "p50": "6573.80",
            "p95": "2575.22",
            "p99": "1645.58",
            "min": "1554.11",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "534.92",
            "p50": "484.33",
            "p95": "426.78",
            "p99": "375.09",
            "min": "370.59",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "516.39",
            "p50": "510.43",
            "p95": "499.91",
            "p99": "490.92",
            "min": "489.14",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "204.54",
            "p50": "202.27",
            "p95": "197.33",
            "p99": "187.85",
            "min": "185.63",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "438.44",
            "p50": "432.33",
            "p95": "418.67",
            "p99": "387.01",
            "min": "374.73",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "204.49",
            "p50": "201.30",
            "p95": "198.25",
            "p99": "192.44",
            "min": "191.87",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "328.58",
            "p50": "322.71",
            "p95": "314.09",
            "p99": "297.88",
            "min": "290.88",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "269.95",
            "p50": "265.80",
            "p95": "252.30",
            "p99": "242.40",
            "min": "240.62",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "516.03",
            "p50": "504.94",
            "p95": "490.47",
            "p99": "474.96",
            "min": "473.01",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1434.50",
            "p50": "1194.24",
            "p95": "842.54",
            "p99": "777.50",
            "min": "771.78",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "316.04",
            "p50": "311.47",
            "p95": "303.65",
            "p99": "240.02",
            "min": "229.08",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "89.04",
            "p50": "85.21",
            "p95": "78.80",
            "p99": "74.80",
            "min": "74.40",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "80.54",
            "p50": "77.79",
            "p95": "70.83",
            "p99": "68.33",
            "min": "68.04",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "82.10",
            "p50": "79.33",
            "p95": "74.69",
            "p99": "70.07",
            "min": "69.55",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "227.84",
            "p50": "208.07",
            "p95": "175.21",
            "p99": "161.94",
            "min": "161.77",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "175.11",
            "p50": "162.26",
            "p95": "137.55",
            "p99": "130.15",
            "min": "129.44",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "181.65",
            "p50": "167.83",
            "p95": "143.56",
            "p99": "115.85",
            "min": "108.66",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "171.08",
            "p50": "155.44",
            "p95": "137.07",
            "p99": "126.73",
            "min": "126.02",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "171.09",
            "p50": "156.91",
            "p95": "139.04",
            "p99": "132.67",
            "min": "132.65",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "194.74",
            "p50": "179.33",
            "p95": "154.88",
            "p99": "147.33",
            "min": "146.92",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "174.00",
            "p50": "159.02",
            "p95": "134.44",
            "p99": "124.79",
            "min": "124.32",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "192.28",
            "p50": "178.66",
            "p95": "147.93",
            "p99": "135.41",
            "min": "133.09",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "141.33",
            "p50": "131.19",
            "p95": "116.38",
            "p99": "111.63",
            "min": "111.58",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "219.71",
            "p50": "201.51",
            "p95": "170.05",
            "p99": "135.32",
            "min": "127.35",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "172.23",
            "p50": "160.94",
            "p95": "141.47",
            "p99": "119.87",
            "min": "117.40",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.27",
            "p50": "64.80",
            "p95": "60.39",
            "p99": "58.41",
            "min": "58.34",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "138.51",
            "p50": "128.66",
            "p95": "113.73",
            "p99": "114.27",
            "min": "101.21",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "393.89",
            "p50": "308.62",
            "p95": "251.97",
            "p99": "258.06",
            "min": "226.19",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "175.03",
            "p50": "140.33",
            "p95": "132.56",
            "p99": "150.43",
            "min": "131.87",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "130.49",
            "p50": "120.42",
            "p95": "108.97",
            "p99": "117.34",
            "min": "107.42",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1122.54",
            "p50": "879.55",
            "p95": "513.24",
            "p99": "423.28",
            "min": "422.37",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1026.80",
            "p50": "813.67",
            "p95": "552.21",
            "p99": "408.80",
            "min": "402.03",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1335.64",
            "p50": "970.20",
            "p95": "497.07",
            "p99": "398.64",
            "min": "360.12",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1251.93",
            "p50": "964.00",
            "p95": "565.59",
            "p99": "422.36",
            "min": "416.66",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1215.25",
            "p50": "912.23",
            "p95": "512.69",
            "p99": "401.96",
            "min": "384.12",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1041.38",
            "p50": "828.45",
            "p95": "495.96",
            "p99": "386.18",
            "min": "364.56",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "636.91",
            "p50": "517.37",
            "p95": "351.45",
            "p99": "251.76",
            "min": "239.20",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "647.87",
            "p50": "525.72",
            "p95": "358.41",
            "p99": "300.88",
            "min": "293.29",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "646.61",
            "p50": "503.17",
            "p95": "372.47",
            "p99": "349.04",
            "min": "345.53",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "669.72",
            "p50": "532.32",
            "p95": "367.21",
            "p99": "312.73",
            "min": "307.28",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "293.09",
            "p50": "265.76",
            "p95": "215.54",
            "p99": "190.62",
            "min": "190.09",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "548.86",
            "p50": "429.21",
            "p95": "307.02",
            "p99": "262.69",
            "min": "260.22",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "538.52",
            "p50": "437.22",
            "p95": "305.35",
            "p99": "226.09",
            "min": "215.22",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "559.29",
            "p50": "447.73",
            "p95": "335.49",
            "p99": "265.71",
            "min": "253.02",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "585.53",
            "p50": "462.79",
            "p95": "356.17",
            "p99": "303.03",
            "min": "302.47",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.50",
            "p50": "101.97",
            "p95": "90.61",
            "p99": "85.51",
            "min": "84.44",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.41",
            "p50": "102.10",
            "p95": "92.55",
            "p99": "87.45",
            "min": "85.24",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.05",
            "p50": "94.66",
            "p95": "85.26",
            "p99": "82.64",
            "min": "82.49",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "254.09",
            "p50": "230.57",
            "p95": "185.80",
            "p99": "172.88",
            "min": "172.70",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.68",
            "p50": "94.50",
            "p95": "86.22",
            "p99": "81.61",
            "min": "81.04",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "245.99",
            "p50": "225.26",
            "p95": "182.38",
            "p99": "159.75",
            "min": "148.16",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "195.01",
            "p50": "180.01",
            "p95": "150.34",
            "p99": "95.22",
            "min": "81.88",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "200.61",
            "p50": "185.16",
            "p95": "153.08",
            "p99": "113.93",
            "min": "91.04",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "359.07",
            "p50": "312.67",
            "p95": "234.85",
            "p99": "180.20",
            "min": "178.64",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5466.66",
            "p50": "2035.19",
            "p95": "915.04",
            "p99": "720.58",
            "min": "711.11",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "341.24",
            "p50": "309.25",
            "p95": "241.03",
            "p99": "199.59",
            "min": "180.32",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14562.81",
            "p50": "3581.54",
            "p95": "1242.61",
            "p99": "796.36",
            "min": "780.50",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3312.91",
            "p50": "1861.87",
            "p95": "762.41",
            "p99": "584.83",
            "min": "552.61",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "178.36",
            "p50": "165.45",
            "p95": "139.71",
            "p99": "123.40",
            "min": "116.69",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "247.10",
            "p50": "225.72",
            "p95": "185.39",
            "p99": "171.42",
            "min": "170.92",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "91.79",
            "p50": "88.07",
            "p95": "78.83",
            "p99": "62.22",
            "min": "57.77",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "222.97",
            "p50": "204.79",
            "p95": "172.74",
            "p99": "101.66",
            "min": "86.47",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "170.07",
            "p50": "158.75",
            "p95": "135.12",
            "p99": "123.59",
            "min": "122.64",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "202.37",
            "p50": "186.99",
            "p95": "155.42",
            "p99": "147.70",
            "min": "147.06",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "194.72",
            "p50": "180.46",
            "p95": "147.52",
            "p99": "108.04",
            "min": "100.56",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "195.60",
            "p50": "181.68",
            "p95": "156.52",
            "p99": "145.70",
            "min": "144.38",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1106.16",
            "p50": "881.72",
            "p95": "580.80",
            "p99": "519.00",
            "min": "518.90",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "174.86",
            "p50": "161.82",
            "p95": "122.46",
            "p99": "111.85",
            "min": "110.26",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.25",
            "p50": "188.78",
            "p95": "170.40",
            "p99": "161.61",
            "min": "161.28",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.92",
            "p50": "189.51",
            "p95": "170.76",
            "p99": "161.27",
            "min": "161.03",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.47",
            "p50": "189.88",
            "p95": "169.46",
            "p99": "163.47",
            "min": "163.30",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1186.53",
            "p50": "1076.00",
            "p95": "692.04",
            "p99": "528.27",
            "min": "526.02",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "701.25",
            "p50": "622.81",
            "p95": "458.25",
            "p99": "443.40",
            "min": "442.70",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "811.84",
            "p50": "737.56",
            "p95": "549.91",
            "p99": "442.21",
            "min": "440.03",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "719.01",
            "p50": "641.66",
            "p95": "447.81",
            "p99": "411.81",
            "min": "411.56",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "729.44",
            "p50": "645.28",
            "p95": "469.51",
            "p99": "414.54",
            "min": "413.55",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "890.98",
            "p50": "779.65",
            "p95": "523.68",
            "p99": "446.53",
            "min": "443.16",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "860.16",
            "p50": "763.45",
            "p95": "558.32",
            "p99": "513.54",
            "min": "512.13",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "867.19",
            "p50": "774.00",
            "p95": "565.56",
            "p99": "495.07",
            "min": "494.78",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "822.53",
            "p50": "742.52",
            "p95": "534.12",
            "p99": "451.87",
            "min": "447.02",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "650.20",
            "p50": "601.36",
            "p95": "431.58",
            "p99": "383.52",
            "min": "383.37",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "860.64",
            "p50": "736.11",
            "p95": "573.93",
            "p99": "518.90",
            "min": "517.05",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "64.45",
            "p50": "62.52",
            "p95": "60.20",
            "p99": "58.98",
            "min": "58.98",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "97.06",
            "p50": "94.76",
            "p95": "90.22",
            "p99": "91.06",
            "min": "87.84",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "491.23",
            "p50": "453.38",
            "p95": "364.58",
            "p99": "356.57",
            "min": "324.98",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "133.13",
            "p50": "102.67",
            "p95": "96.34",
            "p99": "111.87",
            "min": "95.84",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "90.87",
            "p50": "88.05",
            "p95": "84.97",
            "p99": "87.21",
            "min": "84.46",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1784.13",
            "p50": "1546.75",
            "p95": "889.75",
            "p99": "674.39",
            "min": "623.54",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1637.67",
            "p50": "1467.89",
            "p95": "833.76",
            "p99": "661.04",
            "min": "617.53",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2242.60",
            "p50": "1728.04",
            "p95": "879.21",
            "p99": "744.49",
            "min": "695.10",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2209.34",
            "p50": "1751.78",
            "p95": "856.21",
            "p99": "670.33",
            "min": "669.13",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2205.25",
            "p50": "1715.02",
            "p95": "916.38",
            "p99": "715.56",
            "min": "704.22",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1680.37",
            "p50": "1480.53",
            "p95": "817.34",
            "p99": "673.00",
            "min": "622.22",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "726.21",
            "p50": "632.41",
            "p95": "494.46",
            "p99": "402.00",
            "min": "400.87",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "708.02",
            "p50": "621.54",
            "p95": "456.45",
            "p99": "395.65",
            "min": "394.16",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "717.96",
            "p50": "639.90",
            "p95": "483.49",
            "p99": "430.63",
            "min": "423.10",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "733.79",
            "p50": "654.10",
            "p95": "462.74",
            "p99": "406.50",
            "min": "403.80",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.65",
            "p50": "85.37",
            "p95": "81.12",
            "p99": "79.76",
            "min": "79.39",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "632.19",
            "p50": "564.27",
            "p95": "437.95",
            "p99": "383.24",
            "min": "379.52",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "601.72",
            "p50": "540.85",
            "p95": "417.64",
            "p99": "378.19",
            "min": "377.73",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "592.69",
            "p50": "534.39",
            "p95": "420.22",
            "p99": "368.41",
            "min": "360.58",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "615.48",
            "p50": "532.52",
            "p95": "419.90",
            "p99": "360.37",
            "min": "356.71",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1377.28",
            "p50": "1191.28",
            "p95": "752.73",
            "p99": "563.90",
            "min": "552.38",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1679.18",
            "p50": "1425.08",
            "p95": "807.17",
            "p99": "605.98",
            "min": "601.59",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.08",
            "p50": "71.21",
            "p95": "68.56",
            "p99": "67.92",
            "min": "67.86",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9420.99",
            "p50": "4582.84",
            "p95": "2370.17",
            "p99": "1879.57",
            "min": "1739.45",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.11",
            "p50": "71.23",
            "p95": "68.74",
            "p99": "67.17",
            "min": "67.02",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "220.66",
            "p50": "215.37",
            "p95": "194.18",
            "p99": "179.44",
            "min": "179.30",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "862.62",
            "p50": "757.39",
            "p95": "525.16",
            "p99": "460.50",
            "min": "457.05",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "669.61",
            "p50": "607.36",
            "p95": "494.77",
            "p99": "401.83",
            "min": "400.90",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1068.21",
            "p50": "977.34",
            "p95": "647.29",
            "p99": "573.15",
            "min": "571.18",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "25976.69",
            "p50": "8952.46",
            "p95": "2751.28",
            "p99": "2138.56",
            "min": "2028.81",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1064.56",
            "p50": "963.11",
            "p95": "690.18",
            "p99": "521.86",
            "min": "504.13",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "51752.38",
            "p50": "9758.49",
            "p95": "2582.96",
            "p99": "1699.53",
            "min": "1665.82",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14861.88",
            "p50": "6004.42",
            "p95": "1358.62",
            "p99": "953.11",
            "min": "946.32",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "543.04",
            "p50": "474.21",
            "p95": "398.17",
            "p99": "333.06",
            "min": "332.12",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "976.21",
            "p50": "886.35",
            "p95": "595.71",
            "p99": "490.76",
            "min": "483.61",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "799.76",
            "p50": "727.02",
            "p95": "519.25",
            "p99": "433.39",
            "min": "430.75",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1200.11",
            "p50": "1089.60",
            "p95": "676.35",
            "p99": "530.59",
            "min": "528.65",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "729.93",
            "p50": "654.29",
            "p95": "476.65",
            "p99": "422.88",
            "min": "421.04",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1151.82",
            "p50": "1040.03",
            "p95": "683.40",
            "p99": "551.31",
            "min": "531.49",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "870.42",
            "p50": "775.26",
            "p95": "516.97",
            "p99": "453.26",
            "min": "448.66",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "907.30",
            "p50": "851.09",
            "p95": "580.52",
            "p99": "486.76",
            "min": "485.77",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2364.45",
            "p50": "1948.56",
            "p95": "1063.94",
            "p99": "978.75",
            "min": "971.75",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "851.46",
            "p50": "796.19",
            "p95": "521.86",
            "p99": "449.96",
            "min": "448.88",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "82.62",
            "p50": "79.94",
            "p95": "73.16",
            "p99": "69.09",
            "min": "69.07",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "75.89",
            "p50": "73.39",
            "p95": "68.06",
            "p99": "63.22",
            "min": "63.10",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "77.31",
            "p50": "75.19",
            "p95": "68.26",
            "p99": "64.71",
            "min": "64.31",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "212.23",
            "p50": "196.58",
            "p95": "155.52",
            "p99": "142.12",
            "min": "141.54",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "103.39",
            "p50": "99.79",
            "p95": "88.83",
            "p99": "83.44",
            "min": "83.11",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.32",
            "p50": "105.34",
            "p95": "93.35",
            "p99": "70.54",
            "min": "63.66",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "143.82",
            "p50": "134.95",
            "p95": "118.52",
            "p99": "106.47",
            "min": "105.94",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "143.17",
            "p50": "135.21",
            "p95": "112.11",
            "p99": "91.91",
            "min": "88.29",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "188.61",
            "p50": "175.25",
            "p95": "142.42",
            "p99": "130.47",
            "min": "128.50",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "186.68",
            "p50": "173.33",
            "p95": "140.51",
            "p99": "127.80",
            "min": "125.95",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "185.09",
            "p50": "172.35",
            "p95": "136.46",
            "p99": "96.24",
            "min": "94.61",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.65",
            "p50": "122.45",
            "p95": "102.40",
            "p99": "66.61",
            "min": "59.26",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "206.72",
            "p50": "189.07",
            "p95": "151.58",
            "p99": "137.61",
            "min": "137.45",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "191.22",
            "p50": "175.23",
            "p95": "151.97",
            "p99": "143.11",
            "min": "142.86",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "72.74",
            "p50": "69.18",
            "p95": "64.77",
            "p99": "62.41",
            "min": "62.00",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "133.73",
            "p50": "125.52",
            "p95": "110.76",
            "p99": "114.77",
            "min": "104.56",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "219.88",
            "p50": "192.40",
            "p95": "153.40",
            "p99": "162.17",
            "min": "148.63",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "165.19",
            "p50": "139.85",
            "p95": "132.52",
            "p99": "143.17",
            "min": "126.56",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "129.15",
            "p50": "120.43",
            "p95": "106.83",
            "p99": "115.18",
            "min": "104.64",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1052.31",
            "p50": "771.55",
            "p95": "412.21",
            "p99": "338.66",
            "min": "337.85",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1033.80",
            "p50": "738.75",
            "p95": "460.05",
            "p99": "373.42",
            "min": "351.43",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1166.82",
            "p50": "819.05",
            "p95": "472.04",
            "p99": "339.54",
            "min": "316.11",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1091.37",
            "p50": "814.87",
            "p95": "428.53",
            "p99": "314.02",
            "min": "298.11",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1036.13",
            "p50": "786.08",
            "p95": "399.70",
            "p99": "290.37",
            "min": "289.98",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1037.04",
            "p50": "784.85",
            "p95": "438.34",
            "p99": "365.93",
            "min": "358.08",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "349.38",
            "p50": "295.21",
            "p95": "218.68",
            "p99": "185.21",
            "min": "181.66",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "344.99",
            "p50": "296.23",
            "p95": "217.69",
            "p99": "191.48",
            "min": "190.23",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "335.16",
            "p50": "298.53",
            "p95": "227.76",
            "p99": "203.20",
            "min": "203.06",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "363.49",
            "p50": "320.70",
            "p95": "238.43",
            "p99": "210.76",
            "min": "210.55",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "290.24",
            "p50": "258.64",
            "p95": "199.69",
            "p99": "173.12",
            "min": "171.02",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "292.49",
            "p50": "258.57",
            "p95": "206.97",
            "p99": "183.58",
            "min": "181.42",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "294.75",
            "p50": "257.59",
            "p95": "200.98",
            "p99": "166.54",
            "min": "165.50",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "297.61",
            "p50": "265.36",
            "p95": "213.15",
            "p99": "181.41",
            "min": "180.51",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "299.47",
            "p50": "262.91",
            "p95": "199.75",
            "p99": "180.39",
            "min": "178.63",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.35",
            "p50": "101.05",
            "p95": "87.80",
            "p99": "84.20",
            "min": "83.78",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.88",
            "p50": "101.64",
            "p95": "91.56",
            "p99": "85.34",
            "min": "84.58",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.73",
            "p50": "94.17",
            "p95": "86.90",
            "p99": "79.41",
            "min": "77.83",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "250.74",
            "p50": "231.03",
            "p95": "188.81",
            "p99": "167.06",
            "min": "165.07",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.73",
            "p50": "94.14",
            "p95": "85.27",
            "p99": "81.72",
            "min": "81.20",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "244.71",
            "p50": "220.88",
            "p95": "175.48",
            "p99": "156.80",
            "min": "154.54",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "187.23",
            "p50": "174.36",
            "p95": "143.16",
            "p99": "133.65",
            "min": "133.41",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "149.97",
            "p50": "140.87",
            "p95": "122.95",
            "p99": "112.70",
            "min": "111.24",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "443.16",
            "p50": "379.87",
            "p95": "259.21",
            "p99": "215.71",
            "min": "214.97",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4843.42",
            "p50": "1837.33",
            "p95": "500.99",
            "p99": "434.53",
            "min": "430.20",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "441.00",
            "p50": "372.53",
            "p95": "250.75",
            "p99": "213.75",
            "min": "213.61",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "13651.83",
            "p50": "2724.42",
            "p95": "1088.33",
            "p99": "844.17",
            "min": "821.89",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2903.68",
            "p50": "1390.39",
            "p95": "483.11",
            "p99": "396.72",
            "min": "382.56",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "207.83",
            "p50": "189.91",
            "p95": "160.78",
            "p99": "143.46",
            "min": "140.69",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "233.97",
            "p50": "217.09",
            "p95": "178.63",
            "p99": "153.96",
            "min": "152.14",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "128.61",
            "p50": "121.90",
            "p95": "105.66",
            "p99": "92.92",
            "min": "90.14",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "209.66",
            "p50": "190.68",
            "p95": "154.34",
            "p99": "87.78",
            "min": "54.80",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "141.69",
            "p50": "134.33",
            "p95": "113.92",
            "p99": "94.83",
            "min": "92.30",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "174.15",
            "p50": "163.43",
            "p95": "138.30",
            "p99": "118.25",
            "min": "117.79",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "184.11",
            "p50": "170.27",
            "p95": "146.50",
            "p99": "133.84",
            "min": "132.75",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "186.35",
            "p50": "173.69",
            "p95": "144.83",
            "p99": "128.64",
            "min": "128.31",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "306.04",
            "p50": "238.44",
            "p95": "149.19",
            "p99": "134.76",
            "min": "129.46",
            "n": "96",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "144.06",
            "p50": "135.39",
            "p95": "111.48",
            "p99": "114.37",
            "min": "103.94",
            "n": "73",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.41",
            "p50": "85.42",
            "p95": "79.46",
            "p99": "77.18",
            "min": "77.10",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "90.11",
            "p50": "86.70",
            "p95": "84.82",
            "p99": "80.58",
            "min": "80.12",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "89.11",
            "p50": "86.21",
            "p95": "83.81",
            "p99": "82.63",
            "min": "82.60",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "184.61",
            "p50": "179.98",
            "p95": "174.42",
            "p99": "162.43",
            "min": "156.69",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "93.66",
            "p50": "89.02",
            "p95": "86.38",
            "p99": "83.52",
            "min": "83.43",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "112.50",
            "p50": "108.67",
            "p95": "105.36",
            "p99": "102.35",
            "min": "102.27",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "126.93",
            "p50": "123.76",
            "p95": "110.30",
            "p99": "100.73",
            "min": "99.94",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "127.62",
            "p50": "123.87",
            "p95": "120.25",
            "p99": "114.61",
            "min": "113.53",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "96.39",
            "p50": "94.59",
            "p95": "77.76",
            "p99": "76.26",
            "min": "76.25",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "98.49",
            "p50": "96.23",
            "p95": "94.66",
            "p99": "91.61",
            "min": "91.49",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "97.86",
            "p50": "96.14",
            "p95": "94.47",
            "p99": "90.99",
            "min": "90.60",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.98",
            "p50": "124.26",
            "p95": "120.87",
            "p99": "119.97",
            "min": "119.84",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "119.61",
            "p50": "118.10",
            "p95": "111.21",
            "p99": "110.00",
            "min": "109.78",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "116.45",
            "p50": "114.02",
            "p95": "110.57",
            "p99": "107.52",
            "min": "106.92",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "76.36",
            "p50": "73.68",
            "p95": "70.18",
            "p99": "66.88",
            "min": "66.75",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "99.29",
            "p50": "98.16",
            "p95": "93.96",
            "p99": "94.80",
            "min": "92.37",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "62.43",
            "p50": "59.67",
            "p95": "58.04",
            "p99": "53.19",
            "min": "51.02",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "159.31",
            "p50": "127.88",
            "p95": "119.96",
            "p99": "136.86",
            "min": "119.92",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "110.01",
            "p50": "108.44",
            "p95": "107.07",
            "p99": "107.33",
            "min": "105.30",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "387.85",
            "p50": "372.41",
            "p95": "363.89",
            "p99": "337.62",
            "min": "316.97",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "513.68",
            "p50": "485.49",
            "p95": "473.82",
            "p99": "448.86",
            "min": "430.39",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "389.93",
            "p50": "374.89",
            "p95": "363.92",
            "p99": "326.68",
            "min": "320.86",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "392.72",
            "p50": "377.43",
            "p95": "357.12",
            "p99": "331.14",
            "min": "325.52",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "393.78",
            "p50": "378.94",
            "p95": "352.70",
            "p99": "314.97",
            "min": "313.60",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "474.25",
            "p50": "452.01",
            "p95": "431.64",
            "p99": "348.00",
            "min": "333.42",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "100.78",
            "p50": "98.53",
            "p95": "94.22",
            "p99": "92.15",
            "min": "91.70",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "101.74",
            "p50": "98.89",
            "p95": "94.43",
            "p99": "93.77",
            "min": "93.70",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "99.97",
            "p50": "97.48",
            "p95": "93.80",
            "p99": "92.63",
            "min": "92.62",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "90.51",
            "p50": "89.11",
            "p95": "86.71",
            "p99": "85.88",
            "min": "85.81",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.95",
            "p50": "86.59",
            "p95": "85.97",
            "p99": "85.12",
            "min": "84.94",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "94.88",
            "p50": "91.15",
            "p95": "87.56",
            "p99": "86.40",
            "min": "86.23",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "90.60",
            "p50": "87.52",
            "p95": "83.37",
            "p99": "81.94",
            "min": "81.78",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "90.19",
            "p50": "86.94",
            "p95": "83.21",
            "p99": "82.49",
            "min": "82.42",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "90.38",
            "p50": "86.79",
            "p95": "83.17",
            "p99": "82.39",
            "min": "82.30",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "371.99",
            "p50": "360.95",
            "p95": "312.78",
            "p99": "261.30",
            "min": "247.04",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "371.65",
            "p50": "361.13",
            "p95": "315.53",
            "p99": "246.56",
            "min": "243.64",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "154.30",
            "p50": "152.35",
            "p95": "138.96",
            "p99": "128.52",
            "min": "128.24",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "476.57",
            "p50": "459.12",
            "p95": "372.16",
            "p99": "239.24",
            "min": "200.28",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "154.67",
            "p50": "152.37",
            "p95": "141.55",
            "p99": "118.96",
            "min": "116.54",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "274.15",
            "p50": "268.83",
            "p95": "237.01",
            "p99": "208.11",
            "min": "199.48",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.21",
            "p50": "96.63",
            "p95": "90.09",
            "p99": "84.42",
            "min": "84.10",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "181.39",
            "p50": "173.07",
            "p95": "170.19",
            "p99": "165.19",
            "min": "163.38",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "403.63",
            "p50": "351.72",
            "p95": "266.36",
            "p99": "225.64",
            "min": "219.63",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7284.65",
            "p50": "2264.56",
            "p95": "901.88",
            "p99": "547.34",
            "min": "535.02",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "432.62",
            "p50": "375.45",
            "p95": "288.51",
            "p99": "248.39",
            "min": "245.13",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "29595.39",
            "p50": "9184.21",
            "p95": "2646.87",
            "p99": "1892.00",
            "min": "1848.43",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4844.34",
            "p50": "3109.93",
            "p95": "1935.82",
            "p99": "784.67",
            "min": "551.77",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "354.23",
            "p50": "315.11",
            "p95": "237.22",
            "p99": "178.05",
            "min": "170.84",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "155.66",
            "p50": "142.30",
            "p95": "125.81",
            "p99": "110.79",
            "min": "110.69",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "124.65",
            "p50": "110.93",
            "p95": "102.03",
            "p99": "96.55",
            "min": "95.32",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "136.90",
            "p50": "121.98",
            "p95": "115.29",
            "p99": "107.04",
            "min": "105.90",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "127.28",
            "p50": "121.90",
            "p95": "117.71",
            "p99": "110.59",
            "min": "109.88",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "174.87",
            "p50": "170.57",
            "p95": "142.01",
            "p99": "139.62",
            "min": "139.02",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "94.14",
            "p50": "92.09",
            "p95": "80.19",
            "p99": "78.83",
            "min": "78.62",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "117.61",
            "p50": "113.32",
            "p95": "107.50",
            "p99": "107.23",
            "min": "107.18",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "975.16",
            "p50": "907.02",
            "p95": "330.02",
            "p99": "319.79",
            "min": "319.50",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "124.41",
            "p50": "117.03",
            "p95": "106.07",
            "p99": "102.72",
            "min": "102.60",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}