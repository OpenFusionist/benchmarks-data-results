{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "111.49",
            "p50": "107.01",
            "p95": "99.57",
            "p99": "105.09",
            "min": "97.57",
            "n": "45",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1096.80",
            "p50": "997.76",
            "p95": "635.50",
            "p99": "840.95",
            "min": "540.61",
            "n": "45",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "110.20",
            "p50": "106.88",
            "p95": "98.69",
            "p99": "104.17",
            "min": "97.09",
            "n": "45",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "764.72",
            "p50": "677.83",
            "p95": "442.52",
            "p99": "579.55",
            "min": "428.05",
            "n": "54",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "400.80",
            "p50": "373.29",
            "p95": "299.08",
            "p99": "343.27",
            "min": "275.74",
            "n": "45",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "430.36",
            "p50": "393.60",
            "p95": "325.45",
            "p99": "363.43",
            "min": "293.78",
            "n": "48",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "293.00",
            "p50": "269.74",
            "p95": "195.39",
            "p99": "244.23",
            "min": "186.99",
            "n": "45",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "183.61",
            "p50": "175.53",
            "p95": "154.05",
            "p99": "169.87",
            "min": "153.75",
            "n": "45",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "257.28",
            "p50": "244.17",
            "p95": "210.90",
            "p99": "231.19",
            "min": "204.02",
            "n": "48",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "261.61",
            "p50": "245.59",
            "p95": "215.97",
            "p99": "237.75",
            "min": "209.75",
            "n": "45",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "262.06",
            "p50": "242.00",
            "p95": "209.19",
            "p99": "235.61",
            "min": "204.57",
            "n": "45",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "203.00",
            "p50": "193.15",
            "p95": "171.36",
            "p99": "186.49",
            "min": "167.10",
            "n": "45",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "339.63",
            "p50": "322.46",
            "p95": "273.40",
            "p99": "298.75",
            "min": "256.19",
            "n": "48",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "299.21",
            "p50": "284.50",
            "p95": "236.56",
            "p99": "265.22",
            "min": "225.32",
            "n": "45",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8523.06",
            "p50": "3497.08",
            "p95": "2228.74",
            "p99": "4910.67",
            "min": "1576.16",
            "n": "51",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2954.43",
            "p50": "2355.66",
            "p95": "1227.54",
            "p99": "2516.64",
            "min": "1203.25",
            "n": "24",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "327.40",
            "p50": "298.33",
            "p95": "258.10",
            "p99": "305.57",
            "min": "256.98",
            "n": "30",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1433.67",
            "p50": "947.60",
            "p95": "339.12",
            "p99": "1189.86",
            "min": "325.45",
            "n": "21",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "6973.31",
            "p50": "3693.91",
            "p95": "1486.68",
            "p99": "5754.59",
            "min": "1433.69",
            "n": "21",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "815.08",
            "p50": "724.20",
            "p95": "522.23",
            "p99": "597.83",
            "min": "440.52",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "812.70",
            "p50": "719.99",
            "p95": "490.29",
            "p99": "612.44",
            "min": "467.42",
            "n": "57",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "934.10",
            "p50": "804.99",
            "p95": "556.88",
            "p99": "665.83",
            "min": "471.57",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2423.30",
            "p50": "1762.24",
            "p95": "893.77",
            "p99": "1484.56",
            "min": "804.77",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2399.06",
            "p50": "1808.77",
            "p95": "985.86",
            "p99": "1589.01",
            "min": "926.23",
            "n": "54",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "802.22",
            "p50": "735.61",
            "p95": "535.83",
            "p99": "610.55",
            "min": "471.75",
            "n": "57",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "166.69",
            "p50": "158.28",
            "p95": "147.25",
            "p99": "152.87",
            "min": "136.64",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "552.22",
            "p50": "511.04",
            "p95": "417.13",
            "p99": "473.24",
            "min": "380.52",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "163.72",
            "p50": "156.34",
            "p95": "145.52",
            "p99": "154.58",
            "min": "143.85",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "187.14",
            "p50": "173.65",
            "p95": "158.89",
            "p99": "173.45",
            "min": "157.39",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "31758.20",
            "p50": "8474.21",
            "p95": "2203.70",
            "p99": "16273.48",
            "min": "1979.89",
            "n": "51",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "409.40",
            "p50": "376.61",
            "p95": "299.88",
            "p99": "356.05",
            "min": "293.43",
            "n": "45",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "389.19",
            "p50": "366.07",
            "p95": "306.36",
            "p99": "336.96",
            "min": "275.64",
            "n": "45",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "388.18",
            "p50": "359.24",
            "p95": "312.09",
            "p99": "343.81",
            "min": "291.73",
            "n": "45",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "387.80",
            "p50": "352.76",
            "p95": "293.17",
            "p99": "337.98",
            "min": "279.48",
            "n": "45",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "17049.95",
            "p50": "5183.13",
            "p95": "2469.15",
            "p99": "8366.03",
            "min": "2077.68",
            "n": "57",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "16801.76",
            "p50": "5648.34",
            "p95": "2363.91",
            "p99": "8194.34",
            "min": "1961.37",
            "n": "57",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "15052.22",
            "p50": "4965.90",
            "p95": "2307.29",
            "p99": "7538.94",
            "min": "603.60",
            "n": "51",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "16715.21",
            "p50": "5620.06",
            "p95": "2388.11",
            "p99": "8336.48",
            "min": "2269.12",
            "n": "57",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "15760.95",
            "p50": "4870.79",
            "p95": "2413.79",
            "p99": "9046.88",
            "min": "2058.77",
            "n": "48",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "16886.30",
            "p50": "5396.00",
            "p95": "2438.29",
            "p99": "8249.55",
            "min": "1995.35",
            "n": "57",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "261.88",
            "p50": "238.38",
            "p95": "207.67",
            "p99": "232.46",
            "min": "197.93",
            "n": "45",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "525.12",
            "p50": "484.97",
            "p95": "400.77",
            "p99": "422.34",
            "min": "338.25",
            "n": "54",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1624.57",
            "p50": "1284.63",
            "p95": "370.23",
            "p99": "848.43",
            "min": "286.40",
            "n": "57",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "21891.31",
            "p50": "4931.30",
            "p95": "289.38",
            "p99": "9346.62",
            "min": "262.53",
            "n": "57",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1405.87",
            "p50": "1211.69",
            "p95": "741.01",
            "p99": "963.16",
            "min": "642.58",
            "n": "57",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "53648.59",
            "p50": "9250.88",
            "p95": "2050.88",
            "p99": "23325.54",
            "min": "1367.47",
            "n": "57",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14196.91",
            "p50": "6459.17",
            "p95": "285.02",
            "p99": "6113.97",
            "min": "260.80",
            "n": "57",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "566.93",
            "p50": "499.04",
            "p95": "389.32",
            "p99": "444.00",
            "min": "343.42",
            "n": "54",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "549.96",
            "p50": "508.49",
            "p95": "379.33",
            "p99": "454.45",
            "min": "355.05",
            "n": "48",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "200.96",
            "p50": "193.79",
            "p95": "170.61",
            "p99": "182.25",
            "min": "162.78",
            "n": "48",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "382.65",
            "p50": "369.21",
            "p95": "293.75",
            "p99": "334.58",
            "min": "290.22",
            "n": "51",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "201.38",
            "p50": "194.02",
            "p95": "175.49",
            "p99": "187.06",
            "min": "170.25",
            "n": "45",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "338.75",
            "p50": "317.26",
            "p95": "270.82",
            "p99": "285.98",
            "min": "242.80",
            "n": "54",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "254.89",
            "p50": "241.37",
            "p95": "206.93",
            "p99": "231.23",
            "min": "203.46",
            "n": "45",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "575.82",
            "p50": "524.74",
            "p95": "396.27",
            "p99": "460.78",
            "min": "354.59",
            "n": "51",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1452.06",
            "p50": "1238.79",
            "p95": "968.00",
            "p99": "1186.79",
            "min": "910.69",
            "n": "48",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "290.97",
            "p50": "269.17",
            "p95": "230.62",
            "p99": "253.46",
            "min": "214.41",
            "n": "48",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "138.47",
            "p50": "136.97",
            "p95": "121.52",
            "p99": "129.31",
            "min": "118.56",
            "n": "45",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "137.89",
            "p50": "136.21",
            "p95": "122.59",
            "p99": "127.81",
            "min": "115.97",
            "n": "45",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "138.15",
            "p50": "136.77",
            "p95": "125.20",
            "p99": "131.86",
            "min": "124.48",
            "n": "45",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "232.10",
            "p50": "229.20",
            "p95": "204.04",
            "p99": "213.22",
            "min": "197.78",
            "n": "54",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "192.95",
            "p50": "188.98",
            "p95": "159.93",
            "p99": "171.13",
            "min": "145.51",
            "n": "45",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "205.58",
            "p50": "197.46",
            "p95": "172.44",
            "p99": "185.90",
            "min": "165.41",
            "n": "48",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "191.03",
            "p50": "182.25",
            "p95": "161.07",
            "p99": "165.97",
            "min": "136.56",
            "n": "45",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "186.00",
            "p50": "179.67",
            "p95": "159.30",
            "p99": "170.42",
            "min": "152.12",
            "n": "45",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "213.34",
            "p50": "205.44",
            "p95": "168.49",
            "p99": "175.53",
            "min": "136.17",
            "n": "48",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "184.38",
            "p50": "179.94",
            "p95": "161.66",
            "p99": "145.27",
            "min": "99.35",
            "n": "45",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "211.82",
            "p50": "206.18",
            "p95": "180.67",
            "p99": "194.77",
            "min": "174.74",
            "n": "45",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "148.34",
            "p50": "145.83",
            "p95": "133.05",
            "p99": "140.65",
            "min": "131.61",
            "n": "45",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "230.39",
            "p50": "227.68",
            "p95": "199.12",
            "p99": "206.97",
            "min": "182.60",
            "n": "48",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "183.82",
            "p50": "181.17",
            "p95": "148.03",
            "p99": "165.48",
            "min": "143.94",
            "n": "45",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "72.57",
            "p50": "70.47",
            "p95": "67.25",
            "p99": "69.20",
            "min": "66.09",
            "n": "51",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "142.66",
            "p50": "137.38",
            "p95": "124.43",
            "p99": "137.72",
            "min": "122.89",
            "n": "24",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "469.01",
            "p50": "381.55",
            "p95": "277.66",
            "p99": "404.55",
            "min": "261.08",
            "n": "30",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "196.41",
            "p50": "157.13",
            "p95": "142.31",
            "p99": "184.50",
            "min": "142.28",
            "n": "21",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.57",
            "p50": "133.19",
            "p95": "121.67",
            "p99": "132.40",
            "min": "121.15",
            "n": "21",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1232.69",
            "p50": "1182.39",
            "p95": "869.97",
            "p99": "937.68",
            "min": "724.05",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1063.78",
            "p50": "1031.41",
            "p95": "761.40",
            "p99": "837.95",
            "min": "674.42",
            "n": "57",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1495.15",
            "p50": "1418.80",
            "p95": "1113.77",
            "p99": "1198.73",
            "min": "984.08",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1387.30",
            "p50": "1293.83",
            "p95": "652.79",
            "p99": "893.06",
            "min": "535.16",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1348.74",
            "p50": "1223.34",
            "p95": "769.05",
            "p99": "934.62",
            "min": "595.79",
            "n": "54",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1098.22",
            "p50": "1058.43",
            "p95": "687.19",
            "p99": "797.36",
            "min": "579.49",
            "n": "57",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "737.29",
            "p50": "641.44",
            "p95": "442.14",
            "p99": "590.15",
            "min": "417.41",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "738.55",
            "p50": "637.23",
            "p95": "518.40",
            "p99": "624.96",
            "min": "491.61",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "745.03",
            "p50": "630.68",
            "p95": "436.73",
            "p99": "595.20",
            "min": "419.31",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "744.63",
            "p50": "663.90",
            "p95": "506.70",
            "p99": "623.79",
            "min": "481.93",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "296.31",
            "p50": "292.30",
            "p95": "251.28",
            "p99": "268.24",
            "min": "242.33",
            "n": "51",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "658.68",
            "p50": "542.95",
            "p95": "449.23",
            "p99": "556.05",
            "min": "435.57",
            "n": "45",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "643.21",
            "p50": "592.99",
            "p95": "410.76",
            "p99": "533.45",
            "min": "404.61",
            "n": "45",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "654.02",
            "p50": "559.13",
            "p95": "441.31",
            "p99": "529.17",
            "min": "382.62",
            "n": "45",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "667.16",
            "p50": "579.73",
            "p95": "400.66",
            "p99": "536.84",
            "min": "383.85",
            "n": "45",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "107.51",
            "p50": "105.79",
            "p95": "100.50",
            "p99": "99.19",
            "min": "93.17",
            "n": "57",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "107.42",
            "p50": "106.16",
            "p95": "101.33",
            "p99": "100.79",
            "min": "95.99",
            "n": "57",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.98",
            "p50": "98.77",
            "p95": "90.21",
            "p99": "94.25",
            "min": "88.96",
            "n": "51",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "256.85",
            "p50": "253.23",
            "p95": "226.54",
            "p99": "232.29",
            "min": "214.50",
            "n": "57",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.99",
            "p50": "98.21",
            "p95": "93.58",
            "p99": "95.65",
            "min": "91.13",
            "n": "48",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "249.71",
            "p50": "246.11",
            "p95": "219.78",
            "p99": "220.55",
            "min": "199.43",
            "n": "57",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "211.80",
            "p50": "208.00",
            "p95": "175.78",
            "p99": "191.68",
            "min": "168.06",
            "n": "45",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "240.73",
            "p50": "236.67",
            "p95": "212.90",
            "p99": "132.30",
            "min": "43.58",
            "n": "54",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "573.69",
            "p50": "559.81",
            "p95": "446.22",
            "p99": "472.62",
            "min": "399.43",
            "n": "57",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7646.22",
            "p50": "4839.86",
            "p95": "2330.12",
            "p99": "4425.27",
            "min": "2092.85",
            "n": "57",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "534.73",
            "p50": "523.80",
            "p95": "422.93",
            "p99": "440.22",
            "min": "371.78",
            "n": "57",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "21305.24",
            "p50": "7291.17",
            "p95": "2438.81",
            "p99": "10312.32",
            "min": "2351.93",
            "n": "57",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4262.37",
            "p50": "3599.66",
            "p95": "2113.74",
            "p99": "2658.02",
            "min": "1496.26",
            "n": "57",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "252.83",
            "p50": "217.45",
            "p95": "189.76",
            "p99": "204.86",
            "min": "165.62",
            "n": "54",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "265.81",
            "p50": "261.96",
            "p95": "221.85",
            "p99": "237.07",
            "min": "207.16",
            "n": "48",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "148.30",
            "p50": "146.41",
            "p95": "134.79",
            "p99": "140.15",
            "min": "131.67",
            "n": "48",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "243.58",
            "p50": "238.30",
            "p95": "168.66",
            "p99": "188.96",
            "min": "138.55",
            "n": "51",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "186.07",
            "p50": "183.74",
            "p95": "163.36",
            "p99": "173.69",
            "min": "159.15",
            "n": "45",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "221.54",
            "p50": "215.87",
            "p95": "194.14",
            "p99": "201.52",
            "min": "185.15",
            "n": "54",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "211.01",
            "p50": "207.12",
            "p95": "181.60",
            "p99": "196.79",
            "min": "180.10",
            "n": "45",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "209.80",
            "p50": "207.30",
            "p95": "177.94",
            "p99": "188.53",
            "min": "168.90",
            "n": "51",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1278.14",
            "p50": "1181.64",
            "p95": "922.76",
            "p99": "1093.06",
            "min": "900.42",
            "n": "48",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "183.03",
            "p50": "180.74",
            "p95": "165.29",
            "p99": "167.98",
            "min": "152.31",
            "n": "48",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.77",
            "p50": "192.83",
            "p95": "190.16",
            "p99": "192.44",
            "min": "189.70",
            "n": "45",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.52",
            "p50": "192.78",
            "p95": "190.72",
            "p99": "192.66",
            "min": "190.48",
            "n": "45",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.19",
            "p50": "193.16",
            "p95": "188.28",
            "p99": "190.58",
            "min": "185.16",
            "n": "45",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1188.22",
            "p50": "1158.11",
            "p95": "1007.64",
            "p99": "1042.38",
            "min": "923.06",
            "n": "54",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "697.80",
            "p50": "690.74",
            "p95": "664.54",
            "p99": "656.48",
            "min": "607.97",
            "n": "45",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "809.67",
            "p50": "791.01",
            "p95": "719.69",
            "p99": "755.33",
            "min": "698.77",
            "n": "48",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "736.31",
            "p50": "725.40",
            "p95": "569.73",
            "p99": "641.80",
            "min": "530.84",
            "n": "45",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "747.64",
            "p50": "735.82",
            "p95": "647.46",
            "p99": "685.41",
            "min": "612.37",
            "n": "45",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "919.74",
            "p50": "899.77",
            "p95": "846.72",
            "p99": "851.52",
            "min": "780.51",
            "n": "48",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "884.58",
            "p50": "868.69",
            "p95": "661.87",
            "p99": "762.08",
            "min": "618.28",
            "n": "45",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "883.92",
            "p50": "868.04",
            "p95": "617.12",
            "p99": "715.31",
            "min": "517.37",
            "n": "45",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "842.80",
            "p50": "826.70",
            "p95": "702.72",
            "p99": "714.61",
            "min": "564.14",
            "n": "45",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "884.61",
            "p50": "867.05",
            "p95": "802.67",
            "p99": "705.03",
            "min": "518.11",
            "n": "48",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "887.22",
            "p50": "869.11",
            "p95": "768.68",
            "p99": "781.11",
            "min": "656.54",
            "n": "45",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "113.33",
            "p50": "109.16",
            "p95": "105.85",
            "p99": "107.95",
            "min": "102.98",
            "n": "51",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "95.73",
            "p50": "94.69",
            "p95": "66.32",
            "p99": "88.37",
            "min": "66.28",
            "n": "24",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "600.16",
            "p50": "580.50",
            "p95": "482.06",
            "p99": "556.49",
            "min": "459.27",
            "n": "30",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "128.68",
            "p50": "98.89",
            "p95": "68.07",
            "p99": "115.33",
            "min": "68.02",
            "n": "21",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "89.05",
            "p50": "87.30",
            "p95": "60.99",
            "p99": "82.87",
            "min": "60.98",
            "n": "21",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1921.41",
            "p50": "1849.89",
            "p95": "1445.87",
            "p99": "1586.92",
            "min": "1344.70",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1640.02",
            "p50": "1588.99",
            "p95": "1447.52",
            "p99": "1181.81",
            "min": "850.00",
            "n": "57",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2490.74",
            "p50": "2370.02",
            "p95": "1871.76",
            "p99": "2098.68",
            "min": "1814.78",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2480.79",
            "p50": "2346.28",
            "p95": "2140.34",
            "p99": "1798.24",
            "min": "1303.97",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2457.35",
            "p50": "2341.10",
            "p95": "1366.11",
            "p99": "1612.07",
            "min": "920.48",
            "n": "54",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1708.67",
            "p50": "1655.23",
            "p95": "1328.16",
            "p99": "1069.36",
            "min": "606.42",
            "n": "57",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "869.20",
            "p50": "840.10",
            "p95": "814.03",
            "p99": "837.03",
            "min": "799.26",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "863.79",
            "p50": "837.87",
            "p95": "768.56",
            "p99": "796.81",
            "min": "718.19",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "872.67",
            "p50": "843.17",
            "p95": "747.26",
            "p99": "711.71",
            "min": "522.76",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "876.21",
            "p50": "852.21",
            "p95": "794.54",
            "p99": "821.62",
            "min": "757.53",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.99",
            "p50": "86.58",
            "p95": "83.23",
            "p99": "84.85",
            "min": "82.87",
            "n": "51",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "798.23",
            "p50": "762.92",
            "p95": "723.79",
            "p99": "736.27",
            "min": "663.54",
            "n": "45",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "745.66",
            "p50": "722.08",
            "p95": "664.38",
            "p99": "686.85",
            "min": "617.81",
            "n": "45",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "756.40",
            "p50": "721.60",
            "p95": "677.86",
            "p99": "710.75",
            "min": "657.16",
            "n": "45",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "760.50",
            "p50": "724.19",
            "p95": "620.04",
            "p99": "625.32",
            "min": "466.63",
            "n": "45",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2024.19",
            "p50": "1956.30",
            "p95": "1407.58",
            "p99": "1440.83",
            "min": "1018.41",
            "n": "57",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2339.41",
            "p50": "2242.22",
            "p95": "1893.94",
            "p99": "1632.07",
            "min": "1119.87",
            "n": "57",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.35",
            "p50": "71.76",
            "p95": "69.81",
            "p99": "70.24",
            "min": "68.29",
            "n": "51",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9988.43",
            "p50": "7524.80",
            "p95": "2447.08",
            "p99": "5525.91",
            "min": "2294.43",
            "n": "57",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.44",
            "p50": "71.83",
            "p95": "71.26",
            "p99": "71.48",
            "min": "70.48",
            "n": "48",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "222.82",
            "p50": "220.66",
            "p95": "207.96",
            "p99": "207.07",
            "min": "195.67",
            "n": "57",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "887.09",
            "p50": "864.64",
            "p95": "657.70",
            "p99": "693.40",
            "min": "466.04",
            "n": "45",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.35",
            "p50": "659.75",
            "p95": "634.05",
            "p99": "621.78",
            "min": "582.04",
            "n": "54",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2271.76",
            "p50": "2116.73",
            "p95": "959.88",
            "p99": "1362.55",
            "min": "704.16",
            "n": "57",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "15422.22",
            "p50": "8162.15",
            "p95": "2521.70",
            "p99": "7823.51",
            "min": "2321.00",
            "n": "57",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2068.00",
            "p50": "1997.53",
            "p95": "1443.58",
            "p99": "1247.40",
            "min": "653.17",
            "n": "57",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "73760.90",
            "p50": "8550.98",
            "p95": "2379.40",
            "p99": "31818.28",
            "min": "1446.03",
            "n": "57",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15518.39",
            "p50": "8127.29",
            "p95": "2210.70",
            "p99": "7689.52",
            "min": "2020.34",
            "n": "57",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "788.96",
            "p50": "672.20",
            "p95": "543.77",
            "p99": "617.66",
            "min": "477.50",
            "n": "54",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "987.99",
            "p50": "969.55",
            "p95": "926.89",
            "p99": "801.09",
            "min": "606.55",
            "n": "48",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "839.49",
            "p50": "821.78",
            "p95": "620.04",
            "p99": "687.39",
            "min": "529.07",
            "n": "48",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1200.02",
            "p50": "1167.22",
            "p95": "1026.12",
            "p99": "1013.45",
            "min": "841.23",
            "n": "51",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "746.37",
            "p50": "735.74",
            "p95": "699.13",
            "p99": "659.46",
            "min": "557.43",
            "n": "45",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1149.81",
            "p50": "1119.33",
            "p95": "998.36",
            "p99": "1015.97",
            "min": "906.47",
            "n": "54",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "892.13",
            "p50": "870.61",
            "p95": "767.46",
            "p99": "813.33",
            "min": "720.82",
            "n": "45",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "930.02",
            "p50": "904.81",
            "p95": "782.24",
            "p99": "791.20",
            "min": "663.06",
            "n": "51",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2342.60",
            "p50": "2031.94",
            "p95": "1825.41",
            "p99": "1920.58",
            "min": "1481.33",
            "n": "48",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "871.65",
            "p50": "854.37",
            "p95": "801.33",
            "p99": "748.04",
            "min": "619.40",
            "n": "48",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "86.84",
            "p50": "84.28",
            "p95": "74.45",
            "p99": "79.46",
            "min": "70.80",
            "n": "45",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "87.98",
            "p50": "85.77",
            "p95": "81.05",
            "p99": "83.64",
            "min": "78.55",
            "n": "45",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "87.53",
            "p50": "85.14",
            "p95": "78.94",
            "p99": "82.79",
            "min": "77.22",
            "n": "45",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "197.10",
            "p50": "189.90",
            "p95": "172.02",
            "p99": "144.18",
            "min": "100.87",
            "n": "54",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "92.12",
            "p50": "90.07",
            "p95": "86.01",
            "p99": "88.74",
            "min": "84.76",
            "n": "45",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.92",
            "p50": "108.75",
            "p95": "104.02",
            "p99": "106.27",
            "min": "101.42",
            "n": "48",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "125.49",
            "p50": "120.98",
            "p95": "103.42",
            "p99": "113.28",
            "min": "98.95",
            "n": "45",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "126.87",
            "p50": "122.95",
            "p95": "120.50",
            "p99": "123.68",
            "min": "119.95",
            "n": "45",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "97.41",
            "p50": "96.03",
            "p95": "93.34",
            "p99": "94.27",
            "min": "91.00",
            "n": "48",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.88",
            "p50": "95.61",
            "p95": "93.52",
            "p99": "94.07",
            "min": "89.60",
            "n": "45",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.33",
            "p50": "96.14",
            "p95": "93.40",
            "p99": "94.21",
            "min": "89.36",
            "n": "45",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.37",
            "p50": "123.08",
            "p95": "120.75",
            "p99": "123.20",
            "min": "119.48",
            "n": "45",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "121.85",
            "p50": "113.98",
            "p95": "106.47",
            "p99": "114.01",
            "min": "105.85",
            "n": "48",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "116.60",
            "p50": "115.27",
            "p95": "112.52",
            "p99": "111.92",
            "min": "106.42",
            "n": "45",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "88.35",
            "p50": "83.97",
            "p95": "79.83",
            "p99": "82.27",
            "min": "76.66",
            "n": "51",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "101.44",
            "p50": "100.09",
            "p95": "94.63",
            "p99": "99.72",
            "min": "94.58",
            "n": "24",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "74.15",
            "p50": "71.24",
            "p95": "67.01",
            "p99": "71.75",
            "min": "66.39",
            "n": "30",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "157.70",
            "p50": "126.95",
            "p95": "119.05",
            "p99": "149.19",
            "min": "119.03",
            "n": "21",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "109.36",
            "p50": "107.61",
            "p95": "106.50",
            "p99": "108.72",
            "min": "106.44",
            "n": "21",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "423.98",
            "p50": "411.79",
            "p95": "380.31",
            "p99": "379.53",
            "min": "347.33",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "485.72",
            "p50": "478.45",
            "p95": "459.55",
            "p99": "458.87",
            "min": "439.43",
            "n": "57",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "448.39",
            "p50": "436.21",
            "p95": "413.33",
            "p99": "422.96",
            "min": "404.55",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "453.77",
            "p50": "439.66",
            "p95": "407.76",
            "p99": "403.63",
            "min": "367.32",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "455.13",
            "p50": "439.42",
            "p95": "410.87",
            "p99": "424.13",
            "min": "398.76",
            "n": "54",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "469.30",
            "p50": "460.71",
            "p95": "442.59",
            "p99": "396.17",
            "min": "343.22",
            "n": "57",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "120.77",
            "p50": "115.84",
            "p95": "111.09",
            "p99": "115.00",
            "min": "108.24",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "121.82",
            "p50": "116.59",
            "p95": "112.03",
            "p99": "117.23",
            "min": "111.85",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "119.89",
            "p50": "114.37",
            "p95": "108.36",
            "p99": "114.41",
            "min": "107.98",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "103.56",
            "p50": "100.51",
            "p95": "95.89",
            "p99": "98.33",
            "min": "92.20",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.92",
            "p50": "86.03",
            "p95": "84.72",
            "p99": "84.09",
            "min": "81.47",
            "n": "51",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "117.52",
            "p50": "112.90",
            "p95": "106.22",
            "p99": "112.24",
            "min": "106.05",
            "n": "45",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "113.37",
            "p50": "108.07",
            "p95": "102.32",
            "p99": "108.15",
            "min": "102.02",
            "n": "45",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "112.80",
            "p50": "107.56",
            "p95": "100.67",
            "p99": "107.03",
            "min": "100.25",
            "n": "45",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "112.54",
            "p50": "107.77",
            "p95": "101.88",
            "p99": "107.35",
            "min": "101.27",
            "n": "45",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1582.94",
            "p50": "1411.81",
            "p95": "691.96",
            "p99": "929.19",
            "min": "455.77",
            "n": "57",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1532.29",
            "p50": "1349.98",
            "p95": "771.84",
            "p99": "748.09",
            "min": "180.22",
            "n": "57",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.98",
            "p50": "153.65",
            "p95": "142.30",
            "p99": "144.98",
            "min": "134.84",
            "n": "51",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3914.21",
            "p50": "3506.80",
            "p95": "1681.38",
            "p99": "2149.03",
            "min": "870.81",
            "n": "57",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "156.82",
            "p50": "153.74",
            "p95": "119.23",
            "p99": "129.10",
            "min": "100.25",
            "n": "48",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3916.19",
            "p50": "3458.85",
            "p95": "1482.79",
            "p99": "2380.09",
            "min": "1267.74",
            "n": "57",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.23",
            "p50": "96.73",
            "p95": "92.94",
            "p99": "94.46",
            "min": "90.03",
            "n": "45",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "188.41",
            "p50": "182.62",
            "p95": "178.81",
            "p99": "181.87",
            "min": "176.51",
            "n": "54",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "382.25",
            "p50": "297.41",
            "p95": "231.89",
            "p99": "281.03",
            "min": "207.74",
            "n": "57",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9552.79",
            "p50": "1654.24",
            "p95": "741.85",
            "p99": "4325.41",
            "min": "540.07",
            "n": "57",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "362.21",
            "p50": "288.60",
            "p95": "237.47",
            "p99": "285.14",
            "min": "229.34",
            "n": "57",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "25075.40",
            "p50": "8533.04",
            "p95": "2575.11",
            "p99": "11795.37",
            "min": "2178.79",
            "n": "57",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6054.42",
            "p50": "3263.98",
            "p95": "738.21",
            "p99": "2899.92",
            "min": "615.64",
            "n": "57",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "307.95",
            "p50": "240.44",
            "p95": "165.48",
            "p99": "215.54",
            "min": "139.93",
            "n": "54",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "151.88",
            "p50": "143.76",
            "p95": "118.86",
            "p99": "134.85",
            "min": "117.13",
            "n": "48",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "122.52",
            "p50": "117.82",
            "p95": "98.98",
            "p99": "109.30",
            "min": "95.55",
            "n": "48",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "129.98",
            "p50": "124.31",
            "p95": "116.37",
            "p99": "120.79",
            "min": "112.31",
            "n": "51",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "122.41",
            "p50": "120.52",
            "p95": "114.73",
            "p99": "118.24",
            "min": "113.34",
            "n": "45",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "157.28",
            "p50": "153.67",
            "p95": "145.98",
            "p99": "149.14",
            "min": "142.47",
            "n": "54",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "95.60",
            "p50": "93.92",
            "p95": "89.95",
            "p99": "91.32",
            "min": "86.30",
            "n": "45",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "114.97",
            "p50": "112.18",
            "p95": "108.95",
            "p99": "111.44",
            "min": "108.17",
            "n": "51",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1147.14",
            "p50": "1069.71",
            "p95": "705.50",
            "p99": "917.90",
            "min": "679.31",
            "n": "48",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "123.62",
            "p50": "119.81",
            "p95": "96.17",
            "p99": "109.29",
            "min": "94.38",
            "n": "48",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}