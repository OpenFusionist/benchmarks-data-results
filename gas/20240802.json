{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "170.02",
            "p50": "167.89",
            "p95": "159.37",
            "p99": "152.64",
            "min": "151.86",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "170.57",
            "p50": "168.35",
            "p95": "166.68",
            "p99": "165.15",
            "min": "165.08",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "169.62",
            "p50": "167.74",
            "p95": "163.20",
            "p99": "162.27",
            "min": "162.24",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "758.59",
            "p50": "745.92",
            "p95": "471.90",
            "p99": "420.80",
            "min": "408.51",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "403.46",
            "p50": "394.20",
            "p95": "384.27",
            "p99": "377.86",
            "min": "376.64",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "438.06",
            "p50": "428.34",
            "p95": "411.27",
            "p99": "391.82",
            "min": "388.46",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "324.04",
            "p50": "317.74",
            "p95": "308.16",
            "p99": "232.16",
            "min": "220.95",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "186.79",
            "p50": "184.52",
            "p95": "182.33",
            "p99": "175.83",
            "min": "175.69",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "266.58",
            "p50": "259.73",
            "p95": "242.74",
            "p99": "237.09",
            "min": "236.92",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "257.55",
            "p50": "254.43",
            "p95": "251.79",
            "p99": "247.49",
            "min": "247.43",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "259.81",
            "p50": "256.42",
            "p95": "253.64",
            "p99": "250.98",
            "min": "250.50",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "191.25",
            "p50": "187.98",
            "p95": "182.31",
            "p99": "175.04",
            "min": "175.03",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "319.99",
            "p50": "314.58",
            "p95": "302.42",
            "p99": "291.69",
            "min": "291.17",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "309.73",
            "p50": "304.61",
            "p95": "297.00",
            "p99": "292.20",
            "min": "292.04",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "111.10",
            "p50": "106.99",
            "p95": "104.76",
            "p99": "102.75",
            "min": "102.53",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "170.54",
            "p50": "167.94",
            "p95": "164.52",
            "p99": "166.07",
            "min": "163.66",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "295.17",
            "p50": "243.95",
            "p95": "230.48",
            "p99": "239.62",
            "min": "226.59",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "241.97",
            "p50": "193.74",
            "p95": "181.97",
            "p99": "207.43",
            "min": "181.38",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "167.20",
            "p50": "164.24",
            "p95": "163.10",
            "p99": "164.38",
            "min": "162.24",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "887.55",
            "p50": "821.87",
            "p95": "786.44",
            "p99": "769.79",
            "min": "769.77",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "846.26",
            "p50": "818.53",
            "p95": "785.12",
            "p99": "737.56",
            "min": "727.44",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1032.36",
            "p50": "939.77",
            "p95": "891.21",
            "p99": "860.09",
            "min": "859.09",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1078.83",
            "p50": "965.98",
            "p95": "923.49",
            "p99": "864.84",
            "min": "851.72",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1081.92",
            "p50": "974.06",
            "p95": "920.13",
            "p99": "891.71",
            "min": "885.93",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "852.82",
            "p50": "818.52",
            "p95": "790.10",
            "p99": "762.92",
            "min": "761.62",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "197.37",
            "p50": "186.15",
            "p95": "180.17",
            "p99": "176.81",
            "min": "176.64",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "196.64",
            "p50": "185.46",
            "p95": "175.31",
            "p99": "170.50",
            "min": "170.07",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "198.61",
            "p50": "186.47",
            "p95": "180.29",
            "p99": "178.13",
            "min": "177.78",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "222.62",
            "p50": "210.86",
            "p95": "206.70",
            "p99": "202.48",
            "min": "201.54",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.78",
            "p50": "87.10",
            "p95": "86.54",
            "p99": "85.10",
            "min": "85.06",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "344.68",
            "p50": "308.89",
            "p95": "292.07",
            "p99": "132.40",
            "min": "92.11",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "333.23",
            "p50": "298.28",
            "p95": "286.79",
            "p99": "265.23",
            "min": "264.69",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "332.16",
            "p50": "300.76",
            "p95": "291.59",
            "p99": "286.71",
            "min": "286.01",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "335.34",
            "p50": "300.46",
            "p95": "287.86",
            "p99": "151.84",
            "min": "116.77",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2386.64",
            "p50": "2258.20",
            "p95": "2030.60",
            "p99": "1057.56",
            "min": "424.78",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2306.07",
            "p50": "2190.27",
            "p95": "1987.77",
            "p99": "123.60",
            "min": "120.68",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "93.93",
            "p50": "93.00",
            "p95": "92.38",
            "p99": "90.60",
            "min": "89.95",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "5631.85",
            "p50": "5048.76",
            "p95": "2527.97",
            "p99": "1202.57",
            "min": "31.47",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "93.88",
            "p50": "93.03",
            "p95": "92.32",
            "p99": "91.79",
            "min": "91.75",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3192.96",
            "p50": "2969.05",
            "p95": "2478.93",
            "p99": "1696.63",
            "min": "1661.21",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "256.01",
            "p50": "251.95",
            "p95": "247.10",
            "p99": "171.56",
            "min": "153.21",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "539.72",
            "p50": "532.05",
            "p95": "520.71",
            "p99": "487.79",
            "min": "474.47",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1260.04",
            "p50": "1206.72",
            "p95": "384.63",
            "p99": "370.24",
            "min": "368.65",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "17775.01",
            "p50": "8167.91",
            "p95": "2662.96",
            "p99": "1568.47",
            "min": "1542.31",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1154.47",
            "p50": "1109.94",
            "p95": "344.88",
            "p99": "336.04",
            "min": "331.22",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "50166.38",
            "p50": "8675.79",
            "p95": "2615.98",
            "p99": "1755.51",
            "min": "1527.56",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "16601.63",
            "p50": "6847.96",
            "p95": "2742.14",
            "p99": "1821.45",
            "min": "1699.24",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "537.60",
            "p50": "489.25",
            "p95": "424.68",
            "p99": "371.04",
            "min": "357.40",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "517.60",
            "p50": "508.39",
            "p95": "496.70",
            "p99": "481.62",
            "min": "477.98",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "203.55",
            "p50": "201.15",
            "p95": "195.90",
            "p99": "186.36",
            "min": "185.94",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "436.91",
            "p50": "426.55",
            "p95": "416.75",
            "p99": "410.79",
            "min": "409.99",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "204.20",
            "p50": "201.57",
            "p95": "198.92",
            "p99": "195.29",
            "min": "195.10",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "329.20",
            "p50": "323.10",
            "p95": "314.95",
            "p99": "278.26",
            "min": "256.04",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "270.66",
            "p50": "266.44",
            "p95": "252.55",
            "p99": "244.39",
            "min": "243.61",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "515.20",
            "p50": "502.39",
            "p95": "488.77",
            "p99": "431.25",
            "min": "425.03",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1481.07",
            "p50": "1160.84",
            "p95": "859.01",
            "p99": "804.99",
            "min": "804.83",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "316.41",
            "p50": "309.71",
            "p95": "265.58",
            "p99": "263.48",
            "min": "263.36",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "87.97",
            "p50": "84.99",
            "p95": "77.02",
            "p99": "73.07",
            "min": "72.62",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "80.95",
            "p50": "77.90",
            "p95": "72.06",
            "p99": "69.15",
            "min": "68.85",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "82.27",
            "p50": "79.55",
            "p95": "72.81",
            "p99": "70.67",
            "min": "70.54",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "226.54",
            "p50": "210.21",
            "p95": "178.61",
            "p99": "159.86",
            "min": "156.75",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "172.15",
            "p50": "161.91",
            "p95": "140.58",
            "p99": "122.71",
            "min": "119.98",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "178.69",
            "p50": "167.16",
            "p95": "140.24",
            "p99": "118.54",
            "min": "113.73",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "173.26",
            "p50": "160.37",
            "p95": "135.65",
            "p99": "107.80",
            "min": "102.34",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "173.53",
            "p50": "160.58",
            "p95": "138.30",
            "p99": "111.68",
            "min": "106.44",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "196.64",
            "p50": "180.96",
            "p95": "158.49",
            "p99": "96.61",
            "min": "83.62",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "176.18",
            "p50": "161.82",
            "p95": "140.21",
            "p99": "114.38",
            "min": "111.12",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "194.28",
            "p50": "180.35",
            "p95": "150.81",
            "p99": "132.19",
            "min": "130.23",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "145.08",
            "p50": "137.29",
            "p95": "118.10",
            "p99": "114.10",
            "min": "113.55",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "215.67",
            "p50": "199.52",
            "p95": "167.97",
            "p99": "139.13",
            "min": "130.72",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "175.41",
            "p50": "161.88",
            "p95": "141.19",
            "p99": "121.27",
            "min": "119.38",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "67.95",
            "p50": "65.05",
            "p95": "61.16",
            "p99": "59.53",
            "min": "59.50",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "136.76",
            "p50": "130.20",
            "p95": "118.45",
            "p99": "118.90",
            "min": "109.28",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "413.50",
            "p50": "325.94",
            "p95": "267.51",
            "p99": "285.63",
            "min": "255.63",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "175.04",
            "p50": "142.43",
            "p95": "134.77",
            "p99": "151.94",
            "min": "134.52",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "131.34",
            "p50": "122.34",
            "p95": "109.62",
            "p99": "114.81",
            "min": "102.33",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1191.94",
            "p50": "915.55",
            "p95": "530.54",
            "p99": "443.04",
            "min": "438.71",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1040.68",
            "p50": "828.31",
            "p95": "525.56",
            "p99": "406.95",
            "min": "406.27",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1405.60",
            "p50": "1028.14",
            "p95": "604.13",
            "p99": "448.06",
            "min": "435.95",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1296.72",
            "p50": "1021.07",
            "p95": "529.25",
            "p99": "448.24",
            "min": "445.25",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1263.11",
            "p50": "984.49",
            "p95": "554.86",
            "p99": "426.21",
            "min": "406.54",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1070.70",
            "p50": "835.63",
            "p95": "554.32",
            "p99": "435.06",
            "min": "423.05",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "683.45",
            "p50": "553.89",
            "p95": "402.18",
            "p99": "343.99",
            "min": "341.00",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "669.52",
            "p50": "525.35",
            "p95": "369.04",
            "p99": "340.74",
            "min": "336.55",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "685.04",
            "p50": "542.68",
            "p95": "382.56",
            "p99": "355.61",
            "min": "355.11",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "709.26",
            "p50": "574.47",
            "p95": "368.05",
            "p99": "291.73",
            "min": "290.63",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "292.55",
            "p50": "263.06",
            "p95": "211.02",
            "p99": "193.38",
            "min": "191.60",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "580.58",
            "p50": "459.43",
            "p95": "373.32",
            "p99": "265.29",
            "min": "244.54",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "580.07",
            "p50": "480.02",
            "p95": "328.51",
            "p99": "284.98",
            "min": "276.50",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "609.97",
            "p50": "484.86",
            "p95": "330.48",
            "p99": "284.80",
            "min": "282.62",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "601.77",
            "p50": "493.44",
            "p95": "341.75",
            "p99": "249.87",
            "min": "235.15",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.95",
            "p50": "101.81",
            "p95": "93.46",
            "p99": "84.95",
            "min": "81.70",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.22",
            "p50": "102.27",
            "p95": "91.26",
            "p99": "79.65",
            "min": "78.28",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.01",
            "p50": "95.25",
            "p95": "86.14",
            "p99": "77.55",
            "min": "74.95",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "254.96",
            "p50": "235.80",
            "p95": "185.56",
            "p99": "154.77",
            "min": "154.13",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.93",
            "p50": "94.56",
            "p95": "85.24",
            "p99": "82.68",
            "min": "82.37",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "245.62",
            "p50": "229.23",
            "p95": "191.08",
            "p99": "157.90",
            "min": "146.31",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "195.02",
            "p50": "181.64",
            "p95": "158.60",
            "p99": "140.91",
            "min": "138.78",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "201.21",
            "p50": "184.83",
            "p95": "159.76",
            "p99": "147.58",
            "min": "147.18",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "468.50",
            "p50": "411.36",
            "p95": "300.71",
            "p99": "281.27",
            "min": "279.69",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5079.25",
            "p50": "2223.50",
            "p95": "1116.99",
            "p99": "768.54",
            "min": "735.43",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "447.95",
            "p50": "395.08",
            "p95": "302.83",
            "p99": "268.58",
            "min": "266.34",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "17731.64",
            "p50": "4089.53",
            "p95": "1366.72",
            "p99": "1125.52",
            "min": "1089.27",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3060.00",
            "p50": "1809.95",
            "p95": "710.35",
            "p99": "538.05",
            "min": "515.51",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "230.77",
            "p50": "209.59",
            "p95": "175.65",
            "p99": "169.40",
            "min": "169.31",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "246.39",
            "p50": "227.45",
            "p95": "185.50",
            "p99": "173.34",
            "min": "173.03",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "92.42",
            "p50": "88.61",
            "p95": "81.39",
            "p99": "77.21",
            "min": "76.87",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "224.23",
            "p50": "206.78",
            "p95": "169.89",
            "p99": "88.25",
            "min": "82.77",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "172.59",
            "p50": "162.46",
            "p95": "137.79",
            "p99": "132.35",
            "min": "131.59",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "201.69",
            "p50": "187.47",
            "p95": "158.34",
            "p99": "139.71",
            "min": "132.87",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "194.16",
            "p50": "182.54",
            "p95": "155.96",
            "p99": "146.40",
            "min": "145.94",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "197.12",
            "p50": "183.93",
            "p95": "156.41",
            "p99": "147.17",
            "min": "147.00",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1123.18",
            "p50": "921.28",
            "p95": "610.10",
            "p99": "530.35",
            "min": "528.63",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "177.89",
            "p50": "166.97",
            "p95": "119.74",
            "p99": "111.37",
            "min": "110.73",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.72",
            "p50": "189.36",
            "p95": "173.39",
            "p99": "162.83",
            "min": "162.72",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.35",
            "p50": "188.88",
            "p95": "170.73",
            "p99": "162.55",
            "min": "161.26",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.12",
            "p50": "190.30",
            "p95": "174.31",
            "p99": "161.84",
            "min": "160.08",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1190.06",
            "p50": "1085.57",
            "p95": "706.17",
            "p99": "527.80",
            "min": "527.25",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "704.74",
            "p50": "640.78",
            "p95": "450.87",
            "p99": "406.18",
            "min": "404.03",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "810.27",
            "p50": "739.02",
            "p95": "584.63",
            "p99": "465.75",
            "min": "446.26",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "751.47",
            "p50": "689.68",
            "p95": "493.06",
            "p99": "417.42",
            "min": "414.65",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "265.19",
            "p50": "254.36",
            "p95": "226.06",
            "p99": "206.01",
            "min": "205.87",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "917.30",
            "p50": "783.68",
            "p95": "551.40",
            "p99": "480.19",
            "min": "476.17",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "872.43",
            "p50": "773.66",
            "p95": "554.54",
            "p99": "443.27",
            "min": "436.80",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "872.48",
            "p50": "786.24",
            "p95": "569.05",
            "p99": "447.77",
            "min": "446.64",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "286.90",
            "p50": "275.57",
            "p95": "241.15",
            "p99": "221.54",
            "min": "221.09",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "652.55",
            "p50": "612.20",
            "p95": "437.13",
            "p99": "388.11",
            "min": "386.89",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "860.04",
            "p50": "740.84",
            "p95": "513.68",
            "p99": "446.58",
            "min": "436.67",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "111.84",
            "p50": "106.81",
            "p95": "101.90",
            "p99": "95.78",
            "min": "95.54",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "96.57",
            "p50": "94.07",
            "p95": "90.12",
            "p99": "90.56",
            "min": "87.32",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "415.30",
            "p50": "384.33",
            "p95": "310.32",
            "p99": "316.38",
            "min": "293.18",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "131.58",
            "p50": "103.01",
            "p95": "96.36",
            "p99": "111.10",
            "min": "95.65",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "90.99",
            "p50": "86.80",
            "p95": "83.69",
            "p99": "86.41",
            "min": "82.96",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1694.65",
            "p50": "1487.56",
            "p95": "830.58",
            "p99": "667.87",
            "min": "604.94",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1638.84",
            "p50": "1458.92",
            "p95": "780.53",
            "p99": "595.21",
            "min": "570.82",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2024.79",
            "p50": "1664.92",
            "p95": "866.07",
            "p99": "640.88",
            "min": "638.22",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2002.08",
            "p50": "1764.82",
            "p95": "987.06",
            "p99": "652.45",
            "min": "641.78",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2001.96",
            "p50": "1571.43",
            "p95": "870.62",
            "p99": "643.76",
            "min": "641.31",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1654.55",
            "p50": "1409.75",
            "p95": "792.63",
            "p99": "602.44",
            "min": "596.45",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "632.99",
            "p50": "563.48",
            "p95": "453.42",
            "p99": "372.18",
            "min": "368.86",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "632.34",
            "p50": "557.92",
            "p95": "416.63",
            "p99": "377.96",
            "min": "377.45",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "631.15",
            "p50": "567.58",
            "p95": "467.39",
            "p99": "383.53",
            "min": "383.21",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "651.39",
            "p50": "576.75",
            "p95": "474.94",
            "p99": "399.29",
            "min": "385.06",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.11",
            "p50": "86.13",
            "p95": "81.52",
            "p99": "79.99",
            "min": "79.92",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "572.52",
            "p50": "518.04",
            "p95": "393.97",
            "p99": "360.70",
            "min": "360.55",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "538.63",
            "p50": "489.96",
            "p95": "390.51",
            "p99": "356.23",
            "min": "356.22",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "541.85",
            "p50": "487.91",
            "p95": "400.43",
            "p99": "361.37",
            "min": "359.10",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "545.77",
            "p50": "479.60",
            "p95": "398.85",
            "p99": "351.93",
            "min": "351.34",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1356.69",
            "p50": "1236.24",
            "p95": "797.06",
            "p99": "591.41",
            "min": "569.95",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1661.67",
            "p50": "1456.29",
            "p95": "810.78",
            "p99": "674.47",
            "min": "637.04",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.09",
            "p50": "71.36",
            "p95": "68.39",
            "p99": "67.13",
            "min": "66.81",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "8873.93",
            "p50": "4459.11",
            "p95": "2323.21",
            "p99": "1973.75",
            "min": "1769.26",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.19",
            "p50": "71.45",
            "p95": "68.47",
            "p99": "67.39",
            "min": "67.23",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "221.55",
            "p50": "215.62",
            "p95": "192.88",
            "p99": "180.03",
            "min": "176.93",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "870.44",
            "p50": "752.54",
            "p95": "573.85",
            "p99": "487.09",
            "min": "471.16",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.30",
            "p50": "634.64",
            "p95": "466.13",
            "p99": "392.96",
            "min": "389.85",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1131.17",
            "p50": "1009.15",
            "p95": "717.89",
            "p99": "610.75",
            "min": "606.49",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "26457.56",
            "p50": "8849.55",
            "p95": "2584.88",
            "p99": "1649.22",
            "min": "1636.83",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1136.03",
            "p50": "1015.05",
            "p95": "715.81",
            "p99": "654.14",
            "min": "648.78",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "60180.21",
            "p50": "9473.33",
            "p95": "2773.66",
            "p99": "1964.53",
            "min": "1770.69",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14318.20",
            "p50": "5731.68",
            "p95": "1175.38",
            "p99": "797.62",
            "min": "786.98",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "567.30",
            "p50": "496.83",
            "p95": "402.11",
            "p99": "365.20",
            "min": "350.56",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "985.52",
            "p50": "904.41",
            "p95": "590.78",
            "p99": "513.18",
            "min": "510.13",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "286.88",
            "p50": "276.17",
            "p95": "237.36",
            "p99": "225.15",
            "min": "222.77",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1211.45",
            "p50": "1091.18",
            "p95": "638.92",
            "p99": "612.02",
            "min": "609.74",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "265.05",
            "p50": "254.47",
            "p95": "225.62",
            "p99": "185.01",
            "min": "178.96",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "537.90",
            "p50": "514.25",
            "p95": "396.41",
            "p99": "338.69",
            "min": "337.87",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "833.83",
            "p50": "750.03",
            "p95": "574.88",
            "p99": "482.27",
            "min": "473.34",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "917.18",
            "p50": "834.57",
            "p95": "582.37",
            "p99": "492.37",
            "min": "464.00",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2292.80",
            "p50": "1928.86",
            "p95": "1110.39",
            "p99": "951.48",
            "min": "942.80",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "893.84",
            "p50": "823.50",
            "p95": "544.26",
            "p99": "471.29",
            "min": "462.97",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "81.72",
            "p50": "78.95",
            "p95": "71.05",
            "p99": "68.17",
            "min": "68.12",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "75.27",
            "p50": "72.94",
            "p95": "66.20",
            "p99": "58.73",
            "min": "57.84",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "76.28",
            "p50": "73.60",
            "p95": "68.70",
            "p99": "65.20",
            "min": "64.98",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "209.81",
            "p50": "192.68",
            "p95": "152.88",
            "p99": "140.22",
            "min": "140.00",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.79",
            "p50": "97.90",
            "p95": "87.20",
            "p99": "77.74",
            "min": "77.63",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.34",
            "p50": "103.27",
            "p95": "88.76",
            "p99": "78.20",
            "min": "76.77",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "139.90",
            "p50": "131.55",
            "p95": "113.67",
            "p99": "103.46",
            "min": "102.48",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "140.62",
            "p50": "132.87",
            "p95": "112.08",
            "p99": "84.85",
            "min": "78.49",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "186.19",
            "p50": "169.83",
            "p95": "140.35",
            "p99": "123.88",
            "min": "121.33",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "182.41",
            "p50": "170.98",
            "p95": "134.03",
            "p99": "113.95",
            "min": "112.35",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "183.66",
            "p50": "170.89",
            "p95": "138.65",
            "p99": "123.04",
            "min": "122.57",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.78",
            "p50": "120.76",
            "p95": "106.67",
            "p99": "100.00",
            "min": "99.13",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "204.09",
            "p50": "186.59",
            "p95": "153.27",
            "p99": "140.46",
            "min": "138.84",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "187.13",
            "p50": "173.71",
            "p95": "132.52",
            "p99": "122.80",
            "min": "122.63",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "70.78",
            "p50": "67.17",
            "p95": "61.47",
            "p99": "57.48",
            "min": "56.66",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "130.66",
            "p50": "122.26",
            "p95": "105.23",
            "p99": "108.15",
            "min": "96.03",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "211.17",
            "p50": "188.93",
            "p95": "153.98",
            "p99": "146.59",
            "min": "131.44",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "152.00",
            "p50": "137.37",
            "p95": "122.90",
            "p99": "134.76",
            "min": "121.75",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "125.00",
            "p50": "116.35",
            "p95": "97.94",
            "p99": "108.97",
            "min": "96.88",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1027.01",
            "p50": "702.43",
            "p95": "358.32",
            "p99": "290.31",
            "min": "277.49",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1010.22",
            "p50": "709.23",
            "p95": "387.54",
            "p99": "298.15",
            "min": "285.70",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1153.14",
            "p50": "769.83",
            "p95": "389.54",
            "p99": "238.74",
            "min": "228.10",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1073.67",
            "p50": "731.61",
            "p95": "368.99",
            "p99": "299.03",
            "min": "296.27",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1011.76",
            "p50": "712.77",
            "p95": "358.06",
            "p99": "267.07",
            "min": "262.86",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1022.29",
            "p50": "706.59",
            "p95": "362.44",
            "p99": "266.74",
            "min": "250.92",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "339.89",
            "p50": "297.44",
            "p95": "228.80",
            "p99": "197.60",
            "min": "196.57",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "331.91",
            "p50": "291.96",
            "p95": "212.66",
            "p99": "175.91",
            "min": "175.29",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "331.60",
            "p50": "292.96",
            "p95": "238.93",
            "p99": "206.63",
            "min": "203.64",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "364.05",
            "p50": "322.98",
            "p95": "244.20",
            "p99": "176.28",
            "min": "170.86",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "282.70",
            "p50": "251.93",
            "p95": "192.68",
            "p99": "151.36",
            "min": "150.66",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "289.11",
            "p50": "257.01",
            "p95": "198.01",
            "p99": "169.35",
            "min": "169.10",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "284.58",
            "p50": "252.78",
            "p95": "201.70",
            "p99": "183.95",
            "min": "182.98",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "294.71",
            "p50": "255.46",
            "p95": "198.00",
            "p99": "153.17",
            "min": "151.00",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "292.87",
            "p50": "256.59",
            "p95": "202.31",
            "p99": "159.81",
            "min": "159.64",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.41",
            "p50": "100.14",
            "p95": "90.03",
            "p99": "86.35",
            "min": "85.95",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.72",
            "p50": "99.95",
            "p95": "89.19",
            "p99": "83.71",
            "min": "83.19",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.57",
            "p50": "93.40",
            "p95": "84.14",
            "p99": "75.02",
            "min": "74.46",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "249.28",
            "p50": "223.42",
            "p95": "174.30",
            "p99": "165.85",
            "min": "164.19",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "96.91",
            "p50": "92.78",
            "p95": "80.46",
            "p99": "75.78",
            "min": "75.30",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "242.46",
            "p50": "218.63",
            "p95": "164.68",
            "p99": "142.12",
            "min": "141.82",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "186.10",
            "p50": "171.74",
            "p95": "144.80",
            "p99": "120.13",
            "min": "118.86",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "153.94",
            "p50": "143.49",
            "p95": "120.30",
            "p99": "70.98",
            "min": "40.83",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "437.84",
            "p50": "361.07",
            "p95": "235.57",
            "p99": "191.25",
            "min": "188.60",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4405.85",
            "p50": "1451.55",
            "p95": "496.29",
            "p99": "281.90",
            "min": "273.59",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "438.55",
            "p50": "364.72",
            "p95": "235.25",
            "p99": "166.20",
            "min": "143.83",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "10449.69",
            "p50": "1930.25",
            "p95": "612.13",
            "p99": "434.75",
            "min": "396.69",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2680.27",
            "p50": "1111.65",
            "p95": "437.17",
            "p99": "305.38",
            "min": "282.13",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "205.16",
            "p50": "185.73",
            "p95": "148.42",
            "p99": "129.54",
            "min": "123.94",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "232.12",
            "p50": "210.01",
            "p95": "167.60",
            "p99": "146.75",
            "min": "145.92",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "128.18",
            "p50": "120.84",
            "p95": "107.36",
            "p99": "97.80",
            "min": "95.92",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "207.78",
            "p50": "189.78",
            "p95": "147.69",
            "p99": "125.08",
            "min": "122.25",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "139.94",
            "p50": "131.77",
            "p95": "113.68",
            "p99": "107.21",
            "min": "106.78",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "173.81",
            "p50": "161.29",
            "p95": "128.63",
            "p99": "112.55",
            "min": "108.21",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "183.88",
            "p50": "171.26",
            "p95": "138.82",
            "p99": "126.83",
            "min": "126.45",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "185.77",
            "p50": "171.96",
            "p95": "139.70",
            "p99": "129.44",
            "min": "126.26",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "284.22",
            "p50": "223.10",
            "p95": "137.53",
            "p99": "133.12",
            "min": "125.16",
            "n": "94",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "142.34",
            "p50": "133.65",
            "p95": "105.09",
            "p99": "108.54",
            "min": "96.04",
            "n": "72",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "89.62",
            "p50": "86.24",
            "p95": "81.04",
            "p99": "77.27",
            "min": "77.18",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "90.80",
            "p50": "87.70",
            "p95": "82.51",
            "p99": "77.53",
            "min": "77.26",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "90.31",
            "p50": "86.83",
            "p95": "84.51",
            "p99": "81.65",
            "min": "81.28",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "189.76",
            "p50": "187.25",
            "p95": "178.40",
            "p99": "175.05",
            "min": "174.92",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "93.33",
            "p50": "91.54",
            "p95": "87.16",
            "p99": "82.99",
            "min": "82.76",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "116.34",
            "p50": "111.03",
            "p95": "105.38",
            "p99": "101.83",
            "min": "101.18",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "122.41",
            "p50": "120.34",
            "p95": "104.72",
            "p99": "100.31",
            "min": "99.88",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "127.24",
            "p50": "123.83",
            "p95": "120.53",
            "p99": "115.15",
            "min": "115.08",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "97.03",
            "p50": "95.97",
            "p95": "93.83",
            "p99": "92.87",
            "min": "92.81",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.76",
            "p50": "96.20",
            "p95": "93.38",
            "p99": "85.02",
            "min": "83.56",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "97.89",
            "p50": "96.20",
            "p95": "94.67",
            "p99": "88.04",
            "min": "87.50",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "125.60",
            "p50": "122.28",
            "p95": "119.28",
            "p99": "115.67",
            "min": "115.50",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "121.11",
            "p50": "119.26",
            "p95": "108.33",
            "p99": "106.39",
            "min": "106.03",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "115.19",
            "p50": "113.09",
            "p95": "110.17",
            "p99": "104.03",
            "min": "103.71",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "76.07",
            "p50": "73.13",
            "p95": "69.44",
            "p99": "64.83",
            "min": "64.54",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "99.12",
            "p50": "98.16",
            "p95": "96.56",
            "p99": "93.20",
            "min": "90.02",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "61.52",
            "p50": "60.00",
            "p95": "57.18",
            "p99": "55.86",
            "min": "54.53",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "159.20",
            "p50": "127.90",
            "p95": "119.42",
            "p99": "135.92",
            "min": "118.37",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "110.23",
            "p50": "108.36",
            "p95": "107.73",
            "p99": "108.24",
            "min": "106.74",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "384.48",
            "p50": "368.25",
            "p95": "347.09",
            "p99": "318.01",
            "min": "316.69",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "512.36",
            "p50": "484.97",
            "p95": "459.82",
            "p99": "409.24",
            "min": "390.60",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "382.59",
            "p50": "368.54",
            "p95": "343.74",
            "p99": "290.41",
            "min": "286.31",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "383.44",
            "p50": "372.80",
            "p95": "345.82",
            "p99": "298.70",
            "min": "298.02",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "384.62",
            "p50": "373.71",
            "p95": "346.59",
            "p99": "310.79",
            "min": "298.27",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "471.80",
            "p50": "449.81",
            "p95": "428.72",
            "p99": "369.16",
            "min": "359.00",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "97.26",
            "p50": "94.62",
            "p95": "90.80",
            "p99": "88.85",
            "min": "88.45",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "97.61",
            "p50": "95.50",
            "p95": "91.06",
            "p99": "89.67",
            "min": "89.36",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "96.57",
            "p50": "94.12",
            "p95": "90.01",
            "p99": "89.46",
            "min": "89.46",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "88.94",
            "p50": "86.73",
            "p95": "83.74",
            "p99": "80.27",
            "min": "79.49",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.96",
            "p50": "86.41",
            "p95": "85.65",
            "p99": "83.48",
            "min": "83.02",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "90.63",
            "p50": "88.02",
            "p95": "83.37",
            "p99": "82.55",
            "min": "82.49",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "86.02",
            "p50": "83.60",
            "p95": "79.47",
            "p99": "78.70",
            "min": "78.69",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "86.01",
            "p50": "83.46",
            "p95": "79.17",
            "p99": "77.45",
            "min": "77.41",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "86.05",
            "p50": "83.58",
            "p95": "79.13",
            "p99": "78.80",
            "min": "78.80",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1337.12",
            "p50": "1221.49",
            "p95": "865.79",
            "p99": "482.55",
            "min": "301.06",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1313.38",
            "p50": "1205.80",
            "p95": "847.47",
            "p99": "436.05",
            "min": "425.78",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "90.13",
            "p50": "89.33",
            "p95": "82.16",
            "p99": "75.07",
            "min": "74.81",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "2045.19",
            "p50": "1785.22",
            "p95": "896.75",
            "p99": "608.63",
            "min": "528.67",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "90.21",
            "p50": "89.37",
            "p95": "86.76",
            "p99": "81.93",
            "min": "81.17",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "1644.75",
            "p50": "1481.17",
            "p95": "761.86",
            "p99": "659.28",
            "min": "658.36",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "97.47",
            "p50": "96.70",
            "p95": "94.54",
            "p99": "89.25",
            "min": "88.61",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "189.73",
            "p50": "183.15",
            "p95": "166.54",
            "p99": "158.29",
            "min": "152.91",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "411.65",
            "p50": "358.82",
            "p95": "273.94",
            "p99": "233.76",
            "min": "210.51",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7107.19",
            "p50": "2317.79",
            "p95": "956.64",
            "p99": "713.60",
            "min": "671.03",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "440.85",
            "p50": "380.25",
            "p95": "308.00",
            "p99": "259.00",
            "min": "255.35",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "30128.16",
            "p50": "9575.55",
            "p95": "2727.85",
            "p99": "2270.81",
            "min": "1980.21",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4568.50",
            "p50": "3066.44",
            "p95": "1295.32",
            "p99": "488.52",
            "min": "459.01",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "360.83",
            "p50": "326.90",
            "p95": "251.98",
            "p99": "234.84",
            "min": "230.36",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "155.40",
            "p50": "146.72",
            "p95": "121.37",
            "p99": "96.16",
            "min": "95.67",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "126.95",
            "p50": "115.04",
            "p95": "108.82",
            "p99": "101.69",
            "min": "101.56",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "139.06",
            "p50": "135.61",
            "p95": "121.97",
            "p99": "116.51",
            "min": "115.72",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "126.19",
            "p50": "122.27",
            "p95": "115.29",
            "p99": "112.11",
            "min": "111.94",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "176.41",
            "p50": "170.59",
            "p95": "115.23",
            "p99": "114.87",
            "min": "114.84",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "94.53",
            "p50": "93.34",
            "p95": "91.56",
            "p99": "90.06",
            "min": "89.95",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "119.52",
            "p50": "113.72",
            "p95": "110.63",
            "p99": "107.82",
            "min": "106.79",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "904.09",
            "p50": "831.90",
            "p95": "321.56",
            "p99": "314.58",
            "min": "314.01",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "125.97",
            "p50": "122.92",
            "p95": "114.46",
            "p99": "108.46",
            "min": "108.22",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}