{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "113.77",
            "p50": "109.30",
            "p95": "94.86",
            "p99": "104.31",
            "min": "93.20",
            "n": "45",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1090.82",
            "p50": "884.94",
            "p95": "610.95",
            "p99": "859.20",
            "min": "587.29",
            "n": "45",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "114.55",
            "p50": "109.59",
            "p95": "98.92",
            "p99": "107.10",
            "min": "98.36",
            "n": "45",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "993.25",
            "p50": "898.14",
            "p95": "622.89",
            "p99": "748.04",
            "min": "547.41",
            "n": "54",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "473.75",
            "p50": "434.89",
            "p95": "358.11",
            "p99": "400.40",
            "min": "314.29",
            "n": "45",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "459.66",
            "p50": "429.09",
            "p95": "345.98",
            "p99": "401.39",
            "min": "340.75",
            "n": "48",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "416.24",
            "p50": "378.58",
            "p95": "238.92",
            "p99": "331.63",
            "min": "232.29",
            "n": "45",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "423.06",
            "p50": "385.11",
            "p95": "318.55",
            "p99": "372.77",
            "min": "313.73",
            "n": "45",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "407.22",
            "p50": "380.71",
            "p95": "305.10",
            "p99": "345.78",
            "min": "281.83",
            "n": "48",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "701.91",
            "p50": "582.89",
            "p95": "420.46",
            "p99": "559.91",
            "min": "393.20",
            "n": "45",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "702.75",
            "p50": "592.68",
            "p95": "474.67",
            "p99": "582.76",
            "min": "441.90",
            "n": "45",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "653.32",
            "p50": "576.75",
            "p95": "436.49",
            "p99": "530.67",
            "min": "386.69",
            "n": "45",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "386.53",
            "p50": "361.87",
            "p95": "302.89",
            "p99": "340.00",
            "min": "291.56",
            "n": "48",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "418.37",
            "p50": "381.77",
            "p95": "318.05",
            "p99": "371.35",
            "min": "316.14",
            "n": "45",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8161.21",
            "p50": "3782.20",
            "p95": "2094.18",
            "p99": "4707.11",
            "min": "1518.71",
            "n": "51",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2826.82",
            "p50": "1641.43",
            "p95": "857.74",
            "p99": "2333.15",
            "min": "852.12",
            "n": "24",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "316.32",
            "p50": "296.81",
            "p95": "246.80",
            "p99": "294.77",
            "min": "246.79",
            "n": "30",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1415.92",
            "p50": "682.15",
            "p95": "347.88",
            "p99": "1179.88",
            "min": "343.02",
            "n": "21",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7317.00",
            "p50": "3628.31",
            "p95": "1366.70",
            "p99": "6006.84",
            "min": "1361.73",
            "n": "21",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "814.34",
            "p50": "702.99",
            "p95": "495.33",
            "p99": "601.84",
            "min": "447.97",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "807.57",
            "p50": "735.58",
            "p95": "554.84",
            "p99": "574.74",
            "min": "406.14",
            "n": "57",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "920.75",
            "p50": "783.51",
            "p95": "575.20",
            "p99": "676.46",
            "min": "499.55",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2374.00",
            "p50": "1875.39",
            "p95": "1167.99",
            "p99": "1465.22",
            "min": "807.13",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2333.09",
            "p50": "1956.26",
            "p95": "1097.77",
            "p99": "1449.55",
            "min": "726.66",
            "n": "54",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "799.51",
            "p50": "746.95",
            "p95": "546.44",
            "p99": "588.10",
            "min": "435.01",
            "n": "57",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "161.28",
            "p50": "150.24",
            "p95": "142.24",
            "p99": "148.39",
            "min": "133.25",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "533.46",
            "p50": "480.77",
            "p95": "369.57",
            "p99": "439.19",
            "min": "328.53",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "161.13",
            "p50": "150.86",
            "p95": "140.85",
            "p99": "149.20",
            "min": "135.20",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "177.55",
            "p50": "168.48",
            "p95": "151.00",
            "p99": "162.90",
            "min": "145.69",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "31322.70",
            "p50": "7641.00",
            "p95": "2006.32",
            "p99": "15394.58",
            "min": "691.69",
            "n": "51",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "397.86",
            "p50": "345.81",
            "p95": "285.07",
            "p99": "341.82",
            "min": "276.03",
            "n": "45",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "369.74",
            "p50": "345.65",
            "p95": "288.64",
            "p99": "328.10",
            "min": "279.22",
            "n": "45",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "379.45",
            "p50": "344.77",
            "p95": "271.24",
            "p99": "326.82",
            "min": "265.03",
            "n": "45",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "377.90",
            "p50": "341.72",
            "p95": "303.98",
            "p99": "341.69",
            "min": "299.17",
            "n": "45",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "14499.58",
            "p50": "5737.58",
            "p95": "2353.88",
            "p99": "7406.70",
            "min": "2270.48",
            "n": "57",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "16658.71",
            "p50": "5605.04",
            "p95": "2433.86",
            "p99": "8175.95",
            "min": "2033.26",
            "n": "57",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "15215.61",
            "p50": "4928.53",
            "p95": "2388.97",
            "p99": "8338.20",
            "min": "1989.82",
            "n": "51",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "15546.30",
            "p50": "6287.87",
            "p95": "2474.23",
            "p99": "6651.75",
            "min": "210.86",
            "n": "57",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "15647.99",
            "p50": "4867.89",
            "p95": "2354.33",
            "p99": "9104.00",
            "min": "2292.91",
            "n": "48",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "15856.33",
            "p50": "5631.85",
            "p95": "2402.16",
            "p99": "7948.61",
            "min": "2222.33",
            "n": "57",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "694.87",
            "p50": "617.34",
            "p95": "448.13",
            "p99": "572.65",
            "min": "429.17",
            "n": "45",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "603.12",
            "p50": "478.20",
            "p95": "361.89",
            "p99": "458.78",
            "min": "340.69",
            "n": "54",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1394.59",
            "p50": "1191.22",
            "p95": "306.95",
            "p99": "732.74",
            "min": "253.48",
            "n": "57",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "20116.91",
            "p50": "7732.79",
            "p95": "2354.80",
            "p99": "9279.72",
            "min": "1432.10",
            "n": "57",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1339.80",
            "p50": "1198.09",
            "p95": "694.59",
            "p99": "896.90",
            "min": "576.18",
            "n": "57",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "53864.13",
            "p50": "8695.06",
            "p95": "2447.92",
            "p99": "23660.26",
            "min": "1788.50",
            "n": "57",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "11917.61",
            "p50": "5945.87",
            "p95": "2163.04",
            "p99": "6196.49",
            "min": "2053.60",
            "n": "57",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "575.32",
            "p50": "497.61",
            "p95": "390.38",
            "p99": "472.23",
            "min": "387.89",
            "n": "54",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "556.67",
            "p50": "510.61",
            "p95": "405.38",
            "p99": "460.39",
            "min": "360.18",
            "n": "48",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "636.11",
            "p50": "557.96",
            "p95": "444.02",
            "p99": "525.62",
            "min": "410.62",
            "n": "48",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "641.48",
            "p50": "602.87",
            "p95": "434.26",
            "p99": "504.69",
            "min": "378.42",
            "n": "51",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "650.43",
            "p50": "560.75",
            "p95": "451.87",
            "p99": "540.78",
            "min": "412.07",
            "n": "45",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "937.80",
            "p50": "817.86",
            "p95": "594.46",
            "p99": "711.16",
            "min": "525.73",
            "n": "54",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "688.61",
            "p50": "601.33",
            "p95": "450.23",
            "p99": "558.34",
            "min": "405.42",
            "n": "45",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "728.27",
            "p50": "644.61",
            "p95": "437.73",
            "p99": "555.45",
            "min": "395.92",
            "n": "51",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1555.32",
            "p50": "1349.20",
            "p95": "956.79",
            "p99": "1210.97",
            "min": "852.56",
            "n": "48",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "677.25",
            "p50": "593.35",
            "p95": "439.75",
            "p99": "530.38",
            "min": "377.52",
            "n": "48",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "140.34",
            "p50": "135.85",
            "p95": "125.32",
            "p99": "130.54",
            "min": "119.03",
            "n": "45",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "139.51",
            "p50": "138.41",
            "p95": "129.14",
            "p99": "133.43",
            "min": "126.30",
            "n": "45",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "140.28",
            "p50": "136.50",
            "p95": "126.76",
            "p99": "132.99",
            "min": "124.43",
            "n": "45",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "239.80",
            "p50": "234.52",
            "p95": "210.44",
            "p99": "212.28",
            "min": "189.77",
            "n": "54",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "190.44",
            "p50": "187.64",
            "p95": "165.70",
            "p99": "178.81",
            "min": "165.16",
            "n": "45",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "202.88",
            "p50": "197.32",
            "p95": "180.15",
            "p99": "187.55",
            "min": "171.59",
            "n": "48",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "183.01",
            "p50": "173.65",
            "p95": "157.51",
            "p99": "170.21",
            "min": "155.18",
            "n": "45",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "191.80",
            "p50": "180.00",
            "p95": "161.55",
            "p99": "172.52",
            "min": "149.89",
            "n": "45",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "213.55",
            "p50": "202.18",
            "p95": "185.86",
            "p99": "197.91",
            "min": "181.63",
            "n": "48",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "182.53",
            "p50": "174.51",
            "p95": "166.53",
            "p99": "174.61",
            "min": "165.32",
            "n": "45",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "207.80",
            "p50": "198.79",
            "p95": "181.94",
            "p99": "195.67",
            "min": "181.42",
            "n": "45",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "148.80",
            "p50": "143.94",
            "p95": "125.14",
            "p99": "136.68",
            "min": "122.46",
            "n": "45",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "229.58",
            "p50": "225.04",
            "p95": "202.51",
            "p99": "209.63",
            "min": "188.87",
            "n": "48",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "182.01",
            "p50": "172.65",
            "p95": "153.10",
            "p99": "157.24",
            "min": "128.17",
            "n": "45",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "101.52",
            "p50": "96.84",
            "p95": "91.43",
            "p99": "95.34",
            "min": "89.63",
            "n": "51",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "140.36",
            "p50": "136.91",
            "p95": "123.08",
            "p99": "136.01",
            "min": "122.96",
            "n": "24",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "450.07",
            "p50": "323.77",
            "p95": "258.14",
            "p99": "387.23",
            "min": "247.34",
            "n": "30",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "170.68",
            "p50": "149.81",
            "p95": "129.09",
            "p99": "161.29",
            "min": "127.98",
            "n": "21",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "133.40",
            "p50": "129.62",
            "p95": "112.94",
            "p99": "128.60",
            "min": "111.60",
            "n": "21",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1201.79",
            "p50": "1037.89",
            "p95": "727.31",
            "p99": "874.39",
            "min": "637.31",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1043.74",
            "p50": "1001.52",
            "p95": "661.81",
            "p99": "774.08",
            "min": "578.80",
            "n": "57",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1459.84",
            "p50": "1187.49",
            "p95": "856.17",
            "p99": "951.80",
            "min": "583.91",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1342.52",
            "p50": "1083.91",
            "p95": "806.05",
            "p99": "980.24",
            "min": "717.90",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1332.45",
            "p50": "1072.91",
            "p95": "808.13",
            "p99": "984.78",
            "min": "700.32",
            "n": "54",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1076.29",
            "p50": "962.34",
            "p95": "643.45",
            "p99": "734.93",
            "min": "487.74",
            "n": "57",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "701.66",
            "p50": "540.73",
            "p95": "389.64",
            "p99": "540.16",
            "min": "350.57",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "713.65",
            "p50": "515.78",
            "p95": "415.73",
            "p99": "573.21",
            "min": "408.34",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "694.89",
            "p50": "540.30",
            "p95": "428.65",
            "p99": "563.99",
            "min": "410.31",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "711.23",
            "p50": "524.77",
            "p95": "438.43",
            "p99": "573.40",
            "min": "411.61",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "290.99",
            "p50": "283.29",
            "p95": "241.74",
            "p99": "253.38",
            "min": "218.66",
            "n": "51",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "618.50",
            "p50": "424.63",
            "p95": "331.19",
            "p99": "476.23",
            "min": "309.21",
            "n": "45",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "607.07",
            "p50": "466.51",
            "p95": "375.57",
            "p99": "480.43",
            "min": "331.77",
            "n": "45",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "632.83",
            "p50": "468.26",
            "p95": "381.55",
            "p99": "505.10",
            "min": "355.15",
            "n": "45",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "652.00",
            "p50": "505.25",
            "p95": "363.27",
            "p99": "488.16",
            "min": "295.82",
            "n": "45",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.00",
            "p50": "102.28",
            "p95": "96.62",
            "p99": "98.63",
            "min": "94.01",
            "n": "57",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "104.76",
            "p50": "102.17",
            "p95": "97.12",
            "p99": "96.64",
            "min": "90.76",
            "n": "57",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.01",
            "p50": "94.42",
            "p95": "88.08",
            "p99": "91.65",
            "min": "86.70",
            "n": "51",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "250.86",
            "p50": "240.19",
            "p95": "215.17",
            "p99": "214.91",
            "min": "188.87",
            "n": "57",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.40",
            "p50": "94.99",
            "p95": "90.92",
            "p99": "92.30",
            "min": "87.00",
            "n": "48",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "243.70",
            "p50": "231.34",
            "p95": "187.94",
            "p99": "195.95",
            "min": "161.37",
            "n": "57",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "211.00",
            "p50": "200.99",
            "p95": "173.70",
            "p99": "192.14",
            "min": "170.01",
            "n": "45",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "238.91",
            "p50": "232.83",
            "p95": "211.19",
            "p99": "223.06",
            "min": "210.09",
            "n": "54",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "558.85",
            "p50": "535.26",
            "p95": "425.97",
            "p99": "464.15",
            "min": "395.58",
            "n": "57",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7552.62",
            "p50": "2789.11",
            "p95": "1890.33",
            "p99": "3966.65",
            "min": "1369.91",
            "n": "57",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "520.35",
            "p50": "506.68",
            "p95": "366.69",
            "p99": "413.49",
            "min": "336.11",
            "n": "57",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "19066.35",
            "p50": "7663.03",
            "p95": "2392.01",
            "p99": "9353.28",
            "min": "2319.68",
            "n": "57",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4157.62",
            "p50": "2450.87",
            "p95": "1301.02",
            "p99": "2405.23",
            "min": "1136.26",
            "n": "57",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "196.04",
            "p50": "174.65",
            "p95": "151.05",
            "p99": "162.71",
            "min": "135.45",
            "n": "54",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "268.47",
            "p50": "261.80",
            "p95": "215.41",
            "p99": "227.60",
            "min": "185.06",
            "n": "48",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "148.42",
            "p50": "145.54",
            "p95": "132.78",
            "p99": "140.32",
            "min": "131.88",
            "n": "48",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "244.59",
            "p50": "235.36",
            "p95": "212.37",
            "p99": "220.76",
            "min": "198.77",
            "n": "51",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "191.98",
            "p50": "186.06",
            "p95": "161.55",
            "p99": "153.18",
            "min": "107.62",
            "n": "45",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "217.99",
            "p50": "210.66",
            "p95": "185.90",
            "p99": "189.94",
            "min": "166.99",
            "n": "54",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "210.87",
            "p50": "202.30",
            "p95": "180.95",
            "p99": "195.88",
            "min": "178.28",
            "n": "45",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "210.24",
            "p50": "204.75",
            "p95": "176.34",
            "p99": "187.90",
            "min": "167.27",
            "n": "51",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1217.63",
            "p50": "1114.04",
            "p95": "979.35",
            "p99": "1099.38",
            "min": "976.30",
            "n": "48",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "183.24",
            "p50": "177.81",
            "p95": "157.39",
            "p99": "165.30",
            "min": "146.63",
            "n": "48",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "189.64",
            "p50": "185.88",
            "p95": "167.36",
            "p99": "176.74",
            "min": "161.60",
            "n": "45",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "188.26",
            "p50": "185.46",
            "p95": "172.76",
            "p99": "178.86",
            "min": "167.81",
            "n": "45",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "189.09",
            "p50": "186.36",
            "p95": "175.31",
            "p99": "180.70",
            "min": "170.86",
            "n": "45",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1105.59",
            "p50": "1084.12",
            "p95": "709.21",
            "p99": "839.21",
            "min": "621.26",
            "n": "54",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "626.79",
            "p50": "614.90",
            "p95": "495.55",
            "p99": "530.03",
            "min": "416.43",
            "n": "45",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "606.06",
            "p50": "589.94",
            "p95": "516.47",
            "p99": "548.86",
            "min": "489.32",
            "n": "48",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "645.18",
            "p50": "637.59",
            "p95": "543.82",
            "p99": "562.46",
            "min": "465.37",
            "n": "45",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "759.92",
            "p50": "743.44",
            "p95": "588.99",
            "p99": "617.16",
            "min": "449.57",
            "n": "45",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "910.80",
            "p50": "887.89",
            "p95": "688.63",
            "p99": "731.08",
            "min": "544.01",
            "n": "48",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "881.32",
            "p50": "869.41",
            "p95": "610.44",
            "p99": "743.37",
            "min": "581.43",
            "n": "45",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "873.37",
            "p50": "840.71",
            "p95": "678.97",
            "p99": "763.19",
            "min": "633.86",
            "n": "45",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "808.71",
            "p50": "795.96",
            "p95": "626.74",
            "p99": "688.27",
            "min": "546.88",
            "n": "45",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "691.35",
            "p50": "678.72",
            "p95": "575.57",
            "p99": "619.67",
            "min": "545.06",
            "n": "48",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "845.91",
            "p50": "831.94",
            "p95": "571.87",
            "p99": "713.52",
            "min": "558.09",
            "n": "45",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "11698.82",
            "p50": "7133.59",
            "p95": "2355.51",
            "p99": "6814.69",
            "min": "2306.27",
            "n": "51",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "4036.40",
            "p50": "3818.43",
            "p95": "1434.32",
            "p99": "3385.70",
            "min": "1433.60",
            "n": "24",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "452.16",
            "p50": "444.93",
            "p95": "351.73",
            "p99": "414.13",
            "min": "329.49",
            "n": "30",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "7258.16",
            "p50": "3967.23",
            "p95": "547.52",
            "p99": "5781.74",
            "min": "547.13",
            "n": "21",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7610.73",
            "p50": "4617.84",
            "p95": "1501.24",
            "p99": "6248.34",
            "min": "1418.05",
            "n": "21",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1529.62",
            "p50": "1403.62",
            "p95": "1012.08",
            "p99": "1107.64",
            "min": "802.07",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "14133.70",
            "p50": "1300.03",
            "p95": "965.51",
            "p99": "6315.71",
            "min": "654.41",
            "n": "57",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1717.57",
            "p50": "1542.13",
            "p95": "1185.85",
            "p99": "1242.08",
            "min": "897.75",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "3354.86",
            "p50": "3190.38",
            "p95": "1492.50",
            "p99": "2119.68",
            "min": "1225.23",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "3339.52",
            "p50": "3064.95",
            "p95": "1647.82",
            "p99": "2160.84",
            "min": "1196.47",
            "n": "54",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1466.90",
            "p50": "1359.65",
            "p95": "971.86",
            "p99": "1033.24",
            "min": "719.21",
            "n": "57",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "458.58",
            "p50": "440.61",
            "p95": "384.37",
            "p99": "416.47",
            "min": "367.04",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "759.81",
            "p50": "747.70",
            "p95": "601.56",
            "p99": "624.23",
            "min": "465.07",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "456.22",
            "p50": "441.21",
            "p95": "386.20",
            "p99": "416.52",
            "min": "369.92",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "394.47",
            "p50": "378.17",
            "p95": "355.01",
            "p99": "369.40",
            "min": "339.97",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "32135.12",
            "p50": "8852.69",
            "p95": "2356.88",
            "p99": "16614.36",
            "min": "2287.50",
            "n": "51",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "564.81",
            "p50": "556.83",
            "p95": "464.83",
            "p99": "508.36",
            "min": "442.08",
            "n": "45",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "541.69",
            "p50": "534.36",
            "p95": "460.33",
            "p99": "501.08",
            "min": "453.41",
            "n": "45",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "545.60",
            "p50": "539.77",
            "p95": "432.67",
            "p99": "470.13",
            "min": "381.52",
            "n": "45",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "555.87",
            "p50": "550.28",
            "p95": "471.11",
            "p99": "501.18",
            "min": "436.98",
            "n": "45",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "23084.38",
            "p50": "8201.21",
            "p95": "2443.17",
            "p99": "11055.18",
            "min": "2344.38",
            "n": "57",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "23238.02",
            "p50": "7774.66",
            "p95": "2319.04",
            "p99": "11078.05",
            "min": "2272.55",
            "n": "57",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "22157.37",
            "p50": "7452.96",
            "p95": "2416.96",
            "p99": "11792.16",
            "min": "2224.27",
            "n": "51",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "23193.59",
            "p50": "8618.17",
            "p95": "2437.93",
            "p99": "11025.22",
            "min": "2213.64",
            "n": "57",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "21897.77",
            "p50": "7361.68",
            "p95": "2539.60",
            "p99": "12371.86",
            "min": "2457.13",
            "n": "48",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "23056.24",
            "p50": "7765.02",
            "p95": "2321.57",
            "p99": "10676.50",
            "min": "1711.86",
            "n": "57",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "888.07",
            "p50": "875.65",
            "p95": "674.86",
            "p99": "746.23",
            "min": "579.71",
            "n": "45",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "634.83",
            "p50": "622.31",
            "p95": "483.46",
            "p99": "537.96",
            "min": "458.70",
            "n": "54",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1667.62",
            "p50": "1619.11",
            "p95": "1007.94",
            "p99": "1124.02",
            "min": "730.38",
            "n": "57",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "14250.55",
            "p50": "9223.07",
            "p95": "2308.31",
            "p99": "7299.62",
            "min": "2266.19",
            "n": "57",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1629.11",
            "p50": "1546.65",
            "p95": "1030.04",
            "p99": "1210.00",
            "min": "906.51",
            "n": "57",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "64232.12",
            "p50": "9399.85",
            "p95": "2247.34",
            "p99": "27992.47",
            "min": "1749.96",
            "n": "57",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14780.88",
            "p50": "8885.04",
            "p95": "2274.12",
            "p99": "7036.02",
            "min": "1427.67",
            "n": "57",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "624.27",
            "p50": "557.04",
            "p95": "488.41",
            "p99": "540.99",
            "min": "472.85",
            "n": "54",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "924.58",
            "p50": "898.86",
            "p95": "695.64",
            "p99": "809.82",
            "min": "690.37",
            "n": "48",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "810.15",
            "p50": "785.51",
            "p95": "635.81",
            "p99": "707.75",
            "min": "601.17",
            "n": "48",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1138.90",
            "p50": "1118.24",
            "p95": "915.85",
            "p99": "927.98",
            "min": "733.28",
            "n": "51",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "758.23",
            "p50": "744.90",
            "p95": "561.58",
            "p99": "633.46",
            "min": "486.99",
            "n": "45",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1079.56",
            "p50": "1055.51",
            "p95": "720.58",
            "p99": "853.22",
            "min": "668.03",
            "n": "54",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "836.56",
            "p50": "825.92",
            "p95": "573.31",
            "p99": "687.58",
            "min": "512.68",
            "n": "45",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "911.50",
            "p50": "898.28",
            "p95": "675.10",
            "p99": "743.42",
            "min": "588.27",
            "n": "51",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2039.26",
            "p50": "1826.75",
            "p95": "1364.73",
            "p99": "1664.50",
            "min": "1274.44",
            "n": "48",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "846.39",
            "p50": "828.42",
            "p95": "624.67",
            "p99": "687.78",
            "min": "522.70",
            "n": "48",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "121.64",
            "p50": "116.29",
            "p95": "99.21",
            "p99": "110.67",
            "min": "96.13",
            "n": "42",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "121.28",
            "p50": "116.44",
            "p95": "100.26",
            "p99": "109.82",
            "min": "96.38",
            "n": "45",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "121.62",
            "p50": "115.79",
            "p95": "96.72",
            "p99": "109.49",
            "min": "95.25",
            "n": "45",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "204.83",
            "p50": "186.24",
            "p95": "152.59",
            "p99": "171.46",
            "min": "144.15",
            "n": "54",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "100.90",
            "p50": "95.91",
            "p95": "80.59",
            "p99": "90.71",
            "min": "78.75",
            "n": "45",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "106.87",
            "p50": "101.86",
            "p95": "89.80",
            "p99": "92.18",
            "min": "76.90",
            "n": "48",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "138.87",
            "p50": "128.17",
            "p95": "109.84",
            "p99": "120.93",
            "min": "99.88",
            "n": "45",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "135.80",
            "p50": "127.25",
            "p95": "104.50",
            "p99": "117.83",
            "min": "96.74",
            "n": "45",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "177.06",
            "p50": "159.52",
            "p95": "128.60",
            "p99": "150.58",
            "min": "123.02",
            "n": "48",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "179.73",
            "p50": "165.02",
            "p95": "130.64",
            "p99": "151.01",
            "min": "117.30",
            "n": "45",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "176.48",
            "p50": "164.38",
            "p95": "135.03",
            "p99": "150.73",
            "min": "120.50",
            "n": "45",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "124.23",
            "p50": "115.41",
            "p95": "94.14",
            "p99": "98.63",
            "min": "68.59",
            "n": "45",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "197.78",
            "p50": "181.13",
            "p95": "145.62",
            "p99": "167.05",
            "min": "135.07",
            "n": "48",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "182.39",
            "p50": "166.43",
            "p95": "121.96",
            "p99": "151.18",
            "min": "114.55",
            "n": "45",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "74.59",
            "p50": "69.75",
            "p95": "62.20",
            "p99": "67.29",
            "min": "60.55",
            "n": "51",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "130.13",
            "p50": "118.08",
            "p95": "98.35",
            "p99": "121.67",
            "min": "96.28",
            "n": "24",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "201.04",
            "p50": "180.72",
            "p95": "142.02",
            "p99": "181.66",
            "min": "138.52",
            "n": "30",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "154.32",
            "p50": "133.88",
            "p95": "127.61",
            "p99": "148.44",
            "min": "127.59",
            "n": "21",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "120.81",
            "p50": "112.62",
            "p95": "99.03",
            "p99": "115.82",
            "min": "98.13",
            "n": "21",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "990.13",
            "p50": "658.69",
            "p95": "321.75",
            "p99": "567.09",
            "min": "260.76",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "968.91",
            "p50": "670.73",
            "p95": "348.14",
            "p99": "575.86",
            "min": "291.25",
            "n": "57",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1090.74",
            "p50": "731.98",
            "p95": "327.20",
            "p99": "619.92",
            "min": "278.98",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1015.75",
            "p50": "696.96",
            "p95": "352.35",
            "p99": "578.45",
            "min": "261.78",
            "n": "57",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "931.53",
            "p50": "641.53",
            "p95": "289.77",
            "p99": "562.61",
            "min": "260.76",
            "n": "54",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "988.72",
            "p50": "674.85",
            "p95": "311.99",
            "p99": "577.05",
            "min": "278.95",
            "n": "57",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "345.41",
            "p50": "273.57",
            "p95": "179.52",
            "p99": "264.95",
            "min": "170.50",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "315.75",
            "p50": "278.66",
            "p95": "193.04",
            "p99": "253.92",
            "min": "181.34",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "322.93",
            "p50": "279.92",
            "p95": "202.80",
            "p99": "255.52",
            "min": "176.38",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "350.59",
            "p50": "309.14",
            "p95": "219.46",
            "p99": "278.44",
            "min": "193.74",
            "n": "45",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "278.15",
            "p50": "242.38",
            "p95": "174.03",
            "p99": "213.65",
            "min": "154.12",
            "n": "51",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "282.01",
            "p50": "243.92",
            "p95": "168.23",
            "p99": "225.59",
            "min": "159.37",
            "n": "45",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "275.24",
            "p50": "241.41",
            "p95": "162.84",
            "p99": "219.71",
            "min": "154.53",
            "n": "45",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "273.58",
            "p50": "240.11",
            "p95": "186.33",
            "p99": "227.38",
            "min": "173.16",
            "n": "45",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "264.41",
            "p50": "245.16",
            "p95": "159.01",
            "p99": "214.07",
            "min": "154.97",
            "n": "45",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "102.92",
            "p50": "98.00",
            "p95": "85.98",
            "p99": "88.21",
            "min": "77.55",
            "n": "57",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "103.81",
            "p50": "98.00",
            "p95": "87.42",
            "p99": "90.85",
            "min": "81.46",
            "n": "57",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "96.48",
            "p50": "90.70",
            "p95": "78.99",
            "p99": "85.14",
            "min": "74.68",
            "n": "51",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "242.51",
            "p50": "217.00",
            "p95": "157.65",
            "p99": "183.98",
            "min": "141.59",
            "n": "57",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "95.49",
            "p50": "90.13",
            "p95": "78.07",
            "p99": "85.29",
            "min": "74.66",
            "n": "48",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "237.73",
            "p50": "210.31",
            "p95": "147.82",
            "p99": "180.63",
            "min": "139.28",
            "n": "57",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "178.19",
            "p50": "163.34",
            "p95": "126.96",
            "p99": "153.71",
            "min": "124.97",
            "n": "45",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "146.81",
            "p50": "134.85",
            "p95": "112.13",
            "p99": "123.97",
            "min": "105.27",
            "n": "54",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "427.56",
            "p50": "374.71",
            "p95": "228.27",
            "p99": "299.41",
            "min": "206.62",
            "n": "57",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4800.99",
            "p50": "2056.59",
            "p95": "619.72",
            "p99": "2342.55",
            "min": "562.29",
            "n": "57",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "432.96",
            "p50": "362.02",
            "p95": "239.94",
            "p99": "307.95",
            "min": "217.42",
            "n": "57",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "13189.95",
            "p50": "3250.73",
            "p95": "803.44",
            "p99": "5965.90",
            "min": "734.69",
            "n": "57",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3106.95",
            "p50": "1778.16",
            "p95": "623.29",
            "p99": "1640.42",
            "min": "578.44",
            "n": "57",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "203.21",
            "p50": "186.37",
            "p95": "163.37",
            "p99": "175.50",
            "min": "152.82",
            "n": "54",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "230.03",
            "p50": "208.30",
            "p95": "164.24",
            "p99": "192.26",
            "min": "152.95",
            "n": "48",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "125.01",
            "p50": "118.54",
            "p95": "99.91",
            "p99": "109.10",
            "min": "92.54",
            "n": "48",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "195.90",
            "p50": "174.99",
            "p95": "132.53",
            "p99": "155.58",
            "min": "118.36",
            "n": "51",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "135.38",
            "p50": "126.91",
            "p95": "104.38",
            "p99": "118.35",
            "min": "98.36",
            "n": "45",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "170.46",
            "p50": "155.36",
            "p95": "121.36",
            "p99": "139.63",
            "min": "114.40",
            "n": "54",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "174.52",
            "p50": "159.32",
            "p95": "124.32",
            "p99": "148.11",
            "min": "117.10",
            "n": "45",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "181.72",
            "p50": "163.72",
            "p95": "121.14",
            "p99": "141.40",
            "min": "104.18",
            "n": "51",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "301.49",
            "p50": "254.57",
            "p95": "55.35",
            "p99": "202.33",
            "min": "53.60",
            "n": "39",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "140.74",
            "p50": "134.64",
            "p95": "118.97",
            "p99": "127.83",
            "min": "108.48",
            "n": "39",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}