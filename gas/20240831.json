{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "169.77",
            "p50": "168.33",
            "p95": "158.27",
            "p99": "152.71",
            "min": "152.62",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "170.04",
            "p50": "168.68",
            "p95": "167.20",
            "p99": "162.36",
            "min": "161.86",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "170.03",
            "p50": "168.05",
            "p95": "164.24",
            "p99": "161.74",
            "min": "161.48",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "759.82",
            "p50": "747.95",
            "p95": "512.16",
            "p99": "484.01",
            "min": "479.54",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "403.93",
            "p50": "394.53",
            "p95": "386.81",
            "p99": "298.89",
            "min": "277.39",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "438.85",
            "p50": "429.28",
            "p95": "420.30",
            "p99": "414.04",
            "min": "413.84",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "323.55",
            "p50": "317.02",
            "p95": "306.69",
            "p99": "300.46",
            "min": "300.35",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "186.99",
            "p50": "184.82",
            "p95": "181.45",
            "p99": "170.30",
            "min": "169.27",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "271.62",
            "p50": "258.66",
            "p95": "240.96",
            "p99": "233.21",
            "min": "231.45",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "264.64",
            "p50": "255.26",
            "p95": "252.32",
            "p99": "241.57",
            "min": "239.90",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "259.97",
            "p50": "257.59",
            "p95": "254.56",
            "p99": "245.28",
            "min": "244.81",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "191.43",
            "p50": "188.35",
            "p95": "185.95",
            "p99": "179.04",
            "min": "178.59",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "320.29",
            "p50": "315.38",
            "p95": "303.48",
            "p99": "300.85",
            "min": "300.65",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "309.08",
            "p50": "302.34",
            "p95": "292.88",
            "p99": "288.54",
            "min": "287.81",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "7870.82",
            "p50": "5721.06",
            "p95": "2128.94",
            "p99": "1696.49",
            "min": "1606.54",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2445.28",
            "p50": "2153.26",
            "p95": "1302.21",
            "p99": "1436.57",
            "min": "893.42",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "290.60",
            "p50": "243.40",
            "p95": "223.37",
            "p99": "224.19",
            "min": "208.62",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "8685.32",
            "p50": "4146.19",
            "p95": "1096.65",
            "p99": "4352.14",
            "min": "1083.25",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7883.32",
            "p50": "4479.51",
            "p95": "2437.74",
            "p99": "4431.38",
            "min": "1827.28",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1832.72",
            "p50": "1656.81",
            "p95": "579.49",
            "p99": "549.72",
            "min": "547.85",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "19539.60",
            "p50": "4439.30",
            "p95": "791.08",
            "p99": "760.13",
            "min": "754.16",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1310.15",
            "p50": "1184.77",
            "p95": "490.29",
            "p99": "402.90",
            "min": "358.28",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2143.59",
            "p50": "1970.49",
            "p95": "1606.63",
            "p99": "1005.59",
            "min": "977.74",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2157.79",
            "p50": "1973.94",
            "p95": "727.25",
            "p99": "394.32",
            "min": "381.41",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "6355.41",
            "p50": "5350.76",
            "p95": "778.52",
            "p99": "619.40",
            "min": "492.60",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "299.45",
            "p50": "256.55",
            "p95": "146.65",
            "p99": "142.50",
            "min": "141.92",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "497.95",
            "p50": "425.26",
            "p95": "380.84",
            "p99": "92.75",
            "min": "88.62",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "345.45",
            "p50": "294.25",
            "p95": "58.47",
            "p99": "54.88",
            "min": "54.76",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "421.44",
            "p50": "362.80",
            "p95": "158.80",
            "p99": "84.26",
            "min": "82.92",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "37920.40",
            "p50": "8365.17",
            "p95": "2055.94",
            "p99": "715.38",
            "min": "212.17",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "369.72",
            "p50": "351.26",
            "p95": "293.90",
            "p99": "256.61",
            "min": "252.97",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "354.64",
            "p50": "335.90",
            "p95": "284.38",
            "p99": "275.18",
            "min": "274.63",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "355.14",
            "p50": "338.88",
            "p95": "284.64",
            "p99": "278.70",
            "min": "277.57",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "358.40",
            "p50": "338.09",
            "p95": "286.67",
            "p99": "275.46",
            "min": "275.10",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "14904.16",
            "p50": "7014.96",
            "p95": "2593.38",
            "p99": "1644.09",
            "min": "1589.17",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "14649.06",
            "p50": "8139.64",
            "p95": "2282.16",
            "p99": "798.98",
            "min": "265.60",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "14535.98",
            "p50": "6392.67",
            "p95": "2303.38",
            "p99": "862.85",
            "min": "412.02",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "14907.98",
            "p50": "6957.85",
            "p95": "2566.81",
            "p99": "139.53",
            "min": "102.81",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "13169.20",
            "p50": "5914.28",
            "p95": "2194.08",
            "p99": "1336.86",
            "min": "1326.28",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "15107.75",
            "p50": "7628.59",
            "p95": "2605.80",
            "p99": "1590.97",
            "min": "1588.48",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "263.76",
            "p50": "254.23",
            "p95": "248.66",
            "p99": "236.71",
            "min": "233.96",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "539.21",
            "p50": "531.18",
            "p95": "517.23",
            "p99": "505.68",
            "min": "503.05",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1183.44",
            "p50": "1117.76",
            "p95": "374.70",
            "p99": "364.75",
            "min": "363.16",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "19690.24",
            "p50": "9038.60",
            "p95": "2465.94",
            "p99": "1704.60",
            "min": "1676.51",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1096.71",
            "p50": "1054.21",
            "p95": "375.04",
            "p99": "302.02",
            "min": "269.52",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "48441.72",
            "p50": "9826.41",
            "p95": "2259.88",
            "p99": "1010.20",
            "min": "323.03",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "17207.04",
            "p50": "6823.42",
            "p95": "2739.36",
            "p99": "2242.17",
            "min": "2178.25",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "524.19",
            "p50": "493.49",
            "p95": "425.78",
            "p99": "324.26",
            "min": "293.06",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "519.53",
            "p50": "508.87",
            "p95": "496.93",
            "p99": "456.87",
            "min": "451.93",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "204.95",
            "p50": "202.54",
            "p95": "198.87",
            "p99": "190.37",
            "min": "189.08",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "438.52",
            "p50": "425.57",
            "p95": "417.11",
            "p99": "170.48",
            "min": "163.20",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "205.50",
            "p50": "202.51",
            "p95": "199.60",
            "p99": "196.80",
            "min": "196.42",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "330.81",
            "p50": "322.94",
            "p95": "312.56",
            "p99": "286.94",
            "min": "284.34",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "272.30",
            "p50": "265.24",
            "p95": "251.96",
            "p99": "245.23",
            "min": "243.93",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "516.88",
            "p50": "504.31",
            "p95": "491.76",
            "p99": "485.12",
            "min": "484.38",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1462.78",
            "p50": "1166.66",
            "p95": "875.77",
            "p99": "826.70",
            "min": "825.95",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "318.69",
            "p50": "313.38",
            "p95": "307.00",
            "p99": "296.89",
            "min": "295.56",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "87.73",
            "p50": "84.83",
            "p95": "77.03",
            "p99": "75.07",
            "min": "74.88",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "80.92",
            "p50": "77.82",
            "p95": "72.71",
            "p99": "69.34",
            "min": "69.28",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "82.04",
            "p50": "79.48",
            "p95": "73.05",
            "p99": "71.04",
            "min": "70.86",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "226.08",
            "p50": "209.56",
            "p95": "177.11",
            "p99": "164.54",
            "min": "164.50",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "174.54",
            "p50": "163.82",
            "p95": "140.54",
            "p99": "131.27",
            "min": "130.21",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "180.68",
            "p50": "170.66",
            "p95": "145.47",
            "p99": "97.66",
            "min": "92.97",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "170.87",
            "p50": "158.86",
            "p95": "135.22",
            "p99": "120.37",
            "min": "119.32",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "168.04",
            "p50": "159.01",
            "p95": "134.13",
            "p99": "111.48",
            "min": "106.51",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "194.01",
            "p50": "178.67",
            "p95": "147.39",
            "p99": "131.09",
            "min": "128.51",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "172.96",
            "p50": "159.24",
            "p95": "135.94",
            "p99": "133.96",
            "min": "133.90",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "194.57",
            "p50": "178.48",
            "p95": "152.93",
            "p99": "131.62",
            "min": "130.74",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "141.16",
            "p50": "131.17",
            "p95": "119.43",
            "p99": "103.24",
            "min": "101.70",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "220.54",
            "p50": "204.15",
            "p95": "173.35",
            "p99": "156.53",
            "min": "155.85",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "174.74",
            "p50": "160.60",
            "p95": "141.79",
            "p99": "121.99",
            "min": "119.33",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.31",
            "p50": "65.05",
            "p95": "60.25",
            "p99": "57.28",
            "min": "57.16",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "139.20",
            "p50": "128.75",
            "p95": "114.59",
            "p99": "120.20",
            "min": "109.96",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "389.72",
            "p50": "304.11",
            "p95": "247.75",
            "p99": "240.10",
            "min": "205.00",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "175.70",
            "p50": "143.17",
            "p95": "133.94",
            "p99": "151.21",
            "min": "132.73",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "130.73",
            "p50": "122.05",
            "p95": "112.77",
            "p99": "118.11",
            "min": "108.59",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1185.35",
            "p50": "914.45",
            "p95": "524.62",
            "p99": "434.54",
            "min": "423.04",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1021.62",
            "p50": "834.50",
            "p95": "567.60",
            "p99": "477.05",
            "min": "472.51",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1348.09",
            "p50": "1023.45",
            "p95": "572.42",
            "p99": "494.53",
            "min": "483.92",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1241.50",
            "p50": "1003.43",
            "p95": "556.95",
            "p99": "447.17",
            "min": "407.38",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1229.82",
            "p50": "963.37",
            "p95": "493.85",
            "p99": "419.98",
            "min": "408.78",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1073.52",
            "p50": "850.56",
            "p95": "553.50",
            "p99": "492.18",
            "min": "474.96",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "664.94",
            "p50": "530.63",
            "p95": "388.36",
            "p99": "350.12",
            "min": "348.07",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "637.92",
            "p50": "532.51",
            "p95": "364.57",
            "p99": "326.92",
            "min": "321.91",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "635.29",
            "p50": "518.12",
            "p95": "361.63",
            "p99": "291.73",
            "min": "284.24",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "654.25",
            "p50": "537.36",
            "p95": "363.06",
            "p99": "304.13",
            "min": "302.76",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "291.02",
            "p50": "265.49",
            "p95": "216.74",
            "p99": "193.59",
            "min": "193.39",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "547.38",
            "p50": "439.55",
            "p95": "342.30",
            "p99": "300.47",
            "min": "296.61",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "548.87",
            "p50": "451.51",
            "p95": "326.59",
            "p99": "262.83",
            "min": "253.23",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "558.13",
            "p50": "464.74",
            "p95": "358.68",
            "p99": "295.00",
            "min": "288.45",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "566.04",
            "p50": "464.76",
            "p95": "327.14",
            "p99": "261.10",
            "min": "253.95",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.71",
            "p50": "102.16",
            "p95": "91.89",
            "p99": "86.65",
            "min": "85.08",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.46",
            "p50": "102.28",
            "p95": "92.94",
            "p99": "88.49",
            "min": "88.03",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.22",
            "p50": "95.18",
            "p95": "88.85",
            "p99": "86.86",
            "min": "86.82",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "253.63",
            "p50": "235.02",
            "p95": "193.16",
            "p99": "174.52",
            "min": "169.65",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.86",
            "p50": "94.84",
            "p95": "85.86",
            "p99": "78.98",
            "min": "78.17",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "246.87",
            "p50": "225.58",
            "p95": "190.03",
            "p99": "177.59",
            "min": "176.50",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "195.78",
            "p50": "181.40",
            "p95": "153.61",
            "p99": "141.28",
            "min": "139.73",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "199.17",
            "p50": "186.64",
            "p95": "160.69",
            "p99": "151.34",
            "min": "151.12",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "361.85",
            "p50": "317.06",
            "p95": "232.20",
            "p99": "190.74",
            "min": "187.30",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5163.50",
            "p50": "2227.26",
            "p95": "1027.55",
            "p99": "799.22",
            "min": "723.82",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "343.34",
            "p50": "312.62",
            "p95": "239.12",
            "p99": "188.01",
            "min": "181.67",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14745.01",
            "p50": "3730.38",
            "p95": "1398.54",
            "p99": "812.28",
            "min": "644.97",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3440.23",
            "p50": "1890.46",
            "p95": "780.91",
            "p99": "608.44",
            "min": "595.87",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "180.83",
            "p50": "165.86",
            "p95": "143.34",
            "p99": "132.36",
            "min": "131.64",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "246.93",
            "p50": "228.39",
            "p95": "199.70",
            "p99": "140.64",
            "min": "127.65",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "91.70",
            "p50": "87.99",
            "p95": "81.52",
            "p99": "50.58",
            "min": "41.13",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "223.78",
            "p50": "206.94",
            "p95": "173.98",
            "p99": "163.78",
            "min": "163.11",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "170.47",
            "p50": "160.59",
            "p95": "133.81",
            "p99": "117.98",
            "min": "116.38",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "203.09",
            "p50": "188.15",
            "p95": "160.34",
            "p99": "151.34",
            "min": "150.48",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "193.15",
            "p50": "181.95",
            "p95": "153.78",
            "p99": "146.94",
            "min": "146.41",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "196.59",
            "p50": "182.77",
            "p95": "162.50",
            "p99": "146.48",
            "min": "146.02",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1097.43",
            "p50": "888.07",
            "p95": "573.29",
            "p99": "492.49",
            "min": "483.15",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "175.25",
            "p50": "164.18",
            "p95": "123.27",
            "p99": "117.80",
            "min": "117.72",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.25",
            "p50": "188.70",
            "p95": "168.49",
            "p99": "159.86",
            "min": "159.59",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.04",
            "p50": "188.53",
            "p95": "168.74",
            "p99": "160.67",
            "min": "160.42",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "194.86",
            "p50": "190.99",
            "p95": "174.27",
            "p99": "167.23",
            "min": "167.07",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1188.64",
            "p50": "1104.05",
            "p95": "751.05",
            "p99": "635.59",
            "min": "622.00",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "700.30",
            "p50": "628.75",
            "p95": "485.31",
            "p99": "389.60",
            "min": "384.48",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "811.79",
            "p50": "741.07",
            "p95": "557.00",
            "p99": "440.62",
            "min": "432.99",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "721.26",
            "p50": "675.95",
            "p95": "485.16",
            "p99": "412.50",
            "min": "412.45",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "732.40",
            "p50": "677.81",
            "p95": "507.31",
            "p99": "408.08",
            "min": "404.84",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "880.34",
            "p50": "763.65",
            "p95": "529.63",
            "p99": "442.38",
            "min": "440.84",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "862.76",
            "p50": "800.29",
            "p95": "528.21",
            "p99": "450.56",
            "min": "444.92",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "861.18",
            "p50": "767.89",
            "p95": "564.95",
            "p99": "459.81",
            "min": "445.06",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "822.90",
            "p50": "768.10",
            "p95": "571.76",
            "p99": "465.87",
            "min": "455.35",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "842.79",
            "p50": "769.61",
            "p95": "538.82",
            "p99": "450.53",
            "min": "449.68",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "865.17",
            "p50": "811.71",
            "p95": "565.95",
            "p99": "449.55",
            "min": "447.49",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "64.38",
            "p50": "62.55",
            "p95": "60.20",
            "p99": "58.53",
            "min": "58.52",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "90.76",
            "p50": "89.48",
            "p95": "84.02",
            "p99": "85.60",
            "min": "82.83",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "497.40",
            "p50": "453.91",
            "p95": "332.15",
            "p99": "358.09",
            "min": "325.41",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "121.89",
            "p50": "96.38",
            "p95": "90.49",
            "p99": "103.56",
            "min": "89.72",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "84.86",
            "p50": "81.68",
            "p95": "79.09",
            "p99": "81.17",
            "min": "78.38",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1799.00",
            "p50": "1599.14",
            "p95": "839.14",
            "p99": "730.65",
            "min": "724.59",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1640.72",
            "p50": "1463.63",
            "p95": "891.26",
            "p99": "608.61",
            "min": "577.76",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2267.64",
            "p50": "1931.58",
            "p95": "993.01",
            "p99": "685.38",
            "min": "681.23",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2248.02",
            "p50": "1910.06",
            "p95": "989.32",
            "p99": "864.13",
            "min": "827.52",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2214.53",
            "p50": "1794.44",
            "p95": "813.13",
            "p99": "673.76",
            "min": "670.37",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1679.02",
            "p50": "1490.22",
            "p95": "819.89",
            "p99": "640.23",
            "min": "586.97",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "732.44",
            "p50": "629.59",
            "p95": "471.29",
            "p99": "426.10",
            "min": "422.38",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "723.61",
            "p50": "629.26",
            "p95": "475.74",
            "p99": "414.52",
            "min": "411.24",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "741.82",
            "p50": "664.61",
            "p95": "508.47",
            "p99": "423.38",
            "min": "419.24",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "743.27",
            "p50": "655.75",
            "p95": "488.09",
            "p99": "420.60",
            "min": "416.77",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.63",
            "p50": "85.41",
            "p95": "80.92",
            "p99": "78.84",
            "min": "78.70",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "647.63",
            "p50": "580.14",
            "p95": "466.98",
            "p99": "387.47",
            "min": "386.66",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "609.45",
            "p50": "545.67",
            "p95": "443.85",
            "p99": "378.14",
            "min": "371.68",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "606.94",
            "p50": "545.37",
            "p95": "424.33",
            "p99": "371.29",
            "min": "368.98",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "619.24",
            "p50": "543.23",
            "p95": "425.81",
            "p99": "406.33",
            "min": "404.46",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1934.14",
            "p50": "1734.78",
            "p95": "926.85",
            "p99": "657.82",
            "min": "650.51",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2216.99",
            "p50": "1950.86",
            "p95": "1066.29",
            "p99": "717.80",
            "min": "674.92",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.82",
            "p50": "72.13",
            "p95": "69.49",
            "p99": "67.82",
            "min": "67.36",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9386.81",
            "p50": "4755.21",
            "p95": "2419.62",
            "p99": "1635.74",
            "min": "1491.09",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.83",
            "p50": "71.92",
            "p95": "69.28",
            "p99": "67.75",
            "min": "67.51",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "222.12",
            "p50": "218.05",
            "p95": "195.05",
            "p99": "180.61",
            "min": "180.06",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "863.11",
            "p50": "775.02",
            "p95": "574.76",
            "p99": "470.57",
            "min": "459.41",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "669.84",
            "p50": "632.94",
            "p95": "470.67",
            "p99": "401.15",
            "min": "390.32",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1066.30",
            "p50": "984.99",
            "p95": "710.63",
            "p99": "582.08",
            "min": "561.97",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "27164.63",
            "p50": "9117.10",
            "p95": "2612.02",
            "p99": "1943.56",
            "min": "1663.42",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1057.62",
            "p50": "1001.87",
            "p95": "672.77",
            "p99": "514.90",
            "min": "510.57",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "54175.99",
            "p50": "9566.33",
            "p95": "2453.65",
            "p99": "1715.52",
            "min": "1670.02",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14977.16",
            "p50": "5440.88",
            "p95": "1456.65",
            "p99": "961.67",
            "min": "951.83",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "530.83",
            "p50": "474.20",
            "p95": "384.16",
            "p99": "321.90",
            "min": "318.86",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "977.42",
            "p50": "907.36",
            "p95": "627.60",
            "p99": "490.01",
            "min": "477.00",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "803.88",
            "p50": "726.25",
            "p95": "539.49",
            "p99": "448.87",
            "min": "443.97",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1197.71",
            "p50": "1097.99",
            "p95": "703.38",
            "p99": "619.90",
            "min": "614.88",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "730.13",
            "p50": "673.67",
            "p95": "509.46",
            "p99": "416.97",
            "min": "415.39",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1153.19",
            "p50": "1059.06",
            "p95": "745.05",
            "p99": "612.62",
            "min": "608.08",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "872.01",
            "p50": "776.18",
            "p95": "635.33",
            "p99": "463.70",
            "min": "458.89",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "906.89",
            "p50": "854.01",
            "p95": "601.21",
            "p99": "481.88",
            "min": "454.89",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2372.41",
            "p50": "1979.02",
            "p95": "1124.87",
            "p99": "997.97",
            "min": "992.44",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "830.41",
            "p50": "769.05",
            "p95": "565.43",
            "p99": "469.75",
            "min": "461.09",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "81.96",
            "p50": "79.27",
            "p95": "72.94",
            "p99": "68.53",
            "min": "68.41",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "75.19",
            "p50": "72.87",
            "p95": "66.37",
            "p99": "65.17",
            "min": "65.17",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "76.44",
            "p50": "74.20",
            "p95": "69.96",
            "p99": "64.59",
            "min": "64.49",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "210.95",
            "p50": "197.12",
            "p95": "158.66",
            "p99": "111.51",
            "min": "85.79",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "104.30",
            "p50": "100.14",
            "p95": "87.51",
            "p99": "66.57",
            "min": "61.97",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.12",
            "p50": "105.66",
            "p95": "93.75",
            "p99": "90.10",
            "min": "90.08",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "142.66",
            "p50": "134.11",
            "p95": "110.80",
            "p99": "92.73",
            "min": "88.67",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "142.42",
            "p50": "136.51",
            "p95": "115.32",
            "p99": "105.94",
            "min": "105.46",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "187.19",
            "p50": "175.08",
            "p95": "147.39",
            "p99": "132.02",
            "min": "130.55",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "187.19",
            "p50": "174.23",
            "p95": "142.20",
            "p99": "131.82",
            "min": "131.05",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "187.82",
            "p50": "174.20",
            "p95": "142.07",
            "p99": "116.32",
            "min": "114.75",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.20",
            "p50": "122.89",
            "p95": "106.77",
            "p99": "100.62",
            "min": "100.25",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "206.35",
            "p50": "191.76",
            "p95": "153.71",
            "p99": "90.40",
            "min": "90.33",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "190.53",
            "p50": "177.39",
            "p95": "145.58",
            "p99": "135.24",
            "min": "134.98",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "72.76",
            "p50": "69.04",
            "p95": "63.81",
            "p99": "61.87",
            "min": "61.69",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "133.13",
            "p50": "124.58",
            "p95": "108.98",
            "p99": "115.33",
            "min": "105.74",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "215.75",
            "p50": "193.92",
            "p95": "158.07",
            "p99": "158.94",
            "min": "145.61",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "166.42",
            "p50": "140.77",
            "p95": "133.47",
            "p99": "147.55",
            "min": "133.32",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "128.60",
            "p50": "119.76",
            "p95": "105.20",
            "p99": "113.07",
            "min": "101.35",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1042.31",
            "p50": "776.80",
            "p95": "367.15",
            "p99": "303.29",
            "min": "297.62",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1031.03",
            "p50": "748.20",
            "p95": "414.82",
            "p99": "336.56",
            "min": "333.97",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1156.42",
            "p50": "823.62",
            "p95": "410.23",
            "p99": "327.49",
            "min": "320.37",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1089.22",
            "p50": "813.53",
            "p95": "430.15",
            "p99": "331.03",
            "min": "328.55",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1045.99",
            "p50": "769.49",
            "p95": "419.97",
            "p99": "309.95",
            "min": "300.73",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1029.22",
            "p50": "765.00",
            "p95": "415.14",
            "p99": "320.97",
            "min": "310.25",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "339.11",
            "p50": "302.18",
            "p95": "216.38",
            "p99": "192.89",
            "min": "191.30",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "343.44",
            "p50": "301.93",
            "p95": "224.83",
            "p99": "195.84",
            "min": "195.10",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "339.83",
            "p50": "300.92",
            "p95": "240.82",
            "p99": "194.29",
            "min": "192.80",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "369.11",
            "p50": "321.16",
            "p95": "240.27",
            "p99": "214.17",
            "min": "212.67",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "289.73",
            "p50": "255.58",
            "p95": "207.33",
            "p99": "181.08",
            "min": "172.39",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "297.54",
            "p50": "265.83",
            "p95": "206.86",
            "p99": "172.39",
            "min": "170.18",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "299.08",
            "p50": "259.02",
            "p95": "197.94",
            "p99": "183.79",
            "min": "181.31",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "295.35",
            "p50": "263.97",
            "p95": "214.16",
            "p99": "184.93",
            "min": "182.39",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "303.00",
            "p50": "267.07",
            "p95": "204.64",
            "p99": "180.42",
            "min": "179.25",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.95",
            "p50": "102.07",
            "p95": "92.49",
            "p99": "89.77",
            "min": "89.69",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.95",
            "p50": "101.64",
            "p95": "89.94",
            "p99": "86.33",
            "min": "85.59",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.83",
            "p50": "95.02",
            "p95": "83.95",
            "p99": "79.42",
            "min": "78.86",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "250.59",
            "p50": "232.28",
            "p95": "186.41",
            "p99": "153.49",
            "min": "152.65",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.89",
            "p50": "93.89",
            "p95": "84.82",
            "p99": "81.26",
            "min": "81.20",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "244.76",
            "p50": "226.16",
            "p95": "186.13",
            "p99": "159.77",
            "min": "157.26",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "187.85",
            "p50": "176.41",
            "p95": "138.82",
            "p99": "123.10",
            "min": "122.95",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "153.80",
            "p50": "146.76",
            "p95": "126.42",
            "p99": "113.89",
            "min": "111.95",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "440.07",
            "p50": "385.87",
            "p95": "258.10",
            "p99": "224.14",
            "min": "223.79",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4734.41",
            "p50": "1865.30",
            "p95": "532.76",
            "p99": "450.50",
            "min": "445.58",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "444.99",
            "p50": "380.84",
            "p95": "261.02",
            "p99": "219.53",
            "min": "212.42",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "13680.87",
            "p50": "2588.95",
            "p95": "1010.34",
            "p99": "841.35",
            "min": "829.86",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3047.72",
            "p50": "1449.41",
            "p95": "499.93",
            "p99": "426.44",
            "min": "420.25",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "207.64",
            "p50": "191.61",
            "p95": "162.67",
            "p99": "151.77",
            "min": "149.79",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "236.09",
            "p50": "217.89",
            "p95": "172.69",
            "p99": "134.98",
            "min": "127.35",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "128.89",
            "p50": "122.49",
            "p95": "106.00",
            "p99": "87.12",
            "min": "86.54",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "210.16",
            "p50": "194.46",
            "p95": "156.35",
            "p99": "142.29",
            "min": "141.74",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "142.57",
            "p50": "135.24",
            "p95": "117.69",
            "p99": "113.71",
            "min": "113.40",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "176.69",
            "p50": "163.79",
            "p95": "138.61",
            "p99": "125.10",
            "min": "117.74",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "187.44",
            "p50": "174.35",
            "p95": "143.29",
            "p99": "130.94",
            "min": "130.06",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "187.91",
            "p50": "175.89",
            "p95": "146.83",
            "p99": "133.33",
            "min": "131.69",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "294.08",
            "p50": "245.71",
            "p95": "157.21",
            "p99": "140.20",
            "min": "135.44",
            "n": "96",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "143.91",
            "p50": "136.92",
            "p95": "116.66",
            "p99": "118.27",
            "min": "110.61",
            "n": "76",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "87.63",
            "p50": "83.94",
            "p95": "74.48",
            "p99": "70.63",
            "min": "70.25",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "88.49",
            "p50": "84.85",
            "p95": "81.82",
            "p99": "76.23",
            "min": "76.18",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "88.14",
            "p50": "84.40",
            "p95": "80.35",
            "p99": "79.71",
            "min": "79.71",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "192.35",
            "p50": "182.93",
            "p95": "178.97",
            "p99": "154.24",
            "min": "151.16",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "95.63",
            "p50": "89.02",
            "p95": "84.44",
            "p99": "82.01",
            "min": "81.54",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "111.63",
            "p50": "107.62",
            "p95": "104.40",
            "p99": "95.37",
            "min": "92.74",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "126.35",
            "p50": "120.75",
            "p95": "106.18",
            "p99": "99.81",
            "min": "99.80",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "125.75",
            "p50": "121.57",
            "p95": "117.38",
            "p99": "110.68",
            "min": "109.55",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "99.23",
            "p50": "97.24",
            "p95": "94.69",
            "p99": "92.03",
            "min": "91.92",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.97",
            "p50": "95.29",
            "p95": "92.85",
            "p99": "91.40",
            "min": "91.28",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.39",
            "p50": "95.48",
            "p95": "92.12",
            "p99": "88.57",
            "min": "88.15",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.73",
            "p50": "123.30",
            "p95": "118.40",
            "p99": "110.02",
            "min": "109.93",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "122.66",
            "p50": "114.05",
            "p95": "106.20",
            "p99": "100.64",
            "min": "100.52",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "115.99",
            "p50": "113.70",
            "p95": "109.15",
            "p99": "101.77",
            "min": "100.69",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "74.99",
            "p50": "71.48",
            "p95": "66.85",
            "p99": "63.76",
            "min": "63.64",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "98.00",
            "p50": "96.61",
            "p95": "91.43",
            "p99": "92.62",
            "min": "89.72",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "58.77",
            "p50": "56.42",
            "p95": "53.73",
            "p99": "51.80",
            "min": "50.17",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "158.31",
            "p50": "126.69",
            "p95": "119.00",
            "p99": "135.02",
            "min": "117.45",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "110.14",
            "p50": "107.68",
            "p95": "106.34",
            "p99": "106.85",
            "min": "104.37",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "375.94",
            "p50": "361.90",
            "p95": "336.17",
            "p99": "289.04",
            "min": "288.45",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "509.51",
            "p50": "482.78",
            "p95": "460.25",
            "p99": "395.08",
            "min": "393.73",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "372.68",
            "p50": "358.08",
            "p95": "337.62",
            "p99": "284.53",
            "min": "271.56",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "375.88",
            "p50": "360.17",
            "p95": "329.59",
            "p99": "290.35",
            "min": "286.80",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "376.26",
            "p50": "362.92",
            "p95": "332.28",
            "p99": "302.41",
            "min": "298.65",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "467.43",
            "p50": "446.47",
            "p95": "426.89",
            "p99": "408.89",
            "min": "408.53",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "96.17",
            "p50": "92.45",
            "p95": "88.28",
            "p99": "85.50",
            "min": "85.32",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "96.80",
            "p50": "93.05",
            "p95": "88.92",
            "p99": "88.30",
            "min": "88.29",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "95.35",
            "p50": "91.77",
            "p95": "87.80",
            "p99": "86.66",
            "min": "86.48",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "87.89",
            "p50": "85.22",
            "p95": "81.96",
            "p99": "80.37",
            "min": "80.32",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.53",
            "p50": "85.98",
            "p95": "85.18",
            "p99": "83.98",
            "min": "83.56",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "88.55",
            "p50": "85.27",
            "p95": "80.19",
            "p99": "79.11",
            "min": "79.11",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "84.96",
            "p50": "80.95",
            "p95": "76.29",
            "p99": "75.75",
            "min": "75.74",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "84.33",
            "p50": "81.10",
            "p95": "75.43",
            "p99": "72.73",
            "min": "72.18",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "84.32",
            "p50": "80.76",
            "p95": "75.91",
            "p99": "74.65",
            "min": "74.45",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "367.25",
            "p50": "356.28",
            "p95": "286.66",
            "p99": "227.16",
            "min": "205.66",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "369.37",
            "p50": "356.64",
            "p95": "290.76",
            "p99": "229.03",
            "min": "216.06",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "154.53",
            "p50": "151.75",
            "p95": "139.32",
            "p99": "127.10",
            "min": "126.87",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "475.82",
            "p50": "458.02",
            "p95": "357.21",
            "p99": "301.62",
            "min": "289.64",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "153.97",
            "p50": "151.83",
            "p95": "132.56",
            "p99": "110.66",
            "min": "109.11",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "275.57",
            "p50": "267.37",
            "p95": "223.55",
            "p99": "183.88",
            "min": "157.86",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.93",
            "p50": "95.93",
            "p95": "87.51",
            "p99": "79.82",
            "min": "78.97",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "186.35",
            "p50": "183.97",
            "p95": "180.24",
            "p99": "175.11",
            "min": "172.70",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "414.45",
            "p50": "293.84",
            "p95": "229.27",
            "p99": "204.75",
            "min": "199.63",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "6922.98",
            "p50": "1643.92",
            "p95": "805.83",
            "p99": "697.17",
            "min": "677.89",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "398.16",
            "p50": "287.10",
            "p95": "235.30",
            "p99": "185.46",
            "min": "158.50",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "29042.21",
            "p50": "9464.55",
            "p95": "2700.89",
            "p99": "1987.52",
            "min": "1816.53",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "5314.45",
            "p50": "3123.68",
            "p95": "1626.71",
            "p99": "938.33",
            "min": "931.14",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "321.24",
            "p50": "259.06",
            "p95": "200.59",
            "p99": "157.66",
            "min": "155.25",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "151.45",
            "p50": "133.24",
            "p95": "114.89",
            "p99": "107.72",
            "min": "107.40",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "122.59",
            "p50": "119.12",
            "p95": "98.90",
            "p99": "94.77",
            "min": "94.37",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "129.77",
            "p50": "120.27",
            "p95": "104.92",
            "p99": "103.53",
            "min": "103.50",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "124.03",
            "p50": "120.14",
            "p95": "117.33",
            "p99": "112.27",
            "min": "111.64",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "157.33",
            "p50": "149.21",
            "p95": "147.56",
            "p99": "139.34",
            "min": "134.86",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "96.87",
            "p50": "93.04",
            "p95": "77.54",
            "p99": "75.58",
            "min": "75.38",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "118.51",
            "p50": "111.23",
            "p95": "109.19",
            "p99": "104.44",
            "min": "103.76",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "951.33",
            "p50": "862.56",
            "p95": "642.93",
            "p99": "591.34",
            "min": "585.03",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "124.24",
            "p50": "119.94",
            "p95": "99.88",
            "p99": "97.17",
            "min": "96.83",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}