{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "112.35",
            "p50": "107.42",
            "p95": "99.56",
            "p99": "97.36",
            "min": "97.10",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1096.87",
            "p50": "936.33",
            "p95": "641.94",
            "p99": "553.98",
            "min": "543.40",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "113.45",
            "p50": "107.99",
            "p95": "97.96",
            "p99": "94.84",
            "min": "94.56",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "754.28",
            "p50": "703.23",
            "p95": "476.48",
            "p99": "385.12",
            "min": "358.84",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "403.25",
            "p50": "369.37",
            "p95": "301.15",
            "p99": "274.21",
            "min": "273.13",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "426.67",
            "p50": "395.94",
            "p95": "320.81",
            "p99": "311.62",
            "min": "310.30",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "290.07",
            "p50": "270.69",
            "p95": "191.24",
            "p99": "184.31",
            "min": "183.10",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "183.23",
            "p50": "173.35",
            "p95": "158.06",
            "p99": "152.17",
            "min": "152.16",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "256.35",
            "p50": "235.22",
            "p95": "210.04",
            "p99": "192.51",
            "min": "190.11",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "256.74",
            "p50": "239.58",
            "p95": "211.27",
            "p99": "196.19",
            "min": "195.90",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "256.80",
            "p50": "235.90",
            "p95": "204.81",
            "p99": "200.81",
            "min": "200.60",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "201.87",
            "p50": "190.14",
            "p95": "175.55",
            "p99": "168.12",
            "min": "167.61",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "335.46",
            "p50": "312.96",
            "p95": "262.40",
            "p99": "249.16",
            "min": "246.47",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "297.24",
            "p50": "275.93",
            "p95": "237.34",
            "p99": "228.89",
            "min": "228.40",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8683.33",
            "p50": "3422.25",
            "p95": "2175.58",
            "p99": "1488.71",
            "min": "1417.59",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2946.67",
            "p50": "1697.81",
            "p95": "910.89",
            "p99": "1593.28",
            "min": "864.53",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "326.70",
            "p50": "296.13",
            "p95": "259.48",
            "p99": "251.21",
            "min": "233.50",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1408.45",
            "p50": "743.66",
            "p95": "343.62",
            "p99": "790.78",
            "min": "324.83",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7626.19",
            "p50": "3434.87",
            "p95": "1439.56",
            "p99": "4065.41",
            "min": "1379.21",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "812.42",
            "p50": "696.74",
            "p95": "496.66",
            "p99": "413.39",
            "min": "406.17",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "812.50",
            "p50": "706.87",
            "p95": "518.07",
            "p99": "460.51",
            "min": "447.30",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "949.49",
            "p50": "784.65",
            "p95": "541.72",
            "p99": "493.14",
            "min": "484.47",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2401.55",
            "p50": "1827.01",
            "p95": "939.52",
            "p99": "747.18",
            "min": "738.81",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2362.39",
            "p50": "1754.79",
            "p95": "940.82",
            "p99": "752.08",
            "min": "735.26",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "800.93",
            "p50": "704.63",
            "p95": "541.09",
            "p99": "429.58",
            "min": "420.47",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "169.53",
            "p50": "156.43",
            "p95": "142.64",
            "p99": "102.12",
            "min": "101.71",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "554.87",
            "p50": "490.49",
            "p95": "370.72",
            "p99": "343.82",
            "min": "341.42",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "168.92",
            "p50": "154.74",
            "p95": "141.64",
            "p99": "103.17",
            "min": "102.77",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "190.87",
            "p50": "175.45",
            "p95": "159.55",
            "p99": "118.94",
            "min": "118.52",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "31364.91",
            "p50": "8067.36",
            "p95": "2315.66",
            "p99": "847.31",
            "min": "482.22",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "408.43",
            "p50": "369.14",
            "p95": "310.25",
            "p99": "280.51",
            "min": "278.85",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "392.04",
            "p50": "352.27",
            "p95": "293.74",
            "p99": "187.22",
            "min": "164.52",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "393.72",
            "p50": "356.97",
            "p95": "305.64",
            "p99": "288.86",
            "min": "287.71",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "391.82",
            "p50": "352.04",
            "p95": "302.24",
            "p99": "270.06",
            "min": "267.74",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "17024.76",
            "p50": "5460.02",
            "p95": "2379.08",
            "p99": "1733.38",
            "min": "1616.90",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "16679.66",
            "p50": "5348.76",
            "p95": "2538.83",
            "p99": "1718.09",
            "min": "1370.45",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "15720.20",
            "p50": "5154.82",
            "p95": "2327.67",
            "p99": "1360.79",
            "min": "854.23",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "16824.42",
            "p50": "5411.17",
            "p95": "2559.74",
            "p99": "2254.58",
            "min": "2191.75",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "15846.03",
            "p50": "5017.24",
            "p95": "2359.65",
            "p99": "1595.58",
            "min": "1440.84",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "16872.96",
            "p50": "5993.40",
            "p95": "2560.14",
            "p99": "1862.18",
            "min": "1814.66",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "260.51",
            "p50": "237.25",
            "p95": "209.52",
            "p99": "168.00",
            "min": "159.37",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "516.32",
            "p50": "484.55",
            "p95": "384.18",
            "p99": "345.37",
            "min": "330.78",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1634.89",
            "p50": "1386.28",
            "p95": "362.75",
            "p99": "293.09",
            "min": "292.64",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "23083.71",
            "p50": "5148.12",
            "p95": "191.91",
            "p99": "160.30",
            "min": "156.12",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1397.38",
            "p50": "1238.24",
            "p95": "761.66",
            "p99": "603.80",
            "min": "579.98",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "54274.43",
            "p50": "9047.10",
            "p95": "2418.43",
            "p99": "1652.10",
            "min": "1538.64",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13574.94",
            "p50": "6193.98",
            "p95": "183.25",
            "p99": "164.32",
            "min": "159.30",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "561.86",
            "p50": "489.02",
            "p95": "382.47",
            "p99": "355.86",
            "min": "355.35",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "546.09",
            "p50": "495.55",
            "p95": "383.30",
            "p99": "356.82",
            "min": "353.50",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "199.51",
            "p50": "189.38",
            "p95": "169.99",
            "p99": "134.22",
            "min": "122.88",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "382.89",
            "p50": "354.74",
            "p95": "303.68",
            "p99": "276.86",
            "min": "273.56",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "199.40",
            "p50": "189.62",
            "p95": "172.74",
            "p99": "128.95",
            "min": "128.89",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "336.14",
            "p50": "313.10",
            "p95": "253.60",
            "p99": "222.21",
            "min": "205.25",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "260.37",
            "p50": "241.49",
            "p95": "217.94",
            "p99": "203.92",
            "min": "202.82",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "567.12",
            "p50": "518.23",
            "p95": "397.71",
            "p99": "348.49",
            "min": "343.39",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1420.90",
            "p50": "1192.71",
            "p95": "901.99",
            "p99": "667.09",
            "min": "663.93",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "287.21",
            "p50": "270.37",
            "p95": "236.22",
            "p99": "82.68",
            "min": "82.37",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "139.34",
            "p50": "131.04",
            "p95": "117.60",
            "p99": "113.08",
            "min": "112.77",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "140.05",
            "p50": "129.87",
            "p95": "114.06",
            "p99": "105.25",
            "min": "103.60",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "138.37",
            "p50": "130.67",
            "p95": "116.44",
            "p99": "100.05",
            "min": "97.07",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "247.59",
            "p50": "225.68",
            "p95": "183.97",
            "p99": "159.31",
            "min": "150.94",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "187.01",
            "p50": "174.92",
            "p95": "155.35",
            "p99": "145.49",
            "min": "144.59",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "204.42",
            "p50": "186.89",
            "p95": "163.04",
            "p99": "153.45",
            "min": "152.71",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "186.77",
            "p50": "172.26",
            "p95": "148.63",
            "p99": "140.67",
            "min": "140.42",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "184.78",
            "p50": "166.56",
            "p95": "147.52",
            "p99": "127.87",
            "min": "124.97",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "206.47",
            "p50": "189.31",
            "p95": "158.74",
            "p99": "75.15",
            "min": "43.84",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "181.63",
            "p50": "166.98",
            "p95": "145.23",
            "p99": "133.80",
            "min": "132.81",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "203.01",
            "p50": "187.93",
            "p95": "162.47",
            "p99": "153.13",
            "min": "152.90",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "151.91",
            "p50": "141.16",
            "p95": "125.80",
            "p99": "114.41",
            "min": "112.95",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "228.95",
            "p50": "208.51",
            "p95": "183.69",
            "p99": "166.97",
            "min": "163.39",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "182.82",
            "p50": "167.63",
            "p95": "143.71",
            "p99": "136.95",
            "min": "136.22",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "102.92",
            "p50": "94.82",
            "p95": "84.84",
            "p99": "80.72",
            "min": "79.75",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "138.45",
            "p50": "128.72",
            "p95": "113.48",
            "p99": "119.99",
            "min": "110.04",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "437.74",
            "p50": "343.57",
            "p95": "225.97",
            "p99": "249.27",
            "min": "205.06",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "172.57",
            "p50": "138.88",
            "p95": "133.62",
            "p99": "150.03",
            "min": "133.02",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "129.44",
            "p50": "121.53",
            "p95": "112.41",
            "p99": "116.84",
            "min": "107.32",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1167.79",
            "p50": "930.14",
            "p95": "528.43",
            "p99": "427.57",
            "min": "416.41",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1023.65",
            "p50": "809.10",
            "p95": "552.76",
            "p99": "409.69",
            "min": "409.11",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1417.67",
            "p50": "1052.04",
            "p95": "555.81",
            "p99": "430.72",
            "min": "412.64",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1257.49",
            "p50": "949.89",
            "p95": "600.37",
            "p99": "431.19",
            "min": "429.45",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1280.20",
            "p50": "946.12",
            "p95": "515.02",
            "p99": "453.77",
            "min": "440.79",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1050.64",
            "p50": "839.22",
            "p95": "499.34",
            "p99": "430.81",
            "min": "426.50",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "679.06",
            "p50": "547.92",
            "p95": "404.92",
            "p99": "278.65",
            "min": "260.06",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "694.99",
            "p50": "547.25",
            "p95": "387.30",
            "p99": "325.07",
            "min": "317.95",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "677.13",
            "p50": "552.62",
            "p95": "422.88",
            "p99": "359.05",
            "min": "358.94",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "677.94",
            "p50": "563.01",
            "p95": "366.59",
            "p99": "306.48",
            "min": "302.25",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "289.70",
            "p50": "261.68",
            "p95": "208.69",
            "p99": "195.34",
            "min": "194.94",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "613.84",
            "p50": "480.91",
            "p95": "343.05",
            "p99": "282.17",
            "min": "281.52",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "605.02",
            "p50": "481.25",
            "p95": "368.96",
            "p99": "322.89",
            "min": "321.91",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "605.31",
            "p50": "489.34",
            "p95": "336.16",
            "p99": "247.73",
            "min": "240.76",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "616.29",
            "p50": "506.26",
            "p95": "332.17",
            "p99": "254.73",
            "min": "246.13",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.84",
            "p50": "100.70",
            "p95": "91.74",
            "p99": "87.29",
            "min": "86.39",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.71",
            "p50": "101.00",
            "p95": "90.37",
            "p99": "87.96",
            "min": "87.43",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.47",
            "p50": "93.59",
            "p95": "84.54",
            "p99": "81.18",
            "min": "81.06",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "252.03",
            "p50": "231.70",
            "p95": "194.60",
            "p99": "175.22",
            "min": "168.32",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.42",
            "p50": "93.55",
            "p95": "85.29",
            "p99": "83.50",
            "min": "83.50",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "244.54",
            "p50": "221.99",
            "p95": "183.95",
            "p99": "167.50",
            "min": "164.24",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "205.00",
            "p50": "190.61",
            "p95": "162.85",
            "p99": "135.81",
            "min": "131.05",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "234.14",
            "p50": "217.89",
            "p95": "182.72",
            "p99": "103.20",
            "min": "43.92",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "576.50",
            "p50": "492.46",
            "p95": "358.93",
            "p99": "320.62",
            "min": "317.83",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5506.82",
            "p50": "2624.75",
            "p95": "1207.84",
            "p99": "859.57",
            "min": "694.30",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "534.75",
            "p50": "474.60",
            "p95": "340.73",
            "p99": "326.10",
            "min": "322.65",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14828.53",
            "p50": "4269.79",
            "p95": "1426.00",
            "p99": "719.12",
            "min": "607.18",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3661.46",
            "p50": "2092.80",
            "p95": "881.12",
            "p99": "667.76",
            "min": "641.05",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "229.85",
            "p50": "199.10",
            "p95": "164.91",
            "p99": "139.60",
            "min": "133.63",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "259.95",
            "p50": "235.93",
            "p95": "192.73",
            "p99": "178.70",
            "min": "178.07",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "150.21",
            "p50": "141.82",
            "p95": "121.49",
            "p99": "92.01",
            "min": "81.53",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "243.91",
            "p50": "221.61",
            "p95": "183.38",
            "p99": "144.76",
            "min": "142.99",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "182.55",
            "p50": "169.59",
            "p95": "142.64",
            "p99": "89.29",
            "min": "82.43",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "218.30",
            "p50": "202.44",
            "p95": "162.51",
            "p99": "135.54",
            "min": "133.03",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "204.54",
            "p50": "192.25",
            "p95": "149.68",
            "p99": "133.48",
            "min": "133.41",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "208.60",
            "p50": "189.65",
            "p95": "158.14",
            "p99": "117.86",
            "min": "110.32",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1294.33",
            "p50": "1080.41",
            "p95": "688.12",
            "p99": "590.55",
            "min": "567.56",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "179.34",
            "p50": "168.15",
            "p95": "149.26",
            "p99": "132.85",
            "min": "130.09",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "189.61",
            "p50": "187.09",
            "p95": "175.91",
            "p99": "163.53",
            "min": "162.45",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "189.32",
            "p50": "186.75",
            "p95": "174.63",
            "p99": "167.08",
            "min": "166.57",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "190.29",
            "p50": "187.49",
            "p95": "176.66",
            "p99": "162.90",
            "min": "160.36",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1149.30",
            "p50": "1120.83",
            "p95": "855.95",
            "p99": "761.20",
            "min": "760.77",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "617.41",
            "p50": "602.93",
            "p95": "505.77",
            "p99": "275.97",
            "min": "255.99",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "668.24",
            "p50": "652.33",
            "p95": "564.14",
            "p99": "448.64",
            "min": "442.22",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "759.62",
            "p50": "742.91",
            "p95": "585.82",
            "p99": "507.15",
            "min": "503.87",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "822.84",
            "p50": "807.50",
            "p95": "644.68",
            "p99": "463.89",
            "min": "436.09",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "914.17",
            "p50": "894.43",
            "p95": "697.36",
            "p99": "573.03",
            "min": "568.17",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "851.70",
            "p50": "822.38",
            "p95": "653.73",
            "p99": "230.58",
            "min": "177.90",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "874.14",
            "p50": "852.00",
            "p95": "640.45",
            "p99": "523.35",
            "min": "508.01",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "837.67",
            "p50": "819.67",
            "p95": "630.65",
            "p99": "481.37",
            "min": "477.36",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "764.97",
            "p50": "749.85",
            "p95": "577.32",
            "p99": "546.68",
            "min": "545.11",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "858.62",
            "p50": "819.84",
            "p95": "617.95",
            "p99": "496.02",
            "min": "495.60",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "117.53",
            "p50": "111.59",
            "p95": "108.72",
            "p99": "103.04",
            "min": "102.86",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "90.91",
            "p50": "89.78",
            "p95": "86.89",
            "p99": "86.21",
            "min": "83.68",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "621.96",
            "p50": "609.55",
            "p95": "495.87",
            "p99": "421.69",
            "min": "374.72",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "122.28",
            "p50": "97.49",
            "p95": "91.17",
            "p99": "103.49",
            "min": "89.32",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "84.44",
            "p50": "82.79",
            "p95": "80.08",
            "p99": "81.59",
            "min": "79.45",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1905.71",
            "p50": "1836.47",
            "p95": "974.70",
            "p99": "683.83",
            "min": "678.26",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1624.32",
            "p50": "1586.54",
            "p95": "1198.86",
            "p99": "808.77",
            "min": "719.53",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2460.75",
            "p50": "2371.64",
            "p95": "1300.06",
            "p99": "1003.70",
            "min": "930.30",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2460.44",
            "p50": "2325.50",
            "p95": "1405.65",
            "p99": "1126.00",
            "min": "1097.26",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2443.95",
            "p50": "2330.86",
            "p95": "1463.55",
            "p99": "1156.05",
            "min": "1108.30",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1684.74",
            "p50": "1629.70",
            "p95": "1017.60",
            "p99": "676.47",
            "min": "667.85",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "695.46",
            "p50": "681.59",
            "p95": "525.65",
            "p99": "448.85",
            "min": "437.78",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "678.62",
            "p50": "667.66",
            "p95": "580.21",
            "p99": "472.06",
            "min": "471.28",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "699.23",
            "p50": "684.63",
            "p95": "525.64",
            "p99": "408.61",
            "min": "397.92",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "520.17",
            "p50": "511.01",
            "p95": "462.59",
            "p99": "393.41",
            "min": "385.11",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.44",
            "p50": "85.12",
            "p95": "38.21",
            "p99": "37.96",
            "min": "37.89",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "824.72",
            "p50": "801.98",
            "p95": "598.57",
            "p99": "516.39",
            "min": "500.19",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "772.88",
            "p50": "758.61",
            "p95": "570.34",
            "p99": "446.95",
            "min": "446.12",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "780.71",
            "p50": "754.31",
            "p95": "595.43",
            "p99": "520.32",
            "min": "511.06",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "779.21",
            "p50": "762.00",
            "p95": "647.68",
            "p99": "453.95",
            "min": "431.56",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2399.98",
            "p50": "2296.27",
            "p95": "1426.92",
            "p99": "1052.57",
            "min": "957.48",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2752.02",
            "p50": "2619.59",
            "p95": "1573.92",
            "p99": "1161.43",
            "min": "1106.10",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "105.33",
            "p50": "104.02",
            "p95": "99.59",
            "p99": "97.45",
            "min": "96.94",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "15198.58",
            "p50": "6753.90",
            "p95": "2420.53",
            "p99": "1583.15",
            "min": "1437.61",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "105.75",
            "p50": "104.02",
            "p95": "99.63",
            "p99": "96.44",
            "min": "96.16",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "6144.51",
            "p50": "5529.40",
            "p95": "2274.04",
            "p99": "1814.03",
            "min": "1803.53",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "874.17",
            "p50": "855.95",
            "p95": "681.23",
            "p99": "647.48",
            "min": "645.98",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "657.24",
            "p50": "645.20",
            "p95": "575.29",
            "p99": "503.76",
            "min": "495.61",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2432.28",
            "p50": "2298.98",
            "p95": "1450.68",
            "p99": "878.63",
            "min": "831.36",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "14518.66",
            "p50": "9239.36",
            "p95": "2323.99",
            "p99": "2223.18",
            "min": "2216.69",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2280.03",
            "p50": "2167.60",
            "p95": "1411.56",
            "p99": "719.67",
            "min": "663.14",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "75567.91",
            "p50": "8827.41",
            "p95": "2418.01",
            "p99": "1793.23",
            "min": "1326.91",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13283.78",
            "p50": "7968.27",
            "p95": "2420.90",
            "p99": "1829.52",
            "min": "1429.84",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "778.96",
            "p50": "616.70",
            "p95": "532.99",
            "p99": "479.42",
            "min": "476.40",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "931.93",
            "p50": "910.93",
            "p95": "657.21",
            "p99": "544.84",
            "min": "517.59",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "821.50",
            "p50": "801.68",
            "p95": "614.14",
            "p99": "482.57",
            "min": "463.79",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1180.80",
            "p50": "1142.59",
            "p95": "888.30",
            "p99": "335.81",
            "min": "173.41",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "832.01",
            "p50": "817.10",
            "p95": "561.30",
            "p99": "452.31",
            "min": "443.27",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1164.36",
            "p50": "1132.92",
            "p95": "799.46",
            "p99": "699.22",
            "min": "673.99",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "822.91",
            "p50": "806.84",
            "p95": "572.56",
            "p99": "442.54",
            "min": "431.26",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "881.50",
            "p50": "856.52",
            "p95": "688.52",
            "p99": "534.54",
            "min": "528.24",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1977.90",
            "p50": "1755.52",
            "p95": "1431.74",
            "p99": "910.12",
            "min": "775.76",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "872.25",
            "p50": "847.13",
            "p95": "650.61",
            "p99": "502.59",
            "min": "487.26",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "122.53",
            "p50": "116.52",
            "p95": "101.19",
            "p99": "93.73",
            "min": "93.19",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "121.98",
            "p50": "117.30",
            "p95": "104.90",
            "p99": "96.22",
            "min": "95.97",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "121.91",
            "p50": "116.74",
            "p95": "102.34",
            "p99": "96.12",
            "min": "95.53",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "207.03",
            "p50": "189.07",
            "p95": "153.89",
            "p99": "142.88",
            "min": "141.92",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "101.56",
            "p50": "96.63",
            "p95": "83.21",
            "p99": "72.95",
            "min": "70.96",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "107.37",
            "p50": "101.47",
            "p95": "85.62",
            "p99": "81.65",
            "min": "81.48",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "136.70",
            "p50": "124.71",
            "p95": "98.67",
            "p99": "72.08",
            "min": "71.13",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "135.98",
            "p50": "128.78",
            "p95": "106.76",
            "p99": "90.62",
            "min": "87.88",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "180.37",
            "p50": "164.39",
            "p95": "127.94",
            "p99": "114.84",
            "min": "113.43",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "176.49",
            "p50": "163.38",
            "p95": "134.75",
            "p99": "121.42",
            "min": "120.84",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "178.67",
            "p50": "162.91",
            "p95": "126.99",
            "p99": "92.89",
            "min": "86.35",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.75",
            "p50": "118.70",
            "p95": "100.28",
            "p99": "73.40",
            "min": "68.14",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "200.91",
            "p50": "180.37",
            "p95": "143.48",
            "p99": "123.27",
            "min": "120.79",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "179.79",
            "p50": "167.01",
            "p95": "134.01",
            "p99": "126.75",
            "min": "126.64",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "74.48",
            "p50": "69.91",
            "p95": "64.09",
            "p99": "60.64",
            "min": "60.30",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "130.56",
            "p50": "119.33",
            "p95": "99.07",
            "p99": "108.16",
            "min": "96.10",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "207.42",
            "p50": "182.90",
            "p95": "147.60",
            "p99": "145.88",
            "min": "131.45",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "153.97",
            "p50": "132.62",
            "p95": "129.16",
            "p99": "136.64",
            "min": "123.56",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "122.55",
            "p50": "114.68",
            "p95": "96.13",
            "p99": "107.31",
            "min": "95.82",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1023.68",
            "p50": "683.27",
            "p95": "341.53",
            "p99": "276.30",
            "min": "273.91",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1003.22",
            "p50": "646.36",
            "p95": "332.05",
            "p99": "252.81",
            "min": "249.55",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1118.47",
            "p50": "692.99",
            "p95": "349.90",
            "p99": "302.27",
            "min": "281.57",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1050.68",
            "p50": "681.68",
            "p95": "329.60",
            "p99": "273.04",
            "min": "261.02",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "986.26",
            "p50": "693.81",
            "p95": "339.42",
            "p99": "260.40",
            "min": "254.37",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "994.85",
            "p50": "666.03",
            "p95": "299.47",
            "p99": "248.55",
            "min": "243.45",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "326.20",
            "p50": "282.56",
            "p95": "196.95",
            "p99": "179.08",
            "min": "177.44",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "328.36",
            "p50": "276.38",
            "p95": "189.82",
            "p99": "170.90",
            "min": "170.48",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "328.28",
            "p50": "279.44",
            "p95": "201.54",
            "p99": "173.83",
            "min": "172.35",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "353.99",
            "p50": "306.01",
            "p95": "212.94",
            "p99": "193.66",
            "min": "192.17",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "284.16",
            "p50": "243.88",
            "p95": "181.87",
            "p99": "152.96",
            "min": "147.05",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "278.46",
            "p50": "240.76",
            "p95": "183.12",
            "p99": "160.19",
            "min": "158.23",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "267.33",
            "p50": "240.57",
            "p95": "178.65",
            "p99": "164.88",
            "min": "164.63",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "274.62",
            "p50": "241.01",
            "p95": "175.84",
            "p99": "161.43",
            "min": "160.91",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "286.58",
            "p50": "243.41",
            "p95": "185.32",
            "p99": "161.70",
            "min": "160.87",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "104.39",
            "p50": "98.03",
            "p95": "86.28",
            "p99": "81.27",
            "min": "80.27",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "103.52",
            "p50": "97.48",
            "p95": "86.36",
            "p99": "81.46",
            "min": "81.44",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "96.62",
            "p50": "90.73",
            "p95": "78.93",
            "p99": "76.55",
            "min": "76.45",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "246.49",
            "p50": "217.25",
            "p95": "165.58",
            "p99": "144.40",
            "min": "141.00",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "95.41",
            "p50": "90.46",
            "p95": "80.46",
            "p99": "76.38",
            "min": "76.05",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "238.10",
            "p50": "209.62",
            "p95": "163.31",
            "p99": "146.99",
            "min": "146.73",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "182.02",
            "p50": "165.09",
            "p95": "134.59",
            "p99": "118.90",
            "min": "117.84",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "150.81",
            "p50": "139.62",
            "p95": "111.97",
            "p99": "78.58",
            "min": "55.47",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "436.57",
            "p50": "379.24",
            "p95": "264.06",
            "p99": "227.83",
            "min": "223.27",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5201.51",
            "p50": "2122.03",
            "p95": "633.82",
            "p99": "492.66",
            "min": "490.50",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "437.96",
            "p50": "379.45",
            "p95": "272.95",
            "p99": "215.63",
            "min": "212.04",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "12669.92",
            "p50": "2891.17",
            "p95": "1106.74",
            "p99": "721.38",
            "min": "626.90",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3293.21",
            "p50": "1852.19",
            "p95": "671.00",
            "p99": "568.59",
            "min": "540.32",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "204.80",
            "p50": "187.62",
            "p95": "148.49",
            "p99": "133.52",
            "min": "128.21",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "230.54",
            "p50": "211.63",
            "p95": "169.70",
            "p99": "151.88",
            "min": "151.54",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "129.62",
            "p50": "120.15",
            "p95": "99.42",
            "p99": "75.29",
            "min": "73.62",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "207.82",
            "p50": "184.54",
            "p95": "136.04",
            "p99": "123.98",
            "min": "119.99",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "135.69",
            "p50": "127.33",
            "p95": "99.55",
            "p99": "68.91",
            "min": "68.82",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "172.99",
            "p50": "158.26",
            "p95": "127.68",
            "p99": "113.21",
            "min": "111.52",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "176.12",
            "p50": "161.29",
            "p95": "126.86",
            "p99": "114.11",
            "min": "112.43",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "180.57",
            "p50": "162.87",
            "p95": "128.21",
            "p99": "102.36",
            "min": "94.49",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "299.29",
            "p50": "248.34",
            "p95": "57.20",
            "p99": "49.24",
            "min": "49.07",
            "n": "104",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "144.23",
            "p50": "136.63",
            "p95": "90.78",
            "p99": "58.10",
            "min": "58.06",
            "n": "107",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "86.12",
            "p50": "83.20",
            "p95": "77.18",
            "p99": "73.75",
            "min": "73.51",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "87.77",
            "p50": "84.60",
            "p95": "82.35",
            "p99": "79.43",
            "min": "79.35",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "87.02",
            "p50": "83.97",
            "p95": "78.12",
            "p99": "74.87",
            "min": "74.81",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "234.25",
            "p50": "178.49",
            "p95": "173.27",
            "p99": "151.69",
            "min": "136.99",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "95.51",
            "p50": "94.52",
            "p95": "89.11",
            "p99": "86.36",
            "min": "86.21",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.16",
            "p50": "109.02",
            "p95": "105.24",
            "p99": "101.30",
            "min": "100.86",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "119.86",
            "p50": "117.77",
            "p95": "108.01",
            "p99": "103.57",
            "min": "103.46",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "124.87",
            "p50": "119.20",
            "p95": "108.73",
            "p99": "105.67",
            "min": "105.65",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "93.78",
            "p50": "92.08",
            "p95": "75.72",
            "p99": "73.88",
            "min": "73.83",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "99.26",
            "p50": "97.27",
            "p95": "93.23",
            "p99": "90.64",
            "min": "90.35",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "99.98",
            "p50": "97.73",
            "p95": "95.15",
            "p99": "94.42",
            "min": "94.41",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "124.96",
            "p50": "119.64",
            "p95": "115.85",
            "p99": "110.81",
            "min": "110.39",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "133.94",
            "p50": "131.62",
            "p95": "122.07",
            "p99": "116.56",
            "min": "115.15",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "112.79",
            "p50": "111.14",
            "p95": "101.86",
            "p99": "96.35",
            "min": "95.66",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "88.45",
            "p50": "83.85",
            "p95": "77.62",
            "p99": "74.62",
            "min": "74.60",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "101.33",
            "p50": "99.59",
            "p95": "96.20",
            "p99": "95.37",
            "min": "92.16",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "75.31",
            "p50": "73.80",
            "p95": "69.67",
            "p99": "64.43",
            "min": "61.88",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "156.21",
            "p50": "124.94",
            "p95": "116.72",
            "p99": "133.00",
            "min": "115.49",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "108.14",
            "p50": "106.10",
            "p95": "103.63",
            "p99": "104.64",
            "min": "102.00",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "424.51",
            "p50": "412.13",
            "p95": "378.85",
            "p99": "323.35",
            "min": "312.07",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "479.13",
            "p50": "468.54",
            "p95": "431.61",
            "p99": "340.15",
            "min": "319.38",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "454.43",
            "p50": "443.01",
            "p95": "421.63",
            "p99": "339.14",
            "min": "333.28",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "459.89",
            "p50": "448.91",
            "p95": "417.63",
            "p99": "383.61",
            "min": "372.05",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "462.06",
            "p50": "451.19",
            "p95": "416.00",
            "p99": "362.74",
            "min": "347.11",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "463.64",
            "p50": "452.64",
            "p95": "430.12",
            "p99": "393.79",
            "min": "391.73",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "121.72",
            "p50": "118.71",
            "p95": "114.52",
            "p99": "112.62",
            "min": "112.55",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "121.84",
            "p50": "119.51",
            "p95": "115.06",
            "p99": "111.63",
            "min": "111.04",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "120.04",
            "p50": "117.27",
            "p95": "113.35",
            "p99": "107.11",
            "min": "105.71",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "103.47",
            "p50": "100.93",
            "p95": "98.44",
            "p99": "92.43",
            "min": "91.73",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "85.60",
            "p50": "84.32",
            "p95": "83.03",
            "p99": "82.05",
            "min": "81.85",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "120.22",
            "p50": "117.70",
            "p95": "111.89",
            "p99": "109.57",
            "min": "109.42",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "113.84",
            "p50": "111.38",
            "p95": "106.18",
            "p99": "104.09",
            "min": "103.55",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "113.80",
            "p50": "111.85",
            "p95": "106.75",
            "p99": "102.19",
            "min": "101.21",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "113.67",
            "p50": "111.62",
            "p95": "106.78",
            "p99": "102.94",
            "min": "102.28",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1578.92",
            "p50": "1434.17",
            "p95": "805.59",
            "p99": "583.52",
            "min": "521.82",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1569.93",
            "p50": "1442.88",
            "p95": "751.91",
            "p99": "518.51",
            "min": "442.37",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.77",
            "p50": "151.86",
            "p95": "140.76",
            "p99": "127.30",
            "min": "125.81",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3948.04",
            "p50": "3598.36",
            "p95": "1361.41",
            "p99": "539.59",
            "min": "408.48",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "155.44",
            "p50": "151.46",
            "p95": "138.74",
            "p99": "124.86",
            "min": "124.30",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3917.53",
            "p50": "3587.63",
            "p95": "1222.84",
            "p99": "416.05",
            "min": "375.34",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "100.01",
            "p50": "98.28",
            "p95": "91.15",
            "p99": "85.86",
            "min": "85.02",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "175.10",
            "p50": "169.80",
            "p95": "166.85",
            "p99": "158.01",
            "min": "156.82",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "343.17",
            "p50": "253.42",
            "p95": "205.26",
            "p99": "186.92",
            "min": "180.62",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9643.59",
            "p50": "1621.83",
            "p95": "855.74",
            "p99": "597.11",
            "min": "569.47",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "346.99",
            "p50": "258.76",
            "p95": "211.36",
            "p99": "164.22",
            "min": "142.47",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "25129.36",
            "p50": "8453.58",
            "p95": "2480.04",
            "p99": "2004.76",
            "min": "1735.30",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "5931.46",
            "p50": "3206.07",
            "p95": "1166.64",
            "p99": "542.28",
            "min": "268.06",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "291.31",
            "p50": "235.47",
            "p95": "178.70",
            "p99": "138.09",
            "min": "129.16",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "153.71",
            "p50": "133.17",
            "p95": "114.62",
            "p99": "109.67",
            "min": "109.40",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "120.72",
            "p50": "116.52",
            "p95": "95.91",
            "p99": "88.51",
            "min": "87.22",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "124.79",
            "p50": "118.37",
            "p95": "101.58",
            "p99": "98.99",
            "min": "98.97",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "120.91",
            "p50": "117.35",
            "p95": "113.67",
            "p99": "107.27",
            "min": "106.16",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "151.89",
            "p50": "146.66",
            "p95": "142.77",
            "p99": "137.62",
            "min": "135.45",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "95.09",
            "p50": "91.80",
            "p95": "73.97",
            "p99": "71.87",
            "min": "71.69",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "126.66",
            "p50": "115.63",
            "p95": "111.42",
            "p99": "108.44",
            "min": "107.18",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1195.23",
            "p50": "1096.66",
            "p95": "382.90",
            "p99": "369.22",
            "min": "368.36",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "122.16",
            "p50": "119.22",
            "p95": "101.99",
            "p99": "91.37",
            "min": "90.19",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}