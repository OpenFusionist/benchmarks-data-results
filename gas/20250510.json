{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "112.39",
            "p50": "107.71",
            "p95": "98.40",
            "p99": "93.03",
            "min": "92.95",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1117.07",
            "p50": "940.15",
            "p95": "657.38",
            "p99": "484.32",
            "min": "478.56",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "113.49",
            "p50": "107.95",
            "p95": "100.35",
            "p99": "95.60",
            "min": "95.24",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "755.03",
            "p50": "702.29",
            "p95": "471.00",
            "p99": "427.33",
            "min": "423.24",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "401.34",
            "p50": "370.76",
            "p95": "308.53",
            "p99": "272.28",
            "min": "268.58",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "426.27",
            "p50": "392.70",
            "p95": "320.07",
            "p99": "313.72",
            "min": "313.44",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "291.22",
            "p50": "273.20",
            "p95": "196.12",
            "p99": "189.00",
            "min": "188.86",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "181.50",
            "p50": "172.24",
            "p95": "157.32",
            "p99": "125.60",
            "min": "124.26",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "255.99",
            "p50": "236.07",
            "p95": "213.27",
            "p99": "205.29",
            "min": "204.24",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "260.43",
            "p50": "244.05",
            "p95": "212.12",
            "p99": "195.52",
            "min": "192.67",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "257.38",
            "p50": "239.41",
            "p95": "207.29",
            "p99": "201.02",
            "min": "200.57",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "202.18",
            "p50": "192.03",
            "p95": "177.31",
            "p99": "168.86",
            "min": "168.47",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "333.70",
            "p50": "317.65",
            "p95": "273.79",
            "p99": "247.55",
            "min": "241.98",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "297.82",
            "p50": "276.84",
            "p95": "232.94",
            "p99": "220.94",
            "min": "219.60",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8700.10",
            "p50": "3595.72",
            "p95": "1908.73",
            "p99": "1541.38",
            "min": "1527.58",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2914.88",
            "p50": "1652.12",
            "p95": "870.82",
            "p99": "1562.37",
            "min": "834.10",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "324.68",
            "p50": "293.86",
            "p95": "248.72",
            "p99": "241.10",
            "min": "221.49",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1423.83",
            "p50": "747.15",
            "p95": "326.06",
            "p99": "792.33",
            "min": "315.92",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7014.50",
            "p50": "3308.07",
            "p95": "1508.74",
            "p99": "3815.33",
            "min": "1401.91",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "822.21",
            "p50": "696.54",
            "p95": "504.78",
            "p99": "481.80",
            "min": "481.18",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "805.07",
            "p50": "734.58",
            "p95": "546.87",
            "p99": "453.92",
            "min": "452.22",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "948.21",
            "p50": "800.45",
            "p95": "563.64",
            "p99": "455.50",
            "min": "445.84",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2397.69",
            "p50": "1828.46",
            "p95": "903.03",
            "p99": "758.40",
            "min": "742.26",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2365.37",
            "p50": "1763.18",
            "p95": "897.60",
            "p99": "730.55",
            "min": "707.95",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "807.07",
            "p50": "727.71",
            "p95": "560.93",
            "p99": "471.71",
            "min": "435.18",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "172.02",
            "p50": "155.08",
            "p95": "143.92",
            "p99": "130.24",
            "min": "128.76",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "552.10",
            "p50": "475.02",
            "p95": "392.44",
            "p99": "333.72",
            "min": "331.32",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "167.05",
            "p50": "153.48",
            "p95": "141.92",
            "p99": "137.53",
            "min": "137.05",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "188.98",
            "p50": "170.50",
            "p95": "155.65",
            "p99": "149.04",
            "min": "148.09",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "33812.08",
            "p50": "8245.76",
            "p95": "2492.25",
            "p99": "1378.98",
            "min": "1165.85",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "412.28",
            "p50": "371.30",
            "p95": "303.53",
            "p99": "285.05",
            "min": "284.32",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "396.91",
            "p50": "351.73",
            "p95": "295.51",
            "p99": "280.02",
            "min": "279.90",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "400.26",
            "p50": "352.69",
            "p95": "299.92",
            "p99": "292.41",
            "min": "292.23",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "400.91",
            "p50": "349.09",
            "p95": "299.58",
            "p99": "279.23",
            "min": "277.35",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "16634.77",
            "p50": "5725.87",
            "p95": "2436.11",
            "p99": "1567.94",
            "min": "1438.73",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "16906.60",
            "p50": "5654.65",
            "p95": "2359.25",
            "p99": "1466.23",
            "min": "1457.73",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "16487.65",
            "p50": "5056.59",
            "p95": "2362.41",
            "p99": "1574.14",
            "min": "1421.85",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "16646.60",
            "p50": "5282.67",
            "p95": "2400.35",
            "p99": "1836.72",
            "min": "1762.53",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "15971.55",
            "p50": "5050.44",
            "p95": "2382.62",
            "p99": "1737.49",
            "min": "1590.30",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "16729.94",
            "p50": "5510.39",
            "p95": "2436.11",
            "p99": "2289.23",
            "min": "2288.80",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "260.46",
            "p50": "239.02",
            "p95": "212.73",
            "p99": "200.15",
            "min": "199.92",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "515.35",
            "p50": "486.36",
            "p95": "379.11",
            "p99": "346.16",
            "min": "332.87",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1620.56",
            "p50": "1339.63",
            "p95": "347.44",
            "p99": "289.14",
            "min": "283.01",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "21572.53",
            "p50": "4771.18",
            "p95": "297.32",
            "p99": "243.33",
            "min": "238.51",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1415.33",
            "p50": "1199.51",
            "p95": "798.39",
            "p99": "648.77",
            "min": "646.92",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "53343.68",
            "p50": "8682.90",
            "p95": "2319.97",
            "p99": "998.62",
            "min": "364.20",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "11890.38",
            "p50": "6181.87",
            "p95": "287.73",
            "p99": "256.34",
            "min": "250.24",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "552.81",
            "p50": "482.93",
            "p95": "370.76",
            "p99": "307.90",
            "min": "300.53",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "544.87",
            "p50": "510.75",
            "p95": "391.98",
            "p99": "348.84",
            "min": "339.85",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "200.14",
            "p50": "190.69",
            "p95": "173.26",
            "p99": "168.47",
            "min": "167.59",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "384.05",
            "p50": "357.89",
            "p95": "291.56",
            "p99": "230.47",
            "min": "208.65",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "199.54",
            "p50": "190.27",
            "p95": "174.60",
            "p99": "167.48",
            "min": "166.91",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "334.42",
            "p50": "316.80",
            "p95": "270.50",
            "p99": "243.66",
            "min": "237.39",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "257.22",
            "p50": "242.53",
            "p95": "220.35",
            "p99": "198.84",
            "min": "197.51",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "567.41",
            "p50": "524.64",
            "p95": "399.14",
            "p99": "362.25",
            "min": "361.13",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1458.40",
            "p50": "1230.30",
            "p95": "937.83",
            "p99": "759.29",
            "min": "753.88",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "287.24",
            "p50": "268.98",
            "p95": "236.14",
            "p99": "218.20",
            "min": "217.21",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "140.66",
            "p50": "132.43",
            "p95": "117.96",
            "p99": "112.71",
            "min": "112.32",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "138.47",
            "p50": "132.14",
            "p95": "116.40",
            "p99": "99.36",
            "min": "95.38",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "139.65",
            "p50": "131.94",
            "p95": "114.65",
            "p99": "112.82",
            "min": "112.81",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "248.17",
            "p50": "231.60",
            "p95": "200.27",
            "p99": "181.09",
            "min": "177.00",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "192.36",
            "p50": "178.67",
            "p95": "150.58",
            "p99": "114.75",
            "min": "107.12",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "202.47",
            "p50": "189.18",
            "p95": "159.00",
            "p99": "118.88",
            "min": "110.27",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "188.12",
            "p50": "174.52",
            "p95": "151.78",
            "p99": "133.63",
            "min": "130.55",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "183.05",
            "p50": "170.42",
            "p95": "150.84",
            "p99": "142.86",
            "min": "141.16",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "209.93",
            "p50": "193.02",
            "p95": "160.42",
            "p99": "152.78",
            "min": "151.30",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "181.40",
            "p50": "170.49",
            "p95": "148.34",
            "p99": "137.69",
            "min": "137.62",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "208.84",
            "p50": "192.51",
            "p95": "157.03",
            "p99": "140.32",
            "min": "137.18",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "151.58",
            "p50": "142.44",
            "p95": "127.16",
            "p99": "86.57",
            "min": "77.84",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "228.86",
            "p50": "212.91",
            "p95": "187.15",
            "p99": "168.61",
            "min": "165.19",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "181.86",
            "p50": "171.07",
            "p95": "148.71",
            "p99": "136.81",
            "min": "136.41",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "103.09",
            "p50": "95.18",
            "p95": "87.94",
            "p99": "80.52",
            "min": "78.62",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "137.18",
            "p50": "131.21",
            "p95": "121.59",
            "p99": "123.39",
            "min": "115.96",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "431.85",
            "p50": "346.82",
            "p95": "275.54",
            "p99": "252.04",
            "min": "209.86",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "188.01",
            "p50": "144.51",
            "p95": "135.27",
            "p99": "154.72",
            "min": "129.61",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "129.74",
            "p50": "121.71",
            "p95": "108.85",
            "p99": "114.63",
            "min": "103.23",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1187.24",
            "p50": "961.53",
            "p95": "607.40",
            "p99": "491.83",
            "min": "486.09",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1026.66",
            "p50": "862.37",
            "p95": "536.07",
            "p99": "413.54",
            "min": "407.10",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1374.65",
            "p50": "1142.91",
            "p95": "558.31",
            "p99": "455.86",
            "min": "453.10",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1288.25",
            "p50": "1010.45",
            "p95": "613.57",
            "p99": "469.84",
            "min": "464.81",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1258.35",
            "p50": "984.47",
            "p95": "577.55",
            "p99": "488.83",
            "min": "472.76",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1080.79",
            "p50": "837.62",
            "p95": "515.64",
            "p99": "449.93",
            "min": "442.48",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "696.31",
            "p50": "562.71",
            "p95": "384.27",
            "p99": "356.37",
            "min": "356.22",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "685.21",
            "p50": "554.76",
            "p95": "401.30",
            "p99": "354.64",
            "min": "352.56",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "693.09",
            "p50": "568.84",
            "p95": "370.10",
            "p99": "352.64",
            "min": "351.15",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "692.06",
            "p50": "579.24",
            "p95": "401.65",
            "p99": "299.86",
            "min": "290.71",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "295.30",
            "p50": "268.27",
            "p95": "240.78",
            "p99": "205.06",
            "min": "196.89",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "612.52",
            "p50": "488.74",
            "p95": "352.23",
            "p99": "292.68",
            "min": "289.38",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "590.52",
            "p50": "499.08",
            "p95": "388.08",
            "p99": "340.19",
            "min": "337.08",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "617.87",
            "p50": "519.72",
            "p95": "395.62",
            "p99": "307.57",
            "min": "300.26",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "649.49",
            "p50": "517.05",
            "p95": "380.52",
            "p99": "331.41",
            "min": "330.97",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.72",
            "p50": "101.66",
            "p95": "93.21",
            "p99": "90.62",
            "min": "90.36",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.19",
            "p50": "101.45",
            "p95": "93.39",
            "p99": "89.27",
            "min": "88.31",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.75",
            "p50": "94.58",
            "p95": "86.76",
            "p99": "84.69",
            "min": "84.62",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "254.13",
            "p50": "233.94",
            "p95": "199.54",
            "p99": "177.52",
            "min": "177.09",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.78",
            "p50": "94.01",
            "p95": "85.97",
            "p99": "81.71",
            "min": "80.95",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "244.71",
            "p50": "229.00",
            "p95": "189.08",
            "p99": "171.93",
            "min": "170.34",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "207.04",
            "p50": "192.77",
            "p95": "166.40",
            "p99": "156.07",
            "min": "155.39",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "238.65",
            "p50": "220.74",
            "p95": "196.21",
            "p99": "150.58",
            "min": "136.99",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "578.89",
            "p50": "509.33",
            "p95": "383.02",
            "p99": "333.73",
            "min": "320.27",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5937.40",
            "p50": "2929.73",
            "p95": "1485.42",
            "p99": "1065.32",
            "min": "919.84",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "533.90",
            "p50": "474.48",
            "p95": "345.21",
            "p99": "300.76",
            "min": "293.09",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "18536.66",
            "p50": "4833.99",
            "p95": "1611.28",
            "p99": "1242.13",
            "min": "1196.22",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3543.66",
            "p50": "2339.88",
            "p95": "1056.75",
            "p99": "801.98",
            "min": "637.70",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "237.34",
            "p50": "203.04",
            "p95": "167.44",
            "p99": "149.26",
            "min": "147.67",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "257.49",
            "p50": "239.77",
            "p95": "198.03",
            "p99": "185.77",
            "min": "184.40",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "150.55",
            "p50": "143.15",
            "p95": "130.15",
            "p99": "121.74",
            "min": "121.65",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "244.21",
            "p50": "225.55",
            "p95": "190.24",
            "p99": "150.30",
            "min": "136.89",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "185.14",
            "p50": "172.15",
            "p95": "150.26",
            "p99": "132.69",
            "min": "132.07",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "220.78",
            "p50": "205.56",
            "p95": "152.57",
            "p99": "107.44",
            "min": "103.76",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "210.80",
            "p50": "194.46",
            "p95": "163.22",
            "p99": "149.68",
            "min": "149.36",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "207.00",
            "p50": "192.60",
            "p95": "164.72",
            "p99": "155.90",
            "min": "155.10",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1273.39",
            "p50": "1089.53",
            "p95": "745.48",
            "p99": "556.85",
            "min": "524.71",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "181.12",
            "p50": "170.33",
            "p95": "148.02",
            "p99": "141.70",
            "min": "140.99",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "191.60",
            "p50": "187.80",
            "p95": "176.20",
            "p99": "162.68",
            "min": "161.87",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "192.43",
            "p50": "188.16",
            "p95": "179.85",
            "p99": "173.70",
            "min": "173.45",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "193.87",
            "p50": "188.88",
            "p95": "180.50",
            "p99": "169.63",
            "min": "169.17",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1144.09",
            "p50": "1096.55",
            "p95": "699.65",
            "p99": "590.26",
            "min": "587.85",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "616.35",
            "p50": "601.97",
            "p95": "500.12",
            "p99": "404.58",
            "min": "389.22",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "670.97",
            "p50": "652.20",
            "p95": "549.25",
            "p99": "472.44",
            "min": "472.31",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "675.74",
            "p50": "657.58",
            "p95": "482.89",
            "p99": "399.58",
            "min": "392.50",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "773.79",
            "p50": "751.33",
            "p95": "617.29",
            "p99": "477.58",
            "min": "457.69",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "912.40",
            "p50": "877.42",
            "p95": "668.11",
            "p99": "536.09",
            "min": "518.75",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "865.69",
            "p50": "834.59",
            "p95": "601.44",
            "p99": "493.45",
            "min": "492.23",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "864.58",
            "p50": "837.32",
            "p95": "613.69",
            "p99": "458.72",
            "min": "448.99",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "836.87",
            "p50": "812.80",
            "p95": "674.14",
            "p99": "432.66",
            "min": "416.87",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "738.74",
            "p50": "712.20",
            "p95": "603.04",
            "p99": "531.26",
            "min": "519.37",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "852.78",
            "p50": "817.62",
            "p95": "549.03",
            "p99": "474.95",
            "min": "472.59",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "118.29",
            "p50": "112.85",
            "p95": "107.51",
            "p99": "101.79",
            "min": "101.70",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "94.82",
            "p50": "93.28",
            "p95": "90.83",
            "p99": "91.31",
            "min": "89.42",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "517.17",
            "p50": "496.24",
            "p95": "412.75",
            "p99": "395.13",
            "min": "366.50",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "128.18",
            "p50": "101.93",
            "p95": "94.55",
            "p99": "108.49",
            "min": "93.63",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "88.77",
            "p50": "86.60",
            "p95": "83.83",
            "p99": "85.69",
            "min": "83.36",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1823.51",
            "p50": "1749.76",
            "p95": "1151.80",
            "p99": "851.89",
            "min": "844.08",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1638.85",
            "p50": "1564.46",
            "p95": "970.67",
            "p99": "722.73",
            "min": "654.23",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2256.73",
            "p50": "2153.41",
            "p95": "1124.29",
            "p99": "842.76",
            "min": "805.03",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2264.57",
            "p50": "2148.82",
            "p95": "1449.54",
            "p99": "1006.11",
            "min": "949.66",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2258.39",
            "p50": "2146.15",
            "p95": "1339.59",
            "p99": "865.48",
            "min": "859.74",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1683.08",
            "p50": "1620.38",
            "p95": "1113.49",
            "p99": "810.26",
            "min": "803.27",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "769.33",
            "p50": "730.71",
            "p95": "587.87",
            "p99": "430.49",
            "min": "421.97",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "765.39",
            "p50": "732.06",
            "p95": "609.16",
            "p99": "516.78",
            "min": "514.55",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "774.90",
            "p50": "739.24",
            "p95": "574.22",
            "p99": "423.61",
            "min": "414.49",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "769.41",
            "p50": "742.59",
            "p95": "643.18",
            "p99": "499.21",
            "min": "473.82",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.20",
            "p50": "85.50",
            "p95": "38.80",
            "p99": "38.06",
            "min": "37.97",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "723.59",
            "p50": "691.80",
            "p95": "601.30",
            "p99": "533.31",
            "min": "530.19",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "683.96",
            "p50": "651.54",
            "p95": "552.01",
            "p99": "500.26",
            "min": "496.84",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "683.96",
            "p50": "651.78",
            "p95": "554.23",
            "p99": "345.45",
            "min": "320.20",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "691.99",
            "p50": "652.21",
            "p95": "571.42",
            "p99": "456.81",
            "min": "450.80",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2428.92",
            "p50": "2300.85",
            "p95": "1350.44",
            "p99": "938.44",
            "min": "936.96",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2809.85",
            "p50": "2626.34",
            "p95": "1540.28",
            "p99": "1075.11",
            "min": "964.39",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "105.34",
            "p50": "103.21",
            "p95": "100.49",
            "p99": "92.94",
            "min": "92.05",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "15301.30",
            "p50": "7314.99",
            "p95": "2353.09",
            "p99": "1766.46",
            "min": "1647.22",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "105.19",
            "p50": "103.06",
            "p95": "99.29",
            "p99": "95.64",
            "min": "95.49",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "6150.39",
            "p50": "5311.99",
            "p95": "2192.74",
            "p99": "1386.88",
            "min": "1294.68",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "860.57",
            "p50": "833.92",
            "p95": "644.05",
            "p99": "503.87",
            "min": "502.67",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "664.03",
            "p50": "642.42",
            "p95": "541.51",
            "p99": "442.98",
            "min": "428.26",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2161.93",
            "p50": "2035.50",
            "p95": "1140.85",
            "p99": "631.23",
            "min": "631.01",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "20743.23",
            "p50": "8363.17",
            "p95": "2431.62",
            "p99": "1911.51",
            "min": "1837.47",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2018.25",
            "p50": "1874.84",
            "p95": "1090.44",
            "p99": "627.51",
            "min": "625.24",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "78051.14",
            "p50": "8609.40",
            "p95": "2329.17",
            "p99": "1557.44",
            "min": "1264.53",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15786.27",
            "p50": "8552.77",
            "p95": "2325.75",
            "p99": "1789.77",
            "min": "1724.28",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "683.27",
            "p50": "587.76",
            "p95": "473.26",
            "p99": "407.10",
            "min": "402.64",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "924.94",
            "p50": "893.11",
            "p95": "620.71",
            "p99": "520.68",
            "min": "518.58",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "832.84",
            "p50": "799.17",
            "p95": "583.83",
            "p99": "470.80",
            "min": "467.94",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1150.44",
            "p50": "1106.75",
            "p95": "961.36",
            "p99": "389.15",
            "min": "163.24",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "773.80",
            "p50": "751.37",
            "p95": "582.20",
            "p99": "520.44",
            "min": "512.70",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1138.79",
            "p50": "1093.69",
            "p95": "733.96",
            "p99": "587.50",
            "min": "565.05",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "805.05",
            "p50": "775.74",
            "p95": "593.47",
            "p99": "430.44",
            "min": "428.89",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "877.70",
            "p50": "847.43",
            "p95": "669.44",
            "p99": "566.63",
            "min": "561.32",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2156.21",
            "p50": "1951.83",
            "p95": "1536.03",
            "p99": "1265.53",
            "min": "1263.96",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "849.53",
            "p50": "822.94",
            "p95": "681.32",
            "p99": "437.65",
            "min": "408.48",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "122.56",
            "p50": "118.58",
            "p95": "105.60",
            "p99": "98.50",
            "min": "97.96",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "122.36",
            "p50": "118.98",
            "p95": "107.24",
            "p99": "104.77",
            "min": "104.63",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "122.41",
            "p50": "118.46",
            "p95": "111.20",
            "p99": "107.03",
            "min": "106.85",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "210.98",
            "p50": "197.26",
            "p95": "164.01",
            "p99": "152.24",
            "min": "150.16",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.90",
            "p50": "98.72",
            "p95": "88.32",
            "p99": "81.82",
            "min": "81.35",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.29",
            "p50": "103.64",
            "p95": "93.01",
            "p99": "67.81",
            "min": "62.52",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "137.16",
            "p50": "129.65",
            "p95": "113.89",
            "p99": "104.98",
            "min": "104.96",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "138.41",
            "p50": "132.49",
            "p95": "110.62",
            "p99": "100.24",
            "min": "98.79",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "183.07",
            "p50": "170.36",
            "p95": "138.80",
            "p99": "127.77",
            "min": "127.55",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "181.14",
            "p50": "170.11",
            "p95": "133.03",
            "p99": "103.32",
            "min": "97.37",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "180.98",
            "p50": "168.80",
            "p95": "146.90",
            "p99": "128.62",
            "min": "127.95",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.42",
            "p50": "121.20",
            "p95": "103.09",
            "p99": "73.67",
            "min": "71.65",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "204.65",
            "p50": "190.48",
            "p95": "152.04",
            "p99": "138.08",
            "min": "138.01",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "184.57",
            "p50": "173.21",
            "p95": "143.27",
            "p99": "112.23",
            "min": "105.86",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "75.07",
            "p50": "70.87",
            "p95": "65.41",
            "p99": "62.78",
            "min": "62.62",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "130.75",
            "p50": "123.30",
            "p95": "105.93",
            "p99": "111.56",
            "min": "101.22",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "214.27",
            "p50": "190.43",
            "p95": "161.54",
            "p99": "162.34",
            "min": "150.17",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "166.51",
            "p50": "141.11",
            "p95": "133.68",
            "p99": "147.17",
            "min": "132.58",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "126.54",
            "p50": "118.85",
            "p95": "102.63",
            "p99": "110.37",
            "min": "98.16",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1020.39",
            "p50": "812.48",
            "p95": "389.82",
            "p99": "302.62",
            "min": "300.38",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1007.26",
            "p50": "756.65",
            "p95": "448.79",
            "p99": "331.18",
            "min": "284.07",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1133.92",
            "p50": "815.18",
            "p95": "424.83",
            "p99": "294.12",
            "min": "264.66",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1079.94",
            "p50": "786.46",
            "p95": "407.51",
            "p99": "276.03",
            "min": "258.41",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1030.81",
            "p50": "789.67",
            "p95": "442.12",
            "p99": "331.46",
            "min": "320.85",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1022.54",
            "p50": "769.22",
            "p95": "399.42",
            "p99": "332.70",
            "min": "307.12",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "340.49",
            "p50": "297.80",
            "p95": "249.20",
            "p99": "212.50",
            "min": "205.06",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "333.07",
            "p50": "299.52",
            "p95": "226.18",
            "p99": "194.53",
            "min": "194.30",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "335.91",
            "p50": "305.33",
            "p95": "230.70",
            "p99": "187.72",
            "min": "180.70",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "373.21",
            "p50": "322.57",
            "p95": "243.42",
            "p99": "202.77",
            "min": "200.57",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "284.76",
            "p50": "257.55",
            "p95": "203.31",
            "p99": "176.44",
            "min": "176.11",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "291.92",
            "p50": "257.88",
            "p95": "192.14",
            "p99": "177.03",
            "min": "176.96",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "284.39",
            "p50": "252.38",
            "p95": "188.23",
            "p99": "176.28",
            "min": "175.98",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "289.25",
            "p50": "255.17",
            "p95": "204.64",
            "p99": "177.17",
            "min": "175.34",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "296.34",
            "p50": "257.71",
            "p95": "206.25",
            "p99": "183.39",
            "min": "180.60",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "104.14",
            "p50": "99.57",
            "p95": "90.63",
            "p99": "84.67",
            "min": "84.55",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "104.51",
            "p50": "99.68",
            "p95": "88.26",
            "p99": "84.95",
            "min": "84.50",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "96.91",
            "p50": "92.80",
            "p95": "84.64",
            "p99": "78.04",
            "min": "77.71",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "247.51",
            "p50": "225.66",
            "p95": "175.89",
            "p99": "155.69",
            "min": "154.59",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "96.80",
            "p50": "92.54",
            "p95": "83.78",
            "p99": "79.12",
            "min": "78.57",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "239.77",
            "p50": "222.03",
            "p95": "176.62",
            "p99": "153.03",
            "min": "147.53",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "183.79",
            "p50": "170.70",
            "p95": "134.30",
            "p99": "105.43",
            "min": "100.32",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "153.05",
            "p50": "143.36",
            "p95": "122.22",
            "p99": "109.97",
            "min": "107.50",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "438.30",
            "p50": "398.10",
            "p95": "275.06",
            "p99": "236.08",
            "min": "235.41",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4947.11",
            "p50": "2524.15",
            "p95": "806.61",
            "p99": "711.88",
            "min": "692.22",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "436.77",
            "p50": "394.94",
            "p95": "286.02",
            "p99": "259.16",
            "min": "249.71",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14726.80",
            "p50": "3977.78",
            "p95": "1494.05",
            "p99": "910.16",
            "min": "656.72",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3312.03",
            "p50": "2094.20",
            "p95": "804.50",
            "p99": "629.03",
            "min": "575.17",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "206.31",
            "p50": "191.85",
            "p95": "166.60",
            "p99": "151.56",
            "min": "148.36",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "233.24",
            "p50": "219.31",
            "p95": "177.82",
            "p99": "156.37",
            "min": "154.43",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "129.44",
            "p50": "124.01",
            "p95": "111.92",
            "p99": "66.02",
            "min": "61.37",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "209.41",
            "p50": "193.14",
            "p95": "153.47",
            "p99": "84.73",
            "min": "58.60",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "139.31",
            "p50": "130.22",
            "p95": "117.52",
            "p99": "107.32",
            "min": "106.23",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "175.42",
            "p50": "162.78",
            "p95": "138.51",
            "p99": "125.60",
            "min": "125.06",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "180.03",
            "p50": "168.32",
            "p95": "138.97",
            "p99": "102.80",
            "min": "95.45",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "181.94",
            "p50": "168.60",
            "p95": "139.54",
            "p99": "127.80",
            "min": "124.42",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "300.38",
            "p50": "241.62",
            "p95": "56.85",
            "p99": "50.23",
            "min": "49.91",
            "n": "105",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "144.47",
            "p50": "138.81",
            "p95": "70.80",
            "p99": "56.75",
            "min": "56.55",
            "n": "109",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "85.97",
            "p50": "84.05",
            "p95": "74.51",
            "p99": "70.27",
            "min": "69.94",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "87.25",
            "p50": "84.61",
            "p95": "81.33",
            "p99": "78.68",
            "min": "78.45",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "86.88",
            "p50": "84.74",
            "p95": "81.49",
            "p99": "79.36",
            "min": "79.20",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "189.81",
            "p50": "178.88",
            "p95": "162.61",
            "p99": "150.06",
            "min": "145.74",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "97.34",
            "p50": "94.55",
            "p95": "88.75",
            "p99": "84.26",
            "min": "83.64",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "111.97",
            "p50": "107.27",
            "p95": "102.82",
            "p99": "99.67",
            "min": "98.89",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "126.10",
            "p50": "120.26",
            "p95": "106.55",
            "p99": "100.21",
            "min": "99.59",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "126.28",
            "p50": "123.10",
            "p95": "117.24",
            "p99": "114.21",
            "min": "114.10",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "97.11",
            "p50": "94.46",
            "p95": "71.97",
            "p99": "71.49",
            "min": "71.38",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "101.58",
            "p50": "98.18",
            "p95": "95.07",
            "p99": "90.76",
            "min": "90.25",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "101.36",
            "p50": "98.80",
            "p95": "94.85",
            "p99": "92.60",
            "min": "92.58",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.26",
            "p50": "122.53",
            "p95": "118.51",
            "p99": "112.96",
            "min": "112.16",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "136.35",
            "p50": "131.46",
            "p95": "121.63",
            "p99": "118.45",
            "min": "118.32",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "116.09",
            "p50": "113.50",
            "p95": "104.50",
            "p99": "100.18",
            "min": "99.89",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "88.42",
            "p50": "83.52",
            "p95": "78.43",
            "p99": "72.33",
            "min": "72.26",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "100.34",
            "p50": "99.27",
            "p95": "96.36",
            "p99": "96.60",
            "min": "94.58",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "75.98",
            "p50": "72.27",
            "p95": "66.38",
            "p99": "57.93",
            "min": "53.70",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "156.39",
            "p50": "124.95",
            "p95": "116.87",
            "p99": "133.53",
            "min": "116.29",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "107.98",
            "p50": "106.11",
            "p95": "103.13",
            "p99": "103.40",
            "min": "99.94",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "422.57",
            "p50": "408.77",
            "p95": "390.54",
            "p99": "363.75",
            "min": "356.46",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "475.49",
            "p50": "467.24",
            "p95": "456.33",
            "p99": "414.47",
            "min": "386.03",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "453.83",
            "p50": "434.32",
            "p95": "397.59",
            "p99": "363.40",
            "min": "355.82",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "463.94",
            "p50": "438.08",
            "p95": "403.16",
            "p99": "342.71",
            "min": "321.21",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "462.77",
            "p50": "441.16",
            "p95": "392.88",
            "p99": "323.95",
            "min": "310.13",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "461.25",
            "p50": "451.43",
            "p95": "426.11",
            "p99": "368.03",
            "min": "366.37",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "122.16",
            "p50": "116.63",
            "p95": "109.36",
            "p99": "108.48",
            "min": "108.39",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "122.36",
            "p50": "117.77",
            "p95": "108.50",
            "p99": "100.58",
            "min": "99.75",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "120.52",
            "p50": "115.09",
            "p95": "107.87",
            "p99": "98.43",
            "min": "96.80",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "103.81",
            "p50": "98.75",
            "p95": "95.09",
            "p99": "93.05",
            "min": "92.90",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "85.69",
            "p50": "84.38",
            "p95": "83.22",
            "p99": "81.53",
            "min": "80.99",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "121.18",
            "p50": "114.91",
            "p95": "106.32",
            "p99": "103.88",
            "min": "103.85",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "114.70",
            "p50": "109.31",
            "p95": "100.65",
            "p99": "83.50",
            "min": "79.65",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "114.52",
            "p50": "108.29",
            "p95": "100.80",
            "p99": "92.44",
            "min": "90.35",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "114.34",
            "p50": "108.39",
            "p95": "99.43",
            "p99": "93.16",
            "min": "92.37",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1566.87",
            "p50": "1388.45",
            "p95": "804.72",
            "p99": "503.62",
            "min": "493.15",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1591.38",
            "p50": "1417.16",
            "p95": "875.37",
            "p99": "317.56",
            "min": "260.87",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "154.66",
            "p50": "152.01",
            "p95": "138.85",
            "p99": "132.66",
            "min": "132.08",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3943.66",
            "p50": "3364.75",
            "p95": "1252.56",
            "p99": "862.18",
            "min": "846.12",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "154.54",
            "p50": "151.32",
            "p95": "134.00",
            "p99": "106.02",
            "min": "98.56",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3977.52",
            "p50": "3499.96",
            "p95": "1450.74",
            "p99": "628.55",
            "min": "568.45",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "102.23",
            "p50": "98.64",
            "p95": "92.62",
            "p99": "86.90",
            "min": "86.09",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "182.59",
            "p50": "177.77",
            "p95": "173.99",
            "p99": "166.34",
            "min": "163.65",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "352.91",
            "p50": "259.45",
            "p95": "199.52",
            "p99": "171.70",
            "min": "155.54",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9311.73",
            "p50": "1693.73",
            "p95": "927.83",
            "p99": "463.01",
            "min": "406.55",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "361.01",
            "p50": "273.82",
            "p95": "213.00",
            "p99": "185.77",
            "min": "183.40",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "26292.98",
            "p50": "8648.00",
            "p95": "2412.70",
            "p99": "1786.69",
            "min": "1700.38",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "5934.44",
            "p50": "3241.78",
            "p95": "1653.69",
            "p99": "823.97",
            "min": "721.41",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "301.53",
            "p50": "231.52",
            "p95": "177.16",
            "p99": "150.25",
            "min": "146.74",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "152.22",
            "p50": "132.49",
            "p95": "111.39",
            "p99": "103.14",
            "min": "101.86",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "124.49",
            "p50": "120.17",
            "p95": "96.83",
            "p99": "92.02",
            "min": "91.64",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "128.22",
            "p50": "125.22",
            "p95": "105.22",
            "p99": "98.77",
            "min": "95.83",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "124.47",
            "p50": "120.50",
            "p95": "114.22",
            "p99": "105.48",
            "min": "104.79",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "159.43",
            "p50": "154.18",
            "p95": "144.16",
            "p99": "139.11",
            "min": "137.99",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "97.99",
            "p50": "94.60",
            "p95": "75.15",
            "p99": "72.03",
            "min": "71.81",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "119.88",
            "p50": "113.83",
            "p95": "110.92",
            "p99": "109.03",
            "min": "108.99",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1186.18",
            "p50": "1105.26",
            "p95": "377.74",
            "p99": "364.89",
            "min": "364.26",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "123.99",
            "p50": "121.51",
            "p95": "110.68",
            "p99": "98.64",
            "min": "98.57",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}