{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "112.81",
            "p50": "109.30",
            "p95": "99.68",
            "p99": "96.72",
            "min": "96.55",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1130.53",
            "p50": "918.50",
            "p95": "652.52",
            "p99": "544.55",
            "min": "535.00",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "113.96",
            "p50": "109.75",
            "p95": "101.26",
            "p99": "98.81",
            "min": "98.43",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "765.59",
            "p50": "712.83",
            "p95": "450.01",
            "p99": "396.68",
            "min": "391.52",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "406.66",
            "p50": "375.50",
            "p95": "298.91",
            "p99": "275.34",
            "min": "275.16",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "431.63",
            "p50": "396.89",
            "p95": "308.10",
            "p99": "292.86",
            "min": "291.00",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "294.40",
            "p50": "276.98",
            "p95": "194.81",
            "p99": "191.81",
            "min": "191.55",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "184.35",
            "p50": "174.29",
            "p95": "159.48",
            "p99": "153.50",
            "min": "152.83",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "253.23",
            "p50": "239.79",
            "p95": "212.50",
            "p99": "192.60",
            "min": "189.98",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "262.39",
            "p50": "244.89",
            "p95": "214.89",
            "p99": "201.38",
            "min": "199.96",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "256.55",
            "p50": "239.95",
            "p95": "213.67",
            "p99": "201.94",
            "min": "201.21",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "203.71",
            "p50": "193.51",
            "p95": "173.92",
            "p99": "169.05",
            "min": "168.47",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "338.34",
            "p50": "319.03",
            "p95": "262.63",
            "p99": "245.66",
            "min": "244.84",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "298.64",
            "p50": "280.54",
            "p95": "238.82",
            "p99": "223.94",
            "min": "223.23",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8550.77",
            "p50": "4521.32",
            "p95": "2248.90",
            "p99": "1545.78",
            "min": "1522.75",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2992.98",
            "p50": "1894.92",
            "p95": "924.02",
            "p99": "1587.85",
            "min": "831.24",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "330.89",
            "p50": "302.72",
            "p95": "245.79",
            "p99": "256.23",
            "min": "238.72",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1428.29",
            "p50": "790.69",
            "p95": "387.89",
            "p99": "793.03",
            "min": "313.80",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7365.24",
            "p50": "3726.65",
            "p95": "1410.44",
            "p99": "3943.24",
            "min": "1361.73",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "818.84",
            "p50": "733.46",
            "p95": "506.65",
            "p99": "448.63",
            "min": "432.79",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "817.76",
            "p50": "751.98",
            "p95": "550.98",
            "p99": "425.75",
            "min": "420.84",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "945.93",
            "p50": "814.10",
            "p95": "625.56",
            "p99": "478.99",
            "min": "472.82",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2434.84",
            "p50": "1874.14",
            "p95": "1014.62",
            "p99": "715.62",
            "min": "690.33",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2413.44",
            "p50": "1792.58",
            "p95": "947.39",
            "p99": "718.09",
            "min": "708.36",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "807.30",
            "p50": "752.42",
            "p95": "570.10",
            "p99": "438.61",
            "min": "420.35",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "170.45",
            "p50": "158.43",
            "p95": "148.61",
            "p99": "144.51",
            "min": "144.50",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "552.46",
            "p50": "492.59",
            "p95": "404.39",
            "p99": "332.37",
            "min": "332.08",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "168.40",
            "p50": "157.85",
            "p95": "147.92",
            "p99": "142.93",
            "min": "142.75",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "187.19",
            "p50": "175.17",
            "p95": "161.99",
            "p99": "151.79",
            "min": "150.26",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "33471.41",
            "p50": "8542.97",
            "p95": "2414.13",
            "p99": "1492.53",
            "min": "1167.45",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "414.44",
            "p50": "378.67",
            "p95": "330.95",
            "p99": "301.45",
            "min": "300.40",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "393.24",
            "p50": "357.19",
            "p95": "300.66",
            "p99": "271.18",
            "min": "270.52",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "402.85",
            "p50": "360.11",
            "p95": "292.37",
            "p99": "274.39",
            "min": "274.32",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "399.15",
            "p50": "364.97",
            "p95": "308.62",
            "p99": "290.01",
            "min": "288.35",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "17076.21",
            "p50": "5373.96",
            "p95": "2433.88",
            "p99": "2240.61",
            "min": "2235.96",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "17017.30",
            "p50": "5425.65",
            "p95": "2520.18",
            "p99": "2075.96",
            "min": "1846.02",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "16482.31",
            "p50": "5130.85",
            "p95": "2455.96",
            "p99": "1808.24",
            "min": "1566.09",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "16976.41",
            "p50": "5563.13",
            "p95": "2520.21",
            "p99": "2071.97",
            "min": "2068.95",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "16162.81",
            "p50": "5141.04",
            "p95": "2519.82",
            "p99": "2200.32",
            "min": "2152.13",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "17045.64",
            "p50": "5468.63",
            "p95": "2637.97",
            "p99": "2350.34",
            "min": "2317.83",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "264.92",
            "p50": "239.67",
            "p95": "208.32",
            "p99": "199.05",
            "min": "198.39",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "524.69",
            "p50": "490.39",
            "p95": "384.01",
            "p99": "332.73",
            "min": "331.01",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1657.86",
            "p50": "1291.35",
            "p95": "357.75",
            "p99": "296.57",
            "min": "292.01",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "22235.70",
            "p50": "5030.12",
            "p95": "293.08",
            "p99": "250.33",
            "min": "248.28",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1416.11",
            "p50": "1243.76",
            "p95": "735.00",
            "p99": "521.31",
            "min": "489.39",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "55422.56",
            "p50": "9373.33",
            "p95": "2457.04",
            "p99": "1702.76",
            "min": "1474.06",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14013.38",
            "p50": "6551.29",
            "p95": "298.03",
            "p99": "251.31",
            "min": "250.41",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "567.32",
            "p50": "505.40",
            "p95": "407.85",
            "p99": "354.55",
            "min": "354.43",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "551.98",
            "p50": "499.45",
            "p95": "381.90",
            "p99": "351.87",
            "min": "349.55",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "201.48",
            "p50": "193.89",
            "p95": "176.48",
            "p99": "170.68",
            "min": "170.43",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "386.59",
            "p50": "362.17",
            "p95": "297.86",
            "p99": "275.56",
            "min": "271.39",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "201.87",
            "p50": "192.09",
            "p95": "173.86",
            "p99": "167.42",
            "min": "166.80",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "340.58",
            "p50": "321.79",
            "p95": "273.41",
            "p99": "243.93",
            "min": "241.89",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "264.35",
            "p50": "249.63",
            "p95": "216.69",
            "p99": "202.35",
            "min": "199.89",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "577.62",
            "p50": "540.58",
            "p95": "400.10",
            "p99": "361.34",
            "min": "354.34",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1490.16",
            "p50": "1304.07",
            "p95": "979.84",
            "p99": "799.14",
            "min": "785.83",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "291.96",
            "p50": "276.33",
            "p95": "247.39",
            "p99": "224.53",
            "min": "222.03",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "142.03",
            "p50": "140.07",
            "p95": "130.80",
            "p99": "126.28",
            "min": "126.04",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "142.63",
            "p50": "140.06",
            "p95": "129.72",
            "p99": "110.39",
            "min": "107.26",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "142.45",
            "p50": "139.52",
            "p95": "127.19",
            "p99": "122.81",
            "min": "122.48",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "254.21",
            "p50": "249.70",
            "p95": "213.83",
            "p99": "201.36",
            "min": "198.72",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "195.14",
            "p50": "191.53",
            "p95": "166.88",
            "p99": "110.59",
            "min": "109.27",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "207.33",
            "p50": "203.42",
            "p95": "187.23",
            "p99": "170.24",
            "min": "168.18",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "189.08",
            "p50": "181.26",
            "p95": "161.39",
            "p99": "156.44",
            "min": "156.09",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "182.30",
            "p50": "178.20",
            "p95": "157.75",
            "p99": "136.51",
            "min": "132.74",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "210.59",
            "p50": "203.17",
            "p95": "178.51",
            "p99": "170.67",
            "min": "169.50",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "188.57",
            "p50": "180.96",
            "p95": "160.47",
            "p99": "120.56",
            "min": "110.67",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "207.73",
            "p50": "198.84",
            "p95": "179.52",
            "p99": "165.60",
            "min": "165.13",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "151.08",
            "p50": "147.18",
            "p95": "131.27",
            "p99": "118.36",
            "min": "118.02",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "234.54",
            "p50": "230.74",
            "p95": "202.46",
            "p99": "182.27",
            "min": "181.71",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "188.34",
            "p50": "182.86",
            "p95": "161.88",
            "p99": "157.05",
            "min": "156.46",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "72.85",
            "p50": "70.72",
            "p95": "66.98",
            "p99": "65.52",
            "min": "65.44",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "142.84",
            "p50": "140.40",
            "p95": "124.93",
            "p99": "130.49",
            "min": "123.84",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "468.21",
            "p50": "381.60",
            "p95": "279.70",
            "p99": "272.13",
            "min": "226.14",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "195.84",
            "p50": "157.12",
            "p95": "142.94",
            "p99": "165.18",
            "min": "142.05",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.65",
            "p50": "133.13",
            "p95": "123.28",
            "p99": "128.04",
            "min": "122.30",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1238.21",
            "p50": "1184.71",
            "p95": "760.78",
            "p99": "517.73",
            "min": "502.22",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1063.82",
            "p50": "1041.31",
            "p95": "748.35",
            "p99": "595.19",
            "min": "548.82",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1484.17",
            "p50": "1388.36",
            "p95": "897.60",
            "p99": "683.83",
            "min": "675.65",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1384.88",
            "p50": "1297.73",
            "p95": "768.16",
            "p99": "545.13",
            "min": "543.96",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1353.59",
            "p50": "1272.18",
            "p95": "776.03",
            "p99": "540.70",
            "min": "536.35",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1100.03",
            "p50": "1076.40",
            "p95": "776.02",
            "p99": "624.44",
            "min": "604.14",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "772.85",
            "p50": "683.14",
            "p95": "507.30",
            "p99": "429.02",
            "min": "426.13",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "766.64",
            "p50": "662.98",
            "p95": "469.04",
            "p99": "414.50",
            "min": "410.15",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "774.40",
            "p50": "660.44",
            "p95": "448.30",
            "p99": "364.93",
            "min": "359.90",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "773.64",
            "p50": "687.08",
            "p95": "478.16",
            "p99": "432.24",
            "min": "429.51",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "296.61",
            "p50": "292.28",
            "p95": "246.86",
            "p99": "215.88",
            "min": "212.21",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "677.53",
            "p50": "573.96",
            "p95": "434.98",
            "p99": "389.32",
            "min": "387.72",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "666.11",
            "p50": "575.22",
            "p95": "410.12",
            "p99": "317.23",
            "min": "316.56",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "679.36",
            "p50": "594.82",
            "p95": "406.91",
            "p99": "363.20",
            "min": "355.91",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "709.60",
            "p50": "646.71",
            "p95": "428.95",
            "p99": "389.42",
            "min": "386.27",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "107.33",
            "p50": "106.07",
            "p95": "100.16",
            "p99": "97.51",
            "min": "96.64",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "107.37",
            "p50": "106.00",
            "p95": "99.94",
            "p99": "93.85",
            "min": "92.75",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.82",
            "p50": "98.88",
            "p95": "92.95",
            "p99": "80.63",
            "min": "74.54",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "257.59",
            "p50": "252.66",
            "p95": "217.15",
            "p99": "192.62",
            "min": "188.04",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.93",
            "p50": "98.05",
            "p95": "91.77",
            "p99": "89.23",
            "min": "89.17",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "249.71",
            "p50": "244.96",
            "p95": "217.48",
            "p99": "202.30",
            "min": "197.18",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "207.32",
            "p50": "201.95",
            "p95": "182.64",
            "p99": "170.43",
            "min": "169.51",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "240.17",
            "p50": "235.90",
            "p95": "203.91",
            "p99": "187.17",
            "min": "187.11",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "461.17",
            "p50": "450.24",
            "p95": "372.84",
            "p99": "304.95",
            "min": "298.70",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7402.56",
            "p50": "5005.55",
            "p95": "2284.22",
            "p99": "1855.43",
            "min": "1775.85",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "448.07",
            "p50": "440.03",
            "p95": "372.15",
            "p99": "309.81",
            "min": "300.54",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "17926.56",
            "p50": "6793.37",
            "p95": "2601.39",
            "p99": "1846.10",
            "min": "1478.99",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4402.97",
            "p50": "3532.82",
            "p95": "1774.60",
            "p99": "1126.39",
            "min": "1115.23",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "214.63",
            "p50": "187.42",
            "p95": "168.44",
            "p99": "156.08",
            "min": "154.08",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "263.50",
            "p50": "258.97",
            "p95": "219.25",
            "p99": "204.57",
            "min": "204.43",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "94.33",
            "p50": "92.86",
            "p95": "89.28",
            "p99": "85.34",
            "min": "85.26",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "250.91",
            "p50": "246.21",
            "p95": "219.91",
            "p99": "173.51",
            "min": "155.29",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "183.00",
            "p50": "179.75",
            "p95": "160.32",
            "p99": "149.47",
            "min": "148.60",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "225.70",
            "p50": "220.38",
            "p95": "192.61",
            "p99": "139.96",
            "min": "125.54",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "206.87",
            "p50": "204.32",
            "p95": "179.61",
            "p99": "168.02",
            "min": "166.03",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "204.96",
            "p50": "201.00",
            "p95": "179.24",
            "p99": "169.51",
            "min": "168.44",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1289.36",
            "p50": "1136.59",
            "p95": "847.58",
            "p99": "665.80",
            "min": "657.52",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "183.54",
            "p50": "179.86",
            "p95": "167.07",
            "p99": "149.36",
            "min": "145.90",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "195.62",
            "p50": "192.89",
            "p95": "190.73",
            "p99": "184.75",
            "min": "183.49",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.71",
            "p50": "193.12",
            "p95": "190.24",
            "p99": "176.73",
            "min": "174.57",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.72",
            "p50": "193.51",
            "p95": "190.98",
            "p99": "189.95",
            "min": "189.86",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1185.41",
            "p50": "1162.16",
            "p95": "1072.38",
            "p99": "740.70",
            "min": "691.28",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "702.08",
            "p50": "690.58",
            "p95": "662.05",
            "p99": "595.96",
            "min": "595.42",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "809.86",
            "p50": "795.20",
            "p95": "691.88",
            "p99": "636.48",
            "min": "633.16",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "737.99",
            "p50": "723.64",
            "p95": "579.41",
            "p99": "416.93",
            "min": "405.59",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "749.13",
            "p50": "733.02",
            "p95": "624.84",
            "p99": "461.88",
            "min": "455.84",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "919.79",
            "p50": "899.81",
            "p95": "760.84",
            "p99": "560.09",
            "min": "505.27",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "886.44",
            "p50": "870.10",
            "p95": "797.88",
            "p99": "295.04",
            "min": "185.37",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "885.40",
            "p50": "866.77",
            "p95": "708.78",
            "p99": "568.61",
            "min": "550.98",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "839.91",
            "p50": "825.86",
            "p95": "739.64",
            "p99": "492.41",
            "min": "489.54",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "883.00",
            "p50": "861.46",
            "p95": "791.76",
            "p99": "642.92",
            "min": "633.03",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "886.04",
            "p50": "870.10",
            "p95": "825.33",
            "p99": "627.66",
            "min": "602.93",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "113.50",
            "p50": "109.41",
            "p95": "107.43",
            "p99": "106.66",
            "min": "106.60",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "96.14",
            "p50": "94.93",
            "p95": "93.42",
            "p99": "91.91",
            "min": "89.63",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "603.54",
            "p50": "585.32",
            "p95": "559.25",
            "p99": "503.01",
            "min": "479.43",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "129.60",
            "p50": "103.05",
            "p95": "96.51",
            "p99": "110.21",
            "min": "95.57",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "89.63",
            "p50": "87.71",
            "p95": "86.18",
            "p99": "86.33",
            "min": "83.84",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1929.79",
            "p50": "1876.34",
            "p95": "1366.56",
            "p99": "996.77",
            "min": "937.01",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1641.32",
            "p50": "1598.32",
            "p95": "1488.14",
            "p99": "1236.81",
            "min": "1064.82",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2505.61",
            "p50": "2406.61",
            "p95": "1640.66",
            "p99": "1206.33",
            "min": "1182.90",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2504.83",
            "p50": "2407.00",
            "p95": "1917.23",
            "p99": "1466.45",
            "min": "1463.76",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2476.48",
            "p50": "2393.73",
            "p95": "1776.93",
            "p99": "811.25",
            "min": "758.04",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1709.82",
            "p50": "1657.94",
            "p95": "1323.25",
            "p99": "851.20",
            "min": "817.44",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "878.34",
            "p50": "851.41",
            "p95": "832.19",
            "p99": "824.49",
            "min": "824.16",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "874.15",
            "p50": "849.03",
            "p95": "818.26",
            "p99": "713.07",
            "min": "708.75",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "889.94",
            "p50": "856.94",
            "p95": "827.83",
            "p99": "738.87",
            "min": "735.90",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "882.06",
            "p50": "861.75",
            "p95": "819.61",
            "p99": "742.83",
            "min": "742.41",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.01",
            "p50": "86.51",
            "p95": "83.25",
            "p99": "80.72",
            "min": "80.66",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "800.17",
            "p50": "778.67",
            "p95": "756.19",
            "p99": "628.06",
            "min": "626.94",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "758.60",
            "p50": "733.85",
            "p95": "661.58",
            "p99": "489.19",
            "min": "472.82",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "752.73",
            "p50": "732.70",
            "p95": "697.96",
            "p99": "616.46",
            "min": "611.05",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "760.40",
            "p50": "735.52",
            "p95": "667.71",
            "p99": "566.65",
            "min": "560.45",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2029.70",
            "p50": "1959.67",
            "p95": "1302.16",
            "p99": "1079.08",
            "min": "1077.94",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2336.89",
            "p50": "2253.00",
            "p95": "1603.50",
            "p99": "824.28",
            "min": "778.98",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.40",
            "p50": "72.02",
            "p95": "70.92",
            "p99": "66.97",
            "min": "66.41",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "10042.26",
            "p50": "7804.89",
            "p95": "2615.75",
            "p99": "1873.00",
            "min": "1454.06",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.43",
            "p50": "71.97",
            "p95": "71.51",
            "p99": "70.87",
            "min": "70.81",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "223.19",
            "p50": "221.22",
            "p95": "217.99",
            "p99": "210.77",
            "min": "207.57",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "886.82",
            "p50": "871.78",
            "p95": "689.29",
            "p99": "521.54",
            "min": "516.99",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.08",
            "p50": "659.31",
            "p95": "615.46",
            "p99": "564.28",
            "min": "543.77",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2281.95",
            "p50": "2132.22",
            "p95": "1466.41",
            "p99": "733.24",
            "min": "668.15",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "15778.83",
            "p50": "9357.39",
            "p95": "2595.68",
            "p99": "2275.75",
            "min": "2275.69",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2103.60",
            "p50": "1991.55",
            "p95": "1590.71",
            "p99": "994.84",
            "min": "650.80",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "77173.67",
            "p50": "9565.15",
            "p95": "2593.68",
            "p99": "2250.60",
            "min": "2197.39",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15801.79",
            "p50": "9103.93",
            "p95": "2405.71",
            "p99": "2054.42",
            "min": "1959.22",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "802.52",
            "p50": "709.32",
            "p95": "613.97",
            "p99": "554.27",
            "min": "540.44",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "991.24",
            "p50": "970.02",
            "p95": "878.39",
            "p99": "651.13",
            "min": "632.93",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "842.08",
            "p50": "819.95",
            "p95": "746.66",
            "p99": "523.42",
            "min": "486.84",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1201.37",
            "p50": "1167.47",
            "p95": "1030.54",
            "p99": "628.78",
            "min": "605.62",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "749.26",
            "p50": "734.21",
            "p95": "677.88",
            "p99": "486.83",
            "min": "464.29",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1156.70",
            "p50": "1126.89",
            "p95": "949.89",
            "p99": "734.39",
            "min": "709.25",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "896.06",
            "p50": "877.56",
            "p95": "754.73",
            "p99": "480.25",
            "min": "446.70",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "933.44",
            "p50": "912.39",
            "p95": "714.86",
            "p99": "631.22",
            "min": "622.54",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2444.31",
            "p50": "2069.70",
            "p95": "1761.90",
            "p99": "1563.29",
            "min": "1553.91",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "877.89",
            "p50": "854.29",
            "p95": "758.21",
            "p99": "700.77",
            "min": "688.10",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "126.09",
            "p50": "120.83",
            "p95": "109.32",
            "p99": "101.38",
            "min": "100.88",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "125.72",
            "p50": "121.28",
            "p95": "110.16",
            "p99": "105.82",
            "min": "105.70",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "125.89",
            "p50": "120.86",
            "p95": "109.52",
            "p99": "101.70",
            "min": "100.91",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "213.69",
            "p50": "200.94",
            "p95": "162.70",
            "p99": "118.39",
            "min": "94.81",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "104.95",
            "p50": "101.20",
            "p95": "90.45",
            "p99": "75.95",
            "min": "73.00",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "111.03",
            "p50": "107.50",
            "p95": "97.65",
            "p99": "92.66",
            "min": "92.28",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "142.62",
            "p50": "136.48",
            "p95": "116.60",
            "p99": "83.46",
            "min": "78.06",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "143.58",
            "p50": "137.53",
            "p95": "123.80",
            "p99": "72.39",
            "min": "70.96",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "188.07",
            "p50": "177.39",
            "p95": "143.83",
            "p99": "128.78",
            "min": "124.80",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "186.94",
            "p50": "177.14",
            "p95": "137.75",
            "p99": "105.84",
            "min": "105.14",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "186.31",
            "p50": "175.97",
            "p95": "141.22",
            "p99": "95.66",
            "min": "94.65",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "135.00",
            "p50": "128.02",
            "p95": "114.32",
            "p99": "100.39",
            "min": "99.21",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "204.81",
            "p50": "193.62",
            "p95": "171.72",
            "p99": "148.85",
            "min": "148.19",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "190.75",
            "p50": "181.44",
            "p95": "155.71",
            "p99": "126.95",
            "min": "126.61",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "71.95",
            "p50": "68.48",
            "p95": "63.97",
            "p99": "60.79",
            "min": "60.53",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "133.98",
            "p50": "127.98",
            "p95": "109.89",
            "p99": "115.82",
            "min": "106.04",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "221.10",
            "p50": "199.06",
            "p95": "165.29",
            "p99": "162.94",
            "min": "149.29",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "179.99",
            "p50": "145.63",
            "p95": "134.90",
            "p99": "152.89",
            "min": "132.44",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "129.76",
            "p50": "122.04",
            "p95": "106.39",
            "p99": "113.34",
            "min": "100.96",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1059.96",
            "p50": "858.05",
            "p95": "526.70",
            "p99": "378.79",
            "min": "370.16",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1033.44",
            "p50": "849.52",
            "p95": "448.17",
            "p99": "361.16",
            "min": "357.59",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1166.95",
            "p50": "921.65",
            "p95": "485.58",
            "p99": "405.93",
            "min": "356.70",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1082.80",
            "p50": "895.63",
            "p95": "462.74",
            "p99": "349.77",
            "min": "319.12",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1035.78",
            "p50": "859.89",
            "p95": "493.76",
            "p99": "351.97",
            "min": "317.80",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1048.40",
            "p50": "850.67",
            "p95": "576.66",
            "p99": "468.41",
            "min": "449.74",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "353.18",
            "p50": "317.21",
            "p95": "244.15",
            "p99": "198.76",
            "min": "198.42",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "346.03",
            "p50": "308.63",
            "p95": "237.44",
            "p99": "202.05",
            "min": "201.00",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "346.16",
            "p50": "314.71",
            "p95": "253.47",
            "p99": "222.48",
            "min": "219.57",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "382.12",
            "p50": "341.32",
            "p95": "263.63",
            "p99": "217.57",
            "min": "212.78",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "289.99",
            "p50": "265.81",
            "p95": "205.40",
            "p99": "175.40",
            "min": "169.82",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "296.24",
            "p50": "270.66",
            "p95": "211.34",
            "p99": "185.62",
            "min": "185.43",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "292.03",
            "p50": "262.20",
            "p95": "217.93",
            "p99": "175.68",
            "min": "175.52",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "305.19",
            "p50": "270.18",
            "p95": "231.55",
            "p99": "195.98",
            "min": "195.79",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "298.78",
            "p50": "267.73",
            "p95": "231.48",
            "p99": "178.29",
            "min": "176.39",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.73",
            "p50": "102.12",
            "p95": "93.31",
            "p99": "90.64",
            "min": "90.10",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.13",
            "p50": "102.06",
            "p95": "92.07",
            "p99": "86.41",
            "min": "85.93",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.85",
            "p50": "94.75",
            "p95": "86.67",
            "p99": "81.36",
            "min": "81.28",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "250.22",
            "p50": "234.15",
            "p95": "189.55",
            "p99": "172.43",
            "min": "171.16",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.99",
            "p50": "94.49",
            "p95": "85.52",
            "p99": "84.41",
            "min": "84.32",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "243.18",
            "p50": "225.23",
            "p95": "187.41",
            "p99": "168.52",
            "min": "165.61",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "184.30",
            "p50": "175.29",
            "p95": "147.45",
            "p99": "135.54",
            "min": "135.09",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "154.32",
            "p50": "147.94",
            "p95": "119.71",
            "p99": "85.21",
            "min": "78.45",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "437.09",
            "p50": "391.65",
            "p95": "297.39",
            "p99": "224.44",
            "min": "221.62",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "6041.61",
            "p50": "2540.32",
            "p95": "691.90",
            "p99": "523.85",
            "min": "516.45",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "439.58",
            "p50": "384.98",
            "p95": "273.84",
            "p99": "227.66",
            "min": "223.08",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "15301.18",
            "p50": "3360.16",
            "p95": "1249.63",
            "p99": "727.99",
            "min": "689.85",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3073.81",
            "p50": "2034.60",
            "p95": "635.55",
            "p99": "460.73",
            "min": "426.96",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "208.13",
            "p50": "191.34",
            "p95": "164.17",
            "p99": "153.24",
            "min": "152.42",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "235.27",
            "p50": "222.23",
            "p95": "186.09",
            "p99": "166.54",
            "min": "164.78",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "133.43",
            "p50": "128.11",
            "p95": "113.52",
            "p99": "82.48",
            "min": "74.21",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "212.43",
            "p50": "199.89",
            "p95": "160.37",
            "p99": "86.26",
            "min": "85.62",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "143.29",
            "p50": "136.16",
            "p95": "115.17",
            "p99": "106.77",
            "min": "105.73",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "177.14",
            "p50": "166.58",
            "p95": "138.27",
            "p99": "116.14",
            "min": "101.79",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "186.29",
            "p50": "176.00",
            "p95": "145.92",
            "p99": "130.43",
            "min": "130.10",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "185.62",
            "p50": "175.89",
            "p95": "145.28",
            "p99": "137.74",
            "min": "137.39",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "309.23",
            "p50": "259.64",
            "p95": "114.42",
            "p99": "105.98",
            "min": "105.81",
            "n": "103",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "145.72",
            "p50": "139.13",
            "p95": "85.55",
            "p99": "81.71",
            "min": "81.65",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "87.83",
            "p50": "84.87",
            "p95": "75.75",
            "p99": "70.52",
            "min": "70.33",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "89.21",
            "p50": "85.90",
            "p95": "82.90",
            "p99": "80.86",
            "min": "80.69",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "88.71",
            "p50": "85.38",
            "p95": "82.31",
            "p99": "79.00",
            "min": "78.98",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "191.83",
            "p50": "183.38",
            "p95": "179.40",
            "p99": "150.81",
            "min": "149.53",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "92.55",
            "p50": "90.15",
            "p95": "85.74",
            "p99": "79.04",
            "min": "77.53",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "113.24",
            "p50": "109.36",
            "p95": "104.94",
            "p99": "100.55",
            "min": "100.13",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "124.02",
            "p50": "122.32",
            "p95": "106.64",
            "p99": "99.50",
            "min": "98.57",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "129.13",
            "p50": "125.17",
            "p95": "121.39",
            "p99": "115.98",
            "min": "115.93",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "98.52",
            "p50": "97.23",
            "p95": "91.99",
            "p99": "89.40",
            "min": "88.95",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "99.73",
            "p50": "96.34",
            "p95": "94.35",
            "p99": "89.62",
            "min": "88.77",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "99.97",
            "p50": "96.99",
            "p95": "94.27",
            "p99": "89.85",
            "min": "89.42",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.35",
            "p50": "125.01",
            "p95": "120.89",
            "p99": "117.27",
            "min": "116.78",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "122.76",
            "p50": "113.59",
            "p95": "108.71",
            "p99": "105.80",
            "min": "105.67",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "118.04",
            "p50": "115.31",
            "p95": "101.32",
            "p99": "100.01",
            "min": "99.92",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "89.09",
            "p50": "83.90",
            "p95": "78.63",
            "p99": "72.46",
            "min": "71.52",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "101.74",
            "p50": "100.42",
            "p95": "94.25",
            "p99": "93.70",
            "min": "89.38",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "75.54",
            "p50": "70.16",
            "p95": "68.44",
            "p99": "66.84",
            "min": "64.79",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "158.99",
            "p50": "127.21",
            "p95": "119.35",
            "p99": "136.25",
            "min": "119.10",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "110.03",
            "p50": "107.92",
            "p95": "105.05",
            "p99": "106.16",
            "min": "103.24",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "432.12",
            "p50": "411.06",
            "p95": "371.59",
            "p99": "338.59",
            "min": "332.86",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "488.25",
            "p50": "480.75",
            "p95": "464.97",
            "p99": "425.28",
            "min": "417.36",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "460.46",
            "p50": "430.91",
            "p95": "412.28",
            "p99": "351.54",
            "min": "304.23",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "464.34",
            "p50": "434.79",
            "p95": "391.74",
            "p99": "352.20",
            "min": "334.35",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "466.47",
            "p50": "438.31",
            "p95": "417.96",
            "p99": "385.90",
            "min": "376.51",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "471.18",
            "p50": "462.26",
            "p95": "436.22",
            "p99": "328.31",
            "min": "312.33",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "125.31",
            "p50": "114.42",
            "p95": "111.75",
            "p99": "109.85",
            "min": "109.58",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "126.06",
            "p50": "115.02",
            "p95": "112.57",
            "p99": "110.12",
            "min": "109.81",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "123.19",
            "p50": "113.31",
            "p95": "111.11",
            "p99": "110.02",
            "min": "109.95",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "106.34",
            "p50": "99.27",
            "p95": "97.71",
            "p99": "92.46",
            "min": "91.21",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.03",
            "p50": "86.12",
            "p95": "85.04",
            "p99": "81.82",
            "min": "81.61",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "122.49",
            "p50": "110.55",
            "p95": "107.52",
            "p99": "101.43",
            "min": "100.08",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "117.06",
            "p50": "105.65",
            "p95": "103.15",
            "p99": "96.75",
            "min": "95.53",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "117.10",
            "p50": "104.81",
            "p95": "102.43",
            "p99": "98.97",
            "min": "98.26",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "116.88",
            "p50": "104.75",
            "p95": "100.81",
            "p99": "99.52",
            "min": "99.51",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1600.62",
            "p50": "1424.89",
            "p95": "917.69",
            "p99": "524.56",
            "min": "461.40",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1574.21",
            "p50": "1389.00",
            "p95": "756.42",
            "p99": "407.21",
            "min": "357.26",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "157.18",
            "p50": "154.29",
            "p95": "139.32",
            "p99": "127.07",
            "min": "126.05",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "4034.34",
            "p50": "3444.31",
            "p95": "949.07",
            "p99": "576.54",
            "min": "573.22",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "156.94",
            "p50": "154.09",
            "p95": "133.64",
            "p99": "97.39",
            "min": "90.23",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3954.25",
            "p50": "3536.66",
            "p95": "1859.52",
            "p99": "779.24",
            "min": "398.64",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "100.46",
            "p50": "97.19",
            "p95": "92.70",
            "p99": "81.95",
            "min": "80.01",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "185.55",
            "p50": "182.86",
            "p95": "179.07",
            "p99": "171.22",
            "min": "168.65",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "385.28",
            "p50": "286.01",
            "p95": "228.03",
            "p99": "215.34",
            "min": "213.68",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9686.53",
            "p50": "1651.08",
            "p95": "891.71",
            "p99": "597.01",
            "min": "593.96",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "371.38",
            "p50": "280.06",
            "p95": "229.32",
            "p99": "179.71",
            "min": "166.03",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "27635.73",
            "p50": "9000.26",
            "p95": "2502.75",
            "p99": "2235.63",
            "min": "2095.90",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6119.47",
            "p50": "3313.20",
            "p95": "1654.97",
            "p99": "941.93",
            "min": "770.71",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "309.61",
            "p50": "250.03",
            "p95": "187.23",
            "p99": "133.91",
            "min": "129.34",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "153.97",
            "p50": "134.45",
            "p95": "120.31",
            "p99": "115.23",
            "min": "115.13",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "124.90",
            "p50": "120.69",
            "p95": "96.42",
            "p99": "88.14",
            "min": "85.84",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "129.97",
            "p50": "121.17",
            "p95": "118.71",
            "p99": "112.04",
            "min": "111.19",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "125.43",
            "p50": "120.96",
            "p95": "115.55",
            "p99": "111.27",
            "min": "111.22",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "158.85",
            "p50": "149.10",
            "p95": "145.76",
            "p99": "126.98",
            "min": "117.94",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "96.65",
            "p50": "93.26",
            "p95": "90.47",
            "p99": "84.98",
            "min": "84.30",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "119.41",
            "p50": "114.23",
            "p95": "112.37",
            "p99": "109.17",
            "min": "108.31",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1169.77",
            "p50": "1076.68",
            "p95": "724.45",
            "p99": "689.75",
            "min": "688.18",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "125.21",
            "p50": "122.24",
            "p95": "102.92",
            "p99": "99.46",
            "min": "98.84",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}