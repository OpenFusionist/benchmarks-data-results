{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "169.10",
            "p50": "168.35",
            "p95": "159.74",
            "p99": "167.23",
            "min": "157.40",
            "n": "15",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "169.38",
            "p50": "168.48",
            "p95": "167.96",
            "p99": "169.09",
            "min": "167.61",
            "n": "15",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "169.53",
            "p50": "167.63",
            "p95": "165.26",
            "p99": "168.68",
            "min": "164.19",
            "n": "15",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "755.43",
            "p50": "748.00",
            "p95": "486.22",
            "p99": "701.59",
            "min": "472.05",
            "n": "18",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "399.53",
            "p50": "397.80",
            "p95": "387.15",
            "p99": "397.05",
            "min": "384.06",
            "n": "15",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "436.74",
            "p50": "433.96",
            "p95": "431.18",
            "p99": "435.63",
            "min": "430.20",
            "n": "16",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "322.95",
            "p50": "318.29",
            "p95": "313.29",
            "p99": "321.02",
            "min": "310.88",
            "n": "15",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "184.88",
            "p50": "184.33",
            "p95": "181.01",
            "p99": "184.10",
            "min": "180.05",
            "n": "15",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "259.56",
            "p50": "256.77",
            "p95": "241.62",
            "p99": "255.97",
            "min": "238.45",
            "n": "16",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "254.65",
            "p50": "253.67",
            "p95": "252.37",
            "p99": "254.19",
            "min": "251.80",
            "n": "15",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "257.06",
            "p50": "255.04",
            "p95": "254.07",
            "p99": "256.46",
            "min": "253.32",
            "n": "15",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "189.05",
            "p50": "188.30",
            "p95": "182.16",
            "p99": "187.67",
            "min": "180.44",
            "n": "15",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "318.26",
            "p50": "316.12",
            "p95": "304.71",
            "p99": "315.55",
            "min": "302.31",
            "n": "16",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "306.47",
            "p50": "303.72",
            "p95": "296.71",
            "p99": "304.52",
            "min": "294.27",
            "n": "15",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "110.51",
            "p50": "107.01",
            "p95": "105.70",
            "p99": "109.55",
            "min": "105.17",
            "n": "17",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "168.86",
            "p50": "167.57",
            "p95": "166.77",
            "p99": "168.44",
            "min": "164.21",
            "n": "8",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "284.72",
            "p50": "239.39",
            "p95": "252.13",
            "p99": "278.20",
            "min": "225.46",
            "n": "10",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "239.09",
            "p50": "193.11",
            "p95": "215.95",
            "p99": "234.46",
            "min": "181.26",
            "n": "7",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "166.26",
            "p50": "163.50",
            "p95": "164.99",
            "p99": "166.01",
            "min": "163.07",
            "n": "7",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "866.27",
            "p50": "825.46",
            "p95": "783.37",
            "p99": "849.69",
            "min": "783.37",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "837.23",
            "p50": "821.65",
            "p95": "774.44",
            "p99": "824.67",
            "min": "774.44",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1020.12",
            "p50": "931.54",
            "p95": "894.55",
            "p99": "995.01",
            "min": "894.55",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1056.45",
            "p50": "956.62",
            "p95": "931.27",
            "p99": "1031.41",
            "min": "931.27",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1061.52",
            "p50": "967.62",
            "p95": "943.43",
            "p99": "1037.90",
            "min": "937.21",
            "n": "18",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "846.36",
            "p50": "820.54",
            "p95": "802.15",
            "p99": "837.52",
            "min": "802.15",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "187.54",
            "p50": "178.24",
            "p95": "176.15",
            "p99": "185.26",
            "min": "173.30",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "183.16",
            "p50": "178.27",
            "p95": "177.65",
            "p99": "182.05",
            "min": "176.28",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "186.09",
            "p50": "178.29",
            "p95": "178.65",
            "p99": "184.60",
            "min": "176.78",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "209.17",
            "p50": "204.38",
            "p95": "203.30",
            "p99": "207.99",
            "min": "201.83",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.71",
            "p50": "86.84",
            "p95": "85.17",
            "p99": "87.20",
            "min": "84.89",
            "n": "17",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "328.04",
            "p50": "299.06",
            "p95": "297.72",
            "p99": "321.98",
            "min": "290.14",
            "n": "15",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "318.33",
            "p50": "294.58",
            "p95": "291.05",
            "p99": "312.87",
            "min": "284.23",
            "n": "15",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "318.10",
            "p50": "293.49",
            "p95": "292.69",
            "p99": "313.02",
            "min": "286.34",
            "n": "15",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "315.55",
            "p50": "290.69",
            "p95": "100.25",
            "p99": "272.49",
            "min": "46.43",
            "n": "15",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2367.75",
            "p50": "2272.47",
            "p95": "1853.05",
            "p99": "2264.81",
            "min": "1853.05",
            "n": "19",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2287.59",
            "p50": "2194.14",
            "p95": "1917.10",
            "p99": "2213.49",
            "min": "1917.10",
            "n": "19",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "93.48",
            "p50": "93.13",
            "p95": "90.81",
            "p99": "92.95",
            "min": "90.51",
            "n": "17",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "5530.68",
            "p50": "5154.60",
            "p95": "1946.69",
            "p99": "4813.88",
            "min": "1946.69",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "93.54",
            "p50": "93.09",
            "p95": "92.27",
            "p99": "93.28",
            "min": "92.04",
            "n": "16",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3123.21",
            "p50": "3005.84",
            "p95": "2475.62",
            "p99": "2993.69",
            "min": "2475.62",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "252.80",
            "p50": "251.83",
            "p95": "249.66",
            "p99": "252.17",
            "min": "248.87",
            "n": "15",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "535.35",
            "p50": "531.27",
            "p95": "521.08",
            "p99": "532.50",
            "min": "520.33",
            "n": "18",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1184.80",
            "p50": "1162.14",
            "p95": "381.34",
            "p99": "1024.11",
            "min": "381.34",
            "n": "19",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "15938.02",
            "p50": "10879.65",
            "p95": "2533.59",
            "p99": "13257.14",
            "min": "2533.59",
            "n": "19",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1101.28",
            "p50": "1079.43",
            "p95": "347.12",
            "p99": "950.45",
            "min": "347.12",
            "n": "19",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "43060.23",
            "p50": "7246.26",
            "p95": "1534.89",
            "p99": "34755.16",
            "min": "1534.89",
            "n": "19",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14568.95",
            "p50": "7411.52",
            "p95": "1827.26",
            "p99": "12020.61",
            "min": "1827.26",
            "n": "19",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "517.84",
            "p50": "484.63",
            "p95": "426.28",
            "p99": "499.53",
            "min": "421.46",
            "n": "18",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "507.56",
            "p50": "503.69",
            "p95": "498.21",
            "p99": "505.69",
            "min": "496.56",
            "n": "16",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "202.76",
            "p50": "201.69",
            "p95": "197.54",
            "p99": "201.71",
            "min": "196.62",
            "n": "16",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "426.99",
            "p50": "423.10",
            "p95": "418.04",
            "p99": "425.20",
            "min": "417.05",
            "n": "17",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "203.77",
            "p50": "202.55",
            "p95": "201.44",
            "p99": "203.30",
            "min": "200.85",
            "n": "15",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "326.57",
            "p50": "325.06",
            "p95": "320.72",
            "p99": "325.40",
            "min": "320.41",
            "n": "18",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "267.83",
            "p50": "266.48",
            "p95": "261.68",
            "p99": "266.60",
            "min": "260.14",
            "n": "15",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "510.85",
            "p50": "506.09",
            "p95": "494.24",
            "p99": "507.53",
            "min": "492.40",
            "n": "17",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1291.53",
            "p50": "1147.99",
            "p95": "835.36",
            "p99": "1200.30",
            "min": "754.86",
            "n": "16",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "312.11",
            "p50": "310.50",
            "p95": "305.33",
            "p99": "310.75",
            "min": "304.13",
            "n": "16",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "87.14",
            "p50": "85.25",
            "p95": "80.51",
            "p99": "85.82",
            "min": "78.86",
            "n": "15",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "80.01",
            "p50": "78.51",
            "p95": "73.72",
            "p99": "78.75",
            "min": "72.15",
            "n": "15",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "81.68",
            "p50": "79.77",
            "p95": "74.77",
            "p99": "80.29",
            "min": "73.04",
            "n": "15",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "226.15",
            "p50": "204.30",
            "p95": "181.35",
            "p99": "217.19",
            "min": "178.99",
            "n": "18",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "169.91",
            "p50": "156.77",
            "p95": "134.15",
            "p99": "162.76",
            "min": "125.21",
            "n": "15",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "176.30",
            "p50": "166.78",
            "p95": "149.46",
            "p99": "170.93",
            "min": "144.72",
            "n": "16",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "175.03",
            "p50": "159.99",
            "p95": "151.85",
            "p99": "170.40",
            "min": "146.05",
            "n": "15",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "168.08",
            "p50": "162.73",
            "p95": "126.10",
            "p99": "159.68",
            "min": "115.60",
            "n": "15",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "193.65",
            "p50": "177.58",
            "p95": "162.96",
            "p99": "187.51",
            "min": "157.55",
            "n": "16",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "171.92",
            "p50": "163.75",
            "p95": "143.41",
            "p99": "166.22",
            "min": "136.28",
            "n": "15",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "196.67",
            "p50": "178.40",
            "p95": "163.85",
            "p99": "190.10",
            "min": "155.65",
            "n": "15",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "144.68",
            "p50": "140.41",
            "p95": "123.46",
            "p99": "140.43",
            "min": "118.16",
            "n": "15",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "214.14",
            "p50": "202.83",
            "p95": "171.11",
            "p99": "205.53",
            "min": "163.52",
            "n": "16",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "174.35",
            "p50": "167.67",
            "p95": "149.95",
            "p99": "169.47",
            "min": "143.85",
            "n": "15",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "67.76",
            "p50": "65.45",
            "p95": "59.25",
            "p99": "66.06",
            "min": "58.30",
            "n": "17",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "138.46",
            "p50": "127.45",
            "p95": "131.30",
            "p99": "137.03",
            "min": "122.55",
            "n": "8",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "410.55",
            "p50": "302.96",
            "p95": "335.09",
            "p99": "395.46",
            "min": "273.34",
            "n": "10",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "154.46",
            "p50": "148.17",
            "p95": "146.51",
            "p99": "152.87",
            "min": "134.58",
            "n": "7",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "127.38",
            "p50": "119.26",
            "p95": "120.54",
            "p99": "126.01",
            "min": "110.28",
            "n": "7",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1199.70",
            "p50": "936.72",
            "p95": "536.17",
            "p99": "1067.00",
            "min": "536.17",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1024.13",
            "p50": "854.25",
            "p95": "446.09",
            "p99": "908.52",
            "min": "446.09",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1388.35",
            "p50": "1023.54",
            "p95": "483.37",
            "p99": "1207.36",
            "min": "483.37",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1304.73",
            "p50": "942.23",
            "p95": "570.21",
            "p99": "1157.83",
            "min": "570.21",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1244.70",
            "p50": "895.11",
            "p95": "491.41",
            "p99": "1094.05",
            "min": "451.76",
            "n": "18",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1050.60",
            "p50": "898.81",
            "p95": "432.69",
            "p99": "927.02",
            "min": "432.69",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "690.26",
            "p50": "585.00",
            "p95": "532.49",
            "p99": "658.70",
            "min": "493.05",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "695.44",
            "p50": "544.87",
            "p95": "458.53",
            "p99": "648.06",
            "min": "399.30",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "643.92",
            "p50": "541.78",
            "p95": "415.04",
            "p99": "598.14",
            "min": "357.82",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "675.49",
            "p50": "537.53",
            "p95": "419.22",
            "p99": "624.23",
            "min": "355.15",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "287.64",
            "p50": "262.56",
            "p95": "203.64",
            "p99": "270.84",
            "min": "194.31",
            "n": "17",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "566.93",
            "p50": "465.81",
            "p95": "397.61",
            "p99": "533.06",
            "min": "355.27",
            "n": "15",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "568.46",
            "p50": "449.88",
            "p95": "381.57",
            "p99": "531.08",
            "min": "334.84",
            "n": "15",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "576.12",
            "p50": "515.67",
            "p95": "298.74",
            "p99": "520.64",
            "min": "229.39",
            "n": "15",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "595.28",
            "p50": "491.47",
            "p95": "401.17",
            "p99": "556.45",
            "min": "352.65",
            "n": "15",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.11",
            "p50": "102.34",
            "p95": "95.55",
            "p99": "104.00",
            "min": "95.55",
            "n": "19",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.24",
            "p50": "103.51",
            "p95": "89.14",
            "p99": "102.82",
            "min": "89.14",
            "n": "19",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.14",
            "p50": "95.14",
            "p95": "88.70",
            "p99": "96.25",
            "min": "87.65",
            "n": "17",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "255.30",
            "p50": "235.94",
            "p95": "148.29",
            "p99": "233.90",
            "min": "148.29",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.46",
            "p50": "95.69",
            "p95": "87.08",
            "p99": "95.38",
            "min": "85.25",
            "n": "16",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "246.74",
            "p50": "224.06",
            "p95": "177.81",
            "p99": "232.95",
            "min": "177.81",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "194.76",
            "p50": "180.23",
            "p95": "151.18",
            "p99": "186.05",
            "min": "140.29",
            "n": "15",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "198.52",
            "p50": "184.91",
            "p95": "152.37",
            "p99": "189.29",
            "min": "149.95",
            "n": "18",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "467.03",
            "p50": "414.80",
            "p95": "282.27",
            "p99": "430.08",
            "min": "282.27",
            "n": "19",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5103.09",
            "p50": "2362.14",
            "p95": "1186.46",
            "p99": "4319.77",
            "min": "1186.46",
            "n": "19",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "447.77",
            "p50": "397.38",
            "p95": "264.21",
            "p99": "411.06",
            "min": "264.21",
            "n": "19",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "11746.80",
            "p50": "4653.94",
            "p95": "621.00",
            "p99": "9521.64",
            "min": "621.00",
            "n": "19",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3191.79",
            "p50": "2052.76",
            "p95": "746.26",
            "p99": "2702.69",
            "min": "746.26",
            "n": "19",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "228.49",
            "p50": "214.54",
            "p95": "177.25",
            "p99": "218.25",
            "min": "174.55",
            "n": "18",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "245.15",
            "p50": "228.08",
            "p95": "205.18",
            "p99": "237.15",
            "min": "198.13",
            "n": "16",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "91.10",
            "p50": "88.73",
            "p95": "85.50",
            "p99": "89.98",
            "min": "84.51",
            "n": "16",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "220.40",
            "p50": "211.50",
            "p95": "174.47",
            "p99": "211.22",
            "min": "169.37",
            "n": "17",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "173.32",
            "p50": "165.10",
            "p95": "125.89",
            "p99": "163.84",
            "min": "114.04",
            "n": "15",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "200.58",
            "p50": "191.66",
            "p95": "108.13",
            "p99": "182.09",
            "min": "103.27",
            "n": "18",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "194.54",
            "p50": "183.91",
            "p95": "159.42",
            "p99": "187.51",
            "min": "150.64",
            "n": "15",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "193.03",
            "p50": "181.48",
            "p95": "164.67",
            "p99": "187.36",
            "min": "161.52",
            "n": "17",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1043.01",
            "p50": "951.46",
            "p95": "618.53",
            "p99": "958.12",
            "min": "543.62",
            "n": "16",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "175.32",
            "p50": "166.89",
            "p95": "126.34",
            "p99": "165.53",
            "min": "117.69",
            "n": "16",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "193.76",
            "p50": "190.19",
            "p95": "179.22",
            "p99": "190.86",
            "min": "175.59",
            "n": "15",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "193.95",
            "p50": "185.89",
            "p95": "167.61",
            "p99": "188.68",
            "min": "161.03",
            "n": "15",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "194.14",
            "p50": "189.97",
            "p95": "168.59",
            "p99": "189.03",
            "min": "162.20",
            "n": "15",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1190.77",
            "p50": "1129.42",
            "p95": "561.63",
            "p99": "1064.94",
            "min": "528.52",
            "n": "18",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "702.15",
            "p50": "616.04",
            "p95": "465.63",
            "p99": "654.84",
            "min": "406.50",
            "n": "15",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "812.37",
            "p50": "796.21",
            "p95": "542.44",
            "p99": "758.39",
            "min": "494.81",
            "n": "16",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "749.76",
            "p50": "720.86",
            "p95": "631.88",
            "p99": "726.18",
            "min": "602.41",
            "n": "15",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "262.98",
            "p50": "254.50",
            "p95": "238.98",
            "p99": "258.18",
            "min": "232.98",
            "n": "15",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "916.06",
            "p50": "794.73",
            "p95": "663.23",
            "p99": "865.49",
            "min": "618.61",
            "n": "16",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "868.50",
            "p50": "739.97",
            "p95": "624.62",
            "p99": "819.72",
            "min": "563.65",
            "n": "15",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "871.23",
            "p50": "800.41",
            "p95": "543.11",
            "p99": "805.61",
            "min": "461.07",
            "n": "15",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "286.74",
            "p50": "279.28",
            "p95": "255.36",
            "p99": "280.47",
            "min": "247.51",
            "n": "15",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "649.98",
            "p50": "596.20",
            "p95": "423.02",
            "p99": "604.59",
            "min": "382.97",
            "n": "16",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "851.69",
            "p50": "773.85",
            "p95": "582.00",
            "p99": "797.75",
            "min": "514.58",
            "n": "15",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "110.86",
            "p50": "106.76",
            "p95": "100.27",
            "p99": "108.74",
            "min": "99.10",
            "n": "17",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "96.44",
            "p50": "95.21",
            "p95": "93.60",
            "p99": "95.87",
            "min": "90.13",
            "n": "8",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "413.12",
            "p50": "377.17",
            "p95": "347.89",
            "p99": "400.08",
            "min": "294.51",
            "n": "10",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "117.69",
            "p50": "103.01",
            "p95": "110.16",
            "p99": "116.18",
            "min": "98.88",
            "n": "7",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "88.58",
            "p50": "86.86",
            "p95": "86.94",
            "p99": "88.25",
            "min": "84.48",
            "n": "7",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1699.75",
            "p50": "1337.52",
            "p95": "808.14",
            "p99": "1521.43",
            "min": "808.14",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1620.36",
            "p50": "1520.34",
            "p95": "879.39",
            "p99": "1472.16",
            "min": "879.39",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2023.12",
            "p50": "1862.58",
            "p95": "984.33",
            "p99": "1815.36",
            "min": "984.33",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1995.02",
            "p50": "1650.12",
            "p95": "692.26",
            "p99": "1734.47",
            "min": "692.26",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1816.97",
            "p50": "1484.36",
            "p95": "1112.19",
            "p99": "1676.02",
            "min": "1075.10",
            "n": "18",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1644.15",
            "p50": "1383.51",
            "p95": "757.50",
            "p99": "1466.82",
            "min": "757.50",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "623.09",
            "p50": "534.47",
            "p95": "433.56",
            "p99": "585.19",
            "min": "386.18",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "624.79",
            "p50": "556.02",
            "p95": "474.81",
            "p99": "594.80",
            "min": "437.32",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "622.70",
            "p50": "561.69",
            "p95": "428.52",
            "p99": "583.86",
            "min": "379.98",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "650.38",
            "p50": "581.68",
            "p95": "499.91",
            "p99": "620.29",
            "min": "462.30",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.04",
            "p50": "86.52",
            "p95": "81.80",
            "p99": "85.99",
            "min": "81.22",
            "n": "17",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "563.82",
            "p50": "514.81",
            "p95": "468.79",
            "p99": "544.82",
            "min": "445.03",
            "n": "15",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "537.89",
            "p50": "497.47",
            "p95": "431.08",
            "p99": "516.53",
            "min": "404.37",
            "n": "15",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "539.34",
            "p50": "488.57",
            "p95": "420.93",
            "p99": "515.66",
            "min": "391.32",
            "n": "15",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "536.88",
            "p50": "514.90",
            "p95": "413.83",
            "p99": "512.27",
            "min": "383.06",
            "n": "15",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1350.01",
            "p50": "1107.01",
            "p95": "564.49",
            "p99": "1192.90",
            "min": "564.49",
            "n": "19",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1653.46",
            "p50": "1505.72",
            "p95": "903.13",
            "p99": "1503.39",
            "min": "903.13",
            "n": "19",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.00",
            "p50": "70.83",
            "p95": "67.71",
            "p99": "71.14",
            "min": "67.23",
            "n": "17",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "8091.83",
            "p50": "5051.07",
            "p95": "2288.80",
            "p99": "6931.23",
            "min": "2288.80",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.17",
            "p50": "71.31",
            "p95": "69.38",
            "p99": "71.61",
            "min": "68.89",
            "n": "16",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "220.51",
            "p50": "214.83",
            "p95": "178.99",
            "p99": "212.21",
            "min": "178.99",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "859.53",
            "p50": "699.23",
            "p95": "534.13",
            "p99": "794.45",
            "min": "452.78",
            "n": "15",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "668.95",
            "p50": "612.52",
            "p95": "423.72",
            "p99": "619.91",
            "min": "410.81",
            "n": "18",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1121.95",
            "p50": "962.16",
            "p95": "817.97",
            "p99": "1061.15",
            "min": "817.97",
            "n": "19",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "18177.63",
            "p50": "8271.92",
            "p95": "2836.34",
            "p99": "15109.37",
            "min": "2836.34",
            "n": "19",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1122.27",
            "p50": "993.69",
            "p95": "756.07",
            "p99": "1049.03",
            "min": "756.07",
            "n": "19",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "39083.94",
            "p50": "9172.03",
            "p95": "2376.48",
            "p99": "31742.45",
            "min": "2376.48",
            "n": "19",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14590.23",
            "p50": "5895.11",
            "p95": "794.62",
            "p99": "11831.11",
            "min": "794.62",
            "n": "19",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "540.20",
            "p50": "489.44",
            "p95": "396.45",
            "p99": "511.45",
            "min": "388.89",
            "n": "18",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "980.15",
            "p50": "874.38",
            "p95": "579.09",
            "p99": "899.94",
            "min": "508.31",
            "n": "16",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "286.91",
            "p50": "276.15",
            "p95": "240.97",
            "p99": "277.72",
            "min": "232.86",
            "n": "16",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1201.37",
            "p50": "1129.17",
            "p95": "774.83",
            "p99": "1116.06",
            "min": "727.44",
            "n": "17",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "263.88",
            "p50": "251.42",
            "p95": "242.38",
            "p99": "259.58",
            "min": "237.00",
            "n": "15",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "536.79",
            "p50": "523.06",
            "p95": "431.19",
            "p99": "515.67",
            "min": "425.63",
            "n": "18",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "825.30",
            "p50": "733.51",
            "p95": "634.24",
            "p99": "787.08",
            "min": "586.47",
            "n": "15",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "913.35",
            "p50": "797.43",
            "p95": "559.97",
            "p99": "842.67",
            "min": "520.70",
            "n": "17",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2221.60",
            "p50": "1910.27",
            "p95": "1184.03",
            "p99": "2014.09",
            "min": "1000.93",
            "n": "16",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "895.43",
            "p50": "808.23",
            "p95": "446.44",
            "p99": "805.63",
            "min": "367.21",
            "n": "16",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "80.97",
            "p50": "78.98",
            "p95": "67.80",
            "p99": "78.33",
            "min": "63.41",
            "n": "14",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "74.19",
            "p50": "73.55",
            "p95": "66.44",
            "p99": "72.64",
            "min": "64.50",
            "n": "15",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "76.43",
            "p50": "73.61",
            "p95": "69.47",
            "p99": "75.04",
            "min": "67.73",
            "n": "15",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "206.14",
            "p50": "191.49",
            "p95": "143.94",
            "p99": "193.70",
            "min": "140.66",
            "n": "18",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.39",
            "p50": "99.17",
            "p95": "91.02",
            "p99": "100.12",
            "min": "88.18",
            "n": "15",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "107.48",
            "p50": "103.05",
            "p95": "83.88",
            "p99": "102.76",
            "min": "79.71",
            "n": "16",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "138.21",
            "p50": "130.83",
            "p95": "119.55",
            "p99": "134.48",
            "min": "114.89",
            "n": "15",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "138.38",
            "p50": "133.33",
            "p95": "124.15",
            "p99": "135.54",
            "min": "120.59",
            "n": "15",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "184.83",
            "p50": "168.17",
            "p95": "141.55",
            "p99": "176.17",
            "min": "133.91",
            "n": "16",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "181.74",
            "p50": "167.73",
            "p95": "148.53",
            "p99": "175.09",
            "min": "140.22",
            "n": "15",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "181.34",
            "p50": "171.60",
            "p95": "141.99",
            "p99": "173.47",
            "min": "132.16",
            "n": "15",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "124.29",
            "p50": "119.68",
            "p95": "107.61",
            "p99": "120.95",
            "min": "103.44",
            "n": "15",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "201.75",
            "p50": "185.73",
            "p95": "149.48",
            "p99": "191.30",
            "min": "140.26",
            "n": "16",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "187.11",
            "p50": "175.04",
            "p95": "151.65",
            "p99": "180.02",
            "min": "142.78",
            "n": "15",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "70.66",
            "p50": "67.08",
            "p95": "62.09",
            "p99": "68.95",
            "min": "61.14",
            "n": "17",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "129.08",
            "p50": "122.24",
            "p95": "121.62",
            "p99": "127.59",
            "min": "112.50",
            "n": "8",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "205.45",
            "p50": "186.81",
            "p95": "186.15",
            "p99": "201.59",
            "min": "170.36",
            "n": "10",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "146.36",
            "p50": "141.37",
            "p95": "142.39",
            "p99": "145.56",
            "min": "136.43",
            "n": "7",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "122.90",
            "p50": "117.57",
            "p95": "118.89",
            "p99": "122.10",
            "min": "112.88",
            "n": "7",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "997.72",
            "p50": "694.15",
            "p95": "412.15",
            "p99": "880.61",
            "min": "412.15",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "983.05",
            "p50": "715.27",
            "p95": "257.35",
            "p99": "837.91",
            "min": "257.35",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1069.04",
            "p50": "829.77",
            "p95": "382.57",
            "p99": "931.75",
            "min": "382.57",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1069.75",
            "p50": "732.42",
            "p95": "307.21",
            "p99": "917.25",
            "min": "307.21",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1011.00",
            "p50": "739.48",
            "p95": "399.45",
            "p99": "888.69",
            "min": "367.27",
            "n": "18",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1015.21",
            "p50": "705.11",
            "p95": "407.16",
            "p99": "893.60",
            "min": "407.16",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "316.23",
            "p50": "308.34",
            "p95": "257.04",
            "p99": "304.39",
            "min": "242.24",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "321.83",
            "p50": "284.15",
            "p95": "239.90",
            "p99": "305.45",
            "min": "219.41",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "322.83",
            "p50": "300.71",
            "p95": "255.27",
            "p99": "309.32",
            "min": "238.39",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "355.48",
            "p50": "320.46",
            "p95": "221.63",
            "p99": "328.71",
            "min": "188.17",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "279.26",
            "p50": "243.08",
            "p95": "189.27",
            "p99": "261.26",
            "min": "179.27",
            "n": "17",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "281.54",
            "p50": "258.61",
            "p95": "172.82",
            "p99": "259.80",
            "min": "145.65",
            "n": "15",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "264.52",
            "p50": "254.87",
            "p95": "180.68",
            "p99": "247.75",
            "min": "159.72",
            "n": "15",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "293.32",
            "p50": "254.88",
            "p95": "190.99",
            "p99": "272.86",
            "min": "165.41",
            "n": "15",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "288.46",
            "p50": "260.67",
            "p95": "176.24",
            "p99": "266.02",
            "min": "148.19",
            "n": "15",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.49",
            "p50": "99.60",
            "p95": "90.25",
            "p99": "102.44",
            "min": "90.25",
            "n": "19",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "104.32",
            "p50": "100.11",
            "p95": "90.32",
            "p99": "101.52",
            "min": "90.32",
            "n": "19",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "96.59",
            "p50": "94.14",
            "p95": "75.27",
            "p99": "92.32",
            "min": "72.90",
            "n": "17",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "248.45",
            "p50": "226.16",
            "p95": "179.61",
            "p99": "234.68",
            "min": "179.61",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "96.84",
            "p50": "93.07",
            "p95": "84.19",
            "p99": "94.31",
            "min": "81.95",
            "n": "16",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "240.57",
            "p50": "217.21",
            "p95": "139.76",
            "p99": "220.41",
            "min": "139.76",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "181.01",
            "p50": "170.56",
            "p95": "156.31",
            "p99": "176.07",
            "min": "150.14",
            "n": "15",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "153.72",
            "p50": "140.09",
            "p95": "114.38",
            "p99": "145.85",
            "min": "112.31",
            "n": "18",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "437.46",
            "p50": "368.01",
            "p95": "260.36",
            "p99": "402.04",
            "min": "260.36",
            "n": "19",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "3825.04",
            "p50": "1479.65",
            "p95": "377.65",
            "p99": "3135.57",
            "min": "377.65",
            "n": "19",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "433.47",
            "p50": "361.04",
            "p95": "203.89",
            "p99": "387.56",
            "min": "203.89",
            "n": "19",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "9877.84",
            "p50": "1868.17",
            "p95": "283.72",
            "p99": "7959.02",
            "min": "283.72",
            "n": "19",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2085.42",
            "p50": "1181.16",
            "p95": "501.06",
            "p99": "1768.55",
            "min": "501.06",
            "n": "19",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "203.87",
            "p50": "184.73",
            "p95": "160.19",
            "p99": "195.14",
            "min": "157.89",
            "n": "18",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "227.79",
            "p50": "212.32",
            "p95": "179.59",
            "p99": "218.15",
            "min": "171.08",
            "n": "16",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "126.69",
            "p50": "119.99",
            "p95": "102.59",
            "p99": "121.87",
            "min": "98.33",
            "n": "16",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "204.39",
            "p50": "190.72",
            "p95": "152.85",
            "p99": "194.08",
            "min": "147.12",
            "n": "17",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "137.92",
            "p50": "133.98",
            "p95": "121.19",
            "p99": "134.57",
            "min": "117.01",
            "n": "15",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "173.68",
            "p50": "160.33",
            "p95": "137.10",
            "p99": "166.36",
            "min": "135.18",
            "n": "18",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "180.71",
            "p50": "172.74",
            "p95": "124.10",
            "p99": "169.38",
            "min": "109.95",
            "n": "15",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "184.30",
            "p50": "172.00",
            "p95": "145.36",
            "p99": "176.51",
            "min": "141.03",
            "n": "17",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "253.87",
            "p50": "225.61",
            "p95": "182.00",
            "p99": "239.50",
            "min": "134.08",
            "n": "11",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "140.80",
            "p50": "136.22",
            "p95": "119.00",
            "p99": "136.44",
            "min": "97.20",
            "n": "9",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "89.40",
            "p50": "88.35",
            "p95": "82.73",
            "p99": "88.07",
            "min": "81.06",
            "n": "15",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "91.33",
            "p50": "90.16",
            "p95": "85.66",
            "p99": "90.20",
            "min": "84.25",
            "n": "15",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "90.52",
            "p50": "89.12",
            "p95": "85.58",
            "p99": "89.53",
            "min": "84.34",
            "n": "15",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "188.68",
            "p50": "186.44",
            "p95": "178.19",
            "p99": "186.58",
            "min": "177.63",
            "n": "18",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "93.17",
            "p50": "92.68",
            "p95": "89.30",
            "p99": "92.40",
            "min": "88.33",
            "n": "15",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "113.00",
            "p50": "112.38",
            "p95": "106.65",
            "p99": "111.73",
            "min": "105.53",
            "n": "16",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "121.92",
            "p50": "121.05",
            "p95": "108.96",
            "p99": "119.32",
            "min": "105.73",
            "n": "15",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "126.00",
            "p50": "124.65",
            "p95": "118.62",
            "p99": "124.53",
            "min": "116.78",
            "n": "15",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "96.44",
            "p50": "95.58",
            "p95": "93.84",
            "p99": "95.92",
            "min": "93.39",
            "n": "16",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.44",
            "p50": "96.98",
            "p95": "94.00",
            "p99": "96.75",
            "min": "93.14",
            "n": "15",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "97.86",
            "p50": "97.02",
            "p95": "95.02",
            "p99": "97.29",
            "min": "94.32",
            "n": "15",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "125.06",
            "p50": "122.28",
            "p95": "118.71",
            "p99": "123.79",
            "min": "117.13",
            "n": "15",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "120.38",
            "p50": "119.67",
            "p95": "107.40",
            "p99": "117.78",
            "min": "105.11",
            "n": "16",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "113.81",
            "p50": "113.14",
            "p95": "112.77",
            "p99": "113.61",
            "min": "112.51",
            "n": "15",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "75.78",
            "p50": "73.17",
            "p95": "70.62",
            "p99": "74.75",
            "min": "70.05",
            "n": "17",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "98.38",
            "p50": "98.10",
            "p95": "96.48",
            "p99": "98.00",
            "min": "94.16",
            "n": "8",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "59.25",
            "p50": "59.07",
            "p95": "56.88",
            "p99": "58.78",
            "min": "54.94",
            "n": "10",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "158.45",
            "p50": "127.87",
            "p95": "142.02",
            "p99": "155.17",
            "min": "117.36",
            "n": "7",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "109.91",
            "p50": "108.51",
            "p95": "109.18",
            "p99": "109.76",
            "min": "108.09",
            "n": "7",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "371.12",
            "p50": "366.95",
            "p95": "350.77",
            "p99": "367.05",
            "min": "350.77",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "487.75",
            "p50": "484.90",
            "p95": "438.80",
            "p99": "477.96",
            "min": "438.80",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "367.52",
            "p50": "364.28",
            "p95": "347.21",
            "p99": "363.46",
            "min": "347.21",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "372.86",
            "p50": "367.74",
            "p95": "352.42",
            "p99": "368.77",
            "min": "352.42",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "373.54",
            "p50": "370.22",
            "p95": "354.73",
            "p99": "369.78",
            "min": "353.74",
            "n": "18",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "451.08",
            "p50": "445.79",
            "p95": "341.36",
            "p99": "429.13",
            "min": "341.36",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "94.44",
            "p50": "93.80",
            "p95": "93.03",
            "p99": "94.16",
            "min": "92.68",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "94.99",
            "p50": "94.44",
            "p95": "92.43",
            "p99": "94.48",
            "min": "91.79",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "93.98",
            "p50": "93.38",
            "p95": "92.52",
            "p99": "93.69",
            "min": "92.15",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "86.85",
            "p50": "86.17",
            "p95": "86.09",
            "p99": "86.70",
            "min": "85.90",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.35",
            "p50": "86.16",
            "p95": "86.00",
            "p99": "86.28",
            "min": "85.96",
            "n": "17",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "88.58",
            "p50": "87.69",
            "p95": "85.92",
            "p99": "88.05",
            "min": "85.25",
            "n": "15",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "83.96",
            "p50": "83.23",
            "p95": "81.95",
            "p99": "83.56",
            "min": "81.45",
            "n": "15",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "83.58",
            "p50": "83.04",
            "p95": "81.96",
            "p99": "83.26",
            "min": "81.56",
            "n": "15",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "83.70",
            "p50": "83.09",
            "p95": "81.19",
            "p99": "83.20",
            "min": "80.56",
            "n": "15",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1314.28",
            "p50": "1229.08",
            "p95": "926.53",
            "p99": "1236.73",
            "min": "926.53",
            "n": "19",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1313.69",
            "p50": "1226.05",
            "p95": "1026.90",
            "p99": "1256.33",
            "min": "1026.90",
            "n": "19",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "90.06",
            "p50": "89.20",
            "p95": "82.24",
            "p99": "88.50",
            "min": "81.37",
            "n": "17",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "2049.68",
            "p50": "1836.22",
            "p95": "715.93",
            "p99": "1782.93",
            "min": "715.93",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "90.04",
            "p50": "89.29",
            "p95": "86.56",
            "p99": "89.34",
            "min": "85.94",
            "n": "16",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "1604.67",
            "p50": "1447.08",
            "p95": "1132.41",
            "p99": "1510.22",
            "min": "1132.41",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "97.35",
            "p50": "96.77",
            "p95": "96.04",
            "p99": "97.09",
            "min": "95.72",
            "n": "15",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "185.14",
            "p50": "183.81",
            "p95": "180.51",
            "p99": "184.22",
            "min": "180.27",
            "n": "18",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "410.89",
            "p50": "363.67",
            "p95": "268.32",
            "p99": "382.38",
            "min": "268.32",
            "n": "19",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4295.22",
            "p50": "2329.91",
            "p95": "1055.71",
            "p99": "3647.32",
            "min": "1055.71",
            "n": "19",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "438.22",
            "p50": "407.80",
            "p95": "264.61",
            "p99": "403.49",
            "min": "264.61",
            "n": "19",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "26098.78",
            "p50": "9057.84",
            "p95": "2739.42",
            "p99": "21426.91",
            "min": "2739.42",
            "n": "19",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4594.21",
            "p50": "3346.48",
            "p95": "1379.72",
            "p99": "3951.31",
            "min": "1379.72",
            "n": "19",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "354.18",
            "p50": "321.87",
            "p95": "198.63",
            "p99": "323.07",
            "min": "190.45",
            "n": "18",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "153.89",
            "p50": "146.91",
            "p95": "129.74",
            "p99": "149.06",
            "min": "125.48",
            "n": "16",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "123.18",
            "p50": "116.17",
            "p95": "114.13",
            "p99": "121.37",
            "min": "112.53",
            "n": "16",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "136.15",
            "p50": "135.68",
            "p95": "129.31",
            "p99": "134.78",
            "min": "128.55",
            "n": "17",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "125.60",
            "p50": "123.55",
            "p95": "123.71",
            "p99": "125.22",
            "min": "123.24",
            "n": "15",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "172.58",
            "p50": "171.78",
            "p95": "154.49",
            "p99": "168.96",
            "min": "153.54",
            "n": "18",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "94.29",
            "p50": "93.76",
            "p95": "84.58",
            "p99": "92.35",
            "min": "82.16",
            "n": "15",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "117.81",
            "p50": "115.39",
            "p95": "113.08",
            "p99": "116.86",
            "min": "112.55",
            "n": "17",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "877.43",
            "p50": "833.74",
            "p95": "398.18",
            "p99": "781.58",
            "min": "313.61",
            "n": "16",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "123.58",
            "p50": "122.72",
            "p95": "115.85",
            "p99": "122.04",
            "min": "114.49",
            "n": "16",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}