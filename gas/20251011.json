{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "114.17",
            "p50": "109.81",
            "p95": "92.63",
            "p99": "86.02",
            "min": "85.48",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1057.29",
            "p50": "947.37",
            "p95": "591.55",
            "p99": "508.21",
            "min": "504.66",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "115.26",
            "p50": "110.49",
            "p95": "101.59",
            "p99": "98.18",
            "min": "97.94",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "979.67",
            "p50": "941.49",
            "p95": "585.35",
            "p99": "470.06",
            "min": "455.92",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "456.15",
            "p50": "424.14",
            "p95": "343.05",
            "p99": "326.08",
            "min": "325.14",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "441.55",
            "p50": "415.72",
            "p95": "333.20",
            "p99": "295.12",
            "min": "294.14",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "680.05",
            "p50": "627.54",
            "p95": "285.19",
            "p99": "267.26",
            "min": "265.12",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "622.71",
            "p50": "574.33",
            "p95": "417.45",
            "p99": "386.64",
            "min": "383.25",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "386.56",
            "p50": "372.38",
            "p95": "311.08",
            "p99": "287.43",
            "min": "284.98",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "700.29",
            "p50": "645.91",
            "p95": "501.92",
            "p99": "398.31",
            "min": "396.63",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "661.76",
            "p50": "600.96",
            "p95": "468.79",
            "p99": "391.66",
            "min": "388.20",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "617.66",
            "p50": "570.34",
            "p95": "427.83",
            "p99": "332.68",
            "min": "324.76",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "400.00",
            "p50": "386.78",
            "p95": "317.67",
            "p99": "292.14",
            "min": "288.18",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "396.29",
            "p50": "380.36",
            "p95": "331.51",
            "p99": "278.06",
            "min": "271.74",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8184.88",
            "p50": "5636.50",
            "p95": "2182.55",
            "p99": "1594.18",
            "min": "1590.69",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2721.82",
            "p50": "2415.82",
            "p95": "855.19",
            "p99": "1464.62",
            "min": "787.67",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "307.92",
            "p50": "280.16",
            "p95": "238.13",
            "p99": "237.18",
            "min": "220.59",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1434.08",
            "p50": "792.94",
            "p95": "368.49",
            "p99": "805.18",
            "min": "330.75",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7240.98",
            "p50": "3338.81",
            "p95": "1406.02",
            "p99": "3878.90",
            "min": "1342.60",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "817.69",
            "p50": "717.75",
            "p95": "507.69",
            "p99": "446.24",
            "min": "423.17",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "809.04",
            "p50": "758.64",
            "p95": "536.07",
            "p99": "470.67",
            "min": "463.90",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "935.27",
            "p50": "784.14",
            "p95": "566.27",
            "p99": "452.99",
            "min": "442.08",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2353.93",
            "p50": "2006.11",
            "p95": "999.78",
            "p99": "756.79",
            "min": "713.73",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2333.36",
            "p50": "2052.81",
            "p95": "953.86",
            "p99": "686.58",
            "min": "681.51",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "804.32",
            "p50": "746.13",
            "p95": "538.39",
            "p99": "474.98",
            "min": "456.85",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "164.26",
            "p50": "155.04",
            "p95": "145.61",
            "p99": "137.90",
            "min": "137.71",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "525.93",
            "p50": "478.91",
            "p95": "362.15",
            "p99": "319.87",
            "min": "317.13",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "164.97",
            "p50": "155.73",
            "p95": "144.93",
            "p99": "142.53",
            "min": "142.34",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "185.12",
            "p50": "172.52",
            "p95": "155.09",
            "p99": "147.07",
            "min": "146.91",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "31674.24",
            "p50": "7509.80",
            "p95": "2072.23",
            "p99": "1500.30",
            "min": "1450.73",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "389.37",
            "p50": "356.08",
            "p95": "290.06",
            "p99": "241.01",
            "min": "234.93",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "375.36",
            "p50": "340.23",
            "p95": "279.72",
            "p99": "247.43",
            "min": "245.50",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "384.36",
            "p50": "336.66",
            "p95": "280.38",
            "p99": "264.20",
            "min": "263.34",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "370.33",
            "p50": "341.05",
            "p95": "290.51",
            "p99": "274.03",
            "min": "271.12",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "16075.45",
            "p50": "6570.64",
            "p95": "2322.46",
            "p99": "1548.09",
            "min": "1492.91",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "15760.85",
            "p50": "5687.31",
            "p95": "2307.69",
            "p99": "1498.58",
            "min": "1497.29",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "15757.59",
            "p50": "5452.20",
            "p95": "2336.31",
            "p99": "1771.30",
            "min": "1668.93",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "16196.76",
            "p50": "5701.93",
            "p95": "2310.41",
            "p99": "1500.91",
            "min": "1468.67",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "15333.94",
            "p50": "5032.97",
            "p95": "2290.68",
            "p99": "2107.79",
            "min": "2062.03",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "16299.81",
            "p50": "5997.63",
            "p95": "2366.86",
            "p99": "2094.21",
            "min": "2004.32",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "700.42",
            "p50": "625.09",
            "p95": "389.45",
            "p99": "292.34",
            "min": "292.06",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "560.75",
            "p50": "458.62",
            "p95": "358.79",
            "p99": "301.36",
            "min": "300.68",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1430.35",
            "p50": "1328.43",
            "p95": "344.94",
            "p99": "269.71",
            "min": "253.94",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "24795.34",
            "p50": "8321.48",
            "p95": "2404.40",
            "p99": "1465.00",
            "min": "1010.70",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1360.90",
            "p50": "1259.79",
            "p95": "763.75",
            "p99": "632.50",
            "min": "621.43",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "55790.80",
            "p50": "9041.25",
            "p95": "2311.21",
            "p99": "1396.76",
            "min": "1295.67",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13468.68",
            "p50": "6744.35",
            "p95": "2494.35",
            "p99": "2078.10",
            "min": "2077.84",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "588.56",
            "p50": "503.78",
            "p95": "391.64",
            "p99": "352.19",
            "min": "351.03",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "539.81",
            "p50": "511.86",
            "p95": "380.58",
            "p99": "239.04",
            "min": "195.80",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "606.02",
            "p50": "581.90",
            "p95": "447.20",
            "p99": "376.92",
            "min": "367.37",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "611.63",
            "p50": "584.52",
            "p95": "437.44",
            "p99": "385.14",
            "min": "382.43",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "670.20",
            "p50": "623.75",
            "p95": "489.14",
            "p99": "404.96",
            "min": "398.10",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "909.58",
            "p50": "873.56",
            "p95": "611.23",
            "p99": "507.11",
            "min": "495.51",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "655.09",
            "p50": "615.92",
            "p95": "473.45",
            "p99": "438.46",
            "min": "436.80",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "711.95",
            "p50": "640.74",
            "p95": "444.21",
            "p99": "407.34",
            "min": "394.98",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1594.38",
            "p50": "1376.35",
            "p95": "1035.53",
            "p99": "925.42",
            "min": "909.97",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "665.08",
            "p50": "614.23",
            "p95": "461.08",
            "p99": "410.49",
            "min": "409.55",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "142.49",
            "p50": "138.94",
            "p95": "128.70",
            "p99": "109.67",
            "min": "109.39",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "140.82",
            "p50": "137.02",
            "p95": "127.85",
            "p99": "121.55",
            "min": "121.50",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "141.77",
            "p50": "137.58",
            "p95": "128.38",
            "p99": "123.48",
            "min": "123.40",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "234.85",
            "p50": "229.73",
            "p95": "206.15",
            "p99": "162.81",
            "min": "139.68",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "192.66",
            "p50": "187.43",
            "p95": "164.67",
            "p99": "78.15",
            "min": "71.96",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "203.33",
            "p50": "199.90",
            "p95": "174.61",
            "p99": "122.37",
            "min": "114.06",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "190.15",
            "p50": "179.18",
            "p95": "159.92",
            "p99": "134.57",
            "min": "131.80",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "174.63",
            "p50": "165.61",
            "p95": "152.78",
            "p99": "134.42",
            "min": "133.08",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "202.26",
            "p50": "190.64",
            "p95": "175.76",
            "p99": "154.24",
            "min": "150.81",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "183.03",
            "p50": "174.29",
            "p95": "162.15",
            "p99": "140.99",
            "min": "139.05",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "201.11",
            "p50": "189.84",
            "p95": "169.18",
            "p99": "81.45",
            "min": "63.79",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "149.27",
            "p50": "142.51",
            "p95": "129.65",
            "p99": "122.21",
            "min": "120.99",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "226.46",
            "p50": "220.08",
            "p95": "194.35",
            "p99": "147.12",
            "min": "134.83",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "185.04",
            "p50": "175.12",
            "p95": "164.30",
            "p99": "149.15",
            "min": "147.32",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "101.25",
            "p50": "96.44",
            "p95": "90.51",
            "p99": "85.76",
            "min": "84.27",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "140.37",
            "p50": "133.28",
            "p95": "123.54",
            "p99": "128.21",
            "min": "121.66",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "437.20",
            "p50": "309.66",
            "p95": "259.75",
            "p99": "272.39",
            "min": "233.73",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "192.34",
            "p50": "149.51",
            "p95": "138.55",
            "p99": "152.73",
            "min": "122.84",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "132.90",
            "p50": "130.41",
            "p95": "116.97",
            "p99": "115.08",
            "min": "101.64",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1193.36",
            "p50": "1037.19",
            "p95": "769.32",
            "p99": "549.67",
            "min": "524.24",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1045.56",
            "p50": "1001.28",
            "p95": "666.57",
            "p99": "526.16",
            "min": "506.02",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1421.77",
            "p50": "1160.58",
            "p95": "732.54",
            "p99": "582.88",
            "min": "574.34",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1323.95",
            "p50": "1102.24",
            "p95": "760.13",
            "p99": "598.25",
            "min": "551.79",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1307.76",
            "p50": "1073.85",
            "p95": "765.51",
            "p99": "574.34",
            "min": "527.32",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1071.10",
            "p50": "1022.61",
            "p95": "719.09",
            "p99": "583.60",
            "min": "542.99",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "681.15",
            "p50": "512.54",
            "p95": "410.95",
            "p99": "332.94",
            "min": "332.37",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "682.40",
            "p50": "517.16",
            "p95": "399.94",
            "p99": "340.33",
            "min": "337.58",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "688.90",
            "p50": "527.15",
            "p95": "398.20",
            "p99": "319.63",
            "min": "306.06",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "696.49",
            "p50": "538.79",
            "p95": "443.48",
            "p99": "396.53",
            "min": "389.79",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "291.73",
            "p50": "283.31",
            "p95": "248.62",
            "p99": "236.31",
            "min": "235.34",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "572.81",
            "p50": "410.68",
            "p95": "319.55",
            "p99": "261.23",
            "min": "258.66",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "594.32",
            "p50": "446.45",
            "p95": "345.35",
            "p99": "309.52",
            "min": "308.32",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "600.02",
            "p50": "451.71",
            "p95": "353.37",
            "p99": "257.91",
            "min": "247.51",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "623.47",
            "p50": "473.86",
            "p95": "358.17",
            "p99": "265.97",
            "min": "264.56",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "454.08",
            "p50": "432.08",
            "p95": "359.18",
            "p99": "312.84",
            "min": "309.00",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "448.97",
            "p50": "430.95",
            "p95": "351.76",
            "p99": "311.83",
            "min": "297.89",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "166.72",
            "p50": "161.55",
            "p95": "145.50",
            "p99": "134.02",
            "min": "131.49",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "623.63",
            "p50": "589.39",
            "p95": "444.18",
            "p99": "390.39",
            "min": "381.51",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "166.03",
            "p50": "161.23",
            "p95": "146.17",
            "p99": "142.04",
            "min": "141.18",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "321.07",
            "p50": "307.25",
            "p95": "255.23",
            "p99": "237.86",
            "min": "234.96",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "202.23",
            "p50": "193.37",
            "p95": "172.07",
            "p99": "94.63",
            "min": "89.62",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "245.92",
            "p50": "239.51",
            "p95": "217.04",
            "p99": "183.29",
            "min": "168.72",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "516.28",
            "p50": "497.56",
            "p95": "415.94",
            "p99": "374.57",
            "min": "361.28",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7346.95",
            "p50": "2982.38",
            "p95": "1832.19",
            "p99": "1338.99",
            "min": "1295.83",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "488.37",
            "p50": "473.30",
            "p95": "377.43",
            "p99": "327.04",
            "min": "320.77",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "22626.19",
            "p50": "7104.94",
            "p95": "2260.48",
            "p99": "1381.50",
            "min": "1339.76",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4394.42",
            "p50": "2521.73",
            "p95": "1515.53",
            "p99": "1122.08",
            "min": "1100.31",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "252.09",
            "p50": "189.06",
            "p95": "162.89",
            "p99": "148.70",
            "min": "144.69",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "254.89",
            "p50": "248.26",
            "p95": "218.82",
            "p99": "201.86",
            "min": "198.99",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "150.13",
            "p50": "145.00",
            "p95": "131.54",
            "p99": "117.18",
            "min": "115.40",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "235.84",
            "p50": "229.61",
            "p95": "199.83",
            "p99": "178.49",
            "min": "171.04",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "175.05",
            "p50": "169.58",
            "p95": "156.13",
            "p99": "146.47",
            "min": "146.46",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "214.06",
            "p50": "208.05",
            "p95": "188.27",
            "p99": "167.81",
            "min": "166.65",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "201.71",
            "p50": "193.84",
            "p95": "175.91",
            "p99": "169.09",
            "min": "168.79",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "204.32",
            "p50": "195.61",
            "p95": "174.24",
            "p99": "89.09",
            "min": "88.12",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1340.41",
            "p50": "1199.00",
            "p95": "991.24",
            "p99": "822.50",
            "min": "817.48",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "184.30",
            "p50": "177.74",
            "p95": "158.97",
            "p99": "149.78",
            "min": "149.49",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "191.62",
            "p50": "188.48",
            "p95": "174.75",
            "p99": "164.50",
            "min": "163.77",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "190.66",
            "p50": "188.18",
            "p95": "176.30",
            "p99": "165.51",
            "min": "164.15",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "191.38",
            "p50": "188.96",
            "p95": "174.16",
            "p99": "163.91",
            "min": "163.72",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1145.33",
            "p50": "1114.16",
            "p95": "751.21",
            "p99": "585.93",
            "min": "571.25",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "780.93",
            "p50": "760.73",
            "p95": "622.95",
            "p99": "509.66",
            "min": "499.16",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "849.47",
            "p50": "824.71",
            "p95": "645.67",
            "p99": "502.61",
            "min": "488.84",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "795.18",
            "p50": "770.85",
            "p95": "615.41",
            "p99": "518.45",
            "min": "517.90",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "796.37",
            "p50": "782.22",
            "p95": "618.09",
            "p99": "499.86",
            "min": "491.17",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "896.67",
            "p50": "869.67",
            "p95": "611.68",
            "p99": "520.99",
            "min": "505.05",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "916.69",
            "p50": "883.89",
            "p95": "685.96",
            "p99": "507.02",
            "min": "495.53",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "916.09",
            "p50": "885.64",
            "p95": "646.46",
            "p99": "517.56",
            "min": "513.35",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "822.57",
            "p50": "797.07",
            "p95": "633.46",
            "p99": "497.24",
            "min": "491.02",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "841.24",
            "p50": "819.93",
            "p95": "584.02",
            "p99": "465.63",
            "min": "452.70",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "889.87",
            "p50": "860.86",
            "p95": "690.78",
            "p99": "516.51",
            "min": "501.02",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "12300.50",
            "p50": "5048.68",
            "p95": "2397.07",
            "p99": "2263.11",
            "min": "2254.55",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "4172.23",
            "p50": "3186.47",
            "p95": "1432.67",
            "p99": "2303.05",
            "min": "1296.57",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "479.57",
            "p50": "468.01",
            "p95": "368.97",
            "p99": "362.68",
            "min": "335.26",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "7366.07",
            "p50": "3568.92",
            "p95": "467.68",
            "p99": "3394.00",
            "min": "397.52",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7549.58",
            "p50": "3976.73",
            "p95": "1484.71",
            "p99": "4055.78",
            "min": "1420.10",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1530.44",
            "p50": "1361.80",
            "p95": "857.33",
            "p99": "638.10",
            "min": "637.41",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "14145.41",
            "p50": "1282.61",
            "p95": "897.80",
            "p99": "611.71",
            "min": "599.67",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1720.16",
            "p50": "1545.17",
            "p95": "1041.87",
            "p99": "737.25",
            "min": "686.94",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "3510.80",
            "p50": "3202.55",
            "p95": "1470.24",
            "p99": "1302.29",
            "min": "1294.23",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "3523.03",
            "p50": "3204.72",
            "p95": "1727.62",
            "p99": "1221.84",
            "min": "1105.36",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1457.64",
            "p50": "1345.43",
            "p95": "982.51",
            "p99": "698.24",
            "min": "661.13",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "547.16",
            "p50": "516.17",
            "p95": "433.60",
            "p99": "345.55",
            "min": "333.32",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "804.28",
            "p50": "780.70",
            "p95": "611.60",
            "p99": "491.59",
            "min": "478.70",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "539.42",
            "p50": "511.55",
            "p95": "421.68",
            "p99": "372.66",
            "min": "372.16",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "553.21",
            "p50": "519.51",
            "p95": "442.04",
            "p99": "387.39",
            "min": "377.25",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "33334.27",
            "p50": "7838.34",
            "p95": "2437.14",
            "p99": "1968.59",
            "min": "1786.77",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "600.06",
            "p50": "586.66",
            "p95": "475.10",
            "p99": "407.25",
            "min": "403.08",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "581.24",
            "p50": "566.03",
            "p95": "476.97",
            "p99": "373.00",
            "min": "368.39",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "581.55",
            "p50": "566.86",
            "p95": "498.70",
            "p99": "427.26",
            "min": "424.24",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "591.01",
            "p50": "580.30",
            "p95": "451.74",
            "p99": "431.16",
            "min": "430.96",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "24295.88",
            "p50": "7769.47",
            "p95": "2294.54",
            "p99": "1406.30",
            "min": "1388.32",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "24246.92",
            "p50": "8076.35",
            "p95": "2423.97",
            "p99": "1790.47",
            "min": "1748.76",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "22626.71",
            "p50": "7477.78",
            "p95": "2428.95",
            "p99": "2309.08",
            "min": "2302.91",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "24057.61",
            "p50": "7613.93",
            "p95": "2429.57",
            "p99": "2111.53",
            "min": "2034.99",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "22731.50",
            "p50": "7347.02",
            "p95": "2355.50",
            "p99": "1574.89",
            "min": "1414.84",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "24208.21",
            "p50": "7867.57",
            "p95": "2375.09",
            "p99": "1385.46",
            "min": "1376.22",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "902.62",
            "p50": "871.46",
            "p95": "703.62",
            "p99": "593.58",
            "min": "587.72",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "674.44",
            "p50": "659.70",
            "p95": "549.98",
            "p99": "458.25",
            "min": "449.33",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1879.80",
            "p50": "1784.12",
            "p95": "1179.06",
            "p99": "760.06",
            "min": "643.76",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "15120.92",
            "p50": "8462.39",
            "p95": "2359.08",
            "p99": "1598.45",
            "min": "1439.11",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1816.75",
            "p50": "1712.12",
            "p95": "814.24",
            "p99": "591.78",
            "min": "582.89",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "77273.27",
            "p50": "9519.00",
            "p95": "2449.72",
            "p99": "1791.38",
            "min": "1303.44",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13105.97",
            "p50": "7982.47",
            "p95": "2352.36",
            "p99": "1714.67",
            "min": "1384.50",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "696.82",
            "p50": "563.59",
            "p95": "479.62",
            "p99": "431.98",
            "min": "425.19",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "951.95",
            "p50": "925.69",
            "p95": "650.79",
            "p99": "501.40",
            "min": "453.61",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "817.58",
            "p50": "797.66",
            "p95": "627.03",
            "p99": "486.11",
            "min": "482.53",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1128.90",
            "p50": "1085.66",
            "p95": "835.60",
            "p99": "659.68",
            "min": "624.54",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "811.01",
            "p50": "793.91",
            "p95": "572.53",
            "p99": "492.33",
            "min": "486.36",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1073.51",
            "p50": "1038.05",
            "p95": "716.04",
            "p99": "565.55",
            "min": "556.68",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "860.23",
            "p50": "832.03",
            "p95": "645.02",
            "p99": "540.91",
            "min": "528.57",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "900.41",
            "p50": "873.80",
            "p95": "625.65",
            "p99": "539.57",
            "min": "523.08",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "433.03",
            "p50": "371.94",
            "p95": "358.02",
            "p99": "333.91",
            "min": "333.72",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "885.20",
            "p50": "864.70",
            "p95": "649.17",
            "p99": "539.67",
            "min": "529.92",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "129.53",
            "p50": "122.87",
            "p95": "104.12",
            "p99": "97.68",
            "min": "97.48",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "130.46",
            "p50": "124.03",
            "p95": "108.15",
            "p99": "101.16",
            "min": "100.94",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "130.53",
            "p50": "123.21",
            "p95": "107.14",
            "p99": "100.06",
            "min": "99.96",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "233.28",
            "p50": "209.60",
            "p95": "159.18",
            "p99": "149.64",
            "min": "147.89",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "171.56",
            "p50": "159.52",
            "p95": "132.13",
            "p99": "120.89",
            "min": "120.31",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "172.80",
            "p50": "159.80",
            "p95": "131.45",
            "p99": "104.82",
            "min": "100.69",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "154.98",
            "p50": "145.47",
            "p95": "117.03",
            "p99": "80.57",
            "min": "78.70",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "153.51",
            "p50": "144.22",
            "p95": "118.36",
            "p99": "108.01",
            "min": "107.34",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "200.32",
            "p50": "185.45",
            "p95": "146.44",
            "p99": "90.18",
            "min": "86.15",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "196.29",
            "p50": "182.41",
            "p95": "140.13",
            "p99": "105.01",
            "min": "99.42",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "195.04",
            "p50": "180.95",
            "p95": "151.57",
            "p99": "140.88",
            "min": "140.05",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "133.38",
            "p50": "124.82",
            "p95": "109.16",
            "p99": "100.57",
            "min": "99.23",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "218.16",
            "p50": "198.69",
            "p95": "162.19",
            "p99": "142.31",
            "min": "142.08",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "201.97",
            "p50": "184.03",
            "p95": "153.98",
            "p99": "127.06",
            "min": "124.32",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "113.32",
            "p50": "104.03",
            "p95": "92.75",
            "p99": "85.99",
            "min": "83.99",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "133.90",
            "p50": "123.81",
            "p95": "109.64",
            "p99": "113.26",
            "min": "102.15",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "289.84",
            "p50": "254.45",
            "p95": "185.55",
            "p99": "198.03",
            "min": "176.49",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "166.40",
            "p50": "137.63",
            "p95": "132.80",
            "p99": "146.92",
            "min": "132.21",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "126.86",
            "p50": "116.47",
            "p95": "99.22",
            "p99": "110.86",
            "min": "98.78",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "945.89",
            "p50": "691.35",
            "p95": "360.48",
            "p99": "269.84",
            "min": "228.05",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1002.86",
            "p50": "716.13",
            "p95": "385.82",
            "p99": "268.98",
            "min": "262.73",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "998.69",
            "p50": "738.69",
            "p95": "380.63",
            "p99": "316.13",
            "min": "300.68",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "944.44",
            "p50": "696.67",
            "p95": "378.47",
            "p99": "329.69",
            "min": "329.48",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "901.68",
            "p50": "641.50",
            "p95": "365.52",
            "p99": "304.42",
            "min": "303.08",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "975.89",
            "p50": "721.33",
            "p95": "373.85",
            "p99": "296.95",
            "min": "284.36",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "436.28",
            "p50": "366.52",
            "p95": "256.40",
            "p99": "220.49",
            "min": "215.65",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "430.89",
            "p50": "374.66",
            "p95": "247.10",
            "p99": "208.41",
            "min": "208.20",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "436.49",
            "p50": "370.34",
            "p95": "240.77",
            "p99": "210.31",
            "min": "209.52",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "461.55",
            "p50": "384.26",
            "p95": "266.87",
            "p99": "236.61",
            "min": "233.17",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "280.91",
            "p50": "251.82",
            "p95": "193.60",
            "p99": "165.07",
            "min": "163.79",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "362.17",
            "p50": "308.73",
            "p95": "222.99",
            "p99": "181.59",
            "min": "180.36",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "367.33",
            "p50": "314.07",
            "p95": "217.04",
            "p99": "201.14",
            "min": "200.06",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "371.73",
            "p50": "320.10",
            "p95": "225.56",
            "p99": "192.10",
            "min": "191.37",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "380.66",
            "p50": "330.40",
            "p95": "226.49",
            "p99": "202.94",
            "min": "200.65",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "448.21",
            "p50": "378.50",
            "p95": "238.05",
            "p99": "205.22",
            "min": "203.99",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "447.86",
            "p50": "377.57",
            "p95": "268.49",
            "p99": "221.46",
            "min": "212.46",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "164.96",
            "p50": "154.11",
            "p95": "131.83",
            "p99": "119.27",
            "min": "118.32",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "613.97",
            "p50": "485.08",
            "p95": "300.18",
            "p99": "251.93",
            "min": "248.83",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "162.47",
            "p50": "151.26",
            "p95": "130.17",
            "p99": "118.70",
            "min": "116.20",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "315.29",
            "p50": "278.96",
            "p95": "217.28",
            "p99": "198.25",
            "min": "188.17",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "202.19",
            "p50": "187.93",
            "p95": "154.75",
            "p99": "141.43",
            "min": "141.30",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "182.37",
            "p50": "169.65",
            "p95": "134.51",
            "p99": "126.70",
            "min": "123.88",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "478.36",
            "p50": "392.68",
            "p95": "270.08",
            "p99": "218.98",
            "min": "218.58",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5424.35",
            "p50": "1886.01",
            "p95": "624.98",
            "p99": "451.48",
            "min": "438.37",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "483.32",
            "p50": "398.84",
            "p95": "250.83",
            "p99": "215.28",
            "min": "215.20",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "12497.32",
            "p50": "2638.47",
            "p95": "616.81",
            "p99": "449.61",
            "min": "431.81",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4104.03",
            "p50": "1769.15",
            "p95": "569.50",
            "p99": "484.18",
            "min": "459.06",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "224.62",
            "p50": "202.81",
            "p95": "155.32",
            "p99": "141.24",
            "min": "140.98",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "249.03",
            "p50": "212.42",
            "p95": "134.96",
            "p99": "126.54",
            "min": "125.74",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "130.76",
            "p50": "122.93",
            "p95": "109.33",
            "p99": "96.94",
            "min": "95.99",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "228.67",
            "p50": "206.27",
            "p95": "161.91",
            "p99": "108.90",
            "min": "85.74",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "157.56",
            "p50": "146.60",
            "p95": "126.62",
            "p99": "88.06",
            "min": "81.47",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "195.62",
            "p50": "179.49",
            "p95": "147.39",
            "p99": "134.04",
            "min": "132.61",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "195.00",
            "p50": "179.06",
            "p95": "147.92",
            "p99": "131.02",
            "min": "130.78",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "208.91",
            "p50": "190.51",
            "p95": "157.58",
            "p99": "142.70",
            "min": "140.82",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "402.38",
            "p50": "283.06",
            "p95": "70.87",
            "p99": "64.14",
            "min": "63.89",
            "n": "113",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "162.03",
            "p50": "148.45",
            "p95": "84.08",
            "p99": "81.10",
            "min": "81.01",
            "n": "112",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "86.88",
            "p50": "84.13",
            "p95": "76.04",
            "p99": "72.27",
            "min": "71.98",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "88.07",
            "p50": "85.79",
            "p95": "81.42",
            "p99": "79.26",
            "min": "79.08",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "87.45",
            "p50": "85.09",
            "p95": "82.01",
            "p99": "80.43",
            "min": "80.31",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "186.85",
            "p50": "178.66",
            "p95": "138.28",
            "p99": "99.23",
            "min": "74.09",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "95.95",
            "p50": "93.98",
            "p95": "88.48",
            "p99": "86.01",
            "min": "85.97",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.84",
            "p50": "108.16",
            "p95": "103.88",
            "p99": "99.11",
            "min": "97.93",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "141.55",
            "p50": "138.53",
            "p95": "126.59",
            "p99": "120.25",
            "min": "119.57",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "141.29",
            "p50": "138.73",
            "p95": "133.45",
            "p99": "120.65",
            "min": "118.60",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "102.20",
            "p50": "99.70",
            "p95": "78.62",
            "p99": "78.26",
            "min": "78.26",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "107.42",
            "p50": "105.28",
            "p95": "101.48",
            "p99": "83.61",
            "min": "83.57",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "107.72",
            "p50": "106.05",
            "p95": "102.54",
            "p99": "96.34",
            "min": "95.11",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "140.64",
            "p50": "137.98",
            "p95": "134.38",
            "p99": "128.09",
            "min": "127.28",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "132.70",
            "p50": "127.14",
            "p95": "122.49",
            "p99": "112.31",
            "min": "108.85",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "124.35",
            "p50": "122.35",
            "p95": "111.48",
            "p99": "109.37",
            "min": "109.33",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "102.66",
            "p50": "98.92",
            "p95": "95.64",
            "p99": "89.57",
            "min": "89.13",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "94.62",
            "p50": "93.42",
            "p95": "91.72",
            "p99": "90.66",
            "min": "88.53",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "75.19",
            "p50": "71.64",
            "p95": "66.40",
            "p99": "63.58",
            "min": "60.86",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "147.10",
            "p50": "117.68",
            "p95": "110.11",
            "p99": "125.35",
            "min": "108.93",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "102.06",
            "p50": "100.07",
            "p95": "98.20",
            "p99": "99.23",
            "min": "97.10",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "416.49",
            "p50": "405.96",
            "p95": "363.79",
            "p99": "329.20",
            "min": "328.92",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "476.70",
            "p50": "466.35",
            "p95": "437.68",
            "p99": "398.73",
            "min": "385.71",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "444.09",
            "p50": "429.19",
            "p95": "387.78",
            "p99": "359.95",
            "min": "357.01",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "451.09",
            "p50": "437.19",
            "p95": "402.83",
            "p99": "325.05",
            "min": "307.81",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "455.31",
            "p50": "437.49",
            "p95": "393.50",
            "p99": "331.25",
            "min": "328.30",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "458.22",
            "p50": "449.98",
            "p95": "398.81",
            "p99": "314.97",
            "min": "312.35",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "119.63",
            "p50": "116.46",
            "p95": "110.91",
            "p99": "106.91",
            "min": "106.44",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "120.86",
            "p50": "117.10",
            "p95": "111.81",
            "p99": "109.82",
            "min": "109.57",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "117.71",
            "p50": "114.73",
            "p95": "109.45",
            "p99": "102.52",
            "min": "102.03",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "102.36",
            "p50": "98.85",
            "p95": "96.04",
            "p99": "90.30",
            "min": "89.58",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "84.70",
            "p50": "84.24",
            "p95": "83.43",
            "p99": "82.11",
            "min": "81.73",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "118.59",
            "p50": "114.98",
            "p95": "107.63",
            "p99": "106.70",
            "min": "106.60",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "112.48",
            "p50": "108.26",
            "p95": "101.49",
            "p99": "95.29",
            "min": "94.40",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "111.99",
            "p50": "109.45",
            "p95": "102.07",
            "p99": "100.59",
            "min": "100.51",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "112.59",
            "p50": "109.12",
            "p95": "101.93",
            "p99": "97.09",
            "min": "96.33",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1588.50",
            "p50": "1407.80",
            "p95": "739.71",
            "p99": "521.81",
            "min": "448.79",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1600.66",
            "p50": "1434.88",
            "p95": "775.50",
            "p99": "290.64",
            "min": "209.81",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.22",
            "p50": "151.77",
            "p95": "137.97",
            "p99": "131.67",
            "min": "130.97",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3901.50",
            "p50": "3541.63",
            "p95": "1843.35",
            "p99": "1106.85",
            "min": "886.99",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "155.59",
            "p50": "150.57",
            "p95": "128.81",
            "p99": "106.07",
            "min": "97.96",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3915.64",
            "p50": "3399.80",
            "p95": "1260.14",
            "p99": "484.84",
            "min": "379.23",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "107.57",
            "p50": "105.84",
            "p95": "99.49",
            "p99": "86.98",
            "min": "86.42",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "169.74",
            "p50": "165.88",
            "p95": "162.58",
            "p99": "148.55",
            "min": "147.44",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "389.73",
            "p50": "280.48",
            "p95": "207.36",
            "p99": "186.31",
            "min": "179.57",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9908.96",
            "p50": "1534.90",
            "p95": "708.06",
            "p99": "526.34",
            "min": "497.06",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "424.42",
            "p50": "310.62",
            "p95": "228.26",
            "p99": "178.10",
            "min": "176.73",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "27883.48",
            "p50": "8480.50",
            "p95": "2397.88",
            "p99": "1723.46",
            "min": "1697.04",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6687.63",
            "p50": "2999.12",
            "p95": "1643.07",
            "p99": "830.97",
            "min": "359.10",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "342.72",
            "p50": "275.55",
            "p95": "190.52",
            "p99": "123.01",
            "min": "100.53",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "135.36",
            "p50": "127.61",
            "p95": "111.62",
            "p99": "99.12",
            "min": "97.19",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "138.72",
            "p50": "132.04",
            "p95": "125.62",
            "p99": "121.96",
            "min": "121.25",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "121.95",
            "p50": "111.78",
            "p95": "98.54",
            "p99": "95.71",
            "min": "95.26",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "140.94",
            "p50": "134.59",
            "p95": "125.71",
            "p99": "119.04",
            "min": "117.81",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "149.85",
            "p50": "147.10",
            "p95": "141.98",
            "p99": "115.12",
            "min": "111.39",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "101.09",
            "p50": "99.25",
            "p95": "80.42",
            "p99": "76.56",
            "min": "76.30",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "132.64",
            "p50": "121.17",
            "p95": "119.21",
            "p99": "116.15",
            "min": "115.02",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1187.85",
            "p50": "1099.79",
            "p95": "379.73",
            "p99": "362.91",
            "min": "360.47",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "140.66",
            "p50": "133.89",
            "p95": "127.51",
            "p99": "124.06",
            "min": "123.81",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}