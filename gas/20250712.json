{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "113.83",
            "p50": "108.90",
            "p95": "96.08",
            "p99": "91.49",
            "min": "91.41",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1092.11",
            "p50": "922.73",
            "p95": "527.17",
            "p99": "471.82",
            "min": "462.89",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "114.83",
            "p50": "108.67",
            "p95": "100.87",
            "p99": "97.67",
            "min": "97.48",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "992.93",
            "p50": "897.07",
            "p95": "631.36",
            "p99": "472.36",
            "min": "469.21",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "479.00",
            "p50": "435.17",
            "p95": "339.87",
            "p99": "129.40",
            "min": "128.72",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "459.89",
            "p50": "417.32",
            "p95": "322.67",
            "p99": "214.15",
            "min": "213.13",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "415.33",
            "p50": "379.51",
            "p95": "243.13",
            "p99": "229.47",
            "min": "228.68",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "427.70",
            "p50": "394.57",
            "p95": "326.93",
            "p99": "311.32",
            "min": "310.15",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "409.56",
            "p50": "377.55",
            "p95": "307.99",
            "p99": "289.48",
            "min": "285.82",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "693.67",
            "p50": "609.55",
            "p95": "438.98",
            "p99": "400.38",
            "min": "398.50",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "701.79",
            "p50": "613.36",
            "p95": "462.54",
            "p99": "404.72",
            "min": "400.84",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "659.52",
            "p50": "568.36",
            "p95": "455.69",
            "p99": "395.09",
            "min": "391.00",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "387.95",
            "p50": "358.47",
            "p95": "298.89",
            "p99": "252.87",
            "min": "243.81",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "419.92",
            "p50": "384.66",
            "p95": "310.03",
            "p99": "281.63",
            "min": "281.40",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8206.05",
            "p50": "3869.75",
            "p95": "1816.36",
            "p99": "1369.06",
            "min": "1356.68",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2840.32",
            "p50": "1711.66",
            "p95": "966.41",
            "p99": "1553.32",
            "min": "860.32",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "304.79",
            "p50": "279.42",
            "p95": "245.15",
            "p99": "230.88",
            "min": "213.55",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1444.55",
            "p50": "689.42",
            "p95": "324.88",
            "p99": "801.61",
            "min": "316.58",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7670.92",
            "p50": "3320.72",
            "p95": "1439.21",
            "p99": "4089.12",
            "min": "1387.06",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "813.02",
            "p50": "695.18",
            "p95": "493.90",
            "p99": "416.38",
            "min": "414.15",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "812.16",
            "p50": "747.74",
            "p95": "532.79",
            "p99": "434.49",
            "min": "426.94",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "934.09",
            "p50": "787.22",
            "p95": "527.19",
            "p99": "455.95",
            "min": "449.30",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2348.52",
            "p50": "1986.35",
            "p95": "921.58",
            "p99": "784.09",
            "min": "748.24",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2310.32",
            "p50": "1790.11",
            "p95": "887.41",
            "p99": "697.02",
            "min": "674.50",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "799.90",
            "p50": "722.33",
            "p95": "550.78",
            "p99": "480.43",
            "min": "477.33",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "164.02",
            "p50": "152.96",
            "p95": "139.92",
            "p99": "130.58",
            "min": "130.24",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "534.20",
            "p50": "467.98",
            "p95": "374.53",
            "p99": "336.43",
            "min": "335.71",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "163.65",
            "p50": "153.00",
            "p95": "141.90",
            "p99": "137.85",
            "min": "137.14",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "186.84",
            "p50": "169.26",
            "p95": "152.72",
            "p99": "149.07",
            "min": "148.86",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "33376.28",
            "p50": "8206.81",
            "p95": "2325.32",
            "p99": "1375.03",
            "min": "1213.54",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "391.86",
            "p50": "356.24",
            "p95": "301.60",
            "p99": "265.36",
            "min": "262.62",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "370.00",
            "p50": "337.09",
            "p95": "283.10",
            "p99": "254.26",
            "min": "253.65",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "378.58",
            "p50": "339.44",
            "p95": "281.90",
            "p99": "217.21",
            "min": "205.63",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "387.27",
            "p50": "336.46",
            "p95": "276.78",
            "p99": "250.72",
            "min": "247.36",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "16267.67",
            "p50": "4922.92",
            "p95": "2435.38",
            "p99": "2264.48",
            "min": "2229.16",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "16062.17",
            "p50": "5417.88",
            "p95": "2485.73",
            "p99": "1632.29",
            "min": "1432.84",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "15751.80",
            "p50": "4783.66",
            "p95": "2266.69",
            "p99": "1975.60",
            "min": "1952.86",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "16057.41",
            "p50": "5163.41",
            "p95": "2379.87",
            "p99": "2022.46",
            "min": "1897.01",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "15325.59",
            "p50": "4937.92",
            "p95": "2399.16",
            "p99": "1722.09",
            "min": "1702.16",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "16279.79",
            "p50": "5221.71",
            "p95": "2356.14",
            "p99": "1689.78",
            "min": "1621.62",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "703.14",
            "p50": "597.67",
            "p95": "466.49",
            "p99": "417.37",
            "min": "412.87",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "610.99",
            "p50": "502.90",
            "p95": "387.74",
            "p99": "323.20",
            "min": "317.53",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1394.11",
            "p50": "1150.20",
            "p95": "295.50",
            "p99": "247.18",
            "min": "242.11",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "22995.43",
            "p50": "8055.06",
            "p95": "2484.77",
            "p99": "2304.87",
            "min": "2277.67",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1333.86",
            "p50": "1136.71",
            "p95": "763.29",
            "p99": "406.24",
            "min": "242.03",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "52539.79",
            "p50": "9108.98",
            "p95": "2384.69",
            "p99": "1999.21",
            "min": "1753.26",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "11669.65",
            "p50": "6181.61",
            "p95": "2309.03",
            "p99": "1199.97",
            "min": "378.32",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "585.76",
            "p50": "489.53",
            "p95": "383.27",
            "p99": "348.13",
            "min": "347.65",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "556.57",
            "p50": "510.99",
            "p95": "399.49",
            "p99": "240.44",
            "min": "199.99",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "639.40",
            "p50": "572.24",
            "p95": "441.69",
            "p99": "383.02",
            "min": "376.39",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "642.11",
            "p50": "594.78",
            "p95": "449.30",
            "p99": "404.47",
            "min": "402.36",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "644.35",
            "p50": "571.08",
            "p95": "426.26",
            "p99": "387.71",
            "min": "385.41",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "935.17",
            "p50": "860.95",
            "p95": "594.86",
            "p99": "482.28",
            "min": "450.79",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "696.96",
            "p50": "599.99",
            "p95": "440.08",
            "p99": "401.67",
            "min": "399.94",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "738.03",
            "p50": "653.68",
            "p95": "494.35",
            "p99": "410.15",
            "min": "401.65",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1591.41",
            "p50": "1369.48",
            "p95": "1031.64",
            "p99": "757.45",
            "min": "671.49",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "675.51",
            "p50": "600.42",
            "p95": "451.97",
            "p99": "400.10",
            "min": "395.50",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "140.82",
            "p50": "137.87",
            "p95": "128.74",
            "p99": "125.02",
            "min": "124.93",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "140.72",
            "p50": "136.64",
            "p95": "123.93",
            "p99": "95.95",
            "min": "89.71",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "140.26",
            "p50": "137.92",
            "p95": "126.50",
            "p99": "117.74",
            "min": "116.21",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "239.78",
            "p50": "234.31",
            "p95": "212.27",
            "p99": "198.83",
            "min": "197.59",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "190.37",
            "p50": "186.50",
            "p95": "160.25",
            "p99": "96.14",
            "min": "90.09",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "202.49",
            "p50": "195.96",
            "p95": "176.03",
            "p99": "160.63",
            "min": "157.67",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "183.32",
            "p50": "174.31",
            "p95": "156.24",
            "p99": "132.29",
            "min": "130.04",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "192.35",
            "p50": "182.47",
            "p95": "165.23",
            "p99": "117.97",
            "min": "111.16",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "211.35",
            "p50": "201.11",
            "p95": "183.39",
            "p99": "149.71",
            "min": "138.66",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "182.84",
            "p50": "175.78",
            "p95": "158.91",
            "p99": "136.29",
            "min": "132.90",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "209.57",
            "p50": "200.20",
            "p95": "181.24",
            "p99": "134.47",
            "min": "125.38",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "149.70",
            "p50": "143.15",
            "p95": "131.40",
            "p99": "106.32",
            "min": "101.76",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "231.69",
            "p50": "224.21",
            "p95": "203.75",
            "p99": "116.36",
            "min": "94.25",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "182.46",
            "p50": "173.33",
            "p95": "160.76",
            "p99": "119.49",
            "min": "112.89",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "101.13",
            "p50": "96.45",
            "p95": "91.78",
            "p99": "84.95",
            "min": "84.84",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "140.44",
            "p50": "135.93",
            "p95": "124.45",
            "p99": "127.92",
            "min": "121.18",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "465.84",
            "p50": "331.88",
            "p95": "261.65",
            "p99": "271.99",
            "min": "226.52",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "193.14",
            "p50": "151.05",
            "p95": "131.76",
            "p99": "155.63",
            "min": "127.34",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "132.89",
            "p50": "128.71",
            "p95": "120.10",
            "p99": "125.20",
            "min": "119.40",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1214.60",
            "p50": "1064.14",
            "p95": "746.06",
            "p99": "515.83",
            "min": "382.26",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1036.38",
            "p50": "1005.49",
            "p95": "741.13",
            "p99": "592.67",
            "min": "587.07",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1459.55",
            "p50": "1187.99",
            "p95": "763.41",
            "p99": "573.69",
            "min": "511.40",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1347.17",
            "p50": "1117.18",
            "p95": "778.64",
            "p99": "636.46",
            "min": "618.55",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1330.65",
            "p50": "1078.21",
            "p95": "679.85",
            "p99": "541.41",
            "min": "505.80",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1084.28",
            "p50": "1024.04",
            "p95": "723.87",
            "p99": "597.82",
            "min": "561.96",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "724.60",
            "p50": "552.04",
            "p95": "419.28",
            "p99": "383.31",
            "min": "379.19",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "730.05",
            "p50": "537.66",
            "p95": "417.84",
            "p99": "403.62",
            "min": "403.14",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "723.87",
            "p50": "542.03",
            "p95": "390.78",
            "p99": "326.33",
            "min": "319.88",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "725.39",
            "p50": "553.18",
            "p95": "432.98",
            "p99": "371.38",
            "min": "366.12",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "291.15",
            "p50": "282.48",
            "p95": "240.52",
            "p99": "225.60",
            "min": "223.87",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "598.95",
            "p50": "416.83",
            "p95": "343.36",
            "p99": "324.61",
            "min": "323.88",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "609.10",
            "p50": "459.42",
            "p95": "369.83",
            "p99": "345.57",
            "min": "344.18",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "634.71",
            "p50": "484.53",
            "p95": "404.68",
            "p99": "325.91",
            "min": "324.97",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "655.42",
            "p50": "494.24",
            "p95": "397.21",
            "p99": "370.42",
            "min": "369.22",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "104.63",
            "p50": "101.92",
            "p95": "97.57",
            "p99": "88.39",
            "min": "87.87",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "104.68",
            "p50": "102.02",
            "p95": "96.19",
            "p99": "93.01",
            "min": "91.82",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.93",
            "p50": "94.55",
            "p95": "89.72",
            "p99": "87.91",
            "min": "87.78",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "251.71",
            "p50": "240.20",
            "p95": "211.33",
            "p99": "204.47",
            "min": "204.29",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.75",
            "p50": "94.76",
            "p95": "90.41",
            "p99": "88.38",
            "min": "88.12",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "244.61",
            "p50": "231.96",
            "p95": "208.23",
            "p99": "194.60",
            "min": "193.74",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "212.84",
            "p50": "202.26",
            "p95": "185.02",
            "p99": "130.75",
            "min": "117.89",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "238.32",
            "p50": "232.43",
            "p95": "214.15",
            "p99": "200.10",
            "min": "199.37",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "557.23",
            "p50": "539.69",
            "p95": "450.21",
            "p99": "402.89",
            "min": "396.98",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7019.42",
            "p50": "2705.88",
            "p95": "1796.86",
            "p99": "1508.63",
            "min": "1505.00",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "522.49",
            "p50": "504.88",
            "p95": "413.13",
            "p99": "379.60",
            "min": "367.61",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "21403.62",
            "p50": "7706.42",
            "p95": "2415.50",
            "p99": "1845.93",
            "min": "1444.00",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4467.30",
            "p50": "2514.31",
            "p95": "1391.64",
            "p99": "1011.45",
            "min": "928.71",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "230.85",
            "p50": "178.65",
            "p95": "156.21",
            "p99": "147.38",
            "min": "145.76",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "267.83",
            "p50": "261.58",
            "p95": "229.51",
            "p99": "211.79",
            "min": "208.17",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "150.36",
            "p50": "145.83",
            "p95": "135.52",
            "p99": "131.95",
            "min": "131.35",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "242.82",
            "p50": "238.64",
            "p95": "207.86",
            "p99": "189.65",
            "min": "188.71",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "192.25",
            "p50": "186.45",
            "p95": "165.64",
            "p99": "160.62",
            "min": "159.95",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "219.12",
            "p50": "210.93",
            "p95": "191.78",
            "p99": "162.03",
            "min": "144.85",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "211.78",
            "p50": "204.46",
            "p95": "187.49",
            "p99": "175.07",
            "min": "174.80",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "211.08",
            "p50": "204.18",
            "p95": "189.07",
            "p99": "172.32",
            "min": "169.16",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1229.38",
            "p50": "1116.80",
            "p95": "845.01",
            "p99": "628.20",
            "min": "626.48",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "185.42",
            "p50": "178.18",
            "p95": "160.56",
            "p99": "139.22",
            "min": "134.66",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "189.08",
            "p50": "187.21",
            "p95": "170.36",
            "p99": "164.62",
            "min": "164.06",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "190.99",
            "p50": "187.57",
            "p95": "177.93",
            "p99": "163.21",
            "min": "162.39",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "190.57",
            "p50": "187.85",
            "p95": "175.63",
            "p99": "170.34",
            "min": "169.34",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1126.21",
            "p50": "1101.44",
            "p95": "790.28",
            "p99": "638.96",
            "min": "626.37",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "634.88",
            "p50": "621.81",
            "p95": "490.50",
            "p99": "240.71",
            "min": "239.11",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "605.60",
            "p50": "593.89",
            "p95": "509.41",
            "p99": "439.04",
            "min": "437.47",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "647.86",
            "p50": "638.68",
            "p95": "518.98",
            "p99": "382.41",
            "min": "371.69",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "759.45",
            "p50": "746.86",
            "p95": "613.00",
            "p99": "482.71",
            "min": "463.35",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "903.20",
            "p50": "837.16",
            "p95": "631.54",
            "p99": "595.07",
            "min": "590.26",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "879.68",
            "p50": "859.26",
            "p95": "670.99",
            "p99": "521.67",
            "min": "510.73",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "883.46",
            "p50": "857.60",
            "p95": "609.68",
            "p99": "462.39",
            "min": "454.60",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "807.50",
            "p50": "786.48",
            "p95": "647.91",
            "p99": "494.56",
            "min": "483.38",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "686.23",
            "p50": "672.90",
            "p95": "527.79",
            "p99": "448.62",
            "min": "439.75",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "858.90",
            "p50": "830.99",
            "p95": "707.04",
            "p99": "545.98",
            "min": "535.27",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "11303.62",
            "p50": "6994.06",
            "p95": "2401.26",
            "p99": "2271.62",
            "min": "2271.47",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "3938.29",
            "p50": "3589.83",
            "p95": "1647.83",
            "p99": "2326.03",
            "min": "1457.89",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "438.86",
            "p50": "432.70",
            "p95": "363.59",
            "p99": "343.23",
            "min": "320.80",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "7290.95",
            "p50": "3982.98",
            "p95": "563.26",
            "p99": "3419.35",
            "min": "498.67",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7340.11",
            "p50": "4587.34",
            "p95": "2269.62",
            "p99": "3975.94",
            "min": "1438.06",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1510.42",
            "p50": "1360.19",
            "p95": "995.12",
            "p99": "806.15",
            "min": "797.14",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "14798.82",
            "p50": "1290.15",
            "p95": "983.28",
            "p99": "821.47",
            "min": "784.83",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1701.94",
            "p50": "1556.85",
            "p95": "1070.12",
            "p99": "814.67",
            "min": "768.13",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "3252.68",
            "p50": "3041.40",
            "p95": "1832.16",
            "p99": "1199.15",
            "min": "1114.07",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "3230.58",
            "p50": "3044.31",
            "p95": "2029.53",
            "p99": "1083.71",
            "min": "1051.73",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1463.06",
            "p50": "1360.85",
            "p95": "1060.95",
            "p99": "640.04",
            "min": "585.00",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "525.71",
            "p50": "503.35",
            "p95": "446.10",
            "p99": "362.68",
            "min": "351.47",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "735.99",
            "p50": "715.42",
            "p95": "569.04",
            "p99": "477.83",
            "min": "471.77",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "523.39",
            "p50": "502.05",
            "p95": "416.58",
            "p99": "370.16",
            "min": "366.26",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "544.99",
            "p50": "511.02",
            "p95": "447.16",
            "p99": "398.26",
            "min": "390.63",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "32823.14",
            "p50": "8416.93",
            "p95": "2496.29",
            "p99": "2252.34",
            "min": "2243.24",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "549.45",
            "p50": "539.37",
            "p95": "471.49",
            "p99": "412.61",
            "min": "399.34",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "527.79",
            "p50": "516.80",
            "p95": "419.79",
            "p99": "395.44",
            "min": "394.94",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "533.43",
            "p50": "519.81",
            "p95": "466.66",
            "p99": "420.64",
            "min": "411.60",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "539.69",
            "p50": "526.47",
            "p95": "442.46",
            "p99": "396.89",
            "min": "395.52",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "22273.74",
            "p50": "7704.39",
            "p95": "2487.81",
            "p99": "2257.39",
            "min": "2253.17",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "22492.56",
            "p50": "8223.90",
            "p95": "2424.03",
            "p99": "2229.42",
            "min": "2216.12",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "21583.10",
            "p50": "7861.14",
            "p95": "2352.91",
            "p99": "1603.18",
            "min": "1426.52",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "22282.36",
            "p50": "7853.78",
            "p95": "2399.29",
            "p99": "1895.57",
            "min": "1452.00",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "21419.60",
            "p50": "7068.40",
            "p95": "2342.40",
            "p99": "2146.76",
            "min": "2097.66",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "22308.35",
            "p50": "7931.41",
            "p95": "2380.06",
            "p99": "2225.27",
            "min": "2153.23",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "881.79",
            "p50": "827.11",
            "p95": "632.93",
            "p99": "514.63",
            "min": "499.87",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "633.65",
            "p50": "623.21",
            "p95": "577.57",
            "p99": "513.20",
            "min": "508.14",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1936.79",
            "p50": "1865.63",
            "p95": "1126.27",
            "p99": "709.10",
            "min": "701.74",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "15031.79",
            "p50": "9132.92",
            "p95": "2488.37",
            "p99": "1644.73",
            "min": "1595.33",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1859.78",
            "p50": "1766.65",
            "p95": "1176.26",
            "p99": "729.88",
            "min": "726.53",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "75243.60",
            "p50": "9201.74",
            "p95": "2426.69",
            "p99": "2124.41",
            "min": "2016.49",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14247.28",
            "p50": "8470.75",
            "p95": "2473.26",
            "p99": "2251.76",
            "min": "2217.24",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "664.89",
            "p50": "562.61",
            "p95": "489.49",
            "p99": "420.36",
            "min": "396.67",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "918.54",
            "p50": "899.84",
            "p95": "678.99",
            "p99": "547.82",
            "min": "531.39",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "807.19",
            "p50": "793.00",
            "p95": "619.30",
            "p99": "463.14",
            "min": "423.85",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1139.68",
            "p50": "1110.87",
            "p95": "826.97",
            "p99": "739.77",
            "min": "728.79",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "757.31",
            "p50": "745.97",
            "p95": "591.24",
            "p99": "480.05",
            "min": "461.10",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1080.32",
            "p50": "1054.21",
            "p95": "818.64",
            "p99": "730.67",
            "min": "722.57",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "835.20",
            "p50": "820.15",
            "p95": "570.95",
            "p99": "491.18",
            "min": "490.96",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "891.19",
            "p50": "872.93",
            "p95": "696.92",
            "p99": "553.78",
            "min": "546.38",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2080.43",
            "p50": "1827.78",
            "p95": "1426.10",
            "p99": "1227.79",
            "min": "1226.17",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "864.33",
            "p50": "825.92",
            "p95": "656.77",
            "p99": "500.00",
            "min": "499.47",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "121.22",
            "p50": "115.78",
            "p95": "102.06",
            "p99": "96.11",
            "min": "95.55",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "121.19",
            "p50": "115.60",
            "p95": "104.62",
            "p99": "96.62",
            "min": "96.35",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "121.15",
            "p50": "116.04",
            "p95": "105.93",
            "p99": "99.57",
            "min": "98.30",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "205.18",
            "p50": "188.68",
            "p95": "154.09",
            "p99": "127.34",
            "min": "120.94",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.23",
            "p50": "97.87",
            "p95": "83.23",
            "p99": "79.67",
            "min": "79.25",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "107.87",
            "p50": "103.07",
            "p95": "88.06",
            "p99": "83.25",
            "min": "82.67",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "139.47",
            "p50": "130.78",
            "p95": "106.74",
            "p99": "90.22",
            "min": "87.03",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "140.66",
            "p50": "129.26",
            "p95": "105.92",
            "p99": "100.86",
            "min": "100.82",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "179.24",
            "p50": "163.67",
            "p95": "125.92",
            "p99": "119.21",
            "min": "119.10",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "180.12",
            "p50": "165.01",
            "p95": "134.51",
            "p99": "107.07",
            "min": "103.51",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "179.73",
            "p50": "163.45",
            "p95": "133.04",
            "p99": "119.59",
            "min": "118.24",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "124.34",
            "p50": "116.20",
            "p95": "100.62",
            "p99": "91.93",
            "min": "91.08",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "199.37",
            "p50": "181.70",
            "p95": "138.44",
            "p99": "134.58",
            "min": "134.18",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "184.92",
            "p50": "167.36",
            "p95": "134.72",
            "p99": "124.34",
            "min": "123.78",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "74.41",
            "p50": "69.99",
            "p95": "64.48",
            "p99": "61.39",
            "min": "61.33",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "128.11",
            "p50": "120.10",
            "p95": "98.77",
            "p99": "103.38",
            "min": "90.06",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "202.95",
            "p50": "178.91",
            "p95": "140.44",
            "p99": "143.92",
            "min": "130.07",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "149.38",
            "p50": "134.11",
            "p95": "130.42",
            "p99": "132.30",
            "min": "119.41",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "124.73",
            "p50": "112.92",
            "p95": "98.62",
            "p99": "108.39",
            "min": "96.05",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1021.99",
            "p50": "686.41",
            "p95": "335.35",
            "p99": "265.42",
            "min": "258.79",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "996.42",
            "p50": "645.21",
            "p95": "342.36",
            "p99": "259.37",
            "min": "252.75",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1121.25",
            "p50": "720.57",
            "p95": "326.42",
            "p99": "287.36",
            "min": "286.72",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1037.93",
            "p50": "673.55",
            "p95": "341.12",
            "p99": "265.88",
            "min": "263.07",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "997.23",
            "p50": "672.86",
            "p95": "317.73",
            "p99": "264.85",
            "min": "264.35",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1000.67",
            "p50": "691.34",
            "p95": "346.43",
            "p99": "266.39",
            "min": "256.49",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "329.98",
            "p50": "283.53",
            "p95": "193.93",
            "p99": "173.03",
            "min": "172.77",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "328.98",
            "p50": "283.84",
            "p95": "199.42",
            "p99": "176.98",
            "min": "176.58",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "330.75",
            "p50": "286.12",
            "p95": "202.37",
            "p99": "163.03",
            "min": "157.07",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "358.30",
            "p50": "305.17",
            "p95": "213.19",
            "p99": "192.57",
            "min": "192.28",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "277.28",
            "p50": "244.06",
            "p95": "175.69",
            "p99": "159.06",
            "min": "156.44",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "279.15",
            "p50": "239.65",
            "p95": "175.83",
            "p99": "163.34",
            "min": "162.96",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "278.28",
            "p50": "240.75",
            "p95": "179.10",
            "p99": "164.00",
            "min": "163.74",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "287.14",
            "p50": "242.82",
            "p95": "187.95",
            "p99": "165.51",
            "min": "163.34",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "279.63",
            "p50": "242.59",
            "p95": "185.63",
            "p99": "160.69",
            "min": "159.39",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "104.24",
            "p50": "97.95",
            "p95": "87.35",
            "p99": "80.56",
            "min": "78.51",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "104.46",
            "p50": "98.44",
            "p95": "85.29",
            "p99": "81.34",
            "min": "81.29",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "95.55",
            "p50": "91.03",
            "p95": "78.86",
            "p99": "76.57",
            "min": "76.45",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "244.06",
            "p50": "217.71",
            "p95": "166.78",
            "p99": "148.80",
            "min": "147.95",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "95.49",
            "p50": "90.54",
            "p95": "78.07",
            "p99": "74.74",
            "min": "74.66",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "237.83",
            "p50": "210.37",
            "p95": "156.93",
            "p99": "140.05",
            "min": "138.88",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "178.27",
            "p50": "163.22",
            "p95": "130.36",
            "p99": "119.41",
            "min": "118.68",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "147.86",
            "p50": "136.15",
            "p95": "113.81",
            "p99": "106.26",
            "min": "106.09",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "431.96",
            "p50": "379.54",
            "p95": "266.60",
            "p99": "231.68",
            "min": "228.67",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5024.15",
            "p50": "2101.03",
            "p95": "621.35",
            "p99": "504.49",
            "min": "480.04",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "433.66",
            "p50": "375.33",
            "p95": "259.72",
            "p99": "220.56",
            "min": "219.72",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14170.31",
            "p50": "3156.79",
            "p95": "1060.11",
            "p99": "612.05",
            "min": "505.80",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3635.29",
            "p50": "1832.79",
            "p95": "602.46",
            "p99": "495.14",
            "min": "479.51",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "205.92",
            "p50": "187.70",
            "p95": "158.41",
            "p99": "130.63",
            "min": "126.86",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "227.20",
            "p50": "210.95",
            "p95": "171.21",
            "p99": "132.15",
            "min": "124.48",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "126.57",
            "p50": "118.01",
            "p95": "102.19",
            "p99": "89.71",
            "min": "87.57",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "203.04",
            "p50": "182.86",
            "p95": "141.15",
            "p99": "122.39",
            "min": "116.24",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "138.13",
            "p50": "128.88",
            "p95": "109.16",
            "p99": "101.92",
            "min": "101.29",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "175.72",
            "p50": "158.88",
            "p95": "124.76",
            "p99": "115.23",
            "min": "114.79",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "177.05",
            "p50": "161.47",
            "p95": "129.82",
            "p99": "123.32",
            "min": "123.16",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "179.88",
            "p50": "164.98",
            "p95": "135.01",
            "p99": "119.26",
            "min": "118.13",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "305.20",
            "p50": "241.54",
            "p95": "57.99",
            "p99": "52.51",
            "min": "52.44",
            "n": "104",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "143.98",
            "p50": "136.75",
            "p95": "114.31",
            "p99": "57.63",
            "min": "55.75",
            "n": "105",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "85.97",
            "p50": "82.52",
            "p95": "76.12",
            "p99": "73.74",
            "min": "73.57",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "87.22",
            "p50": "83.67",
            "p95": "81.37",
            "p99": "78.76",
            "min": "78.36",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "87.00",
            "p50": "83.15",
            "p95": "80.39",
            "p99": "72.77",
            "min": "72.68",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "238.29",
            "p50": "179.06",
            "p95": "173.92",
            "p99": "167.60",
            "min": "164.15",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "96.38",
            "p50": "94.26",
            "p95": "88.12",
            "p99": "84.32",
            "min": "83.64",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "111.38",
            "p50": "109.27",
            "p95": "106.45",
            "p99": "101.45",
            "min": "101.39",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "122.59",
            "p50": "119.40",
            "p95": "108.05",
            "p99": "103.24",
            "min": "103.11",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "122.58",
            "p50": "120.14",
            "p95": "116.75",
            "p99": "112.89",
            "min": "112.12",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "94.07",
            "p50": "91.91",
            "p95": "71.47",
            "p99": "71.05",
            "min": "71.05",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "99.12",
            "p50": "96.94",
            "p95": "89.58",
            "p99": "66.28",
            "min": "66.25",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.98",
            "p50": "97.08",
            "p95": "91.33",
            "p99": "83.29",
            "min": "81.42",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "123.15",
            "p50": "119.77",
            "p95": "111.62",
            "p99": "109.35",
            "min": "109.21",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "135.09",
            "p50": "130.65",
            "p95": "121.56",
            "p99": "117.46",
            "min": "116.78",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "112.90",
            "p50": "111.24",
            "p95": "101.44",
            "p99": "95.85",
            "min": "94.81",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "88.23",
            "p50": "83.31",
            "p95": "78.74",
            "p99": "72.38",
            "min": "70.87",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "100.58",
            "p50": "99.36",
            "p95": "94.10",
            "p99": "95.45",
            "min": "92.69",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "76.19",
            "p50": "72.36",
            "p95": "67.47",
            "p99": "65.57",
            "min": "63.08",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "157.17",
            "p50": "124.95",
            "p95": "116.85",
            "p99": "132.89",
            "min": "114.57",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "107.77",
            "p50": "105.93",
            "p95": "105.15",
            "p99": "104.61",
            "min": "102.23",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "423.39",
            "p50": "409.38",
            "p95": "377.16",
            "p99": "331.87",
            "min": "317.56",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "476.58",
            "p50": "468.20",
            "p95": "455.63",
            "p99": "357.07",
            "min": "341.43",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "455.12",
            "p50": "437.04",
            "p95": "398.92",
            "p99": "341.46",
            "min": "323.80",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "463.31",
            "p50": "442.28",
            "p95": "401.65",
            "p99": "341.69",
            "min": "340.65",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "465.98",
            "p50": "446.01",
            "p95": "418.94",
            "p99": "372.93",
            "min": "367.53",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "462.14",
            "p50": "452.42",
            "p95": "420.55",
            "p99": "339.59",
            "min": "328.53",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "122.16",
            "p50": "118.12",
            "p95": "112.95",
            "p99": "110.11",
            "min": "109.72",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "122.95",
            "p50": "119.26",
            "p95": "113.08",
            "p99": "110.50",
            "min": "110.36",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "120.00",
            "p50": "116.44",
            "p95": "110.84",
            "p99": "109.74",
            "min": "109.72",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "102.68",
            "p50": "100.29",
            "p95": "96.22",
            "p99": "93.48",
            "min": "93.25",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "85.59",
            "p50": "84.32",
            "p95": "83.62",
            "p99": "80.85",
            "min": "80.83",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "121.47",
            "p50": "116.89",
            "p95": "109.82",
            "p99": "106.04",
            "min": "105.49",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "115.40",
            "p50": "110.54",
            "p95": "104.09",
            "p99": "100.96",
            "min": "100.58",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "115.10",
            "p50": "110.32",
            "p95": "104.28",
            "p99": "99.82",
            "min": "98.98",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "114.80",
            "p50": "110.49",
            "p95": "103.46",
            "p99": "99.50",
            "min": "99.42",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1598.14",
            "p50": "1423.43",
            "p95": "765.74",
            "p99": "534.16",
            "min": "523.05",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1611.88",
            "p50": "1461.39",
            "p95": "931.61",
            "p99": "578.61",
            "min": "542.53",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.41",
            "p50": "151.92",
            "p95": "137.06",
            "p99": "126.63",
            "min": "123.06",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3965.63",
            "p50": "3499.13",
            "p95": "1365.36",
            "p99": "782.62",
            "min": "575.71",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "155.55",
            "p50": "151.53",
            "p95": "132.71",
            "p99": "114.41",
            "min": "113.94",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3972.02",
            "p50": "3536.09",
            "p95": "1295.93",
            "p99": "555.03",
            "min": "387.16",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "100.64",
            "p50": "98.03",
            "p95": "92.66",
            "p99": "83.21",
            "min": "82.15",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "174.06",
            "p50": "169.64",
            "p95": "158.63",
            "p99": "152.63",
            "min": "151.96",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "348.10",
            "p50": "261.04",
            "p95": "198.95",
            "p99": "183.64",
            "min": "181.39",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "10271.60",
            "p50": "1558.74",
            "p95": "757.06",
            "p99": "634.53",
            "min": "603.54",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "349.44",
            "p50": "255.34",
            "p95": "213.68",
            "p99": "187.28",
            "min": "186.11",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "25622.48",
            "p50": "8428.14",
            "p95": "2392.81",
            "p99": "1898.01",
            "min": "1732.69",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6780.83",
            "p50": "3137.38",
            "p95": "1534.27",
            "p99": "790.90",
            "min": "700.82",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "288.13",
            "p50": "230.78",
            "p95": "185.90",
            "p99": "147.78",
            "min": "139.07",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "154.37",
            "p50": "134.35",
            "p95": "114.03",
            "p99": "103.55",
            "min": "102.56",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "122.21",
            "p50": "118.03",
            "p95": "93.83",
            "p99": "84.77",
            "min": "82.80",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "125.07",
            "p50": "118.93",
            "p95": "100.79",
            "p99": "98.65",
            "min": "97.88",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "122.29",
            "p50": "118.34",
            "p95": "115.60",
            "p99": "113.12",
            "min": "112.86",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "150.96",
            "p50": "146.99",
            "p95": "143.07",
            "p99": "119.21",
            "min": "113.28",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "96.03",
            "p50": "92.90",
            "p95": "74.84",
            "p99": "73.51",
            "min": "73.39",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "126.74",
            "p50": "118.36",
            "p95": "112.41",
            "p99": "111.39",
            "min": "111.05",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1190.65",
            "p50": "1095.04",
            "p95": "384.61",
            "p99": "372.29",
            "min": "371.93",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "122.92",
            "p50": "120.29",
            "p95": "109.50",
            "p99": "105.90",
            "min": "105.88",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}