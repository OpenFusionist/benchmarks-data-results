{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "170.18",
            "p50": "168.21",
            "p95": "148.08",
            "p99": "145.76",
            "min": "145.64",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "170.30",
            "p50": "168.53",
            "p95": "164.39",
            "p99": "146.21",
            "min": "146.06",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "169.77",
            "p50": "167.89",
            "p95": "163.25",
            "p99": "140.88",
            "min": "139.54",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "760.19",
            "p50": "748.43",
            "p95": "471.36",
            "p99": "431.80",
            "min": "430.78",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "399.50",
            "p50": "394.70",
            "p95": "383.18",
            "p99": "351.18",
            "min": "350.04",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "434.95",
            "p50": "430.42",
            "p95": "419.87",
            "p99": "412.39",
            "min": "412.13",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "324.22",
            "p50": "318.20",
            "p95": "306.56",
            "p99": "305.15",
            "min": "305.11",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "186.77",
            "p50": "184.95",
            "p95": "181.48",
            "p99": "176.94",
            "min": "176.84",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "269.43",
            "p50": "263.10",
            "p95": "243.95",
            "p99": "236.33",
            "min": "234.59",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "264.66",
            "p50": "260.40",
            "p95": "243.59",
            "p99": "242.38",
            "min": "242.37",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "266.80",
            "p50": "261.74",
            "p95": "253.72",
            "p99": "246.65",
            "min": "245.67",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "190.88",
            "p50": "187.74",
            "p95": "182.74",
            "p99": "175.47",
            "min": "174.79",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "318.49",
            "p50": "314.52",
            "p95": "301.03",
            "p99": "289.33",
            "min": "289.17",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "310.49",
            "p50": "303.58",
            "p95": "294.02",
            "p99": "290.37",
            "min": "289.72",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "110.88",
            "p50": "107.08",
            "p95": "105.11",
            "p99": "104.57",
            "min": "104.47",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "170.58",
            "p50": "167.81",
            "p95": "164.49",
            "p99": "162.91",
            "min": "158.77",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "291.76",
            "p50": "245.13",
            "p95": "229.44",
            "p99": "228.07",
            "min": "213.13",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "242.66",
            "p50": "193.69",
            "p95": "181.97",
            "p99": "207.80",
            "min": "181.49",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "166.96",
            "p50": "164.27",
            "p95": "163.00",
            "p99": "164.36",
            "min": "162.40",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "889.95",
            "p50": "821.14",
            "p95": "781.98",
            "p99": "773.98",
            "min": "773.57",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "845.70",
            "p50": "817.76",
            "p95": "792.86",
            "p99": "774.09",
            "min": "771.00",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1039.49",
            "p50": "942.24",
            "p95": "885.27",
            "p99": "846.52",
            "min": "837.14",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1063.97",
            "p50": "962.50",
            "p95": "915.25",
            "p99": "904.38",
            "min": "901.84",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1090.20",
            "p50": "969.18",
            "p95": "918.81",
            "p99": "877.22",
            "min": "865.90",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "851.92",
            "p50": "814.10",
            "p95": "783.34",
            "p99": "761.59",
            "min": "759.92",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "197.34",
            "p50": "182.55",
            "p95": "173.24",
            "p99": "172.07",
            "min": "172.05",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "195.29",
            "p50": "182.17",
            "p95": "173.40",
            "p99": "171.87",
            "min": "171.80",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "197.94",
            "p50": "183.07",
            "p95": "173.46",
            "p99": "166.28",
            "min": "164.82",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "222.13",
            "p50": "208.97",
            "p95": "199.88",
            "p99": "197.40",
            "min": "197.34",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.84",
            "p50": "87.29",
            "p95": "86.61",
            "p99": "85.47",
            "min": "85.28",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "345.46",
            "p50": "306.90",
            "p95": "290.61",
            "p99": "280.64",
            "min": "280.36",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "327.17",
            "p50": "297.17",
            "p95": "285.61",
            "p99": "273.93",
            "min": "273.79",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "334.25",
            "p50": "299.68",
            "p95": "289.71",
            "p99": "287.14",
            "min": "287.09",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "333.61",
            "p50": "300.22",
            "p95": "290.42",
            "p99": "186.37",
            "min": "159.84",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2405.71",
            "p50": "2267.35",
            "p95": "2073.79",
            "p99": "1728.74",
            "min": "1726.39",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2319.93",
            "p50": "2191.60",
            "p95": "2057.91",
            "p99": "1714.04",
            "min": "1684.77",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "93.90",
            "p50": "93.20",
            "p95": "92.37",
            "p99": "88.62",
            "min": "88.56",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "5686.57",
            "p50": "5047.51",
            "p95": "2431.25",
            "p99": "66.29",
            "min": "65.94",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "93.89",
            "p50": "93.32",
            "p95": "92.49",
            "p99": "91.98",
            "min": "91.89",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3198.69",
            "p50": "2987.12",
            "p95": "2496.69",
            "p99": "1567.26",
            "min": "1449.29",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "263.64",
            "p50": "258.48",
            "p95": "243.93",
            "p99": "241.77",
            "min": "241.67",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "539.59",
            "p50": "531.38",
            "p95": "516.52",
            "p99": "478.00",
            "min": "468.46",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1260.27",
            "p50": "1205.53",
            "p95": "387.17",
            "p99": "370.50",
            "min": "362.74",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "17092.15",
            "p50": "8077.68",
            "p95": "2636.66",
            "p99": "2019.08",
            "min": "1996.39",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1151.93",
            "p50": "1116.23",
            "p95": "349.38",
            "p99": "337.55",
            "min": "333.56",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "49715.64",
            "p50": "9407.37",
            "p95": "2537.30",
            "p99": "986.24",
            "min": "233.58",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15887.78",
            "p50": "7224.57",
            "p95": "2420.35",
            "p99": "1914.11",
            "min": "1764.24",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "536.11",
            "p50": "488.64",
            "p95": "433.96",
            "p99": "387.99",
            "min": "383.43",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "518.09",
            "p50": "510.68",
            "p95": "500.15",
            "p99": "471.29",
            "min": "469.44",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "204.64",
            "p50": "202.69",
            "p95": "196.69",
            "p99": "194.23",
            "min": "194.19",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "443.05",
            "p50": "431.08",
            "p95": "419.11",
            "p99": "407.37",
            "min": "407.14",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "205.14",
            "p50": "202.32",
            "p95": "198.94",
            "p99": "197.74",
            "min": "197.67",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "328.83",
            "p50": "323.30",
            "p95": "316.00",
            "p99": "304.09",
            "min": "302.66",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "270.89",
            "p50": "263.82",
            "p95": "251.37",
            "p99": "230.78",
            "min": "229.97",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "514.72",
            "p50": "505.53",
            "p95": "492.13",
            "p99": "485.34",
            "min": "484.01",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1495.23",
            "p50": "1185.56",
            "p95": "841.10",
            "p99": "780.23",
            "min": "779.27",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "316.02",
            "p50": "310.83",
            "p95": "303.38",
            "p99": "299.36",
            "min": "298.32",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.72",
            "p50": "85.13",
            "p95": "76.68",
            "p99": "72.15",
            "min": "71.51",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "80.40",
            "p50": "78.09",
            "p95": "72.32",
            "p99": "69.22",
            "min": "68.58",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "82.84",
            "p50": "79.93",
            "p95": "72.89",
            "p99": "70.97",
            "min": "70.74",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "227.54",
            "p50": "211.23",
            "p95": "176.09",
            "p99": "156.10",
            "min": "150.23",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "175.46",
            "p50": "163.14",
            "p95": "138.45",
            "p99": "76.70",
            "min": "71.68",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "181.31",
            "p50": "169.78",
            "p95": "147.73",
            "p99": "115.78",
            "min": "108.00",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "171.55",
            "p50": "157.74",
            "p95": "131.27",
            "p99": "110.08",
            "min": "107.89",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "169.24",
            "p50": "157.43",
            "p95": "133.68",
            "p99": "122.92",
            "min": "120.47",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "194.00",
            "p50": "179.21",
            "p95": "151.66",
            "p99": "139.24",
            "min": "136.28",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "173.77",
            "p50": "161.05",
            "p95": "136.04",
            "p99": "115.03",
            "min": "110.38",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "193.28",
            "p50": "177.21",
            "p95": "149.35",
            "p99": "123.64",
            "min": "122.45",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "141.68",
            "p50": "132.44",
            "p95": "116.13",
            "p99": "71.91",
            "min": "63.11",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "219.20",
            "p50": "203.22",
            "p95": "174.52",
            "p99": "164.58",
            "min": "162.55",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "171.53",
            "p50": "162.30",
            "p95": "141.24",
            "p99": "120.97",
            "min": "118.63",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.42",
            "p50": "65.02",
            "p95": "60.68",
            "p99": "58.60",
            "min": "58.21",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "136.49",
            "p50": "130.67",
            "p95": "113.62",
            "p99": "119.37",
            "min": "110.16",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "399.35",
            "p50": "313.21",
            "p95": "210.61",
            "p99": "229.94",
            "min": "190.20",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "184.11",
            "p50": "141.79",
            "p95": "134.24",
            "p99": "155.62",
            "min": "134.12",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "128.22",
            "p50": "122.39",
            "p95": "113.77",
            "p99": "114.36",
            "min": "103.91",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1142.35",
            "p50": "882.24",
            "p95": "517.89",
            "p99": "388.77",
            "min": "339.87",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1050.22",
            "p50": "827.60",
            "p95": "553.05",
            "p99": "420.10",
            "min": "408.44",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1354.90",
            "p50": "1017.21",
            "p95": "559.74",
            "p99": "419.27",
            "min": "381.07",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1300.44",
            "p50": "937.34",
            "p95": "547.83",
            "p99": "466.62",
            "min": "409.68",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1234.45",
            "p50": "946.83",
            "p95": "570.20",
            "p99": "424.94",
            "min": "402.08",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1063.24",
            "p50": "845.76",
            "p95": "516.60",
            "p99": "425.04",
            "min": "413.25",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "643.38",
            "p50": "523.00",
            "p95": "359.06",
            "p99": "321.11",
            "min": "316.26",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "643.87",
            "p50": "527.18",
            "p95": "352.28",
            "p99": "294.94",
            "min": "291.21",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "655.50",
            "p50": "515.52",
            "p95": "373.83",
            "p99": "347.55",
            "min": "345.64",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "667.88",
            "p50": "546.21",
            "p95": "387.09",
            "p99": "308.34",
            "min": "297.05",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "289.28",
            "p50": "265.92",
            "p95": "215.22",
            "p99": "197.51",
            "min": "193.22",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "566.20",
            "p50": "433.02",
            "p95": "312.22",
            "p99": "266.97",
            "min": "266.86",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "562.70",
            "p50": "438.63",
            "p95": "349.39",
            "p99": "293.43",
            "min": "285.36",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "558.74",
            "p50": "448.19",
            "p95": "332.12",
            "p99": "278.85",
            "min": "270.55",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "589.41",
            "p50": "469.13",
            "p95": "327.21",
            "p99": "277.21",
            "min": "270.63",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.75",
            "p50": "102.19",
            "p95": "93.46",
            "p99": "88.59",
            "min": "88.45",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "107.01",
            "p50": "102.94",
            "p95": "90.74",
            "p99": "88.00",
            "min": "87.13",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.40",
            "p50": "95.46",
            "p95": "86.04",
            "p99": "83.78",
            "min": "83.17",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "253.37",
            "p50": "234.30",
            "p95": "197.86",
            "p99": "169.97",
            "min": "165.94",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.01",
            "p50": "94.77",
            "p95": "86.57",
            "p99": "83.99",
            "min": "83.96",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "246.89",
            "p50": "226.45",
            "p95": "187.34",
            "p99": "173.65",
            "min": "171.84",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "194.25",
            "p50": "180.43",
            "p95": "156.46",
            "p99": "147.85",
            "min": "147.42",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "199.99",
            "p50": "186.39",
            "p95": "161.53",
            "p99": "149.54",
            "min": "148.98",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "353.91",
            "p50": "315.37",
            "p95": "249.02",
            "p99": "205.56",
            "min": "194.43",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5361.11",
            "p50": "2231.66",
            "p95": "883.33",
            "p99": "608.21",
            "min": "589.74",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "343.40",
            "p50": "309.14",
            "p95": "240.74",
            "p99": "190.22",
            "min": "178.15",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "12826.00",
            "p50": "3676.06",
            "p95": "1476.87",
            "p99": "752.54",
            "min": "669.61",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3378.18",
            "p50": "1879.11",
            "p95": "816.73",
            "p99": "558.31",
            "min": "546.53",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "181.75",
            "p50": "166.74",
            "p95": "144.16",
            "p99": "126.40",
            "min": "124.39",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "247.52",
            "p50": "228.47",
            "p95": "199.04",
            "p99": "174.90",
            "min": "174.72",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "91.78",
            "p50": "87.78",
            "p95": "78.44",
            "p99": "58.91",
            "min": "55.75",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "223.84",
            "p50": "207.45",
            "p95": "178.50",
            "p99": "157.27",
            "min": "153.83",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "170.62",
            "p50": "159.69",
            "p95": "135.49",
            "p99": "119.05",
            "min": "116.82",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "202.99",
            "p50": "187.95",
            "p95": "159.06",
            "p99": "151.88",
            "min": "151.70",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "195.70",
            "p50": "181.47",
            "p95": "155.30",
            "p99": "137.79",
            "min": "135.48",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "195.10",
            "p50": "181.86",
            "p95": "156.71",
            "p99": "142.35",
            "min": "138.87",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1114.21",
            "p50": "853.93",
            "p95": "594.18",
            "p99": "463.28",
            "min": "442.18",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "174.14",
            "p50": "164.15",
            "p95": "120.94",
            "p99": "117.44",
            "min": "117.41",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.35",
            "p50": "189.47",
            "p95": "172.70",
            "p99": "162.02",
            "min": "161.68",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.63",
            "p50": "187.89",
            "p95": "166.65",
            "p99": "160.34",
            "min": "159.93",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.58",
            "p50": "189.73",
            "p95": "175.04",
            "p99": "160.80",
            "min": "160.56",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1187.56",
            "p50": "1115.40",
            "p95": "690.76",
            "p99": "600.08",
            "min": "593.09",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "702.18",
            "p50": "653.25",
            "p95": "455.92",
            "p99": "396.57",
            "min": "395.32",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "811.10",
            "p50": "758.15",
            "p95": "557.13",
            "p99": "432.68",
            "min": "424.36",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "719.40",
            "p50": "653.45",
            "p95": "495.50",
            "p99": "412.58",
            "min": "400.37",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "731.47",
            "p50": "679.54",
            "p95": "476.74",
            "p99": "423.96",
            "min": "417.14",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "900.14",
            "p50": "791.46",
            "p95": "575.77",
            "p99": "458.47",
            "min": "452.01",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "857.94",
            "p50": "755.91",
            "p95": "518.46",
            "p99": "445.94",
            "min": "444.78",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "860.29",
            "p50": "756.35",
            "p95": "538.06",
            "p99": "446.52",
            "min": "442.12",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "818.26",
            "p50": "744.43",
            "p95": "510.09",
            "p99": "435.07",
            "min": "433.48",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "649.51",
            "p50": "617.48",
            "p95": "486.08",
            "p99": "457.43",
            "min": "456.12",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "860.83",
            "p50": "753.69",
            "p95": "552.73",
            "p99": "449.81",
            "min": "446.58",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "64.26",
            "p50": "62.69",
            "p95": "60.39",
            "p99": "58.68",
            "min": "58.63",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "97.12",
            "p50": "94.97",
            "p95": "89.65",
            "p99": "91.29",
            "min": "88.15",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "491.27",
            "p50": "456.06",
            "p95": "379.01",
            "p99": "362.42",
            "min": "332.20",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "132.75",
            "p50": "103.35",
            "p95": "96.85",
            "p99": "111.92",
            "min": "96.20",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "91.40",
            "p50": "88.37",
            "p95": "84.16",
            "p99": "86.72",
            "min": "83.19",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1790.16",
            "p50": "1604.82",
            "p95": "866.75",
            "p99": "635.26",
            "min": "625.19",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1638.16",
            "p50": "1426.59",
            "p95": "817.85",
            "p99": "626.07",
            "min": "615.53",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2245.43",
            "p50": "1799.69",
            "p95": "1002.10",
            "p99": "676.79",
            "min": "670.92",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2215.61",
            "p50": "1808.61",
            "p95": "913.02",
            "p99": "679.94",
            "min": "676.67",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2219.76",
            "p50": "1854.14",
            "p95": "904.93",
            "p99": "668.93",
            "min": "665.35",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1678.74",
            "p50": "1500.93",
            "p95": "911.76",
            "p99": "624.28",
            "min": "620.92",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "720.62",
            "p50": "633.70",
            "p95": "458.95",
            "p99": "405.32",
            "min": "401.50",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "707.11",
            "p50": "626.86",
            "p95": "463.83",
            "p99": "407.89",
            "min": "405.59",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "716.80",
            "p50": "625.88",
            "p95": "508.48",
            "p99": "420.86",
            "min": "404.99",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "735.78",
            "p50": "647.32",
            "p95": "472.68",
            "p99": "418.35",
            "min": "417.74",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.67",
            "p50": "85.43",
            "p95": "81.03",
            "p99": "79.30",
            "min": "79.17",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "631.98",
            "p50": "570.77",
            "p95": "456.74",
            "p99": "394.84",
            "min": "387.82",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "602.18",
            "p50": "539.05",
            "p95": "412.19",
            "p99": "380.60",
            "min": "374.82",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "594.52",
            "p50": "536.09",
            "p95": "404.30",
            "p99": "365.11",
            "min": "364.17",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "599.01",
            "p50": "540.44",
            "p95": "427.93",
            "p99": "365.56",
            "min": "364.82",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1377.55",
            "p50": "1224.15",
            "p95": "782.72",
            "p99": "595.42",
            "min": "563.63",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1679.78",
            "p50": "1455.52",
            "p95": "808.83",
            "p99": "659.75",
            "min": "616.98",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.16",
            "p50": "71.16",
            "p95": "68.29",
            "p99": "67.06",
            "min": "66.99",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9327.59",
            "p50": "4726.55",
            "p95": "2250.01",
            "p99": "1734.09",
            "min": "1672.80",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.21",
            "p50": "71.32",
            "p95": "68.97",
            "p99": "67.12",
            "min": "67.05",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "221.92",
            "p50": "218.53",
            "p95": "193.86",
            "p99": "184.17",
            "min": "180.08",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "862.49",
            "p50": "774.40",
            "p95": "564.31",
            "p99": "465.72",
            "min": "462.40",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "667.93",
            "p50": "623.59",
            "p95": "456.12",
            "p99": "389.49",
            "min": "385.45",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1069.70",
            "p50": "985.54",
            "p95": "676.86",
            "p99": "581.11",
            "min": "569.59",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "27109.91",
            "p50": "8940.21",
            "p95": "2608.01",
            "p99": "1616.76",
            "min": "1554.12",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1068.19",
            "p50": "964.18",
            "p95": "682.11",
            "p99": "553.45",
            "min": "511.33",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "52407.55",
            "p50": "9589.09",
            "p95": "2737.26",
            "p99": "1950.14",
            "min": "1687.78",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15542.23",
            "p50": "5966.82",
            "p95": "1202.90",
            "p99": "974.74",
            "min": "967.44",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "542.57",
            "p50": "480.25",
            "p95": "381.44",
            "p99": "335.51",
            "min": "316.71",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "975.96",
            "p50": "897.04",
            "p95": "609.78",
            "p99": "492.29",
            "min": "485.11",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "799.63",
            "p50": "717.24",
            "p95": "487.90",
            "p99": "428.55",
            "min": "426.37",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1201.89",
            "p50": "1107.97",
            "p95": "698.04",
            "p99": "644.68",
            "min": "643.30",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "725.49",
            "p50": "651.75",
            "p95": "481.57",
            "p99": "428.84",
            "min": "428.55",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1156.33",
            "p50": "1081.46",
            "p95": "675.42",
            "p99": "571.52",
            "min": "542.57",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "874.31",
            "p50": "771.17",
            "p95": "548.34",
            "p99": "466.97",
            "min": "453.18",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "908.55",
            "p50": "845.65",
            "p95": "579.77",
            "p99": "472.74",
            "min": "469.58",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2403.27",
            "p50": "2015.04",
            "p95": "1039.48",
            "p99": "997.69",
            "min": "994.02",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "852.60",
            "p50": "803.79",
            "p95": "559.75",
            "p99": "483.50",
            "min": "475.25",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "82.56",
            "p50": "79.70",
            "p95": "74.13",
            "p99": "69.50",
            "min": "69.48",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "75.65",
            "p50": "73.51",
            "p95": "69.32",
            "p99": "64.08",
            "min": "63.93",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "77.07",
            "p50": "75.12",
            "p95": "68.48",
            "p99": "66.13",
            "min": "66.13",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "211.51",
            "p50": "197.36",
            "p95": "157.42",
            "p99": "144.31",
            "min": "143.63",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "103.40",
            "p50": "100.03",
            "p95": "85.84",
            "p99": "83.86",
            "min": "83.83",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.04",
            "p50": "105.43",
            "p95": "94.04",
            "p99": "88.00",
            "min": "87.30",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "143.92",
            "p50": "135.82",
            "p95": "114.74",
            "p99": "100.51",
            "min": "99.50",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "143.29",
            "p50": "135.21",
            "p95": "118.08",
            "p99": "105.68",
            "min": "104.05",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "189.59",
            "p50": "175.01",
            "p95": "138.94",
            "p99": "128.33",
            "min": "126.59",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "185.65",
            "p50": "173.56",
            "p95": "149.80",
            "p99": "132.85",
            "min": "131.00",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "185.72",
            "p50": "173.00",
            "p95": "136.08",
            "p99": "108.54",
            "min": "102.42",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.84",
            "p50": "122.30",
            "p95": "107.50",
            "p99": "96.26",
            "min": "96.18",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "207.03",
            "p50": "190.23",
            "p95": "151.10",
            "p99": "94.28",
            "min": "88.37",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "190.43",
            "p50": "178.37",
            "p95": "140.62",
            "p99": "112.87",
            "min": "107.16",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "72.82",
            "p50": "69.27",
            "p95": "63.86",
            "p99": "61.32",
            "min": "61.03",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "134.58",
            "p50": "123.84",
            "p95": "110.13",
            "p99": "111.59",
            "min": "99.20",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "216.68",
            "p50": "196.25",
            "p95": "160.92",
            "p99": "155.17",
            "min": "140.74",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "173.44",
            "p50": "141.62",
            "p95": "133.76",
            "p99": "150.28",
            "min": "132.80",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "128.49",
            "p50": "120.45",
            "p95": "107.45",
            "p99": "111.88",
            "min": "99.36",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1040.45",
            "p50": "761.05",
            "p95": "465.15",
            "p99": "369.88",
            "min": "367.48",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1023.22",
            "p50": "757.07",
            "p95": "422.69",
            "p99": "342.00",
            "min": "337.18",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1155.47",
            "p50": "854.23",
            "p95": "429.76",
            "p99": "314.50",
            "min": "312.84",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1098.43",
            "p50": "809.56",
            "p95": "433.58",
            "p99": "350.81",
            "min": "314.56",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1030.49",
            "p50": "753.81",
            "p95": "482.38",
            "p99": "362.79",
            "min": "341.49",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1031.98",
            "p50": "782.67",
            "p95": "422.11",
            "p99": "368.33",
            "min": "363.63",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "344.67",
            "p50": "298.74",
            "p95": "227.39",
            "p99": "185.67",
            "min": "185.30",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "346.02",
            "p50": "298.55",
            "p95": "243.06",
            "p99": "204.83",
            "min": "203.50",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "350.43",
            "p50": "301.98",
            "p95": "224.07",
            "p99": "203.47",
            "min": "202.75",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "371.17",
            "p50": "322.60",
            "p95": "247.35",
            "p99": "216.57",
            "min": "212.12",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "286.87",
            "p50": "260.87",
            "p95": "199.77",
            "p99": "174.10",
            "min": "173.93",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "295.17",
            "p50": "262.09",
            "p95": "212.06",
            "p99": "189.14",
            "min": "186.62",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "300.96",
            "p50": "261.66",
            "p95": "192.97",
            "p99": "169.79",
            "min": "169.63",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "307.14",
            "p50": "267.40",
            "p95": "214.58",
            "p99": "170.71",
            "min": "170.68",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "302.17",
            "p50": "264.73",
            "p95": "202.59",
            "p99": "181.96",
            "min": "181.42",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.24",
            "p50": "101.46",
            "p95": "90.87",
            "p99": "86.21",
            "min": "84.62",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.01",
            "p50": "101.79",
            "p95": "90.80",
            "p99": "84.90",
            "min": "84.82",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.75",
            "p50": "94.47",
            "p95": "83.89",
            "p99": "79.77",
            "min": "79.46",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "249.91",
            "p50": "229.58",
            "p95": "183.89",
            "p99": "157.85",
            "min": "152.35",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.72",
            "p50": "93.98",
            "p95": "83.77",
            "p99": "80.99",
            "min": "80.69",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "242.98",
            "p50": "222.34",
            "p95": "188.68",
            "p99": "174.34",
            "min": "173.08",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "187.12",
            "p50": "175.61",
            "p95": "144.07",
            "p99": "129.68",
            "min": "128.95",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "150.94",
            "p50": "141.50",
            "p95": "116.77",
            "p99": "69.45",
            "min": "41.14",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "440.98",
            "p50": "378.72",
            "p95": "275.63",
            "p99": "209.00",
            "min": "204.61",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4660.32",
            "p50": "1751.27",
            "p95": "510.61",
            "p99": "445.51",
            "min": "441.81",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "438.70",
            "p50": "380.53",
            "p95": "269.80",
            "p99": "220.32",
            "min": "210.31",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "13309.46",
            "p50": "2781.31",
            "p95": "1079.75",
            "p99": "790.07",
            "min": "716.42",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3064.93",
            "p50": "1351.19",
            "p95": "461.83",
            "p99": "400.33",
            "min": "395.72",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "207.85",
            "p50": "190.53",
            "p95": "159.70",
            "p99": "135.54",
            "min": "131.43",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "234.33",
            "p50": "215.65",
            "p95": "160.64",
            "p99": "148.56",
            "min": "148.14",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "128.71",
            "p50": "122.90",
            "p95": "108.87",
            "p99": "98.45",
            "min": "98.21",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "211.29",
            "p50": "193.63",
            "p95": "152.44",
            "p99": "86.40",
            "min": "55.10",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "141.98",
            "p50": "135.23",
            "p95": "113.54",
            "p99": "103.53",
            "min": "102.07",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "175.11",
            "p50": "163.40",
            "p95": "137.95",
            "p99": "122.31",
            "min": "122.22",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "183.88",
            "p50": "171.87",
            "p95": "137.69",
            "p99": "128.23",
            "min": "128.18",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "187.15",
            "p50": "173.56",
            "p95": "148.87",
            "p99": "124.29",
            "min": "117.52",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "303.72",
            "p50": "250.61",
            "p95": "159.31",
            "p99": "147.60",
            "min": "141.09",
            "n": "95",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "144.31",
            "p50": "135.81",
            "p95": "115.35",
            "p99": "117.87",
            "min": "109.06",
            "n": "74",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.87",
            "p50": "85.09",
            "p95": "80.21",
            "p99": "78.39",
            "min": "78.26",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "89.95",
            "p50": "86.53",
            "p95": "83.57",
            "p99": "81.36",
            "min": "81.09",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "89.49",
            "p50": "85.82",
            "p95": "82.62",
            "p99": "80.87",
            "min": "80.68",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "188.82",
            "p50": "184.08",
            "p95": "176.29",
            "p99": "164.51",
            "min": "161.83",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "92.32",
            "p50": "90.07",
            "p95": "86.39",
            "p99": "83.64",
            "min": "83.40",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "113.25",
            "p50": "109.91",
            "p95": "106.35",
            "p99": "103.92",
            "min": "103.60",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "126.62",
            "p50": "122.11",
            "p95": "108.87",
            "p99": "103.60",
            "min": "102.92",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "125.87",
            "p50": "122.92",
            "p95": "118.12",
            "p99": "114.44",
            "min": "114.44",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "98.45",
            "p50": "94.78",
            "p95": "77.25",
            "p99": "75.84",
            "min": "75.69",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.88",
            "p50": "96.82",
            "p95": "94.59",
            "p99": "91.51",
            "min": "91.07",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.76",
            "p50": "97.27",
            "p95": "95.55",
            "p99": "91.38",
            "min": "90.77",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.11",
            "p50": "123.56",
            "p95": "120.70",
            "p99": "115.09",
            "min": "114.40",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "120.79",
            "p50": "118.85",
            "p95": "111.19",
            "p99": "104.38",
            "min": "103.34",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "117.55",
            "p50": "114.72",
            "p95": "91.39",
            "p99": "85.75",
            "min": "84.54",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "76.70",
            "p50": "73.65",
            "p95": "70.14",
            "p99": "65.68",
            "min": "65.13",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "99.28",
            "p50": "98.33",
            "p95": "94.71",
            "p99": "95.80",
            "min": "93.92",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "62.19",
            "p50": "61.00",
            "p95": "58.19",
            "p99": "54.68",
            "min": "52.92",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "159.09",
            "p50": "127.60",
            "p95": "119.01",
            "p99": "135.96",
            "min": "118.51",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "110.00",
            "p50": "108.23",
            "p95": "105.07",
            "p99": "105.75",
            "min": "102.53",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "385.66",
            "p50": "376.56",
            "p95": "360.14",
            "p99": "298.04",
            "min": "284.45",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "513.54",
            "p50": "484.68",
            "p95": "467.77",
            "p99": "377.78",
            "min": "355.80",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "386.88",
            "p50": "379.05",
            "p95": "356.79",
            "p99": "318.91",
            "min": "305.31",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "391.35",
            "p50": "382.56",
            "p95": "371.95",
            "p99": "329.50",
            "min": "304.36",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "392.20",
            "p50": "384.54",
            "p95": "366.54",
            "p99": "332.14",
            "min": "322.63",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "473.12",
            "p50": "452.24",
            "p95": "429.71",
            "p99": "379.75",
            "min": "357.45",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "101.19",
            "p50": "99.06",
            "p95": "97.13",
            "p99": "90.85",
            "min": "90.27",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "101.58",
            "p50": "99.62",
            "p95": "97.43",
            "p99": "92.91",
            "min": "92.61",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "100.24",
            "p50": "98.42",
            "p95": "96.62",
            "p99": "93.79",
            "min": "93.42",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "91.60",
            "p50": "89.90",
            "p95": "87.98",
            "p99": "85.28",
            "min": "85.13",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.87",
            "p50": "86.31",
            "p95": "85.61",
            "p99": "83.62",
            "min": "82.74",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "94.28",
            "p50": "92.75",
            "p95": "90.17",
            "p99": "85.50",
            "min": "85.15",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "90.08",
            "p50": "88.43",
            "p95": "86.34",
            "p99": "83.62",
            "min": "83.03",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "89.81",
            "p50": "88.08",
            "p95": "85.70",
            "p99": "82.89",
            "min": "82.48",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "89.81",
            "p50": "88.06",
            "p95": "86.07",
            "p99": "82.87",
            "min": "82.24",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "371.69",
            "p50": "360.66",
            "p95": "311.02",
            "p99": "294.03",
            "min": "291.54",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "370.67",
            "p50": "360.57",
            "p95": "311.58",
            "p99": "261.85",
            "min": "256.19",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "154.58",
            "p50": "152.25",
            "p95": "140.59",
            "p99": "132.46",
            "min": "131.35",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "480.83",
            "p50": "461.36",
            "p95": "407.71",
            "p99": "361.25",
            "min": "357.01",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "154.52",
            "p50": "152.05",
            "p95": "142.20",
            "p99": "121.01",
            "min": "114.81",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "273.74",
            "p50": "267.94",
            "p95": "235.57",
            "p99": "222.01",
            "min": "221.17",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.89",
            "p50": "97.51",
            "p95": "91.69",
            "p99": "83.39",
            "min": "82.47",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "188.46",
            "p50": "179.13",
            "p95": "166.93",
            "p99": "164.59",
            "min": "164.04",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "408.09",
            "p50": "347.89",
            "p95": "267.05",
            "p99": "229.22",
            "min": "225.85",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "6447.44",
            "p50": "2203.66",
            "p95": "851.54",
            "p99": "539.04",
            "min": "529.27",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "434.01",
            "p50": "373.21",
            "p95": "287.39",
            "p99": "258.44",
            "min": "254.67",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "30482.57",
            "p50": "9451.07",
            "p95": "2791.37",
            "p99": "1906.33",
            "min": "1903.41",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4558.85",
            "p50": "3120.71",
            "p95": "1618.02",
            "p99": "1117.31",
            "min": "1076.54",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "360.66",
            "p50": "323.77",
            "p95": "243.83",
            "p99": "207.65",
            "min": "196.25",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "154.33",
            "p50": "141.46",
            "p95": "129.11",
            "p99": "112.29",
            "min": "109.66",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "123.78",
            "p50": "112.08",
            "p95": "102.49",
            "p99": "99.35",
            "min": "98.77",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "137.02",
            "p50": "134.40",
            "p95": "118.56",
            "p99": "115.78",
            "min": "115.17",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "126.81",
            "p50": "122.00",
            "p95": "116.91",
            "p99": "111.75",
            "min": "111.01",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "174.64",
            "p50": "171.01",
            "p95": "142.32",
            "p99": "135.84",
            "min": "134.12",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "94.77",
            "p50": "92.91",
            "p95": "89.03",
            "p99": "87.71",
            "min": "87.67",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "118.10",
            "p50": "112.69",
            "p95": "106.48",
            "p99": "105.65",
            "min": "105.65",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1016.61",
            "p50": "908.17",
            "p95": "329.76",
            "p99": "317.38",
            "min": "315.61",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "125.10",
            "p50": "116.73",
            "p95": "79.56",
            "p99": "72.43",
            "min": "70.97",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}