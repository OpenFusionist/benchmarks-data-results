{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "113.42",
            "p50": "107.56",
            "p95": "97.48",
            "p99": "95.01",
            "min": "94.79",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1105.16",
            "p50": "906.28",
            "p95": "569.88",
            "p99": "510.60",
            "min": "505.87",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "113.65",
            "p50": "107.64",
            "p95": "98.29",
            "p99": "95.42",
            "min": "95.10",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "749.01",
            "p50": "669.21",
            "p95": "438.86",
            "p99": "414.30",
            "min": "409.09",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "397.38",
            "p50": "366.72",
            "p95": "302.88",
            "p99": "278.32",
            "min": "278.06",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "422.54",
            "p50": "392.56",
            "p95": "315.16",
            "p99": "295.29",
            "min": "294.62",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "292.42",
            "p50": "274.95",
            "p95": "191.83",
            "p99": "189.44",
            "min": "189.10",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "181.20",
            "p50": "172.22",
            "p95": "153.67",
            "p99": "147.53",
            "min": "146.84",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "255.82",
            "p50": "237.55",
            "p95": "211.40",
            "p99": "195.63",
            "min": "194.62",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "260.70",
            "p50": "243.42",
            "p95": "214.48",
            "p99": "199.38",
            "min": "198.37",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "254.12",
            "p50": "239.30",
            "p95": "210.75",
            "p99": "196.00",
            "min": "194.95",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "201.59",
            "p50": "191.19",
            "p95": "170.69",
            "p99": "164.86",
            "min": "164.38",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "335.10",
            "p50": "311.91",
            "p95": "261.06",
            "p99": "247.87",
            "min": "246.24",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "297.53",
            "p50": "277.49",
            "p95": "238.30",
            "p99": "228.82",
            "min": "228.61",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8702.99",
            "p50": "4001.71",
            "p95": "1922.75",
            "p99": "1517.21",
            "min": "1467.56",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2974.97",
            "p50": "1721.38",
            "p95": "908.12",
            "p99": "1613.61",
            "min": "880.57",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "321.08",
            "p50": "293.26",
            "p95": "241.86",
            "p99": "242.24",
            "min": "223.74",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1405.96",
            "p50": "780.98",
            "p95": "344.79",
            "p99": "790.55",
            "min": "326.30",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7490.94",
            "p50": "3475.22",
            "p95": "1406.04",
            "p99": "3996.55",
            "min": "1360.44",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "815.73",
            "p50": "695.58",
            "p95": "501.14",
            "p99": "443.73",
            "min": "433.11",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "810.05",
            "p50": "731.63",
            "p95": "535.55",
            "p99": "428.86",
            "min": "425.75",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "939.39",
            "p50": "791.56",
            "p95": "543.78",
            "p99": "460.78",
            "min": "457.79",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2416.57",
            "p50": "1835.92",
            "p95": "1034.24",
            "p99": "700.33",
            "min": "696.64",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2426.56",
            "p50": "1778.40",
            "p95": "930.15",
            "p99": "727.26",
            "min": "714.75",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "805.59",
            "p50": "710.91",
            "p95": "495.88",
            "p99": "451.27",
            "min": "450.05",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "175.69",
            "p50": "155.42",
            "p95": "141.69",
            "p99": "92.48",
            "min": "91.85",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "559.37",
            "p50": "477.81",
            "p95": "390.20",
            "p99": "348.84",
            "min": "347.51",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "173.74",
            "p50": "153.71",
            "p95": "135.01",
            "p99": "93.94",
            "min": "93.60",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "190.53",
            "p50": "170.68",
            "p95": "155.89",
            "p99": "117.45",
            "min": "108.49",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "31578.21",
            "p50": "7837.22",
            "p95": "2436.78",
            "p99": "1986.87",
            "min": "1820.25",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "405.63",
            "p50": "361.72",
            "p95": "297.73",
            "p99": "275.63",
            "min": "273.52",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "394.26",
            "p50": "348.54",
            "p95": "282.87",
            "p99": "265.08",
            "min": "264.39",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "390.11",
            "p50": "349.56",
            "p95": "296.85",
            "p99": "264.84",
            "min": "263.73",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "388.34",
            "p50": "351.83",
            "p95": "296.59",
            "p99": "273.37",
            "min": "272.01",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "17099.93",
            "p50": "5228.15",
            "p95": "2334.93",
            "p99": "2007.05",
            "min": "1938.89",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "17132.69",
            "p50": "5189.01",
            "p95": "2385.39",
            "p99": "1788.59",
            "min": "1420.95",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "16409.13",
            "p50": "4971.70",
            "p95": "2408.94",
            "p99": "2167.64",
            "min": "2086.30",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "16874.70",
            "p50": "5403.74",
            "p95": "2434.03",
            "p99": "2078.41",
            "min": "1823.37",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "16379.52",
            "p50": "4865.38",
            "p95": "2149.12",
            "p99": "740.38",
            "min": "361.79",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "16824.58",
            "p50": "5325.63",
            "p95": "2425.58",
            "p99": "2243.67",
            "min": "2206.49",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "259.69",
            "p50": "237.22",
            "p95": "211.38",
            "p99": "198.14",
            "min": "197.09",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "514.85",
            "p50": "470.86",
            "p95": "365.91",
            "p99": "304.23",
            "min": "281.00",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1624.72",
            "p50": "1399.24",
            "p95": "360.11",
            "p99": "292.04",
            "min": "290.42",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "15328.87",
            "p50": "4775.96",
            "p95": "192.54",
            "p99": "169.52",
            "min": "167.21",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1381.67",
            "p50": "1213.32",
            "p95": "722.69",
            "p99": "561.95",
            "min": "503.13",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "54381.23",
            "p50": "9512.72",
            "p95": "2392.87",
            "p99": "1983.19",
            "min": "1977.65",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13136.72",
            "p50": "6053.88",
            "p95": "192.87",
            "p99": "176.76",
            "min": "174.32",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "559.01",
            "p50": "480.43",
            "p95": "393.19",
            "p99": "347.73",
            "min": "326.53",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "543.11",
            "p50": "501.19",
            "p95": "402.46",
            "p99": "349.55",
            "min": "346.48",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "197.97",
            "p50": "191.43",
            "p95": "173.15",
            "p99": "165.25",
            "min": "164.92",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "382.66",
            "p50": "356.62",
            "p95": "293.76",
            "p99": "274.93",
            "min": "271.28",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "199.19",
            "p50": "190.16",
            "p95": "173.40",
            "p99": "163.64",
            "min": "162.87",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "337.72",
            "p50": "316.31",
            "p95": "275.42",
            "p99": "239.14",
            "min": "222.53",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "255.29",
            "p50": "242.23",
            "p95": "214.54",
            "p99": "199.17",
            "min": "198.08",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "567.33",
            "p50": "517.34",
            "p95": "415.07",
            "p99": "385.60",
            "min": "384.84",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1379.31",
            "p50": "1181.17",
            "p95": "911.82",
            "p99": "718.56",
            "min": "679.06",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "287.06",
            "p50": "269.73",
            "p95": "233.72",
            "p99": "220.16",
            "min": "218.48",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "139.74",
            "p50": "131.06",
            "p95": "116.94",
            "p99": "112.00",
            "min": "111.42",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "140.57",
            "p50": "130.80",
            "p95": "113.74",
            "p99": "103.77",
            "min": "102.12",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "137.95",
            "p50": "130.98",
            "p95": "116.45",
            "p99": "106.97",
            "min": "105.33",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "248.26",
            "p50": "228.81",
            "p95": "190.20",
            "p99": "157.52",
            "min": "144.28",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "188.12",
            "p50": "176.53",
            "p95": "150.04",
            "p99": "143.30",
            "min": "142.86",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "201.76",
            "p50": "186.91",
            "p95": "149.58",
            "p99": "104.54",
            "min": "94.48",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "187.26",
            "p50": "170.65",
            "p95": "149.14",
            "p99": "121.01",
            "min": "118.21",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "185.61",
            "p50": "166.53",
            "p95": "141.48",
            "p99": "139.32",
            "min": "139.08",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "206.00",
            "p50": "190.80",
            "p95": "168.53",
            "p99": "153.36",
            "min": "152.86",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "182.35",
            "p50": "170.19",
            "p95": "150.38",
            "p99": "127.92",
            "min": "123.40",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "208.90",
            "p50": "191.34",
            "p95": "157.51",
            "p99": "141.11",
            "min": "138.01",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "150.72",
            "p50": "141.50",
            "p95": "125.58",
            "p99": "112.15",
            "min": "109.77",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "225.30",
            "p50": "208.06",
            "p95": "183.49",
            "p99": "127.91",
            "min": "111.71",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "180.94",
            "p50": "168.26",
            "p95": "144.83",
            "p99": "131.98",
            "min": "129.75",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "103.13",
            "p50": "94.84",
            "p95": "83.87",
            "p99": "83.03",
            "min": "82.88",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "136.37",
            "p50": "128.77",
            "p95": "118.28",
            "p99": "123.08",
            "min": "115.93",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "452.50",
            "p50": "335.31",
            "p95": "234.11",
            "p99": "251.67",
            "min": "204.57",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "179.15",
            "p50": "141.58",
            "p95": "133.98",
            "p99": "152.55",
            "min": "132.49",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "127.06",
            "p50": "121.08",
            "p95": "109.32",
            "p99": "116.65",
            "min": "108.80",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1168.85",
            "p50": "889.67",
            "p95": "519.04",
            "p99": "427.94",
            "min": "421.96",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1012.73",
            "p50": "817.46",
            "p95": "523.14",
            "p99": "415.89",
            "min": "406.69",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1394.30",
            "p50": "1008.60",
            "p95": "574.73",
            "p99": "420.83",
            "min": "376.79",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1303.24",
            "p50": "973.46",
            "p95": "548.50",
            "p99": "455.10",
            "min": "448.79",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1261.35",
            "p50": "936.06",
            "p95": "492.16",
            "p99": "440.44",
            "min": "429.60",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1064.56",
            "p50": "831.37",
            "p95": "533.89",
            "p99": "424.30",
            "min": "421.26",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "684.04",
            "p50": "532.87",
            "p95": "368.10",
            "p99": "281.81",
            "min": "280.61",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "678.18",
            "p50": "535.18",
            "p95": "387.05",
            "p99": "349.62",
            "min": "348.27",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "701.89",
            "p50": "549.20",
            "p95": "405.06",
            "p99": "343.35",
            "min": "338.99",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "703.63",
            "p50": "566.16",
            "p95": "387.38",
            "p99": "300.87",
            "min": "296.54",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "285.55",
            "p50": "262.74",
            "p95": "216.88",
            "p99": "200.22",
            "min": "196.15",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "629.23",
            "p50": "469.08",
            "p95": "330.95",
            "p99": "278.82",
            "min": "271.80",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "604.25",
            "p50": "484.33",
            "p95": "374.34",
            "p99": "331.50",
            "min": "331.12",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "599.02",
            "p50": "500.03",
            "p95": "367.98",
            "p99": "268.89",
            "min": "254.73",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "634.59",
            "p50": "504.71",
            "p95": "342.76",
            "p99": "307.49",
            "min": "301.21",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.34",
            "p50": "100.56",
            "p95": "90.85",
            "p99": "85.35",
            "min": "81.81",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.30",
            "p50": "100.92",
            "p95": "91.19",
            "p99": "85.03",
            "min": "84.47",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.19",
            "p50": "93.23",
            "p95": "84.81",
            "p99": "80.95",
            "min": "80.51",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "251.34",
            "p50": "230.49",
            "p95": "188.64",
            "p99": "168.22",
            "min": "163.34",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.67",
            "p50": "93.60",
            "p95": "83.68",
            "p99": "81.70",
            "min": "81.45",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "243.35",
            "p50": "224.47",
            "p95": "185.74",
            "p99": "161.85",
            "min": "148.48",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "209.19",
            "p50": "190.35",
            "p95": "153.71",
            "p99": "106.56",
            "min": "105.11",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "234.59",
            "p50": "216.92",
            "p95": "183.66",
            "p99": "128.93",
            "min": "100.61",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "578.63",
            "p50": "491.43",
            "p95": "341.28",
            "p99": "307.70",
            "min": "303.42",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "6043.93",
            "p50": "2574.43",
            "p95": "1115.98",
            "p99": "821.59",
            "min": "720.90",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "527.12",
            "p50": "461.34",
            "p95": "342.78",
            "p99": "302.52",
            "min": "291.67",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "17745.84",
            "p50": "4097.56",
            "p95": "1421.31",
            "p99": "1121.25",
            "min": "1112.35",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3368.65",
            "p50": "2133.03",
            "p95": "926.05",
            "p99": "702.81",
            "min": "695.46",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "227.28",
            "p50": "202.07",
            "p95": "165.50",
            "p99": "136.06",
            "min": "134.22",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "257.41",
            "p50": "237.46",
            "p95": "200.63",
            "p99": "177.32",
            "min": "176.88",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "152.15",
            "p50": "141.98",
            "p95": "124.06",
            "p99": "113.47",
            "min": "112.24",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "243.28",
            "p50": "222.88",
            "p95": "188.83",
            "p99": "170.51",
            "min": "169.84",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "182.05",
            "p50": "169.23",
            "p95": "141.10",
            "p99": "133.17",
            "min": "132.42",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "219.69",
            "p50": "204.23",
            "p95": "163.73",
            "p99": "152.03",
            "min": "150.96",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "207.38",
            "p50": "191.87",
            "p95": "161.39",
            "p99": "151.05",
            "min": "150.20",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "205.79",
            "p50": "192.01",
            "p95": "163.46",
            "p99": "152.02",
            "min": "151.79",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1295.62",
            "p50": "1048.28",
            "p95": "691.56",
            "p99": "527.54",
            "min": "517.11",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "179.65",
            "p50": "168.20",
            "p95": "148.78",
            "p99": "132.24",
            "min": "130.29",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "189.30",
            "p50": "187.08",
            "p95": "175.87",
            "p99": "167.70",
            "min": "167.44",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "188.79",
            "p50": "186.56",
            "p95": "172.08",
            "p99": "161.17",
            "min": "160.49",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "190.01",
            "p50": "187.53",
            "p95": "174.55",
            "p99": "158.17",
            "min": "156.52",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1155.31",
            "p50": "1127.09",
            "p95": "803.54",
            "p99": "638.13",
            "min": "607.76",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "616.81",
            "p50": "604.38",
            "p95": "516.45",
            "p99": "459.33",
            "min": "457.41",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "664.71",
            "p50": "651.32",
            "p95": "533.97",
            "p99": "325.54",
            "min": "275.29",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "760.53",
            "p50": "745.59",
            "p95": "616.20",
            "p99": "478.27",
            "min": "458.11",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "820.88",
            "p50": "806.75",
            "p95": "618.49",
            "p99": "500.96",
            "min": "500.15",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "914.00",
            "p50": "892.41",
            "p95": "662.55",
            "p99": "556.07",
            "min": "533.03",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "866.41",
            "p50": "819.99",
            "p95": "615.63",
            "p99": "493.07",
            "min": "490.92",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "872.70",
            "p50": "856.60",
            "p95": "651.46",
            "p99": "551.82",
            "min": "545.28",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "834.71",
            "p50": "816.35",
            "p95": "622.48",
            "p99": "497.35",
            "min": "493.74",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "765.76",
            "p50": "749.45",
            "p95": "593.58",
            "p99": "428.82",
            "min": "428.80",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "853.25",
            "p50": "821.00",
            "p95": "615.29",
            "p99": "506.09",
            "min": "490.87",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "116.45",
            "p50": "111.45",
            "p95": "108.07",
            "p99": "103.48",
            "min": "102.62",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "91.36",
            "p50": "89.78",
            "p95": "86.85",
            "p99": "86.61",
            "min": "84.05",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "620.69",
            "p50": "608.28",
            "p95": "498.25",
            "p99": "488.87",
            "min": "457.95",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "121.95",
            "p50": "97.79",
            "p95": "90.87",
            "p99": "103.71",
            "min": "89.94",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "85.38",
            "p50": "82.69",
            "p95": "80.13",
            "p99": "81.91",
            "min": "79.29",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1893.86",
            "p50": "1834.00",
            "p95": "1242.32",
            "p99": "714.86",
            "min": "711.78",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1623.06",
            "p50": "1587.53",
            "p95": "1094.63",
            "p99": "767.43",
            "min": "708.07",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2488.14",
            "p50": "2342.22",
            "p95": "1477.14",
            "p99": "1062.31",
            "min": "948.21",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2444.32",
            "p50": "2352.28",
            "p95": "1304.37",
            "p99": "1013.35",
            "min": "1012.76",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2454.09",
            "p50": "2314.60",
            "p95": "1224.89",
            "p99": "804.44",
            "min": "802.61",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1683.07",
            "p50": "1634.97",
            "p95": "1166.71",
            "p99": "789.65",
            "min": "683.52",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "690.06",
            "p50": "677.60",
            "p95": "514.28",
            "p99": "404.54",
            "min": "400.33",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "678.35",
            "p50": "661.83",
            "p95": "551.35",
            "p99": "434.20",
            "min": "432.38",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "694.96",
            "p50": "683.49",
            "p95": "592.44",
            "p99": "515.76",
            "min": "510.32",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "520.26",
            "p50": "510.36",
            "p95": "462.32",
            "p99": "401.65",
            "min": "398.66",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.28",
            "p50": "85.08",
            "p95": "38.20",
            "p99": "37.87",
            "min": "37.76",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "823.59",
            "p50": "804.63",
            "p95": "645.85",
            "p99": "488.88",
            "min": "487.30",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "776.92",
            "p50": "761.29",
            "p95": "610.53",
            "p99": "545.96",
            "min": "541.63",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "775.49",
            "p50": "758.52",
            "p95": "593.06",
            "p99": "486.04",
            "min": "482.42",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "778.35",
            "p50": "762.11",
            "p95": "591.28",
            "p99": "473.78",
            "min": "471.58",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2401.48",
            "p50": "2289.37",
            "p95": "1517.44",
            "p99": "1093.29",
            "min": "884.89",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2751.79",
            "p50": "2623.74",
            "p95": "1485.47",
            "p99": "971.05",
            "min": "909.18",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "105.63",
            "p50": "104.03",
            "p95": "99.44",
            "p99": "95.31",
            "min": "95.10",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "15148.49",
            "p50": "7783.20",
            "p95": "2445.01",
            "p99": "1869.01",
            "min": "1404.91",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "105.71",
            "p50": "104.05",
            "p95": "100.21",
            "p99": "94.43",
            "min": "93.68",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "6134.17",
            "p50": "5470.84",
            "p95": "2263.29",
            "p99": "1481.94",
            "min": "1462.74",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "871.70",
            "p50": "856.89",
            "p95": "725.85",
            "p99": "591.04",
            "min": "578.94",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "659.12",
            "p50": "646.72",
            "p95": "560.93",
            "p99": "452.02",
            "min": "438.62",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2461.42",
            "p50": "2276.91",
            "p95": "1117.43",
            "p99": "863.06",
            "min": "802.43",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "14263.44",
            "p50": "9160.32",
            "p95": "2400.44",
            "p99": "1481.71",
            "min": "1387.51",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2275.25",
            "p50": "2160.62",
            "p95": "1311.85",
            "p99": "739.31",
            "min": "730.73",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "75951.94",
            "p50": "8987.04",
            "p95": "2417.80",
            "p99": "1375.92",
            "min": "1282.96",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13644.81",
            "p50": "7807.93",
            "p95": "2414.74",
            "p99": "1788.93",
            "min": "1341.31",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "780.12",
            "p50": "610.57",
            "p95": "503.93",
            "p99": "446.53",
            "min": "445.35",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "932.89",
            "p50": "911.68",
            "p95": "769.31",
            "p99": "609.55",
            "min": "589.77",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "817.06",
            "p50": "798.77",
            "p95": "649.80",
            "p99": "509.23",
            "min": "492.81",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1180.18",
            "p50": "1138.92",
            "p95": "945.34",
            "p99": "683.33",
            "min": "676.65",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "835.40",
            "p50": "814.91",
            "p95": "567.77",
            "p99": "538.83",
            "min": "538.40",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1158.33",
            "p50": "1121.72",
            "p95": "825.18",
            "p99": "683.96",
            "min": "670.93",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "823.73",
            "p50": "803.07",
            "p95": "593.32",
            "p99": "480.24",
            "min": "479.45",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "878.85",
            "p50": "862.84",
            "p95": "710.13",
            "p99": "672.68",
            "min": "671.49",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1933.75",
            "p50": "1775.09",
            "p95": "1420.30",
            "p99": "974.65",
            "min": "970.56",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "869.45",
            "p50": "850.05",
            "p95": "667.58",
            "p99": "524.62",
            "min": "492.28",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "122.52",
            "p50": "116.95",
            "p95": "104.34",
            "p99": "99.84",
            "min": "99.59",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "122.43",
            "p50": "116.42",
            "p95": "101.20",
            "p99": "95.31",
            "min": "95.08",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "121.87",
            "p50": "116.55",
            "p95": "101.94",
            "p99": "67.79",
            "min": "59.72",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "208.64",
            "p50": "192.83",
            "p95": "155.21",
            "p99": "136.37",
            "min": "130.26",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.06",
            "p50": "96.63",
            "p95": "84.02",
            "p99": "80.57",
            "min": "80.39",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "106.87",
            "p50": "100.89",
            "p95": "86.92",
            "p99": "82.35",
            "min": "82.14",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "136.04",
            "p50": "126.89",
            "p95": "109.70",
            "p99": "90.07",
            "min": "87.06",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "136.57",
            "p50": "128.10",
            "p95": "103.07",
            "p99": "74.72",
            "min": "69.53",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "178.39",
            "p50": "163.63",
            "p95": "127.87",
            "p99": "120.50",
            "min": "119.05",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "178.20",
            "p50": "163.84",
            "p95": "133.99",
            "p99": "120.68",
            "min": "119.55",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "177.06",
            "p50": "163.35",
            "p95": "133.11",
            "p99": "122.37",
            "min": "122.20",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.11",
            "p50": "119.07",
            "p95": "97.73",
            "p99": "76.72",
            "min": "72.33",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "201.18",
            "p50": "183.67",
            "p95": "142.39",
            "p99": "123.14",
            "min": "121.25",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "182.55",
            "p50": "165.92",
            "p95": "139.34",
            "p99": "121.01",
            "min": "120.21",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "74.79",
            "p50": "69.76",
            "p95": "62.78",
            "p99": "61.32",
            "min": "61.22",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "129.02",
            "p50": "119.47",
            "p95": "100.45",
            "p99": "109.41",
            "min": "98.85",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "205.15",
            "p50": "184.05",
            "p95": "141.94",
            "p99": "152.83",
            "min": "140.56",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "154.16",
            "p50": "133.03",
            "p95": "130.15",
            "p99": "139.83",
            "min": "129.01",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "124.31",
            "p50": "114.70",
            "p95": "97.31",
            "p99": "107.76",
            "min": "95.28",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1034.96",
            "p50": "667.70",
            "p95": "327.60",
            "p99": "265.54",
            "min": "263.74",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "990.92",
            "p50": "663.21",
            "p95": "330.94",
            "p99": "258.41",
            "min": "253.48",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1120.61",
            "p50": "733.44",
            "p95": "337.89",
            "p99": "275.07",
            "min": "261.21",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1057.49",
            "p50": "691.50",
            "p95": "301.89",
            "p99": "257.96",
            "min": "252.27",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "995.99",
            "p50": "655.38",
            "p95": "339.55",
            "p99": "257.24",
            "min": "236.58",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "995.41",
            "p50": "652.89",
            "p95": "315.38",
            "p99": "254.24",
            "min": "252.95",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "322.93",
            "p50": "282.36",
            "p95": "203.77",
            "p99": "181.90",
            "min": "180.45",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "326.89",
            "p50": "279.05",
            "p95": "198.22",
            "p99": "178.72",
            "min": "178.02",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "333.02",
            "p50": "281.13",
            "p95": "207.65",
            "p99": "180.66",
            "min": "180.51",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "359.64",
            "p50": "309.86",
            "p95": "204.74",
            "p99": "185.01",
            "min": "184.49",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "283.26",
            "p50": "244.53",
            "p95": "175.84",
            "p99": "159.51",
            "min": "156.36",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "278.96",
            "p50": "243.28",
            "p95": "172.20",
            "p99": "158.13",
            "min": "158.00",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "266.99",
            "p50": "241.79",
            "p95": "176.42",
            "p99": "163.69",
            "min": "163.58",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "276.21",
            "p50": "242.50",
            "p95": "176.15",
            "p99": "166.19",
            "min": "164.93",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "278.29",
            "p50": "243.40",
            "p95": "188.85",
            "p99": "162.29",
            "min": "160.92",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "103.90",
            "p50": "97.92",
            "p95": "84.16",
            "p99": "80.82",
            "min": "80.32",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "103.86",
            "p50": "98.02",
            "p95": "87.25",
            "p99": "79.14",
            "min": "79.03",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "95.72",
            "p50": "91.11",
            "p95": "81.19",
            "p99": "75.56",
            "min": "75.00",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "247.15",
            "p50": "218.56",
            "p95": "162.24",
            "p99": "147.16",
            "min": "145.29",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "94.97",
            "p50": "91.02",
            "p95": "79.98",
            "p99": "75.73",
            "min": "75.08",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "236.91",
            "p50": "211.59",
            "p95": "163.37",
            "p99": "143.70",
            "min": "141.19",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "180.22",
            "p50": "166.05",
            "p95": "124.86",
            "p99": "108.39",
            "min": "107.47",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "152.99",
            "p50": "139.80",
            "p95": "109.83",
            "p99": "51.32",
            "min": "45.37",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "438.94",
            "p50": "385.63",
            "p95": "244.91",
            "p99": "208.66",
            "min": "198.23",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4701.69",
            "p50": "2091.06",
            "p95": "572.51",
            "p99": "486.32",
            "min": "460.11",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "436.21",
            "p50": "384.76",
            "p95": "267.44",
            "p99": "246.23",
            "min": "241.53",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14117.56",
            "p50": "2878.93",
            "p95": "1133.55",
            "p99": "843.03",
            "min": "752.28",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3356.51",
            "p50": "1885.68",
            "p95": "615.76",
            "p99": "534.77",
            "min": "517.50",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "201.48",
            "p50": "186.77",
            "p95": "159.80",
            "p99": "145.60",
            "min": "141.71",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "229.90",
            "p50": "214.40",
            "p95": "179.30",
            "p99": "155.41",
            "min": "153.79",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "129.04",
            "p50": "119.62",
            "p95": "98.86",
            "p99": "80.25",
            "min": "78.15",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "208.15",
            "p50": "184.42",
            "p95": "142.41",
            "p99": "111.70",
            "min": "104.03",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "136.44",
            "p50": "127.74",
            "p95": "103.29",
            "p99": "74.97",
            "min": "68.50",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "174.86",
            "p50": "157.65",
            "p95": "127.85",
            "p99": "116.55",
            "min": "114.07",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "176.82",
            "p50": "162.93",
            "p95": "131.99",
            "p99": "122.06",
            "min": "121.60",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "180.36",
            "p50": "163.10",
            "p95": "131.37",
            "p99": "119.78",
            "min": "118.55",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "303.70",
            "p50": "239.04",
            "p95": "57.35",
            "p99": "52.03",
            "min": "51.82",
            "n": "105",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "144.35",
            "p50": "137.71",
            "p95": "115.34",
            "p99": "58.36",
            "min": "58.29",
            "n": "107",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "86.39",
            "p50": "84.75",
            "p95": "76.73",
            "p99": "73.80",
            "min": "73.78",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "87.78",
            "p50": "85.99",
            "p95": "82.36",
            "p99": "81.00",
            "min": "80.97",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "87.61",
            "p50": "85.56",
            "p95": "80.38",
            "p99": "74.34",
            "min": "73.76",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "236.73",
            "p50": "175.96",
            "p95": "171.47",
            "p99": "165.94",
            "min": "165.23",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "96.74",
            "p50": "94.08",
            "p95": "88.73",
            "p99": "87.57",
            "min": "87.53",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "111.56",
            "p50": "109.38",
            "p95": "106.32",
            "p99": "102.79",
            "min": "101.99",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "120.72",
            "p50": "118.72",
            "p95": "105.41",
            "p99": "96.35",
            "min": "95.96",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "122.48",
            "p50": "119.77",
            "p95": "117.34",
            "p99": "108.98",
            "min": "108.23",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "93.53",
            "p50": "91.92",
            "p95": "70.49",
            "p99": "68.49",
            "min": "68.00",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "99.63",
            "p50": "98.17",
            "p95": "93.50",
            "p99": "91.04",
            "min": "91.01",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "100.67",
            "p50": "97.88",
            "p95": "83.52",
            "p99": "80.58",
            "min": "80.49",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "123.19",
            "p50": "119.96",
            "p95": "116.59",
            "p99": "114.17",
            "min": "113.95",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "134.11",
            "p50": "131.31",
            "p95": "121.78",
            "p99": "119.40",
            "min": "119.06",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "113.69",
            "p50": "111.30",
            "p95": "105.91",
            "p99": "101.60",
            "min": "101.56",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "88.54",
            "p50": "83.65",
            "p95": "78.95",
            "p99": "74.85",
            "min": "73.64",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "100.81",
            "p50": "99.51",
            "p95": "95.94",
            "p99": "92.81",
            "min": "88.50",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "75.27",
            "p50": "73.43",
            "p95": "67.29",
            "p99": "68.04",
            "min": "66.34",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "155.85",
            "p50": "125.03",
            "p95": "117.58",
            "p99": "133.75",
            "min": "117.08",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "107.87",
            "p50": "106.10",
            "p95": "105.25",
            "p99": "106.08",
            "min": "104.72",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "423.08",
            "p50": "414.31",
            "p95": "370.21",
            "p99": "334.13",
            "min": "328.35",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "478.75",
            "p50": "467.50",
            "p95": "444.48",
            "p99": "352.02",
            "min": "315.67",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "450.98",
            "p50": "442.22",
            "p95": "403.70",
            "p99": "326.87",
            "min": "320.54",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "458.15",
            "p50": "449.29",
            "p95": "417.60",
            "p99": "412.06",
            "min": "410.81",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "462.82",
            "p50": "451.16",
            "p95": "420.34",
            "p99": "403.10",
            "min": "399.17",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "464.29",
            "p50": "452.73",
            "p95": "424.51",
            "p99": "333.63",
            "min": "323.94",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "121.84",
            "p50": "118.69",
            "p95": "109.03",
            "p99": "107.05",
            "min": "106.87",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "122.63",
            "p50": "119.06",
            "p95": "109.19",
            "p99": "103.10",
            "min": "102.38",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "119.92",
            "p50": "117.06",
            "p95": "108.16",
            "p99": "106.62",
            "min": "106.44",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "102.36",
            "p50": "100.65",
            "p95": "95.18",
            "p99": "91.28",
            "min": "90.99",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "85.64",
            "p50": "84.31",
            "p95": "82.99",
            "p99": "79.88",
            "min": "78.81",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "120.88",
            "p50": "117.12",
            "p95": "105.54",
            "p99": "103.75",
            "min": "103.48",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "113.94",
            "p50": "111.29",
            "p95": "99.80",
            "p99": "98.05",
            "min": "97.70",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "114.08",
            "p50": "110.63",
            "p95": "99.96",
            "p99": "98.64",
            "min": "98.48",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "114.42",
            "p50": "110.69",
            "p95": "99.90",
            "p99": "97.66",
            "min": "97.14",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1573.20",
            "p50": "1414.53",
            "p95": "680.77",
            "p99": "396.19",
            "min": "302.18",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1580.39",
            "p50": "1402.40",
            "p95": "746.62",
            "p99": "306.96",
            "min": "285.59",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.35",
            "p50": "151.69",
            "p95": "142.69",
            "p99": "129.31",
            "min": "128.39",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3936.27",
            "p50": "3539.92",
            "p95": "1654.74",
            "p99": "443.75",
            "min": "427.72",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "155.62",
            "p50": "151.49",
            "p95": "138.31",
            "p99": "128.76",
            "min": "128.66",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3929.18",
            "p50": "3490.86",
            "p95": "1405.46",
            "p99": "989.80",
            "min": "898.11",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "100.66",
            "p50": "98.52",
            "p95": "91.15",
            "p99": "83.39",
            "min": "83.25",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "172.25",
            "p50": "167.66",
            "p95": "161.64",
            "p99": "158.60",
            "min": "157.57",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "356.41",
            "p50": "262.24",
            "p95": "203.62",
            "p99": "176.96",
            "min": "171.14",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9413.32",
            "p50": "1635.16",
            "p95": "921.81",
            "p99": "609.83",
            "min": "512.00",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "361.74",
            "p50": "260.32",
            "p95": "204.33",
            "p99": "178.71",
            "min": "168.95",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "25895.96",
            "p50": "8769.17",
            "p95": "2394.17",
            "p99": "2001.83",
            "min": "1816.27",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "5927.30",
            "p50": "3133.33",
            "p95": "1654.33",
            "p99": "788.11",
            "min": "534.81",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "306.91",
            "p50": "236.76",
            "p95": "170.98",
            "p99": "135.66",
            "min": "135.22",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "155.13",
            "p50": "134.08",
            "p95": "112.29",
            "p99": "105.03",
            "min": "104.86",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "120.97",
            "p50": "116.00",
            "p95": "92.07",
            "p99": "81.88",
            "min": "80.74",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "124.93",
            "p50": "119.67",
            "p95": "115.18",
            "p99": "110.98",
            "min": "110.51",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "121.29",
            "p50": "117.57",
            "p95": "114.41",
            "p99": "110.27",
            "min": "109.69",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "150.61",
            "p50": "146.70",
            "p95": "142.41",
            "p99": "138.01",
            "min": "137.96",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "96.08",
            "p50": "93.16",
            "p95": "87.38",
            "p99": "86.25",
            "min": "86.20",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "127.84",
            "p50": "119.15",
            "p95": "108.52",
            "p99": "106.50",
            "min": "105.68",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1189.55",
            "p50": "1092.18",
            "p95": "382.34",
            "p99": "370.41",
            "min": "370.10",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "122.95",
            "p50": "119.44",
            "p95": "108.53",
            "p99": "96.42",
            "min": "95.16",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}