{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "170.10",
            "p50": "168.40",
            "p95": "158.59",
            "p99": "155.02",
            "min": "154.81",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "170.40",
            "p50": "168.77",
            "p95": "165.64",
            "p99": "164.21",
            "min": "163.98",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "169.95",
            "p50": "168.11",
            "p95": "163.59",
            "p99": "161.55",
            "min": "161.49",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "756.54",
            "p50": "744.01",
            "p95": "480.12",
            "p99": "406.52",
            "min": "405.91",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "399.37",
            "p50": "392.68",
            "p95": "260.76",
            "p99": "209.46",
            "min": "196.95",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "434.39",
            "p50": "427.28",
            "p95": "292.58",
            "p99": "289.86",
            "min": "289.64",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "324.00",
            "p50": "318.45",
            "p95": "307.90",
            "p99": "297.06",
            "min": "295.83",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "187.30",
            "p50": "185.37",
            "p95": "177.45",
            "p99": "118.29",
            "min": "104.30",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "268.09",
            "p50": "263.30",
            "p95": "244.01",
            "p99": "239.48",
            "min": "238.45",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "264.74",
            "p50": "255.34",
            "p95": "251.67",
            "p99": "239.20",
            "min": "237.25",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "260.13",
            "p50": "257.60",
            "p95": "254.01",
            "p99": "250.08",
            "min": "249.66",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "190.06",
            "p50": "188.04",
            "p95": "185.45",
            "p99": "183.83",
            "min": "183.77",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "319.75",
            "p50": "314.21",
            "p95": "252.33",
            "p99": "245.16",
            "min": "244.88",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "309.18",
            "p50": "303.39",
            "p95": "295.25",
            "p99": "238.89",
            "min": "225.11",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "7829.45",
            "p50": "5837.43",
            "p95": "2622.76",
            "p99": "1689.44",
            "min": "1673.02",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2561.68",
            "p50": "2152.13",
            "p95": "1137.93",
            "p99": "1487.95",
            "min": "909.79",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "290.27",
            "p50": "246.56",
            "p95": "234.36",
            "p99": "221.15",
            "min": "204.93",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "7888.91",
            "p50": "4125.29",
            "p95": "1095.26",
            "p99": "3991.60",
            "min": "1051.52",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7887.28",
            "p50": "4421.24",
            "p95": "2512.65",
            "p99": "4445.53",
            "min": "1849.12",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1850.37",
            "p50": "1681.65",
            "p95": "575.13",
            "p99": "385.92",
            "min": "207.75",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "20679.08",
            "p50": "4982.33",
            "p95": "801.02",
            "p99": "471.83",
            "min": "140.34",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1317.66",
            "p50": "1197.63",
            "p95": "503.08",
            "p99": "446.90",
            "min": "413.30",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2162.64",
            "p50": "2003.49",
            "p95": "1582.19",
            "p99": "570.99",
            "min": "472.61",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2173.21",
            "p50": "2019.09",
            "p95": "611.41",
            "p99": "396.02",
            "min": "392.51",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "6309.17",
            "p50": "4990.82",
            "p95": "781.97",
            "p99": "740.46",
            "min": "733.57",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "300.28",
            "p50": "264.64",
            "p95": "145.59",
            "p99": "142.63",
            "min": "142.55",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "498.17",
            "p50": "461.16",
            "p95": "388.80",
            "p99": "65.12",
            "min": "52.72",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "343.80",
            "p50": "288.25",
            "p95": "58.49",
            "p99": "57.47",
            "min": "57.41",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "418.70",
            "p50": "391.49",
            "p95": "156.42",
            "p99": "71.56",
            "min": "70.52",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "36102.44",
            "p50": "8552.86",
            "p95": "2462.72",
            "p99": "625.95",
            "min": "77.54",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "371.37",
            "p50": "351.42",
            "p95": "298.93",
            "p99": "285.91",
            "min": "284.63",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "356.43",
            "p50": "341.44",
            "p95": "287.00",
            "p99": "278.62",
            "min": "277.43",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "353.95",
            "p50": "341.84",
            "p95": "286.73",
            "p99": "282.27",
            "min": "282.14",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "361.56",
            "p50": "340.03",
            "p95": "286.61",
            "p99": "123.56",
            "min": "82.32",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "15406.37",
            "p50": "7069.68",
            "p95": "2563.70",
            "p99": "1787.49",
            "min": "1689.27",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "14830.97",
            "p50": "7984.90",
            "p95": "2243.73",
            "p99": "724.74",
            "min": "77.34",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "14661.14",
            "p50": "6584.89",
            "p95": "2253.41",
            "p99": "755.69",
            "min": "85.28",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "15179.34",
            "p50": "6827.05",
            "p95": "2701.11",
            "p99": "74.77",
            "min": "70.50",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "14001.76",
            "p50": "5920.08",
            "p95": "2639.58",
            "p99": "1404.55",
            "min": "1312.87",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "15180.74",
            "p50": "7004.55",
            "p95": "2455.57",
            "p99": "1059.77",
            "min": "217.28",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "264.10",
            "p50": "254.62",
            "p95": "248.95",
            "p99": "236.72",
            "min": "235.28",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "539.29",
            "p50": "531.56",
            "p95": "518.53",
            "p99": "497.67",
            "min": "491.75",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1183.47",
            "p50": "1125.13",
            "p95": "376.32",
            "p99": "343.62",
            "min": "325.76",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "19796.06",
            "p50": "9104.05",
            "p95": "2564.16",
            "p99": "1616.79",
            "min": "1601.46",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1095.96",
            "p50": "1048.32",
            "p95": "339.90",
            "p99": "283.87",
            "min": "233.74",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "49184.33",
            "p50": "9498.62",
            "p95": "2339.80",
            "p99": "1620.65",
            "min": "1526.91",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "18033.56",
            "p50": "7227.45",
            "p95": "2555.26",
            "p99": "1754.52",
            "min": "1620.72",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "522.14",
            "p50": "495.57",
            "p95": "453.31",
            "p99": "366.79",
            "min": "354.75",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "520.66",
            "p50": "510.34",
            "p95": "493.43",
            "p99": "464.91",
            "min": "458.50",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "205.61",
            "p50": "202.58",
            "p95": "199.48",
            "p99": "194.08",
            "min": "194.02",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "436.93",
            "p50": "428.53",
            "p95": "411.32",
            "p99": "188.88",
            "min": "187.80",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "205.80",
            "p50": "202.06",
            "p95": "198.37",
            "p99": "174.92",
            "min": "172.14",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "329.59",
            "p50": "322.42",
            "p95": "311.25",
            "p99": "280.54",
            "min": "275.42",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "272.59",
            "p50": "267.12",
            "p95": "262.69",
            "p99": "256.97",
            "min": "256.59",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "518.43",
            "p50": "506.77",
            "p95": "491.41",
            "p99": "479.25",
            "min": "478.98",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1470.93",
            "p50": "1190.05",
            "p95": "890.67",
            "p99": "846.90",
            "min": "842.62",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "317.93",
            "p50": "313.21",
            "p95": "305.55",
            "p99": "281.68",
            "min": "275.40",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.32",
            "p50": "85.27",
            "p95": "77.59",
            "p99": "74.85",
            "min": "74.69",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "80.55",
            "p50": "77.83",
            "p95": "71.69",
            "p99": "67.30",
            "min": "66.61",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "82.24",
            "p50": "79.67",
            "p95": "74.29",
            "p99": "71.44",
            "min": "71.42",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "228.20",
            "p50": "208.77",
            "p95": "177.67",
            "p99": "161.03",
            "min": "160.50",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "172.77",
            "p50": "162.18",
            "p95": "143.85",
            "p99": "134.20",
            "min": "133.54",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "182.81",
            "p50": "169.88",
            "p95": "145.18",
            "p99": "139.24",
            "min": "138.75",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "171.59",
            "p50": "158.05",
            "p95": "136.92",
            "p99": "122.68",
            "min": "121.13",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "171.44",
            "p50": "156.79",
            "p95": "135.88",
            "p99": "117.53",
            "min": "114.89",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "191.75",
            "p50": "177.25",
            "p95": "146.35",
            "p99": "139.52",
            "min": "139.24",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "172.40",
            "p50": "160.34",
            "p95": "133.81",
            "p99": "122.73",
            "min": "120.41",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "193.53",
            "p50": "177.33",
            "p95": "147.82",
            "p99": "136.76",
            "min": "136.35",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "140.92",
            "p50": "131.55",
            "p95": "113.39",
            "p99": "105.65",
            "min": "104.90",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "219.07",
            "p50": "203.69",
            "p95": "172.76",
            "p99": "155.74",
            "min": "154.55",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "172.49",
            "p50": "158.28",
            "p95": "135.72",
            "p99": "123.11",
            "min": "120.54",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.23",
            "p50": "64.78",
            "p95": "59.39",
            "p99": "57.77",
            "min": "57.76",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "136.78",
            "p50": "128.85",
            "p95": "118.66",
            "p99": "124.46",
            "min": "117.82",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "400.43",
            "p50": "298.29",
            "p95": "236.00",
            "p99": "239.69",
            "min": "201.98",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "171.55",
            "p50": "141.81",
            "p95": "134.07",
            "p99": "147.42",
            "min": "129.22",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "130.99",
            "p50": "120.88",
            "p95": "110.62",
            "p99": "118.11",
            "min": "108.40",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1159.09",
            "p50": "884.24",
            "p95": "517.16",
            "p99": "420.40",
            "min": "416.11",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1025.29",
            "p50": "829.95",
            "p95": "527.36",
            "p99": "415.89",
            "min": "412.59",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1351.67",
            "p50": "999.82",
            "p95": "550.76",
            "p99": "421.83",
            "min": "403.02",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1262.06",
            "p50": "915.66",
            "p95": "536.19",
            "p99": "446.20",
            "min": "417.91",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1234.66",
            "p50": "913.76",
            "p95": "518.13",
            "p99": "419.12",
            "min": "406.68",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1048.20",
            "p50": "814.80",
            "p95": "522.24",
            "p99": "411.86",
            "min": "388.98",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "640.33",
            "p50": "518.95",
            "p95": "362.40",
            "p99": "235.59",
            "min": "217.95",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "639.71",
            "p50": "520.18",
            "p95": "346.90",
            "p99": "282.16",
            "min": "269.77",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "674.02",
            "p50": "504.87",
            "p95": "366.17",
            "p99": "298.87",
            "min": "289.86",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "652.32",
            "p50": "531.81",
            "p95": "396.96",
            "p99": "292.97",
            "min": "278.92",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "291.65",
            "p50": "261.00",
            "p95": "211.49",
            "p99": "194.34",
            "min": "193.56",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "544.96",
            "p50": "431.69",
            "p95": "313.75",
            "p99": "268.27",
            "min": "266.59",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "538.40",
            "p50": "435.05",
            "p95": "319.89",
            "p99": "287.47",
            "min": "283.83",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "556.29",
            "p50": "444.07",
            "p95": "325.67",
            "p99": "312.95",
            "min": "312.86",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "563.03",
            "p50": "446.75",
            "p95": "338.26",
            "p99": "247.46",
            "min": "230.42",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.51",
            "p50": "102.15",
            "p95": "92.66",
            "p99": "83.09",
            "min": "82.53",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.37",
            "p50": "102.65",
            "p95": "92.62",
            "p99": "87.40",
            "min": "87.10",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.85",
            "p50": "94.96",
            "p95": "86.18",
            "p99": "81.62",
            "min": "81.47",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "253.13",
            "p50": "233.15",
            "p95": "189.28",
            "p99": "167.13",
            "min": "159.27",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.76",
            "p50": "94.67",
            "p95": "84.97",
            "p99": "82.19",
            "min": "81.48",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "247.39",
            "p50": "225.16",
            "p95": "196.47",
            "p99": "170.04",
            "min": "168.78",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "195.67",
            "p50": "180.74",
            "p95": "156.16",
            "p99": "98.63",
            "min": "86.18",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "199.51",
            "p50": "184.71",
            "p95": "157.55",
            "p99": "145.54",
            "min": "145.30",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "357.41",
            "p50": "315.82",
            "p95": "251.72",
            "p99": "220.83",
            "min": "218.84",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5362.42",
            "p50": "2237.46",
            "p95": "940.66",
            "p99": "645.99",
            "min": "619.35",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "341.68",
            "p50": "306.56",
            "p95": "233.05",
            "p99": "211.17",
            "min": "210.06",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14372.94",
            "p50": "3510.44",
            "p95": "1256.26",
            "p99": "1065.41",
            "min": "1002.84",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3427.83",
            "p50": "1758.58",
            "p95": "718.11",
            "p99": "574.78",
            "min": "502.92",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "180.78",
            "p50": "164.47",
            "p95": "144.58",
            "p99": "123.92",
            "min": "122.85",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "246.28",
            "p50": "225.50",
            "p95": "183.97",
            "p99": "171.58",
            "min": "170.93",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "91.48",
            "p50": "87.77",
            "p95": "80.51",
            "p99": "75.69",
            "min": "74.44",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "222.47",
            "p50": "205.00",
            "p95": "175.12",
            "p99": "155.41",
            "min": "153.52",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "169.68",
            "p50": "158.97",
            "p95": "140.07",
            "p99": "128.14",
            "min": "127.04",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "201.17",
            "p50": "184.96",
            "p95": "158.14",
            "p99": "149.31",
            "min": "147.80",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "195.40",
            "p50": "180.19",
            "p95": "158.58",
            "p99": "152.32",
            "min": "152.28",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "195.56",
            "p50": "181.50",
            "p95": "155.81",
            "p99": "147.86",
            "min": "146.75",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1096.02",
            "p50": "897.37",
            "p95": "555.01",
            "p99": "516.99",
            "min": "513.42",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "175.69",
            "p50": "161.63",
            "p95": "122.57",
            "p99": "114.46",
            "min": "112.22",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.61",
            "p50": "189.33",
            "p95": "169.81",
            "p99": "165.81",
            "min": "165.59",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.27",
            "p50": "187.64",
            "p95": "172.53",
            "p99": "159.80",
            "min": "159.73",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.06",
            "p50": "188.07",
            "p95": "172.70",
            "p99": "163.07",
            "min": "162.26",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1190.76",
            "p50": "1097.93",
            "p95": "638.31",
            "p99": "515.72",
            "min": "505.46",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "703.26",
            "p50": "634.38",
            "p95": "479.34",
            "p99": "408.69",
            "min": "406.64",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "806.75",
            "p50": "732.82",
            "p95": "542.79",
            "p99": "440.39",
            "min": "436.77",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "721.97",
            "p50": "643.51",
            "p95": "459.53",
            "p99": "403.68",
            "min": "401.82",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "729.45",
            "p50": "664.28",
            "p95": "460.69",
            "p99": "413.38",
            "min": "413.02",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "830.77",
            "p50": "747.41",
            "p95": "481.41",
            "p99": "436.48",
            "min": "436.36",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "867.90",
            "p50": "759.47",
            "p95": "549.50",
            "p99": "468.04",
            "min": "456.84",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "858.97",
            "p50": "771.59",
            "p95": "554.82",
            "p99": "456.82",
            "min": "442.90",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "823.41",
            "p50": "710.86",
            "p95": "503.40",
            "p99": "443.45",
            "min": "440.07",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "840.52",
            "p50": "749.69",
            "p95": "556.42",
            "p99": "468.56",
            "min": "453.34",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "863.63",
            "p50": "759.67",
            "p95": "561.21",
            "p99": "471.56",
            "min": "461.13",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "64.48",
            "p50": "62.62",
            "p95": "60.86",
            "p99": "59.90",
            "min": "59.82",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "90.73",
            "p50": "87.99",
            "p95": "83.89",
            "p99": "85.27",
            "min": "82.33",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "501.62",
            "p50": "454.57",
            "p95": "355.28",
            "p99": "362.99",
            "min": "330.47",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "123.43",
            "p50": "95.64",
            "p95": "90.67",
            "p99": "103.98",
            "min": "89.31",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "84.57",
            "p50": "81.63",
            "p95": "78.91",
            "p99": "80.49",
            "min": "77.40",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1808.31",
            "p50": "1496.45",
            "p95": "840.07",
            "p99": "695.09",
            "min": "654.14",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1638.37",
            "p50": "1380.74",
            "p95": "809.03",
            "p99": "595.31",
            "min": "594.45",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2271.05",
            "p50": "1879.24",
            "p95": "868.28",
            "p99": "679.70",
            "min": "679.62",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2228.46",
            "p50": "1809.60",
            "p95": "861.39",
            "p99": "715.03",
            "min": "680.44",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2229.54",
            "p50": "1748.07",
            "p95": "858.10",
            "p99": "678.17",
            "min": "678.04",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1681.01",
            "p50": "1422.75",
            "p95": "826.62",
            "p99": "608.19",
            "min": "598.70",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "734.44",
            "p50": "629.67",
            "p95": "473.24",
            "p99": "429.94",
            "min": "429.74",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "727.61",
            "p50": "640.48",
            "p95": "499.55",
            "p99": "419.96",
            "min": "418.73",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "736.39",
            "p50": "637.90",
            "p95": "490.86",
            "p99": "416.92",
            "min": "415.15",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "744.30",
            "p50": "658.19",
            "p95": "509.29",
            "p99": "420.49",
            "min": "417.23",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.64",
            "p50": "85.33",
            "p95": "81.35",
            "p99": "79.65",
            "min": "79.04",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "646.46",
            "p50": "585.99",
            "p95": "452.56",
            "p99": "396.75",
            "min": "389.27",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "616.77",
            "p50": "537.32",
            "p95": "419.72",
            "p99": "365.67",
            "min": "363.03",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "617.94",
            "p50": "550.01",
            "p95": "424.52",
            "p99": "372.75",
            "min": "369.02",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "616.84",
            "p50": "536.38",
            "p95": "408.42",
            "p99": "373.53",
            "min": "372.68",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1941.10",
            "p50": "1627.50",
            "p95": "820.61",
            "p99": "620.66",
            "min": "615.65",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2222.75",
            "p50": "1884.13",
            "p95": "833.54",
            "p99": "671.18",
            "min": "669.32",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.79",
            "p50": "71.91",
            "p95": "69.57",
            "p99": "67.54",
            "min": "67.54",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9426.78",
            "p50": "3993.87",
            "p95": "2428.03",
            "p99": "1824.78",
            "min": "1786.79",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.88",
            "p50": "71.91",
            "p95": "68.98",
            "p99": "67.81",
            "min": "67.79",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "221.83",
            "p50": "216.01",
            "p95": "193.86",
            "p99": "179.83",
            "min": "177.11",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "860.65",
            "p50": "753.06",
            "p95": "517.02",
            "p99": "239.89",
            "min": "182.99",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.27",
            "p50": "611.31",
            "p95": "487.28",
            "p99": "393.41",
            "min": "393.36",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1064.11",
            "p50": "997.84",
            "p95": "681.94",
            "p99": "579.16",
            "min": "572.70",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "25347.62",
            "p50": "9205.35",
            "p95": "2674.07",
            "p99": "1727.40",
            "min": "1649.19",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1056.58",
            "p50": "980.35",
            "p95": "675.14",
            "p99": "515.90",
            "min": "512.90",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "54856.68",
            "p50": "10082.82",
            "p95": "2861.80",
            "p99": "1599.39",
            "min": "1366.33",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14892.93",
            "p50": "6031.63",
            "p95": "1262.85",
            "p99": "958.82",
            "min": "931.99",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "555.91",
            "p50": "479.64",
            "p95": "387.38",
            "p99": "332.15",
            "min": "327.80",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "976.84",
            "p50": "864.97",
            "p95": "619.86",
            "p99": "488.21",
            "min": "488.01",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "801.02",
            "p50": "728.61",
            "p95": "497.08",
            "p99": "434.68",
            "min": "434.09",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1195.47",
            "p50": "1088.50",
            "p95": "687.94",
            "p99": "546.67",
            "min": "541.05",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "729.97",
            "p50": "664.19",
            "p95": "498.94",
            "p99": "353.26",
            "min": "324.64",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1154.24",
            "p50": "1055.53",
            "p95": "629.72",
            "p99": "523.92",
            "min": "522.78",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "872.03",
            "p50": "772.94",
            "p95": "567.46",
            "p99": "453.15",
            "min": "449.90",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "902.54",
            "p50": "820.35",
            "p95": "579.86",
            "p99": "476.03",
            "min": "469.79",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2351.09",
            "p50": "1972.75",
            "p95": "1095.27",
            "p99": "988.36",
            "min": "985.74",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "836.33",
            "p50": "761.00",
            "p95": "558.79",
            "p99": "461.79",
            "min": "448.33",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "81.35",
            "p50": "78.76",
            "p95": "71.58",
            "p99": "68.57",
            "min": "68.36",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "75.21",
            "p50": "72.76",
            "p95": "66.73",
            "p99": "63.94",
            "min": "63.43",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "76.64",
            "p50": "74.19",
            "p95": "68.36",
            "p99": "63.69",
            "min": "63.53",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "211.69",
            "p50": "196.16",
            "p95": "164.64",
            "p99": "135.96",
            "min": "133.22",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "103.84",
            "p50": "99.75",
            "p95": "87.68",
            "p99": "69.02",
            "min": "65.17",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.79",
            "p50": "105.37",
            "p95": "91.28",
            "p99": "79.88",
            "min": "76.88",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "141.54",
            "p50": "134.07",
            "p95": "112.19",
            "p99": "103.28",
            "min": "102.87",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "142.81",
            "p50": "134.25",
            "p95": "114.49",
            "p99": "105.90",
            "min": "104.69",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "186.50",
            "p50": "173.59",
            "p95": "146.23",
            "p99": "124.77",
            "min": "122.02",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "185.34",
            "p50": "173.93",
            "p95": "140.76",
            "p99": "127.89",
            "min": "127.32",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "185.86",
            "p50": "173.06",
            "p95": "135.95",
            "p99": "131.43",
            "min": "131.31",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.04",
            "p50": "121.82",
            "p95": "106.26",
            "p99": "61.49",
            "min": "51.80",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "206.92",
            "p50": "188.75",
            "p95": "153.21",
            "p99": "136.71",
            "min": "134.84",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "191.45",
            "p50": "175.72",
            "p95": "142.68",
            "p99": "132.34",
            "min": "132.23",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "72.74",
            "p50": "69.00",
            "p95": "63.97",
            "p99": "61.47",
            "min": "61.16",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "133.74",
            "p50": "125.32",
            "p95": "104.64",
            "p99": "111.56",
            "min": "99.62",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "216.74",
            "p50": "191.30",
            "p95": "157.15",
            "p99": "159.99",
            "min": "146.68",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "171.32",
            "p50": "140.57",
            "p95": "134.37",
            "p99": "148.96",
            "min": "132.09",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "128.24",
            "p50": "118.50",
            "p95": "104.34",
            "p99": "112.45",
            "min": "100.53",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1043.89",
            "p50": "754.29",
            "p95": "438.56",
            "p99": "319.20",
            "min": "312.53",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1027.20",
            "p50": "742.49",
            "p95": "372.67",
            "p99": "301.16",
            "min": "298.06",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1148.77",
            "p50": "812.06",
            "p95": "457.64",
            "p99": "356.75",
            "min": "352.89",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1067.73",
            "p50": "795.02",
            "p95": "381.44",
            "p99": "327.27",
            "min": "312.94",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1045.68",
            "p50": "747.03",
            "p95": "408.75",
            "p99": "303.35",
            "min": "303.35",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1003.98",
            "p50": "753.78",
            "p95": "429.57",
            "p99": "298.00",
            "min": "295.73",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "345.39",
            "p50": "301.84",
            "p95": "218.96",
            "p99": "199.78",
            "min": "198.73",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "337.94",
            "p50": "292.17",
            "p95": "220.78",
            "p99": "191.72",
            "min": "191.65",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "338.10",
            "p50": "303.18",
            "p95": "221.17",
            "p99": "195.96",
            "min": "194.08",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "366.04",
            "p50": "326.85",
            "p95": "232.02",
            "p99": "211.88",
            "min": "211.33",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "288.04",
            "p50": "256.98",
            "p95": "188.94",
            "p99": "173.28",
            "min": "173.05",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "294.89",
            "p50": "261.58",
            "p95": "204.38",
            "p99": "180.86",
            "min": "179.47",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "301.77",
            "p50": "263.24",
            "p95": "198.36",
            "p99": "164.69",
            "min": "159.02",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "301.58",
            "p50": "265.24",
            "p95": "218.36",
            "p99": "184.22",
            "min": "178.27",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "308.00",
            "p50": "261.64",
            "p95": "200.86",
            "p99": "176.47",
            "min": "174.35",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.69",
            "p50": "101.59",
            "p95": "89.91",
            "p99": "82.24",
            "min": "81.71",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.22",
            "p50": "101.29",
            "p95": "89.43",
            "p99": "81.79",
            "min": "81.44",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.26",
            "p50": "94.21",
            "p95": "84.83",
            "p99": "80.55",
            "min": "79.36",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "251.89",
            "p50": "227.00",
            "p95": "175.59",
            "p99": "153.78",
            "min": "153.01",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.32",
            "p50": "94.00",
            "p95": "82.12",
            "p99": "79.82",
            "min": "79.70",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "243.61",
            "p50": "224.68",
            "p95": "179.07",
            "p99": "143.08",
            "min": "132.54",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "189.32",
            "p50": "174.52",
            "p95": "149.03",
            "p99": "134.07",
            "min": "132.45",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "155.13",
            "p50": "146.39",
            "p95": "127.98",
            "p99": "112.13",
            "min": "111.29",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "443.32",
            "p50": "380.13",
            "p95": "271.81",
            "p99": "226.75",
            "min": "219.22",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4347.22",
            "p50": "1874.92",
            "p95": "517.61",
            "p99": "436.25",
            "min": "421.45",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "441.63",
            "p50": "376.06",
            "p95": "248.74",
            "p99": "195.97",
            "min": "174.08",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "13577.70",
            "p50": "2747.97",
            "p95": "942.97",
            "p99": "721.12",
            "min": "678.20",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3140.28",
            "p50": "1443.51",
            "p95": "458.53",
            "p99": "419.37",
            "min": "410.95",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "209.93",
            "p50": "190.73",
            "p95": "153.76",
            "p99": "137.85",
            "min": "129.27",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "236.29",
            "p50": "215.46",
            "p95": "181.62",
            "p99": "150.89",
            "min": "148.99",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "128.79",
            "p50": "122.50",
            "p95": "103.61",
            "p99": "98.95",
            "min": "98.74",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "210.63",
            "p50": "193.84",
            "p95": "151.55",
            "p99": "135.58",
            "min": "134.18",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "142.74",
            "p50": "134.12",
            "p95": "113.63",
            "p99": "105.00",
            "min": "104.93",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "175.25",
            "p50": "163.91",
            "p95": "138.38",
            "p99": "100.32",
            "min": "82.30",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "186.89",
            "p50": "173.75",
            "p95": "138.58",
            "p99": "83.41",
            "min": "79.34",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "185.98",
            "p50": "172.31",
            "p95": "140.65",
            "p99": "128.15",
            "min": "125.69",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "311.72",
            "p50": "244.88",
            "p95": "142.99",
            "p99": "140.33",
            "min": "131.31",
            "n": "94",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "144.65",
            "p50": "136.50",
            "p95": "110.72",
            "p99": "100.01",
            "min": "85.92",
            "n": "75",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "87.50",
            "p50": "84.03",
            "p95": "77.02",
            "p99": "74.83",
            "min": "74.77",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "88.80",
            "p50": "84.93",
            "p95": "81.55",
            "p99": "80.05",
            "min": "79.92",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "88.44",
            "p50": "84.65",
            "p95": "80.16",
            "p99": "70.99",
            "min": "69.70",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "192.10",
            "p50": "182.88",
            "p95": "178.13",
            "p99": "159.28",
            "min": "159.18",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "94.65",
            "p50": "89.62",
            "p95": "85.30",
            "p99": "81.33",
            "min": "80.45",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.11",
            "p50": "107.53",
            "p95": "103.61",
            "p99": "101.49",
            "min": "101.06",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "123.43",
            "p50": "120.62",
            "p95": "109.13",
            "p99": "102.71",
            "min": "102.50",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "123.51",
            "p50": "121.59",
            "p95": "117.89",
            "p99": "115.02",
            "min": "114.43",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "98.74",
            "p50": "97.41",
            "p95": "95.78",
            "p99": "92.54",
            "min": "91.87",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.73",
            "p50": "95.66",
            "p95": "93.26",
            "p99": "89.37",
            "min": "88.53",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.88",
            "p50": "95.73",
            "p95": "93.52",
            "p99": "90.35",
            "min": "90.28",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "125.38",
            "p50": "123.00",
            "p95": "120.33",
            "p99": "112.05",
            "min": "110.37",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "122.02",
            "p50": "113.76",
            "p95": "107.75",
            "p99": "99.63",
            "min": "98.79",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "116.18",
            "p50": "113.46",
            "p95": "108.69",
            "p99": "103.71",
            "min": "102.80",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "75.13",
            "p50": "71.41",
            "p95": "67.54",
            "p99": "63.62",
            "min": "63.05",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "98.34",
            "p50": "96.94",
            "p95": "91.12",
            "p99": "93.47",
            "min": "90.84",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "59.54",
            "p50": "57.34",
            "p95": "55.87",
            "p99": "54.94",
            "min": "53.87",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "159.18",
            "p50": "127.11",
            "p95": "119.02",
            "p99": "136.19",
            "min": "118.85",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "109.65",
            "p50": "107.80",
            "p95": "104.32",
            "p99": "106.06",
            "min": "103.35",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "373.63",
            "p50": "365.24",
            "p95": "310.17",
            "p99": "270.01",
            "min": "269.84",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "510.56",
            "p50": "482.47",
            "p95": "446.15",
            "p99": "395.64",
            "min": "381.58",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "369.07",
            "p50": "360.95",
            "p95": "320.31",
            "p99": "293.72",
            "min": "288.85",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "374.11",
            "p50": "363.55",
            "p95": "338.86",
            "p99": "306.20",
            "min": "291.89",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "374.36",
            "p50": "365.92",
            "p95": "329.26",
            "p99": "287.83",
            "min": "271.94",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "465.60",
            "p50": "445.59",
            "p95": "411.51",
            "p99": "374.77",
            "min": "351.64",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "96.49",
            "p50": "93.39",
            "p95": "90.17",
            "p99": "87.84",
            "min": "87.61",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "96.86",
            "p50": "93.87",
            "p95": "91.21",
            "p99": "87.97",
            "min": "87.71",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "95.46",
            "p50": "92.96",
            "p95": "90.52",
            "p99": "88.63",
            "min": "88.51",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "87.62",
            "p50": "85.58",
            "p95": "84.16",
            "p99": "82.12",
            "min": "82.10",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.94",
            "p50": "86.06",
            "p95": "85.08",
            "p99": "82.34",
            "min": "81.93",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "89.05",
            "p50": "86.25",
            "p95": "83.34",
            "p99": "79.54",
            "min": "78.85",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "84.91",
            "p50": "82.32",
            "p95": "79.56",
            "p99": "76.76",
            "min": "76.28",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "84.52",
            "p50": "82.01",
            "p95": "79.18",
            "p99": "78.08",
            "min": "77.94",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "84.44",
            "p50": "81.85",
            "p95": "79.21",
            "p99": "78.04",
            "min": "77.98",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "371.44",
            "p50": "357.59",
            "p95": "287.89",
            "p99": "250.92",
            "min": "241.37",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "369.85",
            "p50": "355.18",
            "p95": "273.60",
            "p99": "182.23",
            "min": "159.95",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "154.45",
            "p50": "151.87",
            "p95": "135.90",
            "p99": "129.87",
            "min": "128.92",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "474.08",
            "p50": "455.44",
            "p95": "337.13",
            "p99": "266.91",
            "min": "263.98",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "154.17",
            "p50": "151.43",
            "p95": "133.93",
            "p99": "122.20",
            "min": "120.77",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "276.30",
            "p50": "267.34",
            "p95": "225.39",
            "p99": "179.05",
            "min": "178.18",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.99",
            "p50": "96.19",
            "p95": "90.44",
            "p99": "84.56",
            "min": "84.01",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "186.52",
            "p50": "183.91",
            "p95": "179.64",
            "p99": "175.42",
            "min": "174.31",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "397.19",
            "p50": "303.56",
            "p95": "225.12",
            "p99": "196.35",
            "min": "195.02",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7823.31",
            "p50": "1974.44",
            "p95": "873.93",
            "p99": "596.78",
            "min": "575.76",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "380.79",
            "p50": "297.89",
            "p95": "238.37",
            "p99": "219.03",
            "min": "215.23",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "27710.38",
            "p50": "8829.55",
            "p95": "2476.92",
            "p99": "1975.46",
            "min": "1893.41",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4613.63",
            "p50": "2926.89",
            "p95": "1725.95",
            "p99": "1006.53",
            "min": "831.54",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "318.19",
            "p50": "260.29",
            "p95": "209.93",
            "p99": "158.95",
            "min": "152.81",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "152.23",
            "p50": "130.35",
            "p95": "116.22",
            "p99": "112.19",
            "min": "111.68",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "122.81",
            "p50": "119.76",
            "p95": "96.48",
            "p99": "92.74",
            "min": "92.14",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "129.21",
            "p50": "120.54",
            "p95": "104.83",
            "p99": "103.92",
            "min": "103.89",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "124.26",
            "p50": "119.44",
            "p95": "117.02",
            "p99": "114.48",
            "min": "113.99",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "155.17",
            "p50": "149.34",
            "p95": "146.50",
            "p99": "139.23",
            "min": "137.79",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "96.40",
            "p50": "93.18",
            "p95": "77.54",
            "p99": "76.34",
            "min": "76.21",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "117.44",
            "p50": "113.15",
            "p95": "109.13",
            "p99": "107.27",
            "min": "107.00",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "948.66",
            "p50": "863.45",
            "p95": "641.69",
            "p99": "535.32",
            "min": "527.84",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "124.54",
            "p50": "120.68",
            "p95": "101.72",
            "p99": "94.05",
            "min": "93.83",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}