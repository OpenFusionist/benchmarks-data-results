{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "170.04",
            "p50": "168.59",
            "p95": "157.21",
            "p99": "152.50",
            "min": "152.38",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "170.35",
            "p50": "169.09",
            "p95": "167.12",
            "p99": "165.93",
            "min": "165.93",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "170.05",
            "p50": "168.57",
            "p95": "164.00",
            "p99": "162.20",
            "min": "162.07",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "758.39",
            "p50": "746.11",
            "p95": "509.51",
            "p99": "489.63",
            "min": "489.45",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "399.65",
            "p50": "394.28",
            "p95": "385.14",
            "p99": "368.73",
            "min": "368.24",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "434.90",
            "p50": "429.03",
            "p95": "416.70",
            "p99": "358.30",
            "min": "340.72",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "325.38",
            "p50": "318.68",
            "p95": "298.04",
            "p99": "291.48",
            "min": "291.12",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "187.68",
            "p50": "184.94",
            "p95": "181.41",
            "p99": "179.72",
            "min": "179.71",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "271.16",
            "p50": "259.93",
            "p95": "242.95",
            "p99": "231.87",
            "min": "229.38",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "264.66",
            "p50": "255.02",
            "p95": "242.57",
            "p99": "239.79",
            "min": "239.77",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "259.71",
            "p50": "256.72",
            "p95": "246.19",
            "p99": "244.50",
            "min": "244.32",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "191.30",
            "p50": "187.77",
            "p95": "184.48",
            "p99": "115.92",
            "min": "99.01",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "319.16",
            "p50": "315.26",
            "p95": "303.14",
            "p99": "299.73",
            "min": "299.61",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "308.35",
            "p50": "303.34",
            "p95": "284.56",
            "p99": "271.63",
            "min": "271.09",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "7560.14",
            "p50": "5753.62",
            "p95": "2445.82",
            "p99": "1606.38",
            "min": "1589.80",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2442.24",
            "p50": "2140.58",
            "p95": "1064.93",
            "p99": "1432.07",
            "min": "888.13",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "289.85",
            "p50": "244.83",
            "p95": "222.92",
            "p99": "222.98",
            "min": "207.29",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "8220.11",
            "p50": "3681.67",
            "p95": "1085.52",
            "p99": "4043.37",
            "min": "892.50",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "8154.54",
            "p50": "4389.54",
            "p95": "2110.28",
            "p99": "4419.22",
            "min": "1601.34",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1821.71",
            "p50": "1664.57",
            "p95": "581.85",
            "p99": "547.47",
            "min": "544.90",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "19800.68",
            "p50": "4622.25",
            "p95": "779.65",
            "p99": "761.92",
            "min": "760.02",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1306.35",
            "p50": "1190.37",
            "p95": "484.98",
            "p99": "463.04",
            "min": "458.62",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2132.09",
            "p50": "1986.97",
            "p95": "1483.87",
            "p99": "559.52",
            "min": "558.79",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2141.02",
            "p50": "1998.68",
            "p95": "520.58",
            "p99": "401.05",
            "min": "392.78",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "6230.20",
            "p50": "5034.42",
            "p95": "780.73",
            "p99": "738.52",
            "min": "730.87",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "297.43",
            "p50": "261.53",
            "p95": "144.89",
            "p99": "71.65",
            "min": "53.52",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "495.30",
            "p50": "421.50",
            "p95": "385.89",
            "p99": "108.08",
            "min": "105.98",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "345.35",
            "p50": "290.04",
            "p95": "58.51",
            "p99": "55.69",
            "min": "55.41",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "416.56",
            "p50": "369.86",
            "p95": "158.74",
            "p99": "59.75",
            "min": "54.27",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "38317.11",
            "p50": "8425.17",
            "p95": "2219.59",
            "p99": "1204.45",
            "min": "1065.33",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "369.37",
            "p50": "356.52",
            "p95": "302.35",
            "p99": "285.85",
            "min": "282.88",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "355.02",
            "p50": "340.20",
            "p95": "284.63",
            "p99": "281.42",
            "min": "281.07",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "355.65",
            "p50": "340.97",
            "p95": "287.60",
            "p99": "277.39",
            "min": "275.33",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "358.90",
            "p50": "341.20",
            "p95": "287.44",
            "p99": "98.13",
            "min": "71.60",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "14875.99",
            "p50": "7623.38",
            "p95": "2764.95",
            "p99": "1561.50",
            "min": "1398.29",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "15066.69",
            "p50": "8269.77",
            "p95": "2575.99",
            "p99": "856.49",
            "min": "127.13",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "14611.62",
            "p50": "6859.86",
            "p95": "2553.96",
            "p99": "138.20",
            "min": "82.62",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "15465.69",
            "p50": "6908.01",
            "p95": "2539.98",
            "p99": "208.93",
            "min": "49.86",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "14526.97",
            "p50": "6224.25",
            "p95": "2480.78",
            "p99": "1575.41",
            "min": "1559.16",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "15024.30",
            "p50": "7093.06",
            "p95": "2624.23",
            "p99": "2013.56",
            "min": "1573.59",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "264.54",
            "p50": "254.64",
            "p95": "238.86",
            "p99": "184.41",
            "min": "172.71",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "539.04",
            "p50": "531.76",
            "p95": "518.22",
            "p99": "488.31",
            "min": "487.98",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1184.24",
            "p50": "1145.77",
            "p95": "380.16",
            "p99": "359.97",
            "min": "359.28",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "19912.93",
            "p50": "9212.89",
            "p95": "2559.04",
            "p99": "1481.57",
            "min": "1479.52",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1103.39",
            "p50": "1067.28",
            "p95": "350.19",
            "p99": "335.34",
            "min": "331.02",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "48966.25",
            "p50": "9269.30",
            "p95": "2658.92",
            "p99": "1595.64",
            "min": "1490.97",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15864.04",
            "p50": "7257.14",
            "p95": "2502.78",
            "p99": "1702.67",
            "min": "1639.10",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "524.44",
            "p50": "504.52",
            "p95": "438.48",
            "p99": "415.60",
            "min": "407.52",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "518.64",
            "p50": "507.70",
            "p95": "478.70",
            "p99": "472.63",
            "min": "471.47",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "205.29",
            "p50": "202.40",
            "p95": "198.53",
            "p99": "188.33",
            "min": "185.44",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "435.59",
            "p50": "425.82",
            "p95": "410.66",
            "p99": "214.77",
            "min": "144.08",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "204.99",
            "p50": "201.79",
            "p95": "195.51",
            "p99": "190.50",
            "min": "189.69",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "328.78",
            "p50": "322.43",
            "p95": "308.73",
            "p99": "250.78",
            "min": "223.78",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "272.04",
            "p50": "267.11",
            "p95": "253.30",
            "p99": "248.82",
            "min": "248.48",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "520.44",
            "p50": "505.49",
            "p95": "485.23",
            "p99": "481.76",
            "min": "481.50",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1476.27",
            "p50": "1186.92",
            "p95": "862.41",
            "p99": "813.03",
            "min": "803.00",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "318.08",
            "p50": "314.02",
            "p95": "302.21",
            "p99": "295.85",
            "min": "295.63",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.40",
            "p50": "84.95",
            "p95": "76.84",
            "p99": "74.51",
            "min": "74.35",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "81.17",
            "p50": "78.03",
            "p95": "72.02",
            "p99": "70.15",
            "min": "70.13",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "82.36",
            "p50": "79.51",
            "p95": "72.97",
            "p99": "69.49",
            "min": "69.29",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "225.32",
            "p50": "208.09",
            "p95": "172.27",
            "p99": "161.88",
            "min": "161.73",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "175.10",
            "p50": "162.97",
            "p95": "142.69",
            "p99": "133.65",
            "min": "133.52",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "181.97",
            "p50": "170.03",
            "p95": "144.62",
            "p99": "139.08",
            "min": "137.99",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "171.93",
            "p50": "156.53",
            "p95": "131.68",
            "p99": "125.98",
            "min": "125.34",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "169.68",
            "p50": "155.73",
            "p95": "136.78",
            "p99": "121.62",
            "min": "119.28",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "191.35",
            "p50": "177.13",
            "p95": "146.87",
            "p99": "134.48",
            "min": "133.31",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "172.05",
            "p50": "160.02",
            "p95": "138.96",
            "p99": "132.93",
            "min": "132.91",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "193.04",
            "p50": "177.53",
            "p95": "151.94",
            "p99": "146.45",
            "min": "146.39",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "140.92",
            "p50": "131.27",
            "p95": "113.64",
            "p99": "97.81",
            "min": "95.96",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "219.12",
            "p50": "201.68",
            "p95": "164.22",
            "p99": "144.43",
            "min": "140.61",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "171.17",
            "p50": "158.22",
            "p95": "137.96",
            "p99": "118.81",
            "min": "118.76",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.12",
            "p50": "64.92",
            "p95": "59.73",
            "p99": "58.19",
            "min": "57.96",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "140.20",
            "p50": "128.21",
            "p95": "113.26",
            "p99": "121.77",
            "min": "111.84",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "399.21",
            "p50": "310.02",
            "p95": "236.51",
            "p99": "235.59",
            "min": "197.21",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "172.67",
            "p50": "140.04",
            "p95": "132.78",
            "p99": "143.99",
            "min": "122.36",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "128.68",
            "p50": "122.52",
            "p95": "111.30",
            "p99": "118.49",
            "min": "110.81",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1169.17",
            "p50": "907.65",
            "p95": "521.36",
            "p99": "419.96",
            "min": "415.52",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1045.96",
            "p50": "782.24",
            "p95": "517.77",
            "p99": "394.73",
            "min": "360.30",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1345.60",
            "p50": "982.16",
            "p95": "547.69",
            "p99": "453.11",
            "min": "451.13",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1244.60",
            "p50": "914.85",
            "p95": "517.64",
            "p99": "423.28",
            "min": "421.35",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1201.55",
            "p50": "918.65",
            "p95": "536.25",
            "p99": "436.17",
            "min": "421.27",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1067.46",
            "p50": "849.43",
            "p95": "517.94",
            "p99": "413.44",
            "min": "407.41",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "647.46",
            "p50": "518.00",
            "p95": "401.68",
            "p99": "325.92",
            "min": "318.25",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "665.76",
            "p50": "518.11",
            "p95": "375.01",
            "p99": "308.06",
            "min": "298.43",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "676.96",
            "p50": "510.65",
            "p95": "386.79",
            "p99": "331.15",
            "min": "330.21",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "656.62",
            "p50": "547.47",
            "p95": "386.24",
            "p99": "337.95",
            "min": "335.42",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "288.23",
            "p50": "264.01",
            "p95": "212.69",
            "p99": "192.57",
            "min": "191.99",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "541.94",
            "p50": "433.82",
            "p95": "313.91",
            "p99": "229.94",
            "min": "219.31",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "548.51",
            "p50": "446.90",
            "p95": "326.02",
            "p99": "233.78",
            "min": "218.71",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "563.08",
            "p50": "451.91",
            "p95": "350.05",
            "p99": "312.33",
            "min": "307.30",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "571.75",
            "p50": "462.80",
            "p95": "325.44",
            "p99": "316.64",
            "min": "316.63",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.51",
            "p50": "102.09",
            "p95": "93.69",
            "p99": "87.59",
            "min": "83.28",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.44",
            "p50": "101.60",
            "p95": "92.54",
            "p99": "88.02",
            "min": "86.24",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.77",
            "p50": "95.11",
            "p95": "85.77",
            "p99": "81.77",
            "min": "81.24",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "253.59",
            "p50": "231.85",
            "p95": "194.70",
            "p99": "179.92",
            "min": "176.64",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.36",
            "p50": "94.51",
            "p95": "86.35",
            "p99": "82.26",
            "min": "82.01",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "246.71",
            "p50": "226.56",
            "p95": "186.36",
            "p99": "172.86",
            "min": "172.16",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "195.62",
            "p50": "180.55",
            "p95": "154.67",
            "p99": "141.85",
            "min": "141.03",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "198.16",
            "p50": "185.48",
            "p95": "156.88",
            "p99": "126.52",
            "min": "110.73",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "358.85",
            "p50": "316.23",
            "p95": "240.35",
            "p99": "201.02",
            "min": "188.09",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5080.05",
            "p50": "2078.57",
            "p95": "927.54",
            "p99": "700.14",
            "min": "653.60",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "348.42",
            "p50": "304.57",
            "p95": "238.49",
            "p99": "214.91",
            "min": "211.65",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14247.88",
            "p50": "3546.36",
            "p95": "1357.80",
            "p99": "683.76",
            "min": "666.17",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3449.53",
            "p50": "1790.62",
            "p95": "755.80",
            "p99": "646.73",
            "min": "644.19",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "178.03",
            "p50": "164.49",
            "p95": "137.82",
            "p99": "124.87",
            "min": "121.63",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "245.78",
            "p50": "225.74",
            "p95": "189.03",
            "p99": "176.10",
            "min": "174.75",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "91.09",
            "p50": "88.27",
            "p95": "80.51",
            "p99": "65.27",
            "min": "62.71",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "222.62",
            "p50": "205.37",
            "p95": "178.82",
            "p99": "155.59",
            "min": "153.69",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "170.05",
            "p50": "158.82",
            "p95": "141.15",
            "p99": "134.76",
            "min": "133.90",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "200.55",
            "p50": "187.46",
            "p95": "159.83",
            "p99": "147.14",
            "min": "146.88",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "193.91",
            "p50": "180.48",
            "p95": "154.74",
            "p99": "91.74",
            "min": "77.12",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "196.55",
            "p50": "182.37",
            "p95": "154.71",
            "p99": "135.28",
            "min": "131.30",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1091.15",
            "p50": "888.21",
            "p95": "542.39",
            "p99": "484.22",
            "min": "483.46",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "174.19",
            "p50": "163.71",
            "p95": "125.83",
            "p99": "114.98",
            "min": "114.93",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.46",
            "p50": "188.76",
            "p95": "175.45",
            "p99": "163.40",
            "min": "161.76",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.56",
            "p50": "186.66",
            "p95": "168.76",
            "p99": "160.10",
            "min": "160.04",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "194.76",
            "p50": "189.00",
            "p95": "173.08",
            "p99": "162.35",
            "min": "162.03",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1187.66",
            "p50": "1058.04",
            "p95": "710.18",
            "p99": "582.53",
            "min": "546.70",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "700.44",
            "p50": "629.76",
            "p95": "484.49",
            "p99": "456.50",
            "min": "456.07",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "811.68",
            "p50": "754.04",
            "p95": "575.92",
            "p99": "425.63",
            "min": "423.50",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "724.57",
            "p50": "649.96",
            "p95": "476.63",
            "p99": "410.67",
            "min": "409.30",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "733.38",
            "p50": "656.32",
            "p95": "502.11",
            "p99": "417.68",
            "min": "414.88",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "834.78",
            "p50": "743.26",
            "p95": "544.77",
            "p99": "457.57",
            "min": "437.31",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "864.71",
            "p50": "798.29",
            "p95": "548.81",
            "p99": "492.54",
            "min": "487.49",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "863.86",
            "p50": "770.94",
            "p95": "524.69",
            "p99": "460.03",
            "min": "452.98",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "823.92",
            "p50": "735.86",
            "p95": "508.03",
            "p99": "436.80",
            "min": "435.65",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "841.33",
            "p50": "771.41",
            "p95": "560.38",
            "p99": "442.67",
            "min": "439.15",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "869.88",
            "p50": "788.51",
            "p95": "563.91",
            "p99": "453.18",
            "min": "451.73",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "64.50",
            "p50": "62.57",
            "p95": "60.55",
            "p99": "59.49",
            "min": "59.24",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "90.75",
            "p50": "88.62",
            "p95": "83.97",
            "p99": "85.35",
            "min": "82.45",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "500.69",
            "p50": "457.08",
            "p95": "353.05",
            "p99": "364.66",
            "min": "332.75",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "122.87",
            "p50": "95.76",
            "p95": "89.31",
            "p99": "103.63",
            "min": "89.11",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "85.22",
            "p50": "81.48",
            "p95": "78.86",
            "p99": "80.83",
            "min": "77.52",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1804.38",
            "p50": "1573.91",
            "p95": "827.58",
            "p99": "674.39",
            "min": "629.66",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1639.46",
            "p50": "1445.24",
            "p95": "839.05",
            "p99": "625.20",
            "min": "624.01",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2258.89",
            "p50": "1785.16",
            "p95": "896.14",
            "p99": "693.75",
            "min": "692.82",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2228.94",
            "p50": "1827.79",
            "p95": "944.89",
            "p99": "693.37",
            "min": "691.40",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2230.46",
            "p50": "1858.58",
            "p95": "912.99",
            "p99": "749.00",
            "min": "713.15",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1681.38",
            "p50": "1423.64",
            "p95": "815.08",
            "p99": "654.96",
            "min": "620.21",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "722.92",
            "p50": "639.83",
            "p95": "466.71",
            "p99": "414.59",
            "min": "414.04",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "737.70",
            "p50": "632.08",
            "p95": "503.57",
            "p99": "409.04",
            "min": "404.11",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "738.44",
            "p50": "647.65",
            "p95": "523.56",
            "p99": "473.35",
            "min": "460.94",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "746.79",
            "p50": "659.98",
            "p95": "522.84",
            "p99": "423.91",
            "min": "423.00",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.69",
            "p50": "85.57",
            "p95": "81.28",
            "p99": "79.43",
            "min": "78.75",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "648.91",
            "p50": "572.89",
            "p95": "432.44",
            "p99": "415.02",
            "min": "414.37",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "614.00",
            "p50": "541.91",
            "p95": "436.66",
            "p99": "383.83",
            "min": "379.96",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "608.42",
            "p50": "551.46",
            "p95": "433.02",
            "p99": "371.30",
            "min": "371.04",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "618.05",
            "p50": "551.98",
            "p95": "434.67",
            "p99": "412.86",
            "min": "411.00",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1939.43",
            "p50": "1601.35",
            "p95": "874.40",
            "p99": "627.10",
            "min": "609.80",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2222.33",
            "p50": "1789.99",
            "p95": "830.29",
            "p99": "725.04",
            "min": "696.36",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.87",
            "p50": "71.99",
            "p95": "69.07",
            "p99": "67.57",
            "min": "67.56",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9383.05",
            "p50": "4335.98",
            "p95": "2469.90",
            "p99": "2165.35",
            "min": "2008.68",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.87",
            "p50": "72.02",
            "p95": "69.69",
            "p99": "67.80",
            "min": "67.80",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "221.96",
            "p50": "216.32",
            "p95": "193.33",
            "p99": "181.07",
            "min": "180.64",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "862.65",
            "p50": "779.26",
            "p95": "524.17",
            "p99": "458.87",
            "min": "458.36",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.12",
            "p50": "608.18",
            "p95": "446.44",
            "p99": "381.00",
            "min": "378.34",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1062.39",
            "p50": "986.16",
            "p95": "657.31",
            "p99": "576.53",
            "min": "571.59",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "25979.12",
            "p50": "8705.04",
            "p95": "2811.26",
            "p99": "1976.58",
            "min": "1641.77",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1057.80",
            "p50": "941.48",
            "p95": "630.79",
            "p99": "526.41",
            "min": "525.51",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "55860.23",
            "p50": "9825.97",
            "p95": "2766.01",
            "p99": "1686.31",
            "min": "1591.99",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14862.74",
            "p50": "6100.94",
            "p95": "1283.81",
            "p99": "982.15",
            "min": "974.50",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "535.39",
            "p50": "475.38",
            "p95": "392.19",
            "p99": "326.23",
            "min": "315.15",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "977.12",
            "p50": "888.21",
            "p95": "650.84",
            "p99": "558.52",
            "min": "558.08",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "805.49",
            "p50": "731.23",
            "p95": "556.00",
            "p99": "426.94",
            "min": "400.13",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1200.61",
            "p50": "1114.30",
            "p95": "663.45",
            "p99": "529.87",
            "min": "520.91",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "728.32",
            "p50": "654.70",
            "p95": "501.34",
            "p99": "417.08",
            "min": "416.95",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1157.13",
            "p50": "1065.85",
            "p95": "695.26",
            "p99": "531.16",
            "min": "530.40",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "872.55",
            "p50": "771.56",
            "p95": "561.42",
            "p99": "465.55",
            "min": "462.92",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "906.88",
            "p50": "829.47",
            "p95": "560.62",
            "p99": "487.94",
            "min": "487.53",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2360.95",
            "p50": "1974.65",
            "p95": "1066.13",
            "p99": "959.49",
            "min": "945.92",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "832.65",
            "p50": "741.00",
            "p95": "519.23",
            "p99": "463.63",
            "min": "463.10",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "81.98",
            "p50": "79.01",
            "p95": "71.69",
            "p99": "67.79",
            "min": "67.78",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "75.39",
            "p50": "72.71",
            "p95": "67.19",
            "p99": "62.79",
            "min": "62.48",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "76.48",
            "p50": "74.25",
            "p95": "68.79",
            "p99": "64.71",
            "min": "64.47",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "210.05",
            "p50": "196.07",
            "p95": "160.58",
            "p99": "105.98",
            "min": "83.08",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "104.16",
            "p50": "99.61",
            "p95": "87.33",
            "p99": "83.16",
            "min": "83.05",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.32",
            "p50": "105.34",
            "p95": "94.57",
            "p99": "88.74",
            "min": "87.45",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "142.97",
            "p50": "135.06",
            "p95": "114.79",
            "p99": "106.27",
            "min": "105.86",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "143.68",
            "p50": "134.22",
            "p95": "111.17",
            "p99": "105.41",
            "min": "105.29",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "187.93",
            "p50": "173.37",
            "p95": "140.36",
            "p99": "132.01",
            "min": "131.11",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "186.82",
            "p50": "174.08",
            "p95": "144.74",
            "p99": "134.44",
            "min": "134.43",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "185.63",
            "p50": "174.21",
            "p95": "150.69",
            "p99": "93.99",
            "min": "84.12",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.35",
            "p50": "121.81",
            "p95": "104.71",
            "p99": "87.93",
            "min": "86.64",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "205.54",
            "p50": "190.13",
            "p95": "153.57",
            "p99": "137.17",
            "min": "136.37",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "191.37",
            "p50": "177.31",
            "p95": "148.72",
            "p99": "126.32",
            "min": "125.17",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "72.59",
            "p50": "69.00",
            "p95": "63.70",
            "p99": "60.46",
            "min": "60.38",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "133.88",
            "p50": "124.38",
            "p95": "104.89",
            "p99": "112.79",
            "min": "101.43",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "216.28",
            "p50": "193.96",
            "p95": "160.85",
            "p99": "158.15",
            "min": "144.51",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "170.45",
            "p50": "140.72",
            "p95": "133.41",
            "p99": "145.84",
            "min": "127.27",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "128.61",
            "p50": "117.79",
            "p95": "103.62",
            "p99": "113.51",
            "min": "102.11",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1050.78",
            "p50": "770.14",
            "p95": "470.70",
            "p99": "336.54",
            "min": "323.62",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1022.51",
            "p50": "733.30",
            "p95": "407.47",
            "p99": "297.03",
            "min": "296.74",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1154.61",
            "p50": "825.87",
            "p95": "465.37",
            "p99": "318.84",
            "min": "307.94",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1102.98",
            "p50": "781.99",
            "p95": "449.97",
            "p99": "342.50",
            "min": "321.02",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1047.44",
            "p50": "760.04",
            "p95": "429.37",
            "p99": "340.86",
            "min": "339.74",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1040.29",
            "p50": "757.28",
            "p95": "438.25",
            "p99": "340.00",
            "min": "309.35",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "341.06",
            "p50": "299.68",
            "p95": "222.77",
            "p99": "208.68",
            "min": "208.31",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "337.16",
            "p50": "298.19",
            "p95": "218.37",
            "p99": "178.63",
            "min": "172.71",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "341.01",
            "p50": "299.13",
            "p95": "233.11",
            "p99": "196.87",
            "min": "195.95",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "366.10",
            "p50": "323.97",
            "p95": "232.27",
            "p99": "205.74",
            "min": "204.46",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "286.63",
            "p50": "257.91",
            "p95": "197.84",
            "p99": "158.29",
            "min": "155.62",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "295.86",
            "p50": "259.41",
            "p95": "208.24",
            "p99": "181.12",
            "min": "180.12",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "289.91",
            "p50": "258.06",
            "p95": "195.61",
            "p99": "181.15",
            "min": "180.90",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "299.68",
            "p50": "260.66",
            "p95": "208.06",
            "p99": "190.18",
            "min": "189.99",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "300.40",
            "p50": "263.59",
            "p95": "209.73",
            "p99": "189.82",
            "min": "189.56",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.06",
            "p50": "101.28",
            "p95": "90.57",
            "p99": "84.27",
            "min": "82.03",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.85",
            "p50": "101.80",
            "p95": "90.09",
            "p99": "80.66",
            "min": "78.34",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.19",
            "p50": "94.54",
            "p95": "84.62",
            "p99": "78.42",
            "min": "78.02",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "250.22",
            "p50": "231.08",
            "p95": "175.52",
            "p99": "156.91",
            "min": "151.66",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.82",
            "p50": "94.09",
            "p95": "86.09",
            "p99": "78.27",
            "min": "78.05",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "243.43",
            "p50": "224.36",
            "p95": "180.00",
            "p99": "151.92",
            "min": "151.13",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "188.51",
            "p50": "175.09",
            "p95": "144.85",
            "p99": "121.64",
            "min": "118.19",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "155.34",
            "p50": "145.05",
            "p95": "124.71",
            "p99": "100.23",
            "min": "91.58",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "444.77",
            "p50": "385.30",
            "p95": "255.87",
            "p99": "222.52",
            "min": "222.12",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4884.80",
            "p50": "1847.26",
            "p95": "509.53",
            "p99": "437.97",
            "min": "420.45",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "440.96",
            "p50": "379.27",
            "p95": "257.24",
            "p99": "218.79",
            "min": "211.65",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "13381.88",
            "p50": "2654.01",
            "p95": "935.81",
            "p99": "566.50",
            "min": "392.63",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2919.71",
            "p50": "1372.52",
            "p95": "471.46",
            "p99": "390.70",
            "min": "383.39",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "208.06",
            "p50": "193.49",
            "p95": "158.39",
            "p99": "139.14",
            "min": "138.81",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "236.19",
            "p50": "217.08",
            "p95": "176.63",
            "p99": "152.07",
            "min": "149.54",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "129.06",
            "p50": "122.60",
            "p95": "107.38",
            "p99": "90.89",
            "min": "86.04",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "211.01",
            "p50": "194.20",
            "p95": "151.27",
            "p99": "139.85",
            "min": "137.99",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "142.41",
            "p50": "134.61",
            "p95": "115.53",
            "p99": "111.26",
            "min": "110.80",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "175.80",
            "p50": "163.66",
            "p95": "131.32",
            "p99": "79.54",
            "min": "52.94",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "187.18",
            "p50": "172.85",
            "p95": "145.34",
            "p99": "133.36",
            "min": "133.20",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "186.77",
            "p50": "173.34",
            "p95": "150.00",
            "p99": "136.31",
            "min": "132.73",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "298.12",
            "p50": "245.56",
            "p95": "151.02",
            "p99": "146.41",
            "min": "141.71",
            "n": "96",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "145.00",
            "p50": "136.66",
            "p95": "113.22",
            "p99": "115.43",
            "min": "107.09",
            "n": "77",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.64",
            "p50": "87.35",
            "p95": "80.28",
            "p99": "75.71",
            "min": "74.96",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "90.91",
            "p50": "88.58",
            "p95": "84.80",
            "p99": "80.41",
            "min": "80.14",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "89.21",
            "p50": "87.94",
            "p95": "81.30",
            "p99": "75.11",
            "min": "73.74",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "189.38",
            "p50": "182.17",
            "p95": "172.97",
            "p99": "163.60",
            "min": "162.62",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "92.02",
            "p50": "88.88",
            "p95": "85.55",
            "p99": "83.93",
            "min": "83.82",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "111.09",
            "p50": "107.60",
            "p95": "103.77",
            "p99": "101.88",
            "min": "101.72",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "125.53",
            "p50": "122.50",
            "p95": "107.00",
            "p99": "99.44",
            "min": "99.37",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "125.85",
            "p50": "122.86",
            "p95": "118.42",
            "p99": "112.83",
            "min": "112.63",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "98.65",
            "p50": "93.88",
            "p95": "78.10",
            "p99": "76.59",
            "min": "76.34",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "98.37",
            "p50": "96.00",
            "p95": "91.67",
            "p99": "88.52",
            "min": "88.45",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.84",
            "p50": "96.21",
            "p95": "93.24",
            "p99": "90.21",
            "min": "90.09",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.50",
            "p50": "122.91",
            "p95": "119.09",
            "p99": "112.32",
            "min": "111.53",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "120.94",
            "p50": "118.36",
            "p95": "50.03",
            "p99": "49.65",
            "min": "49.63",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "116.78",
            "p50": "113.60",
            "p95": "108.61",
            "p99": "101.45",
            "min": "100.54",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "75.90",
            "p50": "73.10",
            "p95": "69.33",
            "p99": "62.50",
            "min": "61.01",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "98.47",
            "p50": "97.32",
            "p95": "94.28",
            "p99": "90.33",
            "min": "85.94",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "59.77",
            "p50": "58.08",
            "p95": "48.70",
            "p99": "49.34",
            "min": "46.90",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "159.22",
            "p50": "127.94",
            "p95": "120.05",
            "p99": "136.45",
            "min": "119.28",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "109.90",
            "p50": "108.33",
            "p95": "107.27",
            "p99": "106.58",
            "min": "104.08",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "379.29",
            "p50": "366.38",
            "p95": "326.00",
            "p99": "299.57",
            "min": "293.07",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "513.11",
            "p50": "483.59",
            "p95": "471.38",
            "p99": "427.22",
            "min": "424.70",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "375.60",
            "p50": "362.88",
            "p95": "311.78",
            "p99": "291.84",
            "min": "280.04",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "376.73",
            "p50": "365.88",
            "p95": "313.49",
            "p99": "284.53",
            "min": "273.95",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "379.30",
            "p50": "366.63",
            "p95": "311.25",
            "p99": "298.06",
            "min": "292.67",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "471.70",
            "p50": "448.11",
            "p95": "388.97",
            "p99": "332.36",
            "min": "317.92",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "97.59",
            "p50": "94.76",
            "p95": "80.22",
            "p99": "74.98",
            "min": "73.96",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "98.01",
            "p50": "95.22",
            "p95": "80.61",
            "p99": "79.72",
            "min": "79.70",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "96.76",
            "p50": "94.28",
            "p95": "79.76",
            "p99": "78.87",
            "min": "78.80",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "89.14",
            "p50": "87.07",
            "p95": "75.88",
            "p99": "73.94",
            "min": "73.84",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.94",
            "p50": "86.41",
            "p95": "85.44",
            "p99": "82.50",
            "min": "81.49",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "89.90",
            "p50": "87.47",
            "p95": "70.41",
            "p99": "68.04",
            "min": "67.55",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "85.48",
            "p50": "83.37",
            "p95": "68.51",
            "p99": "67.97",
            "min": "67.92",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "85.28",
            "p50": "82.93",
            "p95": "68.26",
            "p99": "65.93",
            "min": "65.39",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "85.22",
            "p50": "83.21",
            "p95": "68.39",
            "p99": "67.88",
            "min": "67.84",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "373.40",
            "p50": "359.89",
            "p95": "281.63",
            "p99": "225.36",
            "min": "193.84",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "372.88",
            "p50": "362.20",
            "p95": "314.47",
            "p99": "279.22",
            "min": "272.93",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.62",
            "p50": "152.84",
            "p95": "139.38",
            "p99": "125.50",
            "min": "125.11",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "482.84",
            "p50": "464.08",
            "p95": "377.91",
            "p99": "276.27",
            "min": "269.74",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "155.21",
            "p50": "152.92",
            "p95": "133.44",
            "p99": "119.65",
            "min": "116.16",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "277.80",
            "p50": "272.25",
            "p95": "234.06",
            "p99": "220.89",
            "min": "218.68",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.53",
            "p50": "96.50",
            "p95": "90.57",
            "p99": "83.87",
            "min": "83.68",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "183.95",
            "p50": "173.50",
            "p95": "170.58",
            "p99": "156.74",
            "min": "151.58",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "402.28",
            "p50": "341.01",
            "p95": "246.69",
            "p99": "219.09",
            "min": "218.00",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7291.88",
            "p50": "2349.90",
            "p95": "971.16",
            "p99": "462.30",
            "min": "348.48",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "434.33",
            "p50": "364.78",
            "p95": "276.92",
            "p99": "226.45",
            "min": "208.79",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "29887.71",
            "p50": "9869.58",
            "p95": "2782.07",
            "p99": "1803.22",
            "min": "992.00",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4651.77",
            "p50": "3022.76",
            "p95": "1750.56",
            "p99": "966.15",
            "min": "829.69",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "356.98",
            "p50": "317.73",
            "p95": "230.00",
            "p99": "197.91",
            "min": "195.55",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "154.06",
            "p50": "138.67",
            "p95": "123.25",
            "p99": "111.22",
            "min": "108.86",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "122.86",
            "p50": "107.80",
            "p95": "99.39",
            "p99": "96.95",
            "min": "96.63",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "136.52",
            "p50": "121.04",
            "p95": "118.13",
            "p99": "108.25",
            "min": "105.31",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "125.42",
            "p50": "118.80",
            "p95": "112.48",
            "p99": "110.30",
            "min": "110.08",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "173.06",
            "p50": "147.85",
            "p95": "141.84",
            "p99": "127.52",
            "min": "116.72",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "94.84",
            "p50": "92.63",
            "p95": "81.04",
            "p99": "79.01",
            "min": "78.94",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "117.69",
            "p50": "108.90",
            "p95": "105.28",
            "p99": "103.46",
            "min": "103.26",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "984.88",
            "p50": "899.90",
            "p95": "327.09",
            "p99": "317.42",
            "min": "317.12",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "124.80",
            "p50": "115.64",
            "p95": "104.13",
            "p99": "101.60",
            "min": "101.35",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}