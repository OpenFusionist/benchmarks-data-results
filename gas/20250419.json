{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "113.37",
            "p50": "108.82",
            "p95": "98.86",
            "p99": "94.67",
            "min": "94.60",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1104.04",
            "p50": "924.14",
            "p95": "603.04",
            "p99": "501.85",
            "min": "500.34",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "114.78",
            "p50": "109.81",
            "p95": "101.32",
            "p99": "98.10",
            "min": "97.96",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "755.19",
            "p50": "678.87",
            "p95": "446.14",
            "p99": "428.00",
            "min": "426.57",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "400.70",
            "p50": "368.23",
            "p95": "305.88",
            "p99": "278.69",
            "min": "275.76",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "426.26",
            "p50": "390.88",
            "p95": "311.58",
            "p99": "291.28",
            "min": "290.36",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "289.86",
            "p50": "272.17",
            "p95": "193.23",
            "p99": "186.50",
            "min": "185.39",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "183.68",
            "p50": "172.68",
            "p95": "156.99",
            "p99": "152.22",
            "min": "151.76",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "254.50",
            "p50": "239.14",
            "p95": "216.80",
            "p99": "195.82",
            "min": "194.17",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "261.73",
            "p50": "246.67",
            "p95": "217.26",
            "p99": "209.22",
            "min": "208.89",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "258.20",
            "p50": "240.23",
            "p95": "213.74",
            "p99": "201.27",
            "min": "200.81",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "201.10",
            "p50": "192.07",
            "p95": "170.27",
            "p99": "164.82",
            "min": "164.63",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "334.71",
            "p50": "308.05",
            "p95": "254.79",
            "p99": "243.53",
            "min": "243.32",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "297.71",
            "p50": "276.44",
            "p95": "243.59",
            "p99": "227.73",
            "min": "227.31",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8574.14",
            "p50": "3507.15",
            "p95": "2045.12",
            "p99": "1612.14",
            "min": "1609.22",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2998.21",
            "p50": "1701.00",
            "p95": "961.94",
            "p99": "1625.26",
            "min": "885.98",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "328.97",
            "p50": "298.78",
            "p95": "255.80",
            "p99": "252.31",
            "min": "234.33",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1414.07",
            "p50": "775.56",
            "p95": "367.56",
            "p99": "795.80",
            "min": "329.38",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7462.20",
            "p50": "3273.80",
            "p95": "1506.54",
            "p99": "4017.91",
            "min": "1419.58",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "814.38",
            "p50": "694.99",
            "p95": "509.32",
            "p99": "426.20",
            "min": "409.21",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "810.09",
            "p50": "712.47",
            "p95": "521.20",
            "p99": "436.03",
            "min": "432.94",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "945.70",
            "p50": "793.51",
            "p95": "571.52",
            "p99": "503.31",
            "min": "496.35",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2375.47",
            "p50": "1824.89",
            "p95": "909.72",
            "p99": "726.27",
            "min": "720.75",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2367.82",
            "p50": "1813.36",
            "p95": "979.01",
            "p99": "774.14",
            "min": "757.98",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "802.93",
            "p50": "718.97",
            "p95": "554.49",
            "p99": "494.42",
            "min": "492.07",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "169.79",
            "p50": "156.59",
            "p95": "144.78",
            "p99": "136.32",
            "min": "136.24",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "556.35",
            "p50": "490.93",
            "p95": "401.80",
            "p99": "335.80",
            "min": "334.88",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "169.27",
            "p50": "156.17",
            "p95": "148.38",
            "p99": "143.47",
            "min": "143.05",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "188.65",
            "p50": "175.01",
            "p95": "158.14",
            "p99": "153.00",
            "min": "152.99",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "32229.01",
            "p50": "8295.06",
            "p95": "2426.92",
            "p99": "711.66",
            "min": "214.46",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "416.93",
            "p50": "371.10",
            "p95": "299.80",
            "p99": "268.21",
            "min": "266.96",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "395.71",
            "p50": "354.21",
            "p95": "289.10",
            "p99": "256.56",
            "min": "251.72",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "399.89",
            "p50": "353.53",
            "p95": "291.84",
            "p99": "283.42",
            "min": "283.40",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "396.14",
            "p50": "356.77",
            "p95": "291.31",
            "p99": "281.01",
            "min": "280.24",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "16696.74",
            "p50": "5700.69",
            "p95": "2352.76",
            "p99": "1434.34",
            "min": "1392.46",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "16983.02",
            "p50": "5296.76",
            "p95": "2458.89",
            "p99": "1602.75",
            "min": "1497.25",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "15926.07",
            "p50": "5529.20",
            "p95": "2323.23",
            "p99": "1288.15",
            "min": "758.08",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "16631.05",
            "p50": "5253.32",
            "p95": "2345.55",
            "p99": "2059.96",
            "min": "1842.52",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "15834.39",
            "p50": "5108.53",
            "p95": "2317.55",
            "p99": "1807.63",
            "min": "1736.36",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "16768.84",
            "p50": "5345.86",
            "p95": "2379.60",
            "p99": "1501.25",
            "min": "1463.44",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "260.27",
            "p50": "241.67",
            "p95": "218.41",
            "p99": "196.58",
            "min": "193.49",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "517.14",
            "p50": "485.04",
            "p95": "370.56",
            "p99": "334.07",
            "min": "333.81",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1643.08",
            "p50": "1397.57",
            "p95": "374.71",
            "p99": "292.34",
            "min": "282.91",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "21809.27",
            "p50": "4604.98",
            "p95": "285.44",
            "p99": "254.38",
            "min": "247.75",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1391.22",
            "p50": "1167.05",
            "p95": "736.79",
            "p99": "615.70",
            "min": "596.18",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "53353.35",
            "p50": "8911.22",
            "p95": "2501.26",
            "p99": "2039.59",
            "min": "1713.92",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13943.35",
            "p50": "6021.64",
            "p95": "291.68",
            "p99": "260.73",
            "min": "256.50",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "556.11",
            "p50": "484.46",
            "p95": "389.31",
            "p99": "346.23",
            "min": "342.35",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "545.57",
            "p50": "498.04",
            "p95": "400.73",
            "p99": "352.56",
            "min": "352.01",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "200.03",
            "p50": "190.84",
            "p95": "171.43",
            "p99": "165.04",
            "min": "164.13",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "382.34",
            "p50": "353.68",
            "p95": "298.69",
            "p99": "269.91",
            "min": "268.41",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "199.57",
            "p50": "190.51",
            "p95": "174.69",
            "p99": "163.69",
            "min": "163.52",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "336.74",
            "p50": "319.29",
            "p95": "266.89",
            "p99": "245.68",
            "min": "242.66",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "254.92",
            "p50": "245.72",
            "p95": "216.37",
            "p99": "198.69",
            "min": "196.51",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "572.95",
            "p50": "520.14",
            "p95": "404.51",
            "p99": "358.30",
            "min": "355.01",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1469.24",
            "p50": "1222.18",
            "p95": "892.41",
            "p99": "674.91",
            "min": "651.48",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "286.49",
            "p50": "271.80",
            "p95": "244.88",
            "p99": "220.29",
            "min": "219.18",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "139.79",
            "p50": "132.15",
            "p95": "116.03",
            "p99": "104.83",
            "min": "102.68",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "140.47",
            "p50": "133.69",
            "p95": "119.37",
            "p99": "114.50",
            "min": "114.28",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "138.89",
            "p50": "132.78",
            "p95": "122.80",
            "p99": "112.67",
            "min": "112.06",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "249.32",
            "p50": "232.16",
            "p95": "199.64",
            "p99": "177.15",
            "min": "173.80",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "188.72",
            "p50": "175.68",
            "p95": "150.41",
            "p99": "119.35",
            "min": "114.71",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "200.70",
            "p50": "185.15",
            "p95": "160.09",
            "p99": "134.12",
            "min": "132.11",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "185.50",
            "p50": "172.95",
            "p95": "151.35",
            "p99": "142.60",
            "min": "142.53",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "183.50",
            "p50": "167.43",
            "p95": "152.87",
            "p99": "129.97",
            "min": "126.47",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "207.35",
            "p50": "193.50",
            "p95": "165.13",
            "p99": "134.05",
            "min": "130.92",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "181.38",
            "p50": "170.99",
            "p95": "150.17",
            "p99": "141.14",
            "min": "141.04",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "207.77",
            "p50": "193.10",
            "p95": "167.82",
            "p99": "135.27",
            "min": "131.67",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "146.23",
            "p50": "136.65",
            "p95": "124.31",
            "p99": "109.99",
            "min": "108.27",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "224.37",
            "p50": "210.98",
            "p95": "179.06",
            "p99": "135.82",
            "min": "123.22",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "181.26",
            "p50": "170.18",
            "p95": "142.29",
            "p99": "116.28",
            "min": "113.05",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "102.99",
            "p50": "95.33",
            "p95": "88.14",
            "p99": "85.88",
            "min": "85.55",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "138.40",
            "p50": "130.47",
            "p95": "118.02",
            "p99": "123.33",
            "min": "115.22",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "453.19",
            "p50": "347.32",
            "p95": "270.94",
            "p99": "249.53",
            "min": "201.76",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "177.94",
            "p50": "142.64",
            "p95": "134.45",
            "p99": "152.92",
            "min": "134.05",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "131.00",
            "p50": "124.98",
            "p95": "111.36",
            "p99": "116.90",
            "min": "106.27",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1187.40",
            "p50": "985.22",
            "p95": "615.95",
            "p99": "481.44",
            "min": "461.86",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1027.76",
            "p50": "888.07",
            "p95": "593.67",
            "p99": "433.24",
            "min": "431.34",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1424.05",
            "p50": "1112.96",
            "p95": "627.45",
            "p99": "473.74",
            "min": "438.33",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1328.92",
            "p50": "1028.28",
            "p95": "628.56",
            "p99": "523.35",
            "min": "487.27",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1270.68",
            "p50": "1022.22",
            "p95": "572.91",
            "p99": "459.97",
            "min": "452.58",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1069.83",
            "p50": "922.63",
            "p95": "510.23",
            "p99": "427.02",
            "min": "409.43",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "686.61",
            "p50": "567.23",
            "p95": "415.54",
            "p99": "288.86",
            "min": "272.94",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "685.71",
            "p50": "568.26",
            "p95": "432.58",
            "p99": "301.92",
            "min": "295.00",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "684.62",
            "p50": "581.37",
            "p95": "391.38",
            "p99": "299.82",
            "min": "282.81",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "697.41",
            "p50": "583.78",
            "p95": "421.55",
            "p99": "325.89",
            "min": "318.22",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "289.22",
            "p50": "265.07",
            "p95": "212.22",
            "p99": "198.44",
            "min": "196.74",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "607.49",
            "p50": "485.91",
            "p95": "354.58",
            "p99": "287.97",
            "min": "275.29",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "593.35",
            "p50": "489.89",
            "p95": "356.35",
            "p99": "269.79",
            "min": "259.12",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "610.55",
            "p50": "520.79",
            "p95": "389.99",
            "p99": "332.03",
            "min": "330.30",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "625.61",
            "p50": "524.23",
            "p95": "399.08",
            "p99": "327.45",
            "min": "325.35",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.19",
            "p50": "101.68",
            "p95": "93.75",
            "p99": "85.59",
            "min": "85.51",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.04",
            "p50": "101.46",
            "p95": "89.63",
            "p99": "87.78",
            "min": "87.66",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.65",
            "p50": "94.41",
            "p95": "88.27",
            "p99": "80.61",
            "min": "78.30",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "251.99",
            "p50": "235.93",
            "p95": "201.39",
            "p99": "170.60",
            "min": "167.63",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.16",
            "p50": "94.89",
            "p95": "86.61",
            "p99": "80.58",
            "min": "80.57",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "246.62",
            "p50": "228.09",
            "p95": "193.20",
            "p99": "169.89",
            "min": "165.88",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "209.32",
            "p50": "192.39",
            "p95": "159.84",
            "p99": "94.83",
            "min": "81.86",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "235.60",
            "p50": "221.15",
            "p95": "188.03",
            "p99": "98.67",
            "min": "43.40",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "526.23",
            "p50": "473.15",
            "p95": "361.38",
            "p99": "300.88",
            "min": "293.39",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "6010.41",
            "p50": "3009.98",
            "p95": "1388.91",
            "p99": "1133.18",
            "min": "1008.23",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "492.74",
            "p50": "436.95",
            "p95": "349.09",
            "p99": "288.33",
            "min": "278.81",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "17350.56",
            "p50": "4698.23",
            "p95": "1799.12",
            "p99": "918.44",
            "min": "834.84",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3528.39",
            "p50": "2371.59",
            "p95": "1222.37",
            "p99": "742.52",
            "min": "711.23",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "226.19",
            "p50": "192.56",
            "p95": "163.66",
            "p99": "145.98",
            "min": "142.49",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "260.20",
            "p50": "239.61",
            "p95": "203.10",
            "p99": "175.10",
            "min": "171.68",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "144.76",
            "p50": "138.25",
            "p95": "120.75",
            "p99": "95.40",
            "min": "94.25",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "243.44",
            "p50": "224.35",
            "p95": "188.08",
            "p99": "109.03",
            "min": "84.99",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "182.62",
            "p50": "170.84",
            "p95": "151.64",
            "p99": "143.44",
            "min": "143.04",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "220.61",
            "p50": "208.03",
            "p95": "179.78",
            "p99": "128.10",
            "min": "112.90",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "209.83",
            "p50": "194.93",
            "p95": "167.95",
            "p99": "156.41",
            "min": "155.42",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "207.64",
            "p50": "194.74",
            "p95": "161.56",
            "p99": "125.14",
            "min": "108.23",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1265.76",
            "p50": "1082.26",
            "p95": "755.16",
            "p99": "583.54",
            "min": "567.81",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "179.10",
            "p50": "169.28",
            "p95": "148.55",
            "p99": "137.71",
            "min": "137.44",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "192.81",
            "p50": "188.31",
            "p95": "180.73",
            "p99": "165.29",
            "min": "162.41",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "191.61",
            "p50": "187.54",
            "p95": "177.28",
            "p99": "168.56",
            "min": "167.57",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "192.67",
            "p50": "188.37",
            "p95": "178.84",
            "p99": "171.96",
            "min": "171.00",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1139.77",
            "p50": "1094.97",
            "p95": "792.30",
            "p99": "304.49",
            "min": "90.41",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "619.34",
            "p50": "602.02",
            "p95": "487.05",
            "p99": "355.45",
            "min": "334.11",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "669.78",
            "p50": "649.64",
            "p95": "570.30",
            "p99": "460.50",
            "min": "455.06",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "621.73",
            "p50": "605.32",
            "p95": "472.12",
            "p99": "418.12",
            "min": "416.50",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "773.67",
            "p50": "749.03",
            "p95": "654.92",
            "p99": "484.97",
            "min": "478.15",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "902.44",
            "p50": "876.66",
            "p95": "676.39",
            "p99": "510.01",
            "min": "451.47",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "851.25",
            "p50": "818.57",
            "p95": "649.21",
            "p99": "550.33",
            "min": "536.97",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "845.28",
            "p50": "822.62",
            "p95": "604.49",
            "p99": "521.36",
            "min": "508.87",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "837.07",
            "p50": "810.12",
            "p95": "586.18",
            "p99": "488.43",
            "min": "485.30",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "736.93",
            "p50": "715.57",
            "p95": "629.91",
            "p99": "519.10",
            "min": "505.85",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "842.23",
            "p50": "816.25",
            "p95": "584.34",
            "p99": "494.02",
            "min": "492.96",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "118.53",
            "p50": "112.64",
            "p95": "109.12",
            "p99": "104.94",
            "min": "104.11",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "95.11",
            "p50": "93.49",
            "p95": "89.74",
            "p99": "90.64",
            "min": "88.24",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "522.15",
            "p50": "495.57",
            "p95": "447.63",
            "p99": "407.78",
            "min": "380.95",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "128.76",
            "p50": "102.05",
            "p95": "94.80",
            "p99": "108.72",
            "min": "93.61",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "88.57",
            "p50": "86.74",
            "p95": "84.38",
            "p99": "85.21",
            "min": "82.67",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1822.47",
            "p50": "1751.69",
            "p95": "1186.86",
            "p99": "786.97",
            "min": "588.32",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1638.55",
            "p50": "1571.49",
            "p95": "1107.85",
            "p99": "945.20",
            "min": "864.51",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2268.62",
            "p50": "2160.36",
            "p95": "1228.65",
            "p99": "1017.29",
            "min": "946.11",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2285.98",
            "p50": "2149.10",
            "p95": "1553.57",
            "p99": "930.86",
            "min": "921.59",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2270.16",
            "p50": "2154.57",
            "p95": "1487.58",
            "p99": "965.21",
            "min": "879.46",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1686.47",
            "p50": "1611.58",
            "p95": "1026.87",
            "p99": "727.32",
            "min": "712.25",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "773.41",
            "p50": "734.86",
            "p95": "668.08",
            "p99": "594.51",
            "min": "587.95",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "772.44",
            "p50": "736.10",
            "p95": "608.21",
            "p99": "472.23",
            "min": "467.85",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "778.92",
            "p50": "742.85",
            "p95": "650.64",
            "p99": "605.57",
            "min": "598.38",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "772.93",
            "p50": "739.31",
            "p95": "655.86",
            "p99": "512.93",
            "min": "511.33",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.02",
            "p50": "85.38",
            "p95": "38.77",
            "p99": "38.15",
            "min": "38.13",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "721.26",
            "p50": "696.97",
            "p95": "607.73",
            "p99": "433.56",
            "min": "405.71",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "689.45",
            "p50": "656.49",
            "p95": "591.53",
            "p99": "531.49",
            "min": "525.69",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "693.13",
            "p50": "655.71",
            "p95": "585.19",
            "p99": "474.05",
            "min": "468.00",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "692.12",
            "p50": "652.85",
            "p95": "538.38",
            "p99": "437.09",
            "min": "426.86",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2440.82",
            "p50": "2302.44",
            "p95": "1204.25",
            "p99": "881.79",
            "min": "871.76",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2798.99",
            "p50": "2623.96",
            "p95": "1259.63",
            "p99": "918.94",
            "min": "870.07",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "105.32",
            "p50": "103.14",
            "p95": "98.69",
            "p99": "92.73",
            "min": "92.48",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "14983.56",
            "p50": "7492.95",
            "p95": "2416.77",
            "p99": "1597.82",
            "min": "1404.64",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "105.28",
            "p50": "103.16",
            "p95": "99.81",
            "p99": "96.54",
            "min": "95.67",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "6060.21",
            "p50": "5448.92",
            "p95": "2158.53",
            "p99": "1437.72",
            "min": "1391.51",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "864.69",
            "p50": "834.11",
            "p95": "722.67",
            "p99": "632.59",
            "min": "621.24",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "661.71",
            "p50": "644.20",
            "p95": "541.33",
            "p99": "427.09",
            "min": "384.01",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2194.09",
            "p50": "2034.88",
            "p95": "1288.68",
            "p99": "918.37",
            "min": "870.09",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "20278.68",
            "p50": "8349.53",
            "p95": "2327.89",
            "p99": "2161.72",
            "min": "2146.38",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2015.77",
            "p50": "1878.56",
            "p95": "1091.84",
            "p99": "692.80",
            "min": "623.78",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "80937.34",
            "p50": "9086.63",
            "p95": "2414.25",
            "p99": "1610.74",
            "min": "1361.98",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "16615.97",
            "p50": "8312.05",
            "p95": "2353.38",
            "p99": "1890.17",
            "min": "1858.59",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "686.59",
            "p50": "598.74",
            "p95": "519.78",
            "p99": "479.11",
            "min": "466.04",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "921.67",
            "p50": "894.95",
            "p95": "720.91",
            "p99": "554.79",
            "min": "518.89",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "831.31",
            "p50": "804.75",
            "p95": "659.58",
            "p99": "570.22",
            "min": "567.88",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1151.14",
            "p50": "1109.12",
            "p95": "840.21",
            "p99": "761.56",
            "min": "749.21",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "688.40",
            "p50": "671.27",
            "p95": "543.32",
            "p99": "475.59",
            "min": "470.44",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1139.15",
            "p50": "1101.19",
            "p95": "897.83",
            "p99": "580.82",
            "min": "502.51",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "806.52",
            "p50": "782.03",
            "p95": "660.70",
            "p99": "554.59",
            "min": "550.47",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "881.39",
            "p50": "851.04",
            "p95": "583.78",
            "p99": "448.01",
            "min": "446.09",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2196.44",
            "p50": "1982.74",
            "p95": "1636.03",
            "p99": "1315.87",
            "min": "1312.39",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "846.84",
            "p50": "819.62",
            "p95": "663.30",
            "p99": "511.06",
            "min": "492.12",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "121.78",
            "p50": "117.95",
            "p95": "103.53",
            "p99": "97.64",
            "min": "97.10",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "122.01",
            "p50": "118.07",
            "p95": "107.40",
            "p99": "98.54",
            "min": "97.83",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "121.26",
            "p50": "117.62",
            "p95": "108.29",
            "p99": "97.81",
            "min": "96.98",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "210.80",
            "p50": "199.54",
            "p95": "166.39",
            "p99": "149.96",
            "min": "143.63",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.85",
            "p50": "98.48",
            "p95": "87.54",
            "p99": "79.63",
            "min": "78.78",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "108.38",
            "p50": "104.07",
            "p95": "90.47",
            "p99": "83.89",
            "min": "83.18",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "138.88",
            "p50": "132.77",
            "p95": "113.29",
            "p99": "105.01",
            "min": "104.42",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "139.33",
            "p50": "131.62",
            "p95": "112.70",
            "p99": "105.98",
            "min": "105.59",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "181.42",
            "p50": "170.34",
            "p95": "137.82",
            "p99": "125.96",
            "min": "125.20",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "179.52",
            "p50": "167.30",
            "p95": "146.05",
            "p99": "135.23",
            "min": "134.03",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "178.95",
            "p50": "166.39",
            "p95": "139.16",
            "p99": "127.65",
            "min": "127.41",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.59",
            "p50": "121.64",
            "p95": "106.04",
            "p99": "98.50",
            "min": "98.48",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "203.66",
            "p50": "190.38",
            "p95": "147.18",
            "p99": "138.55",
            "min": "138.29",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "185.14",
            "p50": "172.37",
            "p95": "144.81",
            "p99": "132.37",
            "min": "132.30",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "74.32",
            "p50": "71.11",
            "p95": "65.14",
            "p99": "62.87",
            "min": "62.62",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "132.48",
            "p50": "124.58",
            "p95": "106.09",
            "p99": "111.74",
            "min": "100.58",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "211.61",
            "p50": "193.20",
            "p95": "154.24",
            "p99": "155.67",
            "min": "142.55",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "165.42",
            "p50": "141.11",
            "p95": "133.64",
            "p99": "146.85",
            "min": "132.84",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "127.74",
            "p50": "119.24",
            "p95": "105.63",
            "p99": "112.95",
            "min": "101.79",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1030.15",
            "p50": "760.25",
            "p95": "411.47",
            "p99": "351.27",
            "min": "317.83",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1015.14",
            "p50": "739.09",
            "p95": "413.00",
            "p99": "300.34",
            "min": "286.82",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1127.41",
            "p50": "832.18",
            "p95": "456.66",
            "p99": "308.75",
            "min": "301.83",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1070.53",
            "p50": "771.82",
            "p95": "452.62",
            "p99": "327.05",
            "min": "301.81",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1022.02",
            "p50": "788.36",
            "p95": "498.00",
            "p99": "373.23",
            "min": "356.90",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1006.82",
            "p50": "775.63",
            "p95": "380.88",
            "p99": "300.41",
            "min": "288.46",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "340.59",
            "p50": "298.18",
            "p95": "222.39",
            "p99": "193.95",
            "min": "193.80",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "338.41",
            "p50": "294.66",
            "p95": "240.21",
            "p99": "188.58",
            "min": "187.86",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "343.67",
            "p50": "300.61",
            "p95": "239.88",
            "p99": "225.15",
            "min": "224.77",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "366.82",
            "p50": "320.64",
            "p95": "216.94",
            "p99": "198.50",
            "min": "197.09",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "285.43",
            "p50": "259.00",
            "p95": "206.69",
            "p99": "184.82",
            "min": "179.95",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "284.96",
            "p50": "257.77",
            "p95": "198.15",
            "p99": "180.20",
            "min": "179.75",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "291.83",
            "p50": "253.97",
            "p95": "198.53",
            "p99": "176.16",
            "min": "175.28",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "288.82",
            "p50": "258.13",
            "p95": "200.65",
            "p99": "167.28",
            "min": "166.90",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "292.64",
            "p50": "259.38",
            "p95": "203.98",
            "p99": "183.02",
            "min": "180.65",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "104.27",
            "p50": "99.77",
            "p95": "90.26",
            "p99": "82.85",
            "min": "81.26",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "104.22",
            "p50": "100.44",
            "p95": "90.64",
            "p99": "82.76",
            "min": "81.55",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "96.89",
            "p50": "92.93",
            "p95": "83.02",
            "p99": "79.76",
            "min": "79.39",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "246.36",
            "p50": "226.39",
            "p95": "190.74",
            "p99": "159.05",
            "min": "153.31",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "95.99",
            "p50": "92.69",
            "p95": "83.24",
            "p99": "77.68",
            "min": "77.23",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "239.67",
            "p50": "219.97",
            "p95": "174.33",
            "p99": "156.77",
            "min": "156.45",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "181.20",
            "p50": "170.53",
            "p95": "140.91",
            "p99": "120.34",
            "min": "118.74",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "148.06",
            "p50": "139.73",
            "p95": "123.76",
            "p99": "111.25",
            "min": "109.32",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "440.86",
            "p50": "399.62",
            "p95": "282.64",
            "p99": "238.12",
            "min": "238.06",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5633.88",
            "p50": "2716.69",
            "p95": "738.90",
            "p99": "643.72",
            "min": "613.89",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "438.77",
            "p50": "398.62",
            "p95": "299.08",
            "p99": "265.05",
            "min": "256.58",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14914.48",
            "p50": "4234.12",
            "p95": "1259.98",
            "p99": "788.72",
            "min": "622.58",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3351.58",
            "p50": "2113.29",
            "p95": "793.04",
            "p99": "658.26",
            "min": "635.41",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "206.99",
            "p50": "191.64",
            "p95": "175.20",
            "p99": "155.16",
            "min": "154.64",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "229.94",
            "p50": "217.73",
            "p95": "184.90",
            "p99": "154.23",
            "min": "148.20",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "128.23",
            "p50": "122.98",
            "p95": "108.15",
            "p99": "98.48",
            "min": "97.66",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "209.88",
            "p50": "192.63",
            "p95": "153.11",
            "p99": "128.31",
            "min": "120.81",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "138.08",
            "p50": "130.40",
            "p95": "111.76",
            "p99": "107.20",
            "min": "107.17",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "175.10",
            "p50": "164.39",
            "p95": "139.79",
            "p99": "128.08",
            "min": "127.60",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "177.80",
            "p50": "164.73",
            "p95": "138.65",
            "p99": "118.75",
            "min": "116.16",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "179.98",
            "p50": "167.20",
            "p95": "141.17",
            "p99": "128.79",
            "min": "128.32",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "304.20",
            "p50": "247.50",
            "p95": "59.23",
            "p99": "51.93",
            "min": "51.71",
            "n": "106",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "144.83",
            "p50": "138.43",
            "p95": "117.69",
            "p99": "56.90",
            "min": "56.82",
            "n": "107",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "86.01",
            "p50": "82.39",
            "p95": "74.20",
            "p99": "71.06",
            "min": "70.73",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "87.06",
            "p50": "83.54",
            "p95": "80.96",
            "p99": "79.67",
            "min": "79.54",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "87.01",
            "p50": "83.10",
            "p95": "80.06",
            "p99": "75.48",
            "min": "74.80",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "188.79",
            "p50": "178.94",
            "p95": "163.42",
            "p99": "153.29",
            "min": "151.33",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "96.56",
            "p50": "93.90",
            "p95": "89.49",
            "p99": "88.85",
            "min": "88.82",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "108.93",
            "p50": "105.58",
            "p95": "101.47",
            "p99": "98.87",
            "min": "98.61",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "125.28",
            "p50": "121.35",
            "p95": "108.98",
            "p99": "97.31",
            "min": "96.71",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "126.90",
            "p50": "123.73",
            "p95": "110.38",
            "p99": "103.77",
            "min": "103.61",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "96.04",
            "p50": "94.16",
            "p95": "91.41",
            "p99": "86.05",
            "min": "85.92",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "101.14",
            "p50": "98.89",
            "p95": "68.87",
            "p99": "63.58",
            "min": "62.96",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "102.14",
            "p50": "98.99",
            "p95": "68.98",
            "p99": "62.76",
            "min": "62.76",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.98",
            "p50": "121.84",
            "p95": "64.19",
            "p99": "63.29",
            "min": "63.11",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "135.19",
            "p50": "126.28",
            "p95": "104.02",
            "p99": "95.26",
            "min": "95.11",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "115.40",
            "p50": "113.19",
            "p95": "68.34",
            "p99": "67.36",
            "min": "67.18",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "88.35",
            "p50": "83.74",
            "p95": "78.13",
            "p99": "71.24",
            "min": "69.95",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "101.45",
            "p50": "99.19",
            "p95": "92.50",
            "p99": "94.98",
            "min": "91.50",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "75.73",
            "p50": "71.91",
            "p95": "57.44",
            "p99": "59.48",
            "min": "55.66",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "156.03",
            "p50": "125.04",
            "p95": "117.35",
            "p99": "132.37",
            "min": "114.52",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "108.03",
            "p50": "106.04",
            "p95": "103.15",
            "p99": "104.81",
            "min": "102.38",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "428.39",
            "p50": "410.25",
            "p95": "344.85",
            "p99": "289.01",
            "min": "284.31",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "477.44",
            "p50": "470.43",
            "p95": "441.51",
            "p99": "403.99",
            "min": "390.65",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "459.66",
            "p50": "436.47",
            "p95": "389.15",
            "p99": "334.45",
            "min": "321.15",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "463.01",
            "p50": "440.36",
            "p95": "391.71",
            "p99": "331.12",
            "min": "325.75",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "466.35",
            "p50": "445.33",
            "p95": "390.30",
            "p99": "354.50",
            "min": "349.64",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "463.18",
            "p50": "454.29",
            "p95": "405.47",
            "p99": "362.05",
            "min": "357.21",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "124.67",
            "p50": "116.98",
            "p95": "104.77",
            "p99": "103.21",
            "min": "102.99",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "125.26",
            "p50": "117.31",
            "p95": "105.60",
            "p99": "102.29",
            "min": "101.83",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "122.45",
            "p50": "116.15",
            "p95": "103.28",
            "p99": "100.63",
            "min": "100.36",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "104.68",
            "p50": "100.68",
            "p95": "91.54",
            "p99": "89.12",
            "min": "88.63",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "85.60",
            "p50": "84.32",
            "p95": "83.41",
            "p99": "81.61",
            "min": "81.31",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "124.39",
            "p50": "116.11",
            "p95": "101.95",
            "p99": "99.61",
            "min": "99.55",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "116.58",
            "p50": "108.88",
            "p95": "95.01",
            "p99": "90.11",
            "min": "89.61",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "117.33",
            "p50": "109.59",
            "p95": "96.09",
            "p99": "93.15",
            "min": "92.98",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "116.73",
            "p50": "109.48",
            "p95": "96.42",
            "p99": "94.94",
            "min": "94.92",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1592.75",
            "p50": "1380.13",
            "p95": "729.73",
            "p99": "546.56",
            "min": "496.20",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1620.06",
            "p50": "1415.31",
            "p95": "699.91",
            "p99": "256.72",
            "min": "223.11",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "154.01",
            "p50": "151.54",
            "p95": "136.51",
            "p99": "110.28",
            "min": "106.95",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3998.42",
            "p50": "3508.07",
            "p95": "1306.44",
            "p99": "887.60",
            "min": "882.19",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "153.70",
            "p50": "151.19",
            "p95": "139.56",
            "p99": "120.55",
            "min": "114.22",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "4060.15",
            "p50": "3539.81",
            "p95": "1382.19",
            "p99": "924.02",
            "min": "763.63",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "101.80",
            "p50": "99.32",
            "p95": "65.31",
            "p99": "63.96",
            "min": "63.96",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "179.53",
            "p50": "176.89",
            "p95": "139.38",
            "p99": "136.54",
            "min": "136.34",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "385.26",
            "p50": "251.26",
            "p95": "202.50",
            "p99": "177.07",
            "min": "171.18",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9516.53",
            "p50": "1513.43",
            "p95": "784.50",
            "p99": "611.59",
            "min": "567.82",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "369.26",
            "p50": "252.70",
            "p95": "205.02",
            "p99": "195.82",
            "min": "195.29",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "26468.53",
            "p50": "8733.71",
            "p95": "2521.01",
            "p99": "2123.45",
            "min": "2116.71",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6003.79",
            "p50": "3157.62",
            "p95": "1702.97",
            "p99": "1096.72",
            "min": "904.72",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "307.59",
            "p50": "231.16",
            "p95": "164.19",
            "p99": "135.64",
            "min": "135.19",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "149.74",
            "p50": "130.39",
            "p95": "112.01",
            "p99": "105.39",
            "min": "103.85",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "124.86",
            "p50": "120.18",
            "p95": "92.93",
            "p99": "78.43",
            "min": "75.71",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "127.91",
            "p50": "120.60",
            "p95": "105.03",
            "p99": "101.96",
            "min": "101.11",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "124.57",
            "p50": "119.75",
            "p95": "115.02",
            "p99": "112.50",
            "min": "112.09",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "159.55",
            "p50": "148.72",
            "p95": "145.40",
            "p99": "136.71",
            "min": "135.42",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "96.18",
            "p50": "94.06",
            "p95": "79.22",
            "p99": "76.22",
            "min": "75.57",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "118.93",
            "p50": "114.48",
            "p95": "111.09",
            "p99": "106.02",
            "min": "104.94",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1178.57",
            "p50": "1093.95",
            "p95": "377.42",
            "p99": "364.02",
            "min": "361.99",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "124.61",
            "p50": "121.20",
            "p95": "109.74",
            "p99": "101.55",
            "min": "100.87",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}