{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "115.58",
            "p50": "110.13",
            "p95": "90.88",
            "p99": "82.51",
            "min": "82.05",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1069.94",
            "p50": "987.06",
            "p95": "642.23",
            "p99": "535.60",
            "min": "527.28",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "115.13",
            "p50": "110.63",
            "p95": "102.60",
            "p99": "98.21",
            "min": "97.26",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "975.20",
            "p50": "935.00",
            "p95": "678.57",
            "p99": "556.81",
            "min": "551.52",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "455.13",
            "p50": "432.20",
            "p95": "338.16",
            "p99": "308.52",
            "min": "308.37",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "442.38",
            "p50": "427.43",
            "p95": "339.94",
            "p99": "295.13",
            "min": "292.37",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "675.03",
            "p50": "607.46",
            "p95": "281.28",
            "p99": "269.93",
            "min": "269.91",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "624.09",
            "p50": "575.19",
            "p95": "438.23",
            "p99": "372.38",
            "min": "361.35",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "386.85",
            "p50": "360.75",
            "p95": "294.80",
            "p99": "267.37",
            "min": "267.37",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "690.21",
            "p50": "646.03",
            "p95": "474.28",
            "p99": "398.23",
            "min": "393.17",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "667.46",
            "p50": "615.23",
            "p95": "443.77",
            "p99": "406.75",
            "min": "404.02",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "620.26",
            "p50": "574.43",
            "p95": "433.63",
            "p99": "370.64",
            "min": "364.15",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "399.18",
            "p50": "385.60",
            "p95": "330.41",
            "p99": "285.74",
            "min": "279.49",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "394.91",
            "p50": "376.93",
            "p95": "309.55",
            "p99": "298.62",
            "min": "297.49",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "7993.85",
            "p50": "4312.83",
            "p95": "1824.87",
            "p99": "1384.52",
            "min": "1340.02",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2838.18",
            "p50": "2204.81",
            "p95": "830.00",
            "p99": "1486.97",
            "min": "759.39",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "300.90",
            "p50": "278.22",
            "p95": "238.20",
            "p99": "235.32",
            "min": "219.94",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1419.83",
            "p50": "789.41",
            "p95": "370.78",
            "p99": "791.27",
            "min": "317.09",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7061.34",
            "p50": "3789.42",
            "p95": "1436.03",
            "p99": "3803.39",
            "min": "1345.63",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "816.10",
            "p50": "705.96",
            "p95": "510.73",
            "p99": "438.80",
            "min": "417.17",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "810.97",
            "p50": "741.64",
            "p95": "544.29",
            "p99": "426.33",
            "min": "410.83",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "929.61",
            "p50": "793.19",
            "p95": "551.03",
            "p99": "476.19",
            "min": "469.76",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2341.24",
            "p50": "2027.57",
            "p95": "1045.41",
            "p99": "760.29",
            "min": "718.22",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2297.90",
            "p50": "1963.42",
            "p95": "959.76",
            "p99": "706.24",
            "min": "688.56",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "802.53",
            "p50": "754.06",
            "p95": "542.70",
            "p99": "460.43",
            "min": "446.00",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "168.54",
            "p50": "153.76",
            "p95": "138.56",
            "p99": "122.59",
            "min": "121.49",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "531.31",
            "p50": "477.32",
            "p95": "375.53",
            "p99": "315.61",
            "min": "310.90",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "165.94",
            "p50": "152.94",
            "p95": "141.30",
            "p99": "139.57",
            "min": "139.31",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "184.86",
            "p50": "170.59",
            "p95": "151.52",
            "p99": "140.24",
            "min": "139.50",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "31960.96",
            "p50": "7759.52",
            "p95": "2255.77",
            "p99": "1117.30",
            "min": "873.59",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "386.10",
            "p50": "355.36",
            "p95": "298.99",
            "p99": "191.40",
            "min": "167.59",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "375.31",
            "p50": "345.89",
            "p95": "297.39",
            "p99": "255.79",
            "min": "252.51",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "376.52",
            "p50": "339.60",
            "p95": "290.04",
            "p99": "259.19",
            "min": "255.44",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "384.59",
            "p50": "337.35",
            "p95": "277.41",
            "p99": "264.00",
            "min": "263.54",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "15953.94",
            "p50": "6022.44",
            "p95": "2397.58",
            "p99": "1721.52",
            "min": "1630.66",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "16298.75",
            "p50": "6182.61",
            "p95": "2376.20",
            "p99": "1782.69",
            "min": "1680.15",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "15590.74",
            "p50": "5360.39",
            "p95": "2399.67",
            "p99": "1649.69",
            "min": "1379.34",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "16205.46",
            "p50": "5882.51",
            "p95": "2466.30",
            "p99": "1843.35",
            "min": "1656.63",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "15583.69",
            "p50": "5142.11",
            "p95": "2342.46",
            "p99": "1958.56",
            "min": "1890.61",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "16592.35",
            "p50": "6796.58",
            "p95": "2414.42",
            "p99": "1729.47",
            "min": "1680.04",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "686.77",
            "p50": "621.24",
            "p95": "406.72",
            "p99": "285.68",
            "min": "284.76",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "551.46",
            "p50": "414.93",
            "p95": "346.98",
            "p99": "298.55",
            "min": "288.77",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1409.98",
            "p50": "1300.45",
            "p95": "344.88",
            "p99": "260.76",
            "min": "247.33",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "23369.74",
            "p50": "7989.12",
            "p95": "2367.03",
            "p99": "1307.08",
            "min": "1265.38",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1340.28",
            "p50": "1233.83",
            "p95": "780.78",
            "p99": "563.58",
            "min": "560.09",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "53712.64",
            "p50": "8493.88",
            "p95": "2348.73",
            "p99": "1414.47",
            "min": "1343.69",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13036.19",
            "p50": "7293.31",
            "p95": "2337.90",
            "p99": "887.36",
            "min": "199.56",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "574.21",
            "p50": "499.24",
            "p95": "389.98",
            "p99": "227.70",
            "min": "130.41",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "538.02",
            "p50": "495.92",
            "p95": "402.26",
            "p99": "358.08",
            "min": "358.06",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "601.53",
            "p50": "548.79",
            "p95": "433.03",
            "p99": "369.55",
            "min": "362.20",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "610.54",
            "p50": "575.01",
            "p95": "426.28",
            "p99": "367.79",
            "min": "365.16",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "666.85",
            "p50": "618.41",
            "p95": "445.70",
            "p99": "389.94",
            "min": "387.37",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "913.40",
            "p50": "855.67",
            "p95": "595.21",
            "p99": "489.83",
            "min": "459.23",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "656.75",
            "p50": "598.13",
            "p95": "465.95",
            "p99": "412.71",
            "min": "409.81",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "706.71",
            "p50": "638.92",
            "p95": "479.16",
            "p99": "401.46",
            "min": "388.31",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1559.20",
            "p50": "1371.64",
            "p95": "1099.77",
            "p99": "975.95",
            "min": "955.61",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "670.97",
            "p50": "618.92",
            "p95": "431.38",
            "p99": "383.84",
            "min": "380.42",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "141.56",
            "p50": "138.30",
            "p95": "130.47",
            "p99": "120.95",
            "min": "120.82",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "139.95",
            "p50": "136.59",
            "p95": "126.19",
            "p99": "120.03",
            "min": "119.15",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "141.41",
            "p50": "138.84",
            "p95": "127.11",
            "p99": "120.59",
            "min": "120.48",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "227.97",
            "p50": "224.00",
            "p95": "208.48",
            "p99": "130.83",
            "min": "82.70",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "188.38",
            "p50": "182.91",
            "p95": "165.40",
            "p99": "89.37",
            "min": "82.82",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "202.64",
            "p50": "196.74",
            "p95": "177.06",
            "p99": "158.46",
            "min": "154.65",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "186.42",
            "p50": "175.55",
            "p95": "159.33",
            "p99": "145.48",
            "min": "143.94",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "176.31",
            "p50": "167.52",
            "p95": "150.60",
            "p99": "129.05",
            "min": "127.98",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "206.37",
            "p50": "194.89",
            "p95": "181.44",
            "p99": "172.15",
            "min": "171.27",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "183.89",
            "p50": "173.32",
            "p95": "154.89",
            "p99": "145.42",
            "min": "143.45",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "203.88",
            "p50": "192.65",
            "p95": "168.95",
            "p99": "148.88",
            "min": "146.43",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "147.25",
            "p50": "140.48",
            "p95": "129.93",
            "p99": "102.80",
            "min": "101.38",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "225.62",
            "p50": "218.72",
            "p95": "195.54",
            "p99": "151.78",
            "min": "139.25",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "182.26",
            "p50": "173.47",
            "p95": "156.66",
            "p99": "81.93",
            "min": "65.10",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "101.31",
            "p50": "96.46",
            "p95": "90.44",
            "p99": "84.26",
            "min": "82.59",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "142.14",
            "p50": "135.03",
            "p95": "122.95",
            "p99": "125.36",
            "min": "116.32",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "442.49",
            "p50": "323.02",
            "p95": "270.88",
            "p99": "283.10",
            "min": "245.72",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "192.50",
            "p50": "149.89",
            "p95": "135.69",
            "p99": "155.44",
            "min": "127.49",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "133.08",
            "p50": "130.46",
            "p95": "118.94",
            "p99": "122.45",
            "min": "114.44",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1207.22",
            "p50": "1050.62",
            "p95": "743.95",
            "p99": "612.78",
            "min": "601.44",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1035.38",
            "p50": "1001.96",
            "p95": "722.07",
            "p99": "631.63",
            "min": "611.58",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1458.17",
            "p50": "1208.49",
            "p95": "791.24",
            "p99": "632.65",
            "min": "624.10",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1354.63",
            "p50": "1118.56",
            "p95": "824.86",
            "p99": "671.07",
            "min": "642.64",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1328.15",
            "p50": "1093.81",
            "p95": "727.95",
            "p99": "588.31",
            "min": "578.78",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1074.30",
            "p50": "1013.80",
            "p95": "722.72",
            "p99": "533.86",
            "min": "526.46",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "697.61",
            "p50": "526.17",
            "p95": "394.66",
            "p99": "330.67",
            "min": "321.90",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "713.95",
            "p50": "530.90",
            "p95": "410.16",
            "p99": "330.16",
            "min": "322.88",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "701.81",
            "p50": "531.69",
            "p95": "416.16",
            "p99": "370.07",
            "min": "368.37",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "719.85",
            "p50": "563.39",
            "p95": "430.89",
            "p99": "362.56",
            "min": "357.06",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "290.23",
            "p50": "284.02",
            "p95": "238.24",
            "p99": "230.81",
            "min": "229.16",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "613.50",
            "p50": "422.49",
            "p95": "309.34",
            "p99": "254.49",
            "min": "249.49",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "600.53",
            "p50": "449.59",
            "p95": "361.84",
            "p99": "305.77",
            "min": "305.29",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "602.98",
            "p50": "476.65",
            "p95": "371.22",
            "p99": "352.57",
            "min": "351.05",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "644.70",
            "p50": "488.01",
            "p95": "386.16",
            "p99": "331.95",
            "min": "329.87",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "454.04",
            "p50": "433.64",
            "p95": "355.84",
            "p99": "262.44",
            "min": "240.19",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "452.58",
            "p50": "435.54",
            "p95": "372.04",
            "p99": "361.01",
            "min": "355.66",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "166.56",
            "p50": "161.24",
            "p95": "147.86",
            "p99": "131.90",
            "min": "130.77",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "628.48",
            "p50": "597.96",
            "p95": "452.18",
            "p99": "382.65",
            "min": "374.95",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "166.30",
            "p50": "161.24",
            "p95": "145.65",
            "p99": "136.08",
            "min": "135.47",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "320.01",
            "p50": "307.10",
            "p95": "272.95",
            "p99": "236.10",
            "min": "212.50",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "205.72",
            "p50": "195.12",
            "p95": "177.11",
            "p99": "163.26",
            "min": "162.47",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "248.57",
            "p50": "242.98",
            "p95": "221.18",
            "p99": "97.32",
            "min": "94.74",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "522.17",
            "p50": "503.22",
            "p95": "400.97",
            "p99": "328.50",
            "min": "324.27",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7238.37",
            "p50": "2775.48",
            "p95": "1806.72",
            "p99": "1485.41",
            "min": "1404.75",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "493.87",
            "p50": "479.59",
            "p95": "413.59",
            "p99": "373.60",
            "min": "362.04",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "23068.57",
            "p50": "7297.28",
            "p95": "2314.78",
            "p99": "1932.53",
            "min": "1885.53",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4212.25",
            "p50": "2749.54",
            "p95": "1373.99",
            "p99": "1100.01",
            "min": "1037.18",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "260.31",
            "p50": "196.01",
            "p95": "170.02",
            "p99": "163.14",
            "min": "161.69",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "257.56",
            "p50": "249.79",
            "p95": "215.46",
            "p99": "195.39",
            "min": "189.95",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "148.49",
            "p50": "144.66",
            "p95": "134.37",
            "p99": "90.84",
            "min": "74.99",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "234.22",
            "p50": "228.56",
            "p95": "207.91",
            "p99": "192.13",
            "min": "185.89",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "177.99",
            "p50": "170.78",
            "p95": "153.89",
            "p99": "98.19",
            "min": "86.44",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "175.36",
            "p50": "171.67",
            "p95": "141.80",
            "p99": "122.93",
            "min": "122.72",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "204.67",
            "p50": "195.57",
            "p95": "183.32",
            "p99": "174.30",
            "min": "172.86",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "201.77",
            "p50": "196.20",
            "p95": "177.73",
            "p99": "112.66",
            "min": "86.54",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1324.47",
            "p50": "1202.70",
            "p95": "973.77",
            "p99": "742.14",
            "min": "719.23",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "183.24",
            "p50": "178.47",
            "p95": "159.40",
            "p99": "145.64",
            "min": "141.78",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "190.72",
            "p50": "188.59",
            "p95": "174.60",
            "p99": "160.31",
            "min": "159.51",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "190.92",
            "p50": "188.17",
            "p95": "174.21",
            "p99": "159.20",
            "min": "157.84",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "191.78",
            "p50": "189.17",
            "p95": "176.22",
            "p99": "162.51",
            "min": "162.32",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1142.13",
            "p50": "1109.00",
            "p95": "801.55",
            "p99": "684.92",
            "min": "679.03",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "776.87",
            "p50": "760.09",
            "p95": "620.11",
            "p99": "510.91",
            "min": "510.61",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "851.15",
            "p50": "828.34",
            "p95": "627.62",
            "p99": "534.55",
            "min": "528.71",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "791.81",
            "p50": "771.06",
            "p95": "572.83",
            "p99": "485.84",
            "min": "481.34",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "798.14",
            "p50": "779.25",
            "p95": "621.49",
            "p99": "471.98",
            "min": "468.54",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "894.76",
            "p50": "873.94",
            "p95": "668.15",
            "p99": "507.07",
            "min": "506.09",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "908.97",
            "p50": "885.57",
            "p95": "595.12",
            "p99": "514.01",
            "min": "513.96",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "913.78",
            "p50": "887.66",
            "p95": "662.95",
            "p99": "584.79",
            "min": "578.07",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "817.17",
            "p50": "788.30",
            "p95": "597.55",
            "p99": "480.12",
            "min": "478.01",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "844.39",
            "p50": "816.51",
            "p95": "560.47",
            "p99": "418.42",
            "min": "418.12",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "887.79",
            "p50": "865.60",
            "p95": "663.21",
            "p99": "517.00",
            "min": "507.95",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "12211.32",
            "p50": "6345.42",
            "p95": "2427.34",
            "p99": "2233.24",
            "min": "2226.74",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "4155.28",
            "p50": "3801.74",
            "p95": "1443.12",
            "p99": "2339.89",
            "min": "1362.37",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "476.64",
            "p50": "462.76",
            "p95": "381.90",
            "p99": "366.89",
            "min": "341.14",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "7257.10",
            "p50": "3678.16",
            "p95": "458.46",
            "p99": "3371.15",
            "min": "439.64",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7288.61",
            "p50": "3953.86",
            "p95": "1834.56",
            "p99": "3966.07",
            "min": "1459.59",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1531.38",
            "p50": "1351.39",
            "p95": "902.56",
            "p99": "790.47",
            "min": "758.94",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "14258.99",
            "p50": "1276.35",
            "p95": "1001.91",
            "p99": "706.43",
            "min": "693.02",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1721.57",
            "p50": "1553.48",
            "p95": "962.08",
            "p99": "787.64",
            "min": "772.18",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "3544.61",
            "p50": "3257.17",
            "p95": "1701.36",
            "p99": "1048.19",
            "min": "939.27",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "3497.33",
            "p50": "3194.33",
            "p95": "1329.69",
            "p99": "986.00",
            "min": "892.26",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1450.78",
            "p50": "1344.93",
            "p95": "909.85",
            "p99": "752.55",
            "min": "725.48",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "539.60",
            "p50": "513.30",
            "p95": "435.34",
            "p99": "360.41",
            "min": "347.54",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "801.65",
            "p50": "784.58",
            "p95": "633.99",
            "p99": "555.76",
            "min": "552.25",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "536.72",
            "p50": "513.26",
            "p95": "446.21",
            "p99": "379.52",
            "min": "374.24",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "550.28",
            "p50": "519.65",
            "p95": "440.95",
            "p99": "394.08",
            "min": "393.24",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "32202.93",
            "p50": "8255.75",
            "p95": "2358.57",
            "p99": "1716.90",
            "min": "1441.42",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "604.39",
            "p50": "589.91",
            "p95": "494.03",
            "p99": "412.79",
            "min": "405.62",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "576.58",
            "p50": "564.87",
            "p95": "468.23",
            "p99": "403.85",
            "min": "398.12",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "584.22",
            "p50": "568.34",
            "p95": "489.61",
            "p99": "404.66",
            "min": "390.55",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "590.07",
            "p50": "576.57",
            "p95": "487.38",
            "p99": "398.52",
            "min": "397.67",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "24135.29",
            "p50": "8042.07",
            "p95": "2400.30",
            "p99": "1520.36",
            "min": "1431.77",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "24308.06",
            "p50": "7859.52",
            "p95": "2465.50",
            "p99": "1403.07",
            "min": "1363.48",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "22828.72",
            "p50": "7531.98",
            "p95": "2282.07",
            "p99": "1523.93",
            "min": "1453.99",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "24104.49",
            "p50": "7948.53",
            "p95": "2320.12",
            "p99": "2097.42",
            "min": "1973.99",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "22313.68",
            "p50": "7244.59",
            "p95": "2378.42",
            "p99": "1729.00",
            "min": "1521.42",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "23989.84",
            "p50": "8140.93",
            "p95": "2282.64",
            "p99": "2035.89",
            "min": "1811.99",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "900.35",
            "p50": "877.52",
            "p95": "711.10",
            "p99": "494.22",
            "min": "454.35",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.68",
            "p50": "661.15",
            "p95": "545.12",
            "p99": "488.34",
            "min": "474.86",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1874.99",
            "p50": "1778.26",
            "p95": "1135.60",
            "p99": "781.03",
            "min": "669.65",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "15572.77",
            "p50": "9200.80",
            "p95": "2323.30",
            "p99": "2074.12",
            "min": "1867.32",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1822.67",
            "p50": "1737.22",
            "p95": "1100.38",
            "p99": "849.90",
            "min": "847.39",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "78781.25",
            "p50": "8937.76",
            "p95": "2375.91",
            "p99": "1429.76",
            "min": "1417.05",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13462.78",
            "p50": "7443.69",
            "p95": "2325.14",
            "p99": "2091.61",
            "min": "1948.63",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "679.06",
            "p50": "562.50",
            "p95": "473.05",
            "p99": "386.02",
            "min": "377.62",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "954.41",
            "p50": "925.09",
            "p95": "659.64",
            "p99": "539.25",
            "min": "530.07",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "818.06",
            "p50": "797.52",
            "p95": "596.38",
            "p99": "479.79",
            "min": "478.37",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1132.40",
            "p50": "1096.53",
            "p95": "764.70",
            "p99": "560.68",
            "min": "542.21",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "813.92",
            "p50": "793.58",
            "p95": "628.48",
            "p99": "487.01",
            "min": "474.41",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1068.16",
            "p50": "1031.58",
            "p95": "705.61",
            "p99": "658.02",
            "min": "646.65",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "864.30",
            "p50": "838.02",
            "p95": "653.79",
            "p99": "496.15",
            "min": "492.87",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "901.41",
            "p50": "876.59",
            "p95": "653.96",
            "p99": "511.74",
            "min": "502.35",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "420.57",
            "p50": "372.84",
            "p95": "355.17",
            "p99": "328.89",
            "min": "325.81",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "888.22",
            "p50": "867.26",
            "p95": "629.89",
            "p99": "513.02",
            "min": "501.93",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "130.34",
            "p50": "123.22",
            "p95": "107.49",
            "p99": "100.29",
            "min": "100.14",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "129.66",
            "p50": "122.92",
            "p95": "107.16",
            "p99": "99.41",
            "min": "99.24",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "130.38",
            "p50": "123.03",
            "p95": "104.27",
            "p99": "99.09",
            "min": "99.01",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "233.49",
            "p50": "213.49",
            "p95": "170.81",
            "p99": "147.14",
            "min": "140.21",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "170.34",
            "p50": "160.14",
            "p95": "130.77",
            "p99": "121.17",
            "min": "119.91",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "171.08",
            "p50": "160.18",
            "p95": "127.77",
            "p99": "94.37",
            "min": "84.23",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "154.73",
            "p50": "146.10",
            "p95": "119.89",
            "p99": "90.76",
            "min": "88.27",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "154.24",
            "p50": "144.10",
            "p95": "120.38",
            "p99": "113.04",
            "min": "112.27",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "201.80",
            "p50": "186.09",
            "p95": "143.25",
            "p99": "132.48",
            "min": "132.36",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "196.34",
            "p50": "179.49",
            "p95": "147.50",
            "p99": "132.89",
            "min": "132.06",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "197.23",
            "p50": "182.55",
            "p95": "145.68",
            "p99": "114.67",
            "min": "110.04",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "131.90",
            "p50": "124.00",
            "p95": "105.68",
            "p99": "90.88",
            "min": "88.88",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "216.10",
            "p50": "196.55",
            "p95": "164.40",
            "p99": "146.51",
            "min": "145.31",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "199.51",
            "p50": "184.65",
            "p95": "148.02",
            "p99": "130.64",
            "min": "129.74",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "113.41",
            "p50": "104.05",
            "p95": "94.11",
            "p99": "88.64",
            "min": "87.56",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "132.85",
            "p50": "123.96",
            "p95": "106.38",
            "p99": "110.21",
            "min": "98.01",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "288.97",
            "p50": "251.50",
            "p95": "186.92",
            "p99": "194.16",
            "min": "171.93",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "164.01",
            "p50": "137.27",
            "p95": "131.00",
            "p99": "140.08",
            "min": "122.03",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "127.07",
            "p50": "117.76",
            "p95": "100.32",
            "p99": "111.48",
            "min": "99.71",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "963.87",
            "p50": "703.73",
            "p95": "373.29",
            "p99": "316.35",
            "min": "309.07",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1011.04",
            "p50": "723.57",
            "p95": "435.50",
            "p99": "289.96",
            "min": "275.20",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1001.42",
            "p50": "718.67",
            "p95": "399.50",
            "p99": "302.04",
            "min": "290.14",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "941.88",
            "p50": "707.54",
            "p95": "412.63",
            "p99": "289.25",
            "min": "283.80",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "914.34",
            "p50": "698.57",
            "p95": "352.29",
            "p99": "292.47",
            "min": "288.73",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "993.97",
            "p50": "733.60",
            "p95": "391.99",
            "p99": "289.29",
            "min": "287.82",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "432.00",
            "p50": "368.64",
            "p95": "230.14",
            "p99": "216.36",
            "min": "215.57",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "429.74",
            "p50": "377.11",
            "p95": "258.25",
            "p99": "235.44",
            "min": "234.80",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "438.79",
            "p50": "378.02",
            "p95": "267.18",
            "p99": "215.44",
            "min": "212.40",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "459.68",
            "p50": "394.29",
            "p95": "242.67",
            "p99": "210.85",
            "min": "207.20",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "282.93",
            "p50": "254.41",
            "p95": "194.93",
            "p99": "167.46",
            "min": "167.32",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "361.32",
            "p50": "310.11",
            "p95": "214.59",
            "p99": "179.25",
            "min": "177.74",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "367.10",
            "p50": "311.71",
            "p95": "231.55",
            "p99": "193.39",
            "min": "189.21",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "383.35",
            "p50": "324.53",
            "p95": "213.33",
            "p99": "187.20",
            "min": "184.65",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "377.79",
            "p50": "329.74",
            "p95": "235.98",
            "p99": "198.15",
            "min": "195.09",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "447.25",
            "p50": "377.88",
            "p95": "252.42",
            "p99": "216.74",
            "min": "204.46",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "447.21",
            "p50": "380.16",
            "p95": "255.80",
            "p99": "222.36",
            "min": "219.88",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "163.48",
            "p50": "152.99",
            "p95": "126.99",
            "p99": "116.45",
            "min": "116.09",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "609.61",
            "p50": "490.53",
            "p95": "324.58",
            "p99": "231.50",
            "min": "219.84",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "164.81",
            "p50": "152.17",
            "p95": "128.88",
            "p99": "119.41",
            "min": "119.26",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "318.29",
            "p50": "284.80",
            "p95": "214.26",
            "p99": "168.11",
            "min": "148.31",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "203.65",
            "p50": "188.57",
            "p95": "153.60",
            "p99": "131.30",
            "min": "130.35",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "180.41",
            "p50": "169.05",
            "p95": "137.69",
            "p99": "126.02",
            "min": "123.42",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "482.16",
            "p50": "392.73",
            "p95": "281.69",
            "p99": "217.21",
            "min": "213.02",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5567.02",
            "p50": "1959.72",
            "p95": "600.39",
            "p99": "490.86",
            "min": "480.80",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "480.15",
            "p50": "395.34",
            "p95": "240.68",
            "p99": "195.52",
            "min": "186.08",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "12625.32",
            "p50": "2629.42",
            "p95": "631.17",
            "p99": "550.64",
            "min": "534.32",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4173.77",
            "p50": "1779.99",
            "p95": "610.71",
            "p99": "533.27",
            "min": "514.71",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "223.84",
            "p50": "202.62",
            "p95": "163.63",
            "p99": "149.25",
            "min": "147.23",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "250.47",
            "p50": "205.34",
            "p95": "141.42",
            "p99": "117.34",
            "min": "116.04",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "129.83",
            "p50": "122.92",
            "p95": "104.24",
            "p99": "98.48",
            "min": "98.41",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "228.99",
            "p50": "207.19",
            "p95": "159.94",
            "p99": "105.25",
            "min": "85.31",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "156.50",
            "p50": "146.36",
            "p95": "126.91",
            "p99": "109.37",
            "min": "108.09",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "195.86",
            "p50": "180.77",
            "p95": "142.02",
            "p99": "95.89",
            "min": "83.86",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "195.23",
            "p50": "179.57",
            "p95": "143.16",
            "p99": "129.71",
            "min": "128.25",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "208.99",
            "p50": "190.41",
            "p95": "151.44",
            "p99": "137.89",
            "min": "135.16",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "401.09",
            "p50": "278.94",
            "p95": "74.79",
            "p99": "68.59",
            "min": "68.47",
            "n": "115",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "163.09",
            "p50": "149.33",
            "p95": "86.19",
            "p99": "83.26",
            "min": "83.26",
            "n": "112",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "86.93",
            "p50": "83.30",
            "p95": "76.56",
            "p99": "70.33",
            "min": "69.65",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "88.22",
            "p50": "84.42",
            "p95": "81.85",
            "p99": "79.81",
            "min": "79.65",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "87.36",
            "p50": "84.27",
            "p95": "81.38",
            "p99": "76.29",
            "min": "75.60",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "234.78",
            "p50": "178.74",
            "p95": "143.54",
            "p99": "132.68",
            "min": "132.15",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "95.95",
            "p50": "93.66",
            "p95": "88.44",
            "p99": "86.38",
            "min": "86.32",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.85",
            "p50": "107.99",
            "p95": "104.11",
            "p99": "100.34",
            "min": "100.08",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "141.18",
            "p50": "136.95",
            "p95": "127.71",
            "p99": "124.52",
            "min": "124.40",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "143.02",
            "p50": "137.68",
            "p95": "132.32",
            "p99": "127.99",
            "min": "127.40",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "101.57",
            "p50": "100.34",
            "p95": "77.34",
            "p99": "76.41",
            "min": "76.12",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "106.92",
            "p50": "104.82",
            "p95": "100.03",
            "p99": "92.89",
            "min": "91.88",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "106.85",
            "p50": "105.06",
            "p95": "102.66",
            "p99": "97.60",
            "min": "97.57",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "142.74",
            "p50": "137.73",
            "p95": "132.75",
            "p99": "127.04",
            "min": "126.24",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "134.92",
            "p50": "130.32",
            "p95": "121.24",
            "p99": "119.14",
            "min": "119.03",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "125.44",
            "p50": "120.28",
            "p95": "112.27",
            "p99": "108.15",
            "min": "107.88",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "103.00",
            "p50": "99.28",
            "p95": "96.14",
            "p99": "92.87",
            "min": "92.35",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "95.30",
            "p50": "93.69",
            "p95": "92.26",
            "p99": "92.60",
            "min": "91.15",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "73.67",
            "p50": "72.08",
            "p95": "70.65",
            "p99": "69.45",
            "min": "68.46",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "147.46",
            "p50": "117.11",
            "p95": "110.02",
            "p99": "125.22",
            "min": "108.45",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "102.14",
            "p50": "100.08",
            "p95": "98.26",
            "p99": "98.76",
            "min": "96.20",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "417.99",
            "p50": "409.20",
            "p95": "374.54",
            "p99": "349.82",
            "min": "346.69",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "475.56",
            "p50": "469.67",
            "p95": "456.57",
            "p99": "348.62",
            "min": "328.87",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "447.08",
            "p50": "435.08",
            "p95": "417.80",
            "p99": "385.37",
            "min": "384.35",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "452.89",
            "p50": "441.81",
            "p95": "412.37",
            "p99": "357.11",
            "min": "344.04",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "454.88",
            "p50": "443.91",
            "p95": "424.13",
            "p99": "375.15",
            "min": "363.08",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "460.05",
            "p50": "452.31",
            "p95": "418.94",
            "p99": "380.10",
            "min": "376.52",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "118.95",
            "p50": "116.63",
            "p95": "114.13",
            "p99": "111.08",
            "min": "110.67",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "120.49",
            "p50": "117.37",
            "p95": "113.47",
            "p99": "104.20",
            "min": "104.11",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "118.87",
            "p50": "115.21",
            "p95": "112.05",
            "p99": "100.64",
            "min": "98.41",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "101.37",
            "p50": "99.95",
            "p95": "97.94",
            "p99": "90.82",
            "min": "89.32",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "85.55",
            "p50": "84.22",
            "p95": "83.58",
            "p99": "81.14",
            "min": "80.55",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "117.27",
            "p50": "114.36",
            "p95": "110.29",
            "p99": "98.30",
            "min": "97.18",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "111.60",
            "p50": "108.54",
            "p95": "102.51",
            "p99": "95.39",
            "min": "94.19",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "111.43",
            "p50": "108.10",
            "p95": "104.68",
            "p99": "101.17",
            "min": "101.15",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "111.78",
            "p50": "108.14",
            "p95": "106.41",
            "p99": "104.50",
            "min": "104.38",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1584.16",
            "p50": "1420.79",
            "p95": "705.14",
            "p99": "491.96",
            "min": "488.00",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1601.75",
            "p50": "1403.19",
            "p95": "707.02",
            "p99": "582.33",
            "min": "537.50",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "154.48",
            "p50": "152.19",
            "p95": "140.09",
            "p99": "130.24",
            "min": "128.95",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3875.20",
            "p50": "3371.24",
            "p95": "1290.66",
            "p99": "657.36",
            "min": "577.58",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "153.90",
            "p50": "150.96",
            "p95": "138.84",
            "p99": "123.87",
            "min": "123.68",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3850.98",
            "p50": "3525.53",
            "p95": "1520.99",
            "p99": "510.80",
            "min": "341.75",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "106.75",
            "p50": "105.11",
            "p95": "100.38",
            "p99": "92.23",
            "min": "92.09",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "168.39",
            "p50": "161.04",
            "p95": "153.97",
            "p99": "151.48",
            "min": "150.52",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "365.62",
            "p50": "276.43",
            "p95": "206.88",
            "p99": "194.20",
            "min": "191.95",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "10553.95",
            "p50": "1512.83",
            "p95": "709.39",
            "p99": "383.71",
            "min": "320.91",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "406.39",
            "p50": "313.12",
            "p95": "229.36",
            "p99": "204.86",
            "min": "194.37",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "27358.20",
            "p50": "8735.95",
            "p95": "2404.69",
            "p99": "1672.10",
            "min": "1429.03",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6863.83",
            "p50": "3042.28",
            "p95": "1368.45",
            "p99": "723.41",
            "min": "675.68",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "334.72",
            "p50": "261.31",
            "p95": "176.07",
            "p99": "142.93",
            "min": "140.87",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "136.81",
            "p50": "128.19",
            "p95": "117.23",
            "p99": "110.97",
            "min": "110.11",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "139.63",
            "p50": "132.77",
            "p95": "125.92",
            "p99": "118.94",
            "min": "117.88",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "121.20",
            "p50": "112.05",
            "p95": "92.70",
            "p99": "89.79",
            "min": "89.72",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "138.01",
            "p50": "134.35",
            "p95": "127.69",
            "p99": "124.21",
            "min": "123.94",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "149.76",
            "p50": "145.40",
            "p95": "140.19",
            "p99": "131.58",
            "min": "130.02",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "102.58",
            "p50": "100.04",
            "p95": "75.04",
            "p99": "72.83",
            "min": "72.42",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "140.11",
            "p50": "129.18",
            "p95": "120.68",
            "p99": "114.81",
            "min": "112.74",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1182.94",
            "p50": "1109.60",
            "p95": "376.69",
            "p99": "367.53",
            "min": "366.88",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "138.63",
            "p50": "131.83",
            "p95": "120.14",
            "p99": "115.29",
            "min": "114.05",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}