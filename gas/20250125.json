{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "112.69",
            "p50": "109.55",
            "p95": "103.54",
            "p99": "99.52",
            "min": "99.18",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "997.68",
            "p50": "969.91",
            "p95": "935.37",
            "p99": "905.07",
            "min": "903.11",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "113.02",
            "p50": "110.01",
            "p95": "105.88",
            "p99": "104.82",
            "min": "104.71",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "731.25",
            "p50": "719.05",
            "p95": "499.42",
            "p99": "485.80",
            "min": "483.99",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "371.72",
            "p50": "364.71",
            "p95": "359.19",
            "p99": "353.68",
            "min": "352.49",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "400.91",
            "p50": "392.79",
            "p95": "383.56",
            "p99": "376.82",
            "min": "376.66",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "310.82",
            "p50": "306.14",
            "p95": "188.79",
            "p99": "185.87",
            "min": "185.45",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "186.99",
            "p50": "180.92",
            "p95": "174.57",
            "p99": "159.95",
            "min": "159.90",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "247.03",
            "p50": "238.47",
            "p95": "224.30",
            "p99": "220.39",
            "min": "219.81",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "251.83",
            "p50": "238.83",
            "p95": "233.54",
            "p99": "228.96",
            "min": "228.51",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "258.68",
            "p50": "253.77",
            "p95": "244.62",
            "p99": "221.50",
            "min": "217.29",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "202.23",
            "p50": "197.82",
            "p95": "192.53",
            "p99": "189.17",
            "min": "188.90",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "314.45",
            "p50": "310.87",
            "p95": "273.06",
            "p99": "270.07",
            "min": "269.48",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "297.57",
            "p50": "291.77",
            "p95": "255.12",
            "p99": "251.88",
            "min": "251.76",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "7066.77",
            "p50": "6050.65",
            "p95": "2445.89",
            "p99": "2127.02",
            "min": "2108.90",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2569.41",
            "p50": "2245.94",
            "p95": "1923.61",
            "p99": "1997.10",
            "min": "1688.93",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "285.14",
            "p50": "257.97",
            "p95": "239.80",
            "p99": "237.26",
            "min": "226.03",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1438.22",
            "p50": "945.48",
            "p95": "472.32",
            "p99": "885.74",
            "min": "468.96",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7851.20",
            "p50": "4616.47",
            "p95": "2255.10",
            "p99": "4532.54",
            "min": "2029.00",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "806.57",
            "p50": "779.69",
            "p95": "537.38",
            "p99": "527.81",
            "min": "527.00",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "818.31",
            "p50": "799.38",
            "p95": "755.30",
            "p99": "727.06",
            "min": "725.64",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "911.93",
            "p50": "883.21",
            "p95": "704.36",
            "p99": "640.57",
            "min": "638.56",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2206.95",
            "p50": "2070.92",
            "p95": "1834.24",
            "p99": "1754.42",
            "min": "1751.87",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2223.96",
            "p50": "2065.51",
            "p95": "1800.49",
            "p99": "1752.89",
            "min": "1748.17",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "806.61",
            "p50": "791.96",
            "p95": "740.39",
            "p99": "725.83",
            "min": "724.41",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "164.69",
            "p50": "156.23",
            "p95": "137.11",
            "p99": "130.76",
            "min": "130.70",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "506.22",
            "p50": "483.27",
            "p95": "401.74",
            "p99": "395.99",
            "min": "395.82",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "162.64",
            "p50": "151.10",
            "p95": "143.45",
            "p99": "142.02",
            "min": "141.73",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "183.11",
            "p50": "177.11",
            "p95": "156.42",
            "p99": "151.65",
            "min": "151.13",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "32879.96",
            "p50": "8406.75",
            "p95": "2586.79",
            "p99": "2300.25",
            "min": "2283.51",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "380.98",
            "p50": "314.63",
            "p95": "304.88",
            "p99": "269.76",
            "min": "260.82",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "360.42",
            "p50": "300.65",
            "p95": "292.09",
            "p99": "279.75",
            "min": "278.11",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "362.31",
            "p50": "308.72",
            "p95": "293.63",
            "p99": "288.43",
            "min": "287.92",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "357.71",
            "p50": "299.79",
            "p95": "292.03",
            "p99": "280.03",
            "min": "278.87",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "13913.55",
            "p50": "6990.44",
            "p95": "2402.56",
            "p99": "2130.34",
            "min": "1982.36",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "14712.37",
            "p50": "7762.06",
            "p95": "2664.55",
            "p99": "1865.43",
            "min": "1500.29",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "14023.30",
            "p50": "6623.04",
            "p95": "2371.70",
            "p99": "893.02",
            "min": "90.36",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "14072.42",
            "p50": "7164.99",
            "p95": "2542.85",
            "p99": "2191.43",
            "min": "2035.69",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "13557.36",
            "p50": "6783.61",
            "p95": "2447.71",
            "p99": "2321.48",
            "min": "2302.29",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "13821.24",
            "p50": "7820.59",
            "p95": "2511.10",
            "p99": "2199.42",
            "min": "2158.93",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "249.97",
            "p50": "240.13",
            "p95": "233.03",
            "p99": "229.07",
            "min": "228.84",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "524.71",
            "p50": "517.59",
            "p95": "497.16",
            "p99": "107.54",
            "min": "98.27",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1638.33",
            "p50": "1563.42",
            "p95": "376.98",
            "p99": "366.25",
            "min": "364.89",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "22277.18",
            "p50": "6106.93",
            "p95": "296.40",
            "p99": "240.40",
            "min": "234.35",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1427.94",
            "p50": "1383.05",
            "p95": "279.32",
            "p99": "251.92",
            "min": "229.66",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "54749.40",
            "p50": "9311.95",
            "p95": "2456.12",
            "p99": "1033.37",
            "min": "211.31",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15133.72",
            "p50": "7205.55",
            "p95": "304.23",
            "p99": "266.34",
            "min": "260.56",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "577.54",
            "p50": "547.01",
            "p95": "449.18",
            "p99": "412.03",
            "min": "408.52",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "514.43",
            "p50": "507.25",
            "p95": "498.84",
            "p99": "475.68",
            "min": "468.51",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "202.73",
            "p50": "198.19",
            "p95": "195.30",
            "p99": "188.35",
            "min": "188.33",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "383.60",
            "p50": "374.72",
            "p95": "367.73",
            "p99": "362.96",
            "min": "362.27",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "204.37",
            "p50": "198.47",
            "p95": "194.97",
            "p99": "187.41",
            "min": "186.26",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "340.63",
            "p50": "335.70",
            "p95": "321.34",
            "p99": "290.91",
            "min": "277.70",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "256.74",
            "p50": "253.58",
            "p95": "249.99",
            "p99": "247.88",
            "min": "247.59",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "521.26",
            "p50": "508.35",
            "p95": "494.53",
            "p99": "440.23",
            "min": "413.54",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1442.57",
            "p50": "1288.06",
            "p95": "951.94",
            "p99": "736.89",
            "min": "678.27",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "310.78",
            "p50": "304.65",
            "p95": "284.96",
            "p99": "273.21",
            "min": "271.74",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "90.36",
            "p50": "89.41",
            "p95": "85.17",
            "p99": "82.29",
            "min": "82.17",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "82.31",
            "p50": "81.36",
            "p95": "77.43",
            "p99": "68.67",
            "min": "68.07",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "84.05",
            "p50": "82.95",
            "p95": "78.65",
            "p99": "75.65",
            "min": "75.06",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "251.21",
            "p50": "245.90",
            "p95": "221.47",
            "p99": "186.95",
            "min": "168.78",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "185.86",
            "p50": "182.09",
            "p95": "160.29",
            "p99": "128.80",
            "min": "125.12",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "195.67",
            "p50": "192.55",
            "p95": "168.11",
            "p99": "127.53",
            "min": "114.88",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "186.02",
            "p50": "178.62",
            "p95": "161.41",
            "p99": "134.36",
            "min": "129.78",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "183.05",
            "p50": "176.27",
            "p95": "154.61",
            "p99": "142.09",
            "min": "140.23",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "209.07",
            "p50": "202.43",
            "p95": "183.00",
            "p99": "175.04",
            "min": "174.32",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "186.76",
            "p50": "180.28",
            "p95": "155.38",
            "p99": "98.55",
            "min": "90.99",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "210.09",
            "p50": "202.08",
            "p95": "185.58",
            "p99": "169.17",
            "min": "167.18",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "153.85",
            "p50": "151.00",
            "p95": "137.55",
            "p99": "123.00",
            "min": "119.79",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "225.87",
            "p50": "221.86",
            "p95": "202.18",
            "p99": "184.02",
            "min": "182.50",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "187.00",
            "p50": "180.61",
            "p95": "157.11",
            "p99": "93.19",
            "min": "86.00",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "69.03",
            "p50": "66.59",
            "p95": "63.53",
            "p99": "62.18",
            "min": "62.18",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "142.58",
            "p50": "141.69",
            "p95": "126.75",
            "p99": "129.05",
            "min": "121.77",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "449.47",
            "p50": "358.18",
            "p95": "291.87",
            "p99": "298.68",
            "min": "263.31",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "195.44",
            "p50": "154.15",
            "p95": "143.17",
            "p99": "164.58",
            "min": "141.30",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.89",
            "p50": "133.00",
            "p95": "123.27",
            "p99": "127.92",
            "min": "121.91",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1237.91",
            "p50": "1188.69",
            "p95": "809.44",
            "p99": "526.12",
            "min": "517.86",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1063.82",
            "p50": "1038.42",
            "p95": "696.79",
            "p99": "488.90",
            "min": "468.27",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1476.07",
            "p50": "1380.83",
            "p95": "752.67",
            "p99": "525.23",
            "min": "506.01",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1369.73",
            "p50": "1301.60",
            "p95": "865.59",
            "p99": "542.32",
            "min": "523.72",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1344.77",
            "p50": "1270.81",
            "p95": "849.56",
            "p99": "594.25",
            "min": "550.04",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1102.70",
            "p50": "1076.76",
            "p95": "700.75",
            "p99": "463.46",
            "min": "419.68",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "741.30",
            "p50": "673.03",
            "p95": "471.97",
            "p99": "422.91",
            "min": "420.19",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "743.31",
            "p50": "652.42",
            "p95": "450.94",
            "p99": "412.16",
            "min": "409.44",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "752.31",
            "p50": "660.13",
            "p95": "527.73",
            "p99": "476.02",
            "min": "474.48",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "740.32",
            "p50": "657.12",
            "p95": "450.35",
            "p99": "347.77",
            "min": "333.04",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "296.00",
            "p50": "290.74",
            "p95": "253.07",
            "p99": "221.14",
            "min": "218.44",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "661.88",
            "p50": "546.26",
            "p95": "439.66",
            "p99": "365.58",
            "min": "361.49",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "644.80",
            "p50": "578.36",
            "p95": "440.05",
            "p99": "393.76",
            "min": "392.03",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "663.05",
            "p50": "588.49",
            "p95": "434.52",
            "p99": "374.94",
            "min": "372.54",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "678.70",
            "p50": "597.54",
            "p95": "436.91",
            "p99": "362.46",
            "min": "349.97",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "107.21",
            "p50": "105.78",
            "p95": "99.72",
            "p99": "95.66",
            "min": "94.06",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "107.15",
            "p50": "105.54",
            "p95": "99.11",
            "p99": "91.52",
            "min": "87.00",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.82",
            "p50": "98.32",
            "p95": "93.10",
            "p99": "87.00",
            "min": "85.50",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "257.36",
            "p50": "252.79",
            "p95": "211.81",
            "p99": "175.58",
            "min": "173.58",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.77",
            "p50": "98.03",
            "p95": "91.87",
            "p99": "89.18",
            "min": "88.99",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "250.04",
            "p50": "246.09",
            "p95": "220.64",
            "p99": "202.65",
            "min": "200.47",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "210.20",
            "p50": "207.04",
            "p95": "184.86",
            "p99": "178.41",
            "min": "177.85",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "242.99",
            "p50": "238.05",
            "p95": "216.27",
            "p99": "195.91",
            "min": "189.82",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "460.81",
            "p50": "450.29",
            "p95": "346.92",
            "p99": "307.87",
            "min": "299.19",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7565.73",
            "p50": "4934.81",
            "p95": "2198.88",
            "p99": "1743.10",
            "min": "1721.26",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "440.11",
            "p50": "433.04",
            "p95": "371.06",
            "p99": "315.68",
            "min": "314.94",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "17803.07",
            "p50": "7206.85",
            "p95": "2622.53",
            "p99": "2343.68",
            "min": "2293.65",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4296.54",
            "p50": "3486.29",
            "p95": "1840.76",
            "p99": "1353.60",
            "min": "1319.06",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "218.41",
            "p50": "188.45",
            "p95": "165.09",
            "p99": "150.28",
            "min": "147.64",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "266.01",
            "p50": "261.88",
            "p95": "223.59",
            "p99": "183.05",
            "min": "175.08",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "95.31",
            "p50": "93.90",
            "p95": "88.79",
            "p99": "85.88",
            "min": "85.64",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "248.12",
            "p50": "243.00",
            "p95": "224.09",
            "p99": "194.19",
            "min": "188.97",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "183.18",
            "p50": "180.57",
            "p95": "163.17",
            "p99": "154.69",
            "min": "153.98",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "224.66",
            "p50": "219.14",
            "p95": "197.39",
            "p99": "145.75",
            "min": "119.39",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "211.57",
            "p50": "208.44",
            "p95": "190.51",
            "p99": "169.68",
            "min": "169.20",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "208.52",
            "p50": "204.91",
            "p95": "178.67",
            "p99": "165.75",
            "min": "164.24",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1242.65",
            "p50": "1106.08",
            "p95": "858.44",
            "p99": "737.21",
            "min": "719.70",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "183.77",
            "p50": "179.99",
            "p95": "155.89",
            "p99": "130.38",
            "min": "123.88",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.73",
            "p50": "192.49",
            "p95": "183.71",
            "p99": "179.11",
            "min": "179.08",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.94",
            "p50": "193.47",
            "p95": "190.67",
            "p99": "182.92",
            "min": "182.29",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.45",
            "p50": "193.52",
            "p95": "186.92",
            "p99": "177.47",
            "min": "176.96",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1190.91",
            "p50": "1166.53",
            "p95": "976.99",
            "p99": "681.13",
            "min": "673.48",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "701.76",
            "p50": "693.20",
            "p95": "633.35",
            "p99": "554.40",
            "min": "546.86",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "812.17",
            "p50": "799.71",
            "p95": "745.52",
            "p99": "643.11",
            "min": "616.59",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "737.92",
            "p50": "723.55",
            "p95": "645.47",
            "p99": "528.55",
            "min": "523.39",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "746.99",
            "p50": "735.23",
            "p95": "650.50",
            "p99": "593.92",
            "min": "592.75",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "916.98",
            "p50": "902.45",
            "p95": "765.15",
            "p99": "652.73",
            "min": "629.75",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "866.69",
            "p50": "837.71",
            "p95": "777.31",
            "p99": "594.76",
            "min": "573.89",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "850.33",
            "p50": "836.30",
            "p95": "734.99",
            "p99": "574.80",
            "min": "561.48",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "839.14",
            "p50": "825.23",
            "p95": "619.72",
            "p99": "495.93",
            "min": "495.52",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "887.47",
            "p50": "869.46",
            "p95": "726.92",
            "p99": "507.47",
            "min": "474.45",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "878.69",
            "p50": "836.01",
            "p95": "693.09",
            "p99": "512.88",
            "min": "499.75",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "109.76",
            "p50": "105.71",
            "p95": "103.39",
            "p99": "99.52",
            "min": "99.08",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "96.31",
            "p50": "95.52",
            "p95": "93.18",
            "p99": "92.71",
            "min": "90.78",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "577.57",
            "p50": "563.30",
            "p95": "508.56",
            "p99": "435.90",
            "min": "402.67",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "130.31",
            "p50": "103.85",
            "p95": "97.33",
            "p99": "110.88",
            "min": "96.22",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "89.95",
            "p50": "88.14",
            "p95": "87.06",
            "p99": "86.88",
            "min": "84.56",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1886.77",
            "p50": "1841.50",
            "p95": "1217.33",
            "p99": "789.96",
            "min": "729.23",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1643.18",
            "p50": "1606.92",
            "p95": "1341.71",
            "p99": "862.52",
            "min": "729.63",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2398.61",
            "p50": "2311.85",
            "p95": "1699.42",
            "p99": "1240.77",
            "min": "1208.98",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2389.13",
            "p50": "2307.74",
            "p95": "2046.16",
            "p99": "1671.99",
            "min": "1563.94",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2365.22",
            "p50": "2291.22",
            "p95": "1539.37",
            "p99": "860.99",
            "min": "844.97",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1699.98",
            "p50": "1661.71",
            "p95": "1384.04",
            "p99": "992.86",
            "min": "945.09",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "828.40",
            "p50": "797.14",
            "p95": "716.87",
            "p99": "676.28",
            "min": "675.24",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "822.92",
            "p50": "795.66",
            "p95": "675.39",
            "p99": "486.19",
            "min": "485.64",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "824.35",
            "p50": "800.17",
            "p95": "677.69",
            "p99": "526.16",
            "min": "506.64",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "833.69",
            "p50": "814.99",
            "p95": "714.17",
            "p99": "528.33",
            "min": "496.01",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.65",
            "p50": "85.98",
            "p95": "82.81",
            "p99": "80.56",
            "min": "80.31",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "770.18",
            "p50": "742.61",
            "p95": "634.12",
            "p99": "435.29",
            "min": "423.24",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "730.59",
            "p50": "699.37",
            "p95": "612.00",
            "p99": "523.08",
            "min": "513.28",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "732.65",
            "p50": "701.56",
            "p95": "650.81",
            "p99": "502.04",
            "min": "492.70",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "733.55",
            "p50": "710.08",
            "p95": "670.28",
            "p99": "497.05",
            "min": "465.28",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2028.06",
            "p50": "1958.47",
            "p95": "1462.13",
            "p99": "991.90",
            "min": "793.96",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2340.02",
            "p50": "2264.65",
            "p95": "1785.42",
            "p99": "1431.47",
            "min": "1391.57",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.46",
            "p50": "72.16",
            "p95": "70.71",
            "p99": "67.53",
            "min": "67.01",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "10000.42",
            "p50": "8191.62",
            "p95": "2559.71",
            "p99": "2246.25",
            "min": "2204.30",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.49",
            "p50": "72.16",
            "p95": "70.89",
            "p99": "68.17",
            "min": "67.64",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "223.76",
            "p50": "222.13",
            "p95": "212.60",
            "p99": "202.13",
            "min": "201.31",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "868.78",
            "p50": "838.72",
            "p95": "704.91",
            "p99": "533.81",
            "min": "512.23",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.97",
            "p50": "661.37",
            "p95": "564.88",
            "p99": "467.60",
            "min": "438.04",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2349.75",
            "p50": "2230.56",
            "p95": "1130.30",
            "p99": "732.22",
            "min": "696.46",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "30506.12",
            "p50": "9416.36",
            "p95": "2651.52",
            "p99": "2196.17",
            "min": "2184.07",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2175.89",
            "p50": "2084.38",
            "p95": "1274.82",
            "p99": "928.43",
            "min": "870.51",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "83852.91",
            "p50": "9897.77",
            "p95": "2534.74",
            "p99": "1898.40",
            "min": "1438.74",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "18006.52",
            "p50": "8900.46",
            "p95": "2477.62",
            "p99": "2322.64",
            "min": "2309.00",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "870.67",
            "p50": "748.87",
            "p95": "637.96",
            "p99": "585.58",
            "min": "579.63",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "990.26",
            "p50": "973.42",
            "p95": "769.38",
            "p99": "585.57",
            "min": "578.45",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "837.87",
            "p50": "823.04",
            "p95": "677.10",
            "p99": "519.02",
            "min": "494.35",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1202.12",
            "p50": "1176.40",
            "p95": "1083.37",
            "p99": "823.76",
            "min": "771.31",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "746.73",
            "p50": "733.87",
            "p95": "634.68",
            "p99": "507.79",
            "min": "506.76",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1156.23",
            "p50": "1132.39",
            "p95": "917.00",
            "p99": "820.32",
            "min": "818.19",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "879.83",
            "p50": "835.75",
            "p95": "726.83",
            "p99": "648.93",
            "min": "647.86",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "933.43",
            "p50": "913.19",
            "p95": "817.34",
            "p99": "609.25",
            "min": "506.25",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2554.52",
            "p50": "2373.77",
            "p95": "1895.49",
            "p99": "1504.48",
            "min": "1458.39",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "855.23",
            "p50": "831.08",
            "p95": "720.37",
            "p99": "612.15",
            "min": "585.36",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.64",
            "p50": "84.36",
            "p95": "74.42",
            "p99": "72.22",
            "min": "72.19",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "89.28",
            "p50": "85.51",
            "p95": "82.46",
            "p99": "75.06",
            "min": "73.64",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "88.83",
            "p50": "84.98",
            "p95": "80.52",
            "p99": "77.88",
            "min": "77.58",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "184.01",
            "p50": "181.49",
            "p95": "174.41",
            "p99": "157.60",
            "min": "155.53",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "95.10",
            "p50": "89.67",
            "p95": "86.42",
            "p99": "84.49",
            "min": "84.17",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "113.20",
            "p50": "109.10",
            "p95": "105.09",
            "p99": "101.52",
            "min": "101.44",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "122.85",
            "p50": "120.43",
            "p95": "107.24",
            "p99": "93.95",
            "min": "93.64",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "125.41",
            "p50": "122.41",
            "p95": "117.20",
            "p99": "112.85",
            "min": "112.78",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "97.96",
            "p50": "96.77",
            "p95": "72.97",
            "p99": "70.67",
            "min": "69.94",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.97",
            "p50": "95.70",
            "p95": "93.24",
            "p99": "91.55",
            "min": "91.34",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "97.39",
            "p50": "95.74",
            "p95": "94.08",
            "p99": "92.65",
            "min": "92.63",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.83",
            "p50": "123.21",
            "p95": "120.91",
            "p99": "115.99",
            "min": "115.23",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "122.43",
            "p50": "116.20",
            "p95": "105.60",
            "p99": "99.07",
            "min": "98.19",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "117.67",
            "p50": "115.61",
            "p95": "111.68",
            "p99": "106.54",
            "min": "106.38",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "86.77",
            "p50": "81.52",
            "p95": "76.66",
            "p99": "70.57",
            "min": "69.02",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "95.59",
            "p50": "94.43",
            "p95": "88.89",
            "p99": "90.01",
            "min": "87.01",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "70.44",
            "p50": "68.82",
            "p95": "66.31",
            "p99": "63.84",
            "min": "62.29",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "150.64",
            "p50": "120.17",
            "p95": "112.31",
            "p99": "128.39",
            "min": "111.61",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "103.76",
            "p50": "101.58",
            "p95": "100.08",
            "p99": "99.92",
            "min": "97.02",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "414.68",
            "p50": "404.07",
            "p95": "379.25",
            "p99": "326.12",
            "min": "310.78",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "489.09",
            "p50": "480.09",
            "p95": "465.34",
            "p99": "380.56",
            "min": "307.36",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "438.24",
            "p50": "421.20",
            "p95": "401.00",
            "p99": "380.79",
            "min": "379.88",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "441.43",
            "p50": "426.78",
            "p95": "393.54",
            "p99": "340.88",
            "min": "299.60",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "446.05",
            "p50": "428.65",
            "p95": "404.44",
            "p99": "350.65",
            "min": "338.61",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "467.58",
            "p50": "459.08",
            "p95": "429.43",
            "p99": "329.99",
            "min": "321.42",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "115.06",
            "p50": "111.69",
            "p95": "108.11",
            "p99": "105.89",
            "min": "105.80",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "115.91",
            "p50": "112.52",
            "p95": "108.47",
            "p99": "104.32",
            "min": "103.80",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "113.66",
            "p50": "110.84",
            "p95": "107.39",
            "p99": "101.52",
            "min": "100.40",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "99.91",
            "p50": "97.69",
            "p95": "94.73",
            "p99": "92.45",
            "min": "91.94",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.95",
            "p50": "85.96",
            "p95": "83.69",
            "p99": "82.57",
            "min": "82.09",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "111.63",
            "p50": "108.31",
            "p95": "103.58",
            "p99": "98.22",
            "min": "97.20",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "107.08",
            "p50": "102.92",
            "p95": "97.75",
            "p99": "87.82",
            "min": "85.55",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "106.74",
            "p50": "102.75",
            "p95": "98.55",
            "p99": "96.38",
            "min": "96.36",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "106.70",
            "p50": "102.68",
            "p95": "98.03",
            "p99": "95.93",
            "min": "95.84",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1385.83",
            "p50": "1275.20",
            "p95": "767.40",
            "p99": "573.50",
            "min": "486.19",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1404.42",
            "p50": "1268.93",
            "p95": "817.20",
            "p99": "450.66",
            "min": "344.26",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "154.55",
            "p50": "152.17",
            "p95": "136.03",
            "p99": "130.33",
            "min": "129.18",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3753.83",
            "p50": "3384.63",
            "p95": "1421.32",
            "p99": "955.68",
            "min": "904.71",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "155.07",
            "p50": "151.63",
            "p95": "135.89",
            "p99": "120.37",
            "min": "117.56",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3745.58",
            "p50": "3374.73",
            "p95": "1249.66",
            "p99": "794.34",
            "min": "702.26",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.60",
            "p50": "96.14",
            "p95": "92.24",
            "p99": "81.32",
            "min": "81.24",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "186.90",
            "p50": "184.23",
            "p95": "176.19",
            "p99": "163.36",
            "min": "159.20",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "389.21",
            "p50": "303.70",
            "p95": "216.68",
            "p99": "187.47",
            "min": "184.65",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9738.91",
            "p50": "2083.89",
            "p95": "923.47",
            "p99": "674.26",
            "min": "674.13",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "371.90",
            "p50": "294.37",
            "p95": "232.57",
            "p99": "177.27",
            "min": "160.12",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "27222.69",
            "p50": "8681.66",
            "p95": "2488.07",
            "p99": "1635.34",
            "min": "1446.73",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6151.19",
            "p50": "3250.01",
            "p95": "1628.03",
            "p99": "876.11",
            "min": "821.04",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "308.07",
            "p50": "254.83",
            "p95": "181.68",
            "p99": "151.48",
            "min": "144.71",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "152.46",
            "p50": "133.14",
            "p95": "118.32",
            "p99": "112.41",
            "min": "111.64",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "123.10",
            "p50": "119.75",
            "p95": "97.58",
            "p99": "89.20",
            "min": "86.76",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "130.73",
            "p50": "121.27",
            "p95": "116.12",
            "p99": "114.33",
            "min": "114.25",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "126.75",
            "p50": "120.29",
            "p95": "118.09",
            "p99": "113.31",
            "min": "112.59",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "163.96",
            "p50": "149.05",
            "p95": "145.21",
            "p99": "138.54",
            "min": "137.00",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "95.41",
            "p50": "92.84",
            "p95": "89.09",
            "p99": "83.37",
            "min": "82.52",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "120.79",
            "p50": "114.90",
            "p95": "111.20",
            "p99": "107.22",
            "min": "105.59",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1080.20",
            "p50": "1007.99",
            "p95": "701.33",
            "p99": "640.69",
            "min": "638.55",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "124.23",
            "p50": "121.65",
            "p95": "111.01",
            "p99": "100.28",
            "min": "99.98",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}