{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "109.86",
            "p50": "106.57",
            "p95": "98.84",
            "p99": "96.32",
            "min": "96.09",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1120.00",
            "p50": "947.57",
            "p95": "655.56",
            "p99": "515.21",
            "min": "509.70",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "110.54",
            "p50": "106.59",
            "p95": "98.29",
            "p99": "93.41",
            "min": "92.33",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "762.99",
            "p50": "709.11",
            "p95": "490.60",
            "p99": "426.37",
            "min": "424.89",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "406.66",
            "p50": "372.55",
            "p95": "307.16",
            "p99": "276.46",
            "min": "272.74",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "432.11",
            "p50": "405.68",
            "p95": "309.47",
            "p99": "290.64",
            "min": "290.50",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "295.05",
            "p50": "275.85",
            "p95": "196.57",
            "p99": "192.59",
            "min": "192.43",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "184.62",
            "p50": "175.38",
            "p95": "160.20",
            "p99": "152.16",
            "min": "151.89",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "256.97",
            "p50": "240.03",
            "p95": "210.06",
            "p99": "200.55",
            "min": "200.11",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "264.85",
            "p50": "246.92",
            "p95": "212.71",
            "p99": "201.40",
            "min": "200.89",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "263.02",
            "p50": "242.86",
            "p95": "207.59",
            "p99": "192.91",
            "min": "190.78",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "204.13",
            "p50": "195.05",
            "p95": "173.73",
            "p99": "162.57",
            "min": "162.05",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "338.97",
            "p50": "317.60",
            "p95": "266.38",
            "p99": "247.11",
            "min": "243.87",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "300.69",
            "p50": "278.52",
            "p95": "233.52",
            "p99": "224.13",
            "min": "223.86",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8619.52",
            "p50": "3975.52",
            "p95": "1897.45",
            "p99": "1629.09",
            "min": "1626.46",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "3010.36",
            "p50": "1832.89",
            "p95": "988.57",
            "p99": "1626.57",
            "min": "881.45",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "331.65",
            "p50": "294.12",
            "p95": "254.19",
            "p99": "255.71",
            "min": "237.90",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1430.56",
            "p50": "783.84",
            "p95": "398.25",
            "p99": "815.09",
            "min": "350.79",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7814.74",
            "p50": "3119.57",
            "p95": "1567.09",
            "p99": "4168.53",
            "min": "1417.88",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "825.55",
            "p50": "723.42",
            "p95": "530.78",
            "p99": "424.38",
            "min": "421.25",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "815.04",
            "p50": "731.39",
            "p95": "548.90",
            "p99": "486.40",
            "min": "486.37",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "943.65",
            "p50": "796.79",
            "p95": "566.51",
            "p99": "509.72",
            "min": "491.83",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2432.17",
            "p50": "1831.66",
            "p95": "949.69",
            "p99": "745.08",
            "min": "722.32",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2416.24",
            "p50": "1840.10",
            "p95": "955.28",
            "p99": "759.58",
            "min": "736.06",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "808.35",
            "p50": "746.33",
            "p95": "534.88",
            "p99": "458.34",
            "min": "445.03",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "168.19",
            "p50": "156.20",
            "p95": "144.69",
            "p99": "134.75",
            "min": "133.51",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "562.88",
            "p50": "499.14",
            "p95": "404.43",
            "p99": "380.50",
            "min": "379.45",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "167.07",
            "p50": "156.27",
            "p95": "143.39",
            "p99": "137.28",
            "min": "136.49",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "186.95",
            "p50": "172.91",
            "p95": "161.33",
            "p99": "154.21",
            "min": "154.19",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "33068.98",
            "p50": "8535.69",
            "p95": "2278.73",
            "p99": "1406.86",
            "min": "1093.53",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "423.38",
            "p50": "384.85",
            "p95": "316.35",
            "p99": "283.14",
            "min": "280.76",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "399.27",
            "p50": "365.36",
            "p95": "303.49",
            "p99": "274.22",
            "min": "271.42",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "399.65",
            "p50": "370.06",
            "p95": "311.91",
            "p99": "273.59",
            "min": "269.59",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "405.77",
            "p50": "365.87",
            "p95": "322.37",
            "p99": "277.70",
            "min": "272.39",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "17034.78",
            "p50": "5438.16",
            "p95": "2283.56",
            "p99": "1197.72",
            "min": "573.90",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "17300.37",
            "p50": "5683.70",
            "p95": "2477.97",
            "p99": "1981.69",
            "min": "1894.23",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "16027.63",
            "p50": "5214.88",
            "p95": "2455.75",
            "p99": "1909.19",
            "min": "1864.58",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "17303.41",
            "p50": "5869.65",
            "p95": "2522.84",
            "p99": "1879.86",
            "min": "1799.28",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "16099.25",
            "p50": "5127.37",
            "p95": "2346.58",
            "p99": "1740.51",
            "min": "1534.56",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "17207.58",
            "p50": "5607.74",
            "p95": "2422.95",
            "p99": "1776.27",
            "min": "1549.59",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "263.52",
            "p50": "241.98",
            "p95": "212.47",
            "p99": "194.28",
            "min": "193.87",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "525.54",
            "p50": "492.21",
            "p95": "389.92",
            "p99": "344.05",
            "min": "323.97",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1651.59",
            "p50": "1331.73",
            "p95": "381.07",
            "p99": "307.03",
            "min": "304.38",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "22796.81",
            "p50": "5243.95",
            "p95": "193.46",
            "p99": "187.84",
            "min": "187.35",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1407.50",
            "p50": "1255.62",
            "p95": "783.99",
            "p99": "574.61",
            "min": "560.23",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "55321.04",
            "p50": "8855.69",
            "p95": "2312.27",
            "p99": "1152.25",
            "min": "967.00",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14887.30",
            "p50": "6313.67",
            "p95": "198.43",
            "p99": "187.04",
            "min": "186.07",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "570.37",
            "p50": "500.36",
            "p95": "409.57",
            "p99": "347.60",
            "min": "343.91",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "549.49",
            "p50": "494.92",
            "p95": "391.23",
            "p99": "343.40",
            "min": "342.16",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "201.02",
            "p50": "193.51",
            "p95": "178.19",
            "p99": "169.53",
            "min": "169.20",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "387.53",
            "p50": "364.89",
            "p95": "306.12",
            "p99": "272.64",
            "min": "268.14",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "201.47",
            "p50": "194.10",
            "p95": "171.37",
            "p99": "163.60",
            "min": "163.27",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "340.25",
            "p50": "321.71",
            "p95": "266.92",
            "p99": "240.56",
            "min": "236.57",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "263.21",
            "p50": "243.77",
            "p95": "211.51",
            "p99": "200.82",
            "min": "199.88",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "572.41",
            "p50": "529.68",
            "p95": "407.17",
            "p99": "358.55",
            "min": "356.98",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1466.53",
            "p50": "1285.01",
            "p95": "969.46",
            "p99": "708.77",
            "min": "697.66",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "290.51",
            "p50": "276.13",
            "p95": "234.35",
            "p99": "221.03",
            "min": "220.92",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "138.13",
            "p50": "136.59",
            "p95": "124.87",
            "p99": "120.86",
            "min": "120.84",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "138.23",
            "p50": "136.20",
            "p95": "127.79",
            "p99": "116.55",
            "min": "116.15",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "138.07",
            "p50": "135.58",
            "p95": "126.09",
            "p99": "113.74",
            "min": "111.99",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "232.71",
            "p50": "229.21",
            "p95": "211.39",
            "p99": "183.38",
            "min": "176.16",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "192.91",
            "p50": "187.84",
            "p95": "167.12",
            "p99": "129.50",
            "min": "123.77",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "204.93",
            "p50": "200.36",
            "p95": "178.89",
            "p99": "118.59",
            "min": "97.36",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "191.17",
            "p50": "183.83",
            "p95": "158.13",
            "p99": "133.43",
            "min": "130.30",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "186.61",
            "p50": "179.96",
            "p95": "164.43",
            "p99": "117.51",
            "min": "108.33",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "214.10",
            "p50": "207.97",
            "p95": "183.60",
            "p99": "168.16",
            "min": "167.68",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "183.94",
            "p50": "177.88",
            "p95": "160.75",
            "p99": "96.00",
            "min": "90.42",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "211.59",
            "p50": "206.51",
            "p95": "183.40",
            "p99": "151.59",
            "min": "145.59",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "148.39",
            "p50": "144.19",
            "p95": "134.31",
            "p99": "115.38",
            "min": "112.45",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "231.07",
            "p50": "227.03",
            "p95": "195.73",
            "p99": "172.02",
            "min": "166.62",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "184.60",
            "p50": "179.01",
            "p95": "159.34",
            "p99": "144.20",
            "min": "142.18",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "73.04",
            "p50": "70.51",
            "p95": "68.48",
            "p99": "65.70",
            "min": "65.61",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "142.90",
            "p50": "141.67",
            "p95": "132.17",
            "p99": "134.42",
            "min": "129.85",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "482.14",
            "p50": "398.83",
            "p95": "313.90",
            "p99": "319.23",
            "min": "281.02",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "196.02",
            "p50": "153.09",
            "p95": "142.26",
            "p99": "164.99",
            "min": "141.58",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.52",
            "p50": "132.83",
            "p95": "117.82",
            "p99": "125.22",
            "min": "117.46",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1247.86",
            "p50": "1170.03",
            "p95": "694.52",
            "p99": "620.64",
            "min": "619.53",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1063.27",
            "p50": "1039.08",
            "p95": "678.68",
            "p99": "609.64",
            "min": "600.73",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1509.72",
            "p50": "1397.14",
            "p95": "914.52",
            "p99": "647.49",
            "min": "603.36",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1380.53",
            "p50": "1308.26",
            "p95": "739.69",
            "p99": "580.73",
            "min": "497.60",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1364.96",
            "p50": "1281.34",
            "p95": "796.44",
            "p99": "629.13",
            "min": "571.52",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1102.25",
            "p50": "1066.51",
            "p95": "772.93",
            "p99": "628.07",
            "min": "598.28",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "736.97",
            "p50": "646.20",
            "p95": "473.12",
            "p99": "339.41",
            "min": "321.54",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "739.28",
            "p50": "690.75",
            "p95": "457.86",
            "p99": "411.41",
            "min": "405.87",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "745.99",
            "p50": "660.97",
            "p95": "502.86",
            "p99": "439.60",
            "min": "435.74",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "745.74",
            "p50": "650.90",
            "p95": "482.12",
            "p99": "414.93",
            "min": "411.38",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "296.78",
            "p50": "291.18",
            "p95": "256.06",
            "p99": "235.17",
            "min": "229.98",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "656.66",
            "p50": "552.89",
            "p95": "441.68",
            "p99": "391.11",
            "min": "382.22",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "639.82",
            "p50": "556.24",
            "p95": "408.39",
            "p99": "338.27",
            "min": "331.21",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "648.98",
            "p50": "588.84",
            "p95": "461.85",
            "p99": "382.04",
            "min": "376.44",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "666.28",
            "p50": "593.44",
            "p95": "456.74",
            "p99": "369.20",
            "min": "368.84",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "107.50",
            "p50": "106.08",
            "p95": "99.39",
            "p99": "98.13",
            "min": "98.05",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "107.45",
            "p50": "105.94",
            "p95": "99.76",
            "p99": "98.24",
            "min": "98.23",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.99",
            "p50": "98.15",
            "p95": "92.95",
            "p99": "89.95",
            "min": "89.69",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "257.88",
            "p50": "253.07",
            "p95": "227.29",
            "p99": "208.17",
            "min": "195.98",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.96",
            "p50": "98.49",
            "p95": "93.75",
            "p99": "90.69",
            "min": "90.30",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "250.10",
            "p50": "247.11",
            "p95": "219.46",
            "p99": "187.44",
            "min": "178.23",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "211.73",
            "p50": "208.03",
            "p95": "186.91",
            "p99": "179.68",
            "min": "179.28",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "240.94",
            "p50": "235.76",
            "p95": "206.23",
            "p99": "199.78",
            "min": "199.36",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "575.71",
            "p50": "561.05",
            "p95": "422.20",
            "p99": "367.07",
            "min": "348.89",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7544.72",
            "p50": "5115.78",
            "p95": "2283.45",
            "p99": "1956.35",
            "min": "1832.04",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "536.27",
            "p50": "524.06",
            "p95": "431.44",
            "p99": "360.46",
            "min": "353.95",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "20843.76",
            "p50": "7180.76",
            "p95": "2377.00",
            "p99": "1464.38",
            "min": "1413.32",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4595.49",
            "p50": "3516.44",
            "p95": "1784.25",
            "p99": "1360.11",
            "min": "1354.70",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "253.91",
            "p50": "216.57",
            "p95": "192.39",
            "p99": "171.17",
            "min": "167.74",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "266.96",
            "p50": "262.36",
            "p95": "220.97",
            "p99": "175.32",
            "min": "160.96",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "148.26",
            "p50": "146.06",
            "p95": "135.00",
            "p99": "129.24",
            "min": "127.93",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "244.25",
            "p50": "239.38",
            "p95": "199.68",
            "p99": "176.91",
            "min": "172.93",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "186.79",
            "p50": "183.78",
            "p95": "159.38",
            "p99": "85.44",
            "min": "83.92",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "221.17",
            "p50": "216.85",
            "p95": "188.16",
            "p99": "176.59",
            "min": "176.20",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "210.53",
            "p50": "207.09",
            "p95": "176.24",
            "p99": "171.98",
            "min": "171.94",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "210.76",
            "p50": "206.96",
            "p95": "187.85",
            "p99": "183.12",
            "min": "182.76",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1324.67",
            "p50": "1172.93",
            "p95": "946.16",
            "p99": "702.70",
            "min": "681.57",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "183.91",
            "p50": "180.35",
            "p95": "165.87",
            "p99": "159.22",
            "min": "158.66",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.32",
            "p50": "192.48",
            "p95": "190.39",
            "p99": "189.06",
            "min": "188.86",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.60",
            "p50": "192.72",
            "p95": "190.03",
            "p99": "184.31",
            "min": "183.24",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.94",
            "p50": "193.27",
            "p95": "191.75",
            "p99": "188.29",
            "min": "187.49",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1189.93",
            "p50": "1159.88",
            "p95": "1101.36",
            "p99": "902.05",
            "min": "841.57",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "700.74",
            "p50": "689.76",
            "p95": "628.22",
            "p99": "607.17",
            "min": "603.72",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "811.58",
            "p50": "794.52",
            "p95": "740.01",
            "p99": "699.56",
            "min": "695.59",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "737.63",
            "p50": "722.72",
            "p95": "668.58",
            "p99": "555.37",
            "min": "542.14",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "749.90",
            "p50": "735.26",
            "p95": "691.57",
            "p99": "592.55",
            "min": "590.51",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "920.96",
            "p50": "897.07",
            "p95": "758.36",
            "p99": "555.46",
            "min": "518.57",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "886.14",
            "p50": "870.23",
            "p95": "833.23",
            "p99": "754.42",
            "min": "753.09",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "884.35",
            "p50": "866.62",
            "p95": "732.50",
            "p99": "645.29",
            "min": "640.17",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "837.84",
            "p50": "823.64",
            "p95": "699.74",
            "p99": "502.37",
            "min": "478.22",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "884.20",
            "p50": "859.69",
            "p95": "802.57",
            "p99": "577.66",
            "min": "519.91",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "884.23",
            "p50": "865.49",
            "p95": "767.75",
            "p99": "624.79",
            "min": "609.36",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "113.25",
            "p50": "109.29",
            "p95": "107.31",
            "p99": "106.69",
            "min": "106.66",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "96.03",
            "p50": "95.20",
            "p95": "94.30",
            "p99": "94.77",
            "min": "94.10",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "603.48",
            "p50": "583.61",
            "p95": "560.22",
            "p99": "522.60",
            "min": "503.63",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "128.66",
            "p50": "103.48",
            "p95": "96.74",
            "p99": "110.39",
            "min": "96.61",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "89.63",
            "p50": "87.82",
            "p95": "86.92",
            "p99": "87.09",
            "min": "85.17",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1929.95",
            "p50": "1871.44",
            "p95": "1300.64",
            "p99": "784.79",
            "min": "719.40",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1641.36",
            "p50": "1592.63",
            "p95": "1438.72",
            "p99": "1069.65",
            "min": "1066.69",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2506.38",
            "p50": "2399.81",
            "p95": "1792.55",
            "p99": "1155.85",
            "min": "1004.97",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2507.07",
            "p50": "2392.32",
            "p95": "1605.22",
            "p99": "968.72",
            "min": "952.61",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2474.80",
            "p50": "2387.60",
            "p95": "1964.09",
            "p99": "1281.30",
            "min": "1110.78",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1708.45",
            "p50": "1657.64",
            "p95": "1307.97",
            "p99": "950.90",
            "min": "827.90",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "882.91",
            "p50": "844.50",
            "p95": "794.19",
            "p99": "600.43",
            "min": "578.47",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "877.28",
            "p50": "842.63",
            "p95": "773.94",
            "p99": "592.46",
            "min": "557.36",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "888.21",
            "p50": "851.55",
            "p95": "805.00",
            "p99": "726.16",
            "min": "721.60",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "879.67",
            "p50": "855.22",
            "p95": "820.72",
            "p99": "564.45",
            "min": "506.02",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.02",
            "p50": "86.28",
            "p95": "83.41",
            "p99": "82.80",
            "min": "82.80",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "801.13",
            "p50": "775.49",
            "p95": "748.81",
            "p99": "714.74",
            "min": "709.13",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "756.69",
            "p50": "731.12",
            "p95": "668.21",
            "p99": "598.58",
            "min": "597.96",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "753.16",
            "p50": "731.63",
            "p95": "682.12",
            "p99": "641.56",
            "min": "641.29",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "765.93",
            "p50": "733.93",
            "p95": "701.28",
            "p99": "605.05",
            "min": "602.65",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2031.50",
            "p50": "1955.73",
            "p95": "1459.97",
            "p99": "928.60",
            "min": "834.51",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2342.95",
            "p50": "2249.57",
            "p95": "1600.59",
            "p99": "893.53",
            "min": "862.55",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.39",
            "p50": "71.89",
            "p95": "71.22",
            "p99": "68.45",
            "min": "67.84",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9959.00",
            "p50": "8205.25",
            "p95": "2338.26",
            "p99": "1792.83",
            "min": "1717.78",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.40",
            "p50": "71.83",
            "p95": "71.46",
            "p99": "69.38",
            "min": "69.01",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "223.11",
            "p50": "220.73",
            "p95": "215.46",
            "p99": "205.90",
            "min": "200.39",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "883.15",
            "p50": "866.69",
            "p95": "751.78",
            "p99": "505.49",
            "min": "448.90",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.15",
            "p50": "658.99",
            "p95": "637.44",
            "p99": "597.37",
            "min": "587.72",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2261.49",
            "p50": "2127.39",
            "p95": "1473.38",
            "p99": "1086.10",
            "min": "1082.52",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "15583.91",
            "p50": "8532.88",
            "p95": "2352.92",
            "p99": "1462.51",
            "min": "1426.51",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2086.96",
            "p50": "1988.12",
            "p95": "1398.22",
            "p99": "721.39",
            "min": "653.67",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "76841.57",
            "p50": "8513.12",
            "p95": "2277.46",
            "p99": "1922.31",
            "min": "1903.15",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15434.31",
            "p50": "7845.95",
            "p95": "2326.22",
            "p99": "1361.59",
            "min": "1314.56",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "801.17",
            "p50": "684.01",
            "p95": "571.84",
            "p99": "533.53",
            "min": "520.95",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "990.18",
            "p50": "966.93",
            "p95": "759.06",
            "p99": "658.57",
            "min": "636.55",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "839.09",
            "p50": "816.67",
            "p95": "737.30",
            "p99": "634.78",
            "min": "620.89",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1198.26",
            "p50": "1164.40",
            "p95": "1093.37",
            "p99": "1035.61",
            "min": "1035.43",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "747.72",
            "p50": "731.48",
            "p95": "639.15",
            "p99": "554.05",
            "min": "553.98",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1154.88",
            "p50": "1123.20",
            "p95": "1046.17",
            "p99": "853.24",
            "min": "846.08",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "894.16",
            "p50": "876.44",
            "p95": "835.46",
            "p99": "693.05",
            "min": "692.85",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "932.11",
            "p50": "910.96",
            "p95": "825.16",
            "p99": "562.42",
            "min": "469.43",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2422.91",
            "p50": "2075.53",
            "p95": "1707.26",
            "p99": "1399.99",
            "min": "1381.08",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "876.64",
            "p50": "855.81",
            "p95": "779.84",
            "p99": "506.32",
            "min": "478.33",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "124.93",
            "p50": "121.18",
            "p95": "107.62",
            "p99": "101.70",
            "min": "101.22",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "124.86",
            "p50": "120.84",
            "p95": "111.17",
            "p99": "103.43",
            "min": "103.33",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "124.18",
            "p50": "120.75",
            "p95": "108.07",
            "p99": "98.74",
            "min": "97.90",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "211.90",
            "p50": "196.14",
            "p95": "164.80",
            "p99": "150.34",
            "min": "146.73",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "103.72",
            "p50": "99.33",
            "p95": "83.86",
            "p99": "77.04",
            "min": "76.74",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.01",
            "p50": "103.99",
            "p95": "90.03",
            "p99": "84.09",
            "min": "83.20",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "140.29",
            "p50": "130.78",
            "p95": "108.03",
            "p99": "83.93",
            "min": "83.05",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "139.39",
            "p50": "130.54",
            "p95": "111.30",
            "p99": "103.28",
            "min": "102.58",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "182.03",
            "p50": "167.27",
            "p95": "133.95",
            "p99": "124.87",
            "min": "124.39",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "179.14",
            "p50": "164.84",
            "p95": "129.78",
            "p99": "92.10",
            "min": "83.81",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "178.49",
            "p50": "164.92",
            "p95": "127.10",
            "p99": "116.68",
            "min": "114.55",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.50",
            "p50": "121.60",
            "p95": "99.13",
            "p99": "65.32",
            "min": "64.22",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "203.87",
            "p50": "185.13",
            "p95": "148.09",
            "p99": "115.26",
            "min": "107.27",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "185.41",
            "p50": "169.06",
            "p95": "133.87",
            "p99": "126.70",
            "min": "126.39",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "75.12",
            "p50": "71.22",
            "p95": "65.04",
            "p99": "61.38",
            "min": "61.33",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "130.70",
            "p50": "121.22",
            "p95": "102.91",
            "p99": "109.68",
            "min": "98.36",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "209.89",
            "p50": "186.70",
            "p95": "151.60",
            "p99": "145.04",
            "min": "129.83",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "157.06",
            "p50": "134.95",
            "p95": "132.35",
            "p99": "142.69",
            "min": "131.85",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "127.74",
            "p50": "116.35",
            "p95": "98.64",
            "p99": "103.09",
            "min": "84.50",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1040.72",
            "p50": "695.51",
            "p95": "387.06",
            "p99": "262.18",
            "min": "255.49",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "985.51",
            "p50": "681.19",
            "p95": "334.06",
            "p99": "271.81",
            "min": "256.54",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1118.10",
            "p50": "740.43",
            "p95": "324.99",
            "p99": "279.45",
            "min": "265.82",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1062.13",
            "p50": "688.95",
            "p95": "391.44",
            "p99": "279.63",
            "min": "276.07",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1006.62",
            "p50": "691.37",
            "p95": "351.20",
            "p99": "281.99",
            "min": "281.48",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1021.01",
            "p50": "699.55",
            "p95": "326.60",
            "p99": "258.29",
            "min": "254.33",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "338.88",
            "p50": "292.18",
            "p95": "209.75",
            "p99": "179.69",
            "min": "178.58",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "334.16",
            "p50": "286.48",
            "p95": "207.36",
            "p99": "175.47",
            "min": "172.41",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "335.41",
            "p50": "288.01",
            "p95": "210.92",
            "p99": "183.77",
            "min": "180.03",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "361.77",
            "p50": "311.87",
            "p95": "216.63",
            "p99": "187.32",
            "min": "185.89",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "284.21",
            "p50": "250.08",
            "p95": "184.50",
            "p99": "167.27",
            "min": "166.80",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "286.87",
            "p50": "254.08",
            "p95": "189.13",
            "p99": "174.03",
            "min": "173.99",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "279.40",
            "p50": "247.92",
            "p95": "181.78",
            "p99": "170.85",
            "min": "170.76",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "286.21",
            "p50": "253.24",
            "p95": "179.33",
            "p99": "167.81",
            "min": "167.32",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "283.85",
            "p50": "251.05",
            "p95": "183.76",
            "p99": "167.73",
            "min": "166.54",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.59",
            "p50": "99.89",
            "p95": "87.60",
            "p99": "82.71",
            "min": "82.29",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.10",
            "p50": "99.79",
            "p95": "85.89",
            "p99": "83.19",
            "min": "82.96",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.81",
            "p50": "92.56",
            "p95": "81.20",
            "p99": "77.96",
            "min": "77.80",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "248.93",
            "p50": "220.42",
            "p95": "170.71",
            "p99": "148.16",
            "min": "146.51",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.51",
            "p50": "92.62",
            "p95": "82.56",
            "p99": "79.69",
            "min": "79.13",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "243.40",
            "p50": "213.97",
            "p95": "177.16",
            "p99": "158.11",
            "min": "149.18",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "183.63",
            "p50": "168.36",
            "p95": "134.27",
            "p99": "125.56",
            "min": "125.33",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "148.96",
            "p50": "137.88",
            "p95": "112.10",
            "p99": "106.56",
            "min": "105.05",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "442.11",
            "p50": "396.21",
            "p95": "269.68",
            "p99": "241.23",
            "min": "240.20",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5560.85",
            "p50": "2191.86",
            "p95": "672.69",
            "p99": "580.75",
            "min": "548.83",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "442.11",
            "p50": "395.94",
            "p95": "280.66",
            "p99": "245.72",
            "min": "244.92",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14559.62",
            "p50": "3579.07",
            "p95": "1257.97",
            "p99": "797.20",
            "min": "771.35",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3523.10",
            "p50": "1959.85",
            "p95": "737.91",
            "p99": "543.12",
            "min": "528.51",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "210.88",
            "p50": "196.49",
            "p95": "162.67",
            "p99": "151.53",
            "min": "149.34",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "234.27",
            "p50": "221.57",
            "p95": "181.88",
            "p99": "156.44",
            "min": "151.72",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "130.82",
            "p50": "122.71",
            "p95": "102.84",
            "p99": "76.31",
            "min": "68.65",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "209.30",
            "p50": "188.90",
            "p95": "145.35",
            "p99": "128.07",
            "min": "125.65",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "138.06",
            "p50": "129.59",
            "p95": "105.06",
            "p99": "101.44",
            "min": "101.16",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "176.46",
            "p50": "161.81",
            "p95": "128.72",
            "p99": "118.37",
            "min": "116.79",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "177.86",
            "p50": "163.98",
            "p95": "128.38",
            "p99": "123.57",
            "min": "123.49",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "181.10",
            "p50": "164.66",
            "p95": "135.85",
            "p99": "122.77",
            "min": "121.65",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "310.89",
            "p50": "256.75",
            "p95": "56.70",
            "p99": "50.63",
            "min": "50.60",
            "n": "105",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "145.83",
            "p50": "139.43",
            "p95": "120.84",
            "p99": "62.04",
            "min": "59.51",
            "n": "105",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.25",
            "p50": "83.47",
            "p95": "74.98",
            "p99": "68.62",
            "min": "68.58",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "88.92",
            "p50": "84.36",
            "p95": "80.68",
            "p99": "78.47",
            "min": "78.36",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "88.24",
            "p50": "84.07",
            "p95": "80.15",
            "p99": "76.43",
            "min": "76.33",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "192.41",
            "p50": "182.33",
            "p95": "175.24",
            "p99": "141.03",
            "min": "131.95",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "91.67",
            "p50": "89.48",
            "p95": "86.12",
            "p99": "84.36",
            "min": "84.12",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "111.10",
            "p50": "108.06",
            "p95": "104.86",
            "p99": "99.52",
            "min": "98.31",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "124.06",
            "p50": "120.21",
            "p95": "105.07",
            "p99": "96.96",
            "min": "96.85",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "128.56",
            "p50": "123.35",
            "p95": "113.23",
            "p99": "110.94",
            "min": "110.86",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "98.09",
            "p50": "95.87",
            "p95": "74.64",
            "p99": "74.16",
            "min": "74.15",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.88",
            "p50": "96.06",
            "p95": "87.03",
            "p99": "86.06",
            "min": "86.03",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.24",
            "p50": "96.29",
            "p95": "87.32",
            "p99": "85.71",
            "min": "85.45",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.07",
            "p50": "122.67",
            "p95": "112.32",
            "p99": "106.07",
            "min": "104.94",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "122.56",
            "p50": "112.38",
            "p95": "104.34",
            "p99": "101.53",
            "min": "101.42",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "116.36",
            "p50": "114.44",
            "p95": "102.36",
            "p99": "89.62",
            "min": "87.79",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "88.43",
            "p50": "83.34",
            "p95": "77.54",
            "p99": "72.64",
            "min": "72.30",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "101.24",
            "p50": "99.97",
            "p95": "94.53",
            "p99": "92.18",
            "min": "87.30",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "71.18",
            "p50": "69.17",
            "p95": "65.14",
            "p99": "59.54",
            "min": "56.80",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "158.80",
            "p50": "127.19",
            "p95": "119.36",
            "p99": "136.26",
            "min": "119.25",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "110.05",
            "p50": "107.81",
            "p95": "106.43",
            "p99": "105.21",
            "min": "101.55",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "421.52",
            "p50": "403.27",
            "p95": "379.30",
            "p99": "335.65",
            "min": "331.26",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "485.96",
            "p50": "476.62",
            "p95": "440.83",
            "p99": "358.70",
            "min": "334.69",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "442.33",
            "p50": "422.19",
            "p95": "397.06",
            "p99": "347.25",
            "min": "317.84",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "446.72",
            "p50": "427.53",
            "p95": "404.69",
            "p99": "333.15",
            "min": "300.10",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "449.67",
            "p50": "429.58",
            "p95": "398.52",
            "p99": "328.03",
            "min": "306.70",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "466.88",
            "p50": "456.89",
            "p95": "441.38",
            "p99": "377.63",
            "min": "368.66",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "116.79",
            "p50": "112.00",
            "p95": "108.71",
            "p99": "102.77",
            "min": "102.67",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "118.05",
            "p50": "113.06",
            "p95": "108.91",
            "p99": "101.85",
            "min": "100.55",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "115.56",
            "p50": "111.50",
            "p95": "107.39",
            "p99": "105.95",
            "min": "105.90",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "100.91",
            "p50": "98.25",
            "p95": "94.74",
            "p99": "91.43",
            "min": "91.37",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.72",
            "p50": "85.89",
            "p95": "84.76",
            "p99": "82.04",
            "min": "81.55",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "112.75",
            "p50": "107.47",
            "p95": "104.22",
            "p99": "102.00",
            "min": "101.54",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "108.41",
            "p50": "103.26",
            "p95": "99.20",
            "p99": "97.95",
            "min": "97.94",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "107.60",
            "p50": "102.40",
            "p95": "98.46",
            "p99": "95.56",
            "min": "95.15",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "106.88",
            "p50": "102.50",
            "p95": "98.81",
            "p99": "96.39",
            "min": "96.27",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1566.35",
            "p50": "1376.59",
            "p95": "865.09",
            "p99": "454.25",
            "min": "426.92",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1555.78",
            "p50": "1382.73",
            "p95": "841.69",
            "p99": "472.83",
            "min": "357.38",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "156.05",
            "p50": "152.96",
            "p95": "139.39",
            "p99": "126.51",
            "min": "121.61",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3795.57",
            "p50": "3384.90",
            "p95": "1153.29",
            "p99": "644.02",
            "min": "573.26",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "156.84",
            "p50": "153.11",
            "p95": "133.22",
            "p99": "123.85",
            "min": "123.27",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3753.95",
            "p50": "3340.30",
            "p95": "1417.25",
            "p99": "812.95",
            "min": "648.29",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.55",
            "p50": "96.69",
            "p95": "87.17",
            "p99": "83.69",
            "min": "83.21",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "187.47",
            "p50": "182.32",
            "p95": "176.53",
            "p99": "160.50",
            "min": "159.74",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "349.25",
            "p50": "259.70",
            "p95": "211.53",
            "p99": "180.09",
            "min": "178.26",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9496.35",
            "p50": "1653.77",
            "p95": "902.54",
            "p99": "475.96",
            "min": "431.19",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "353.48",
            "p50": "261.41",
            "p95": "209.84",
            "p99": "188.92",
            "min": "184.28",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "25122.13",
            "p50": "8354.66",
            "p95": "2538.22",
            "p99": "1513.07",
            "min": "1106.62",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "5990.92",
            "p50": "3384.93",
            "p95": "1596.22",
            "p99": "879.25",
            "min": "644.51",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "291.11",
            "p50": "228.18",
            "p95": "183.17",
            "p99": "144.97",
            "min": "142.09",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "152.53",
            "p50": "132.00",
            "p95": "115.63",
            "p99": "107.67",
            "min": "106.08",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "123.18",
            "p50": "117.85",
            "p95": "96.61",
            "p99": "87.95",
            "min": "87.87",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "131.41",
            "p50": "122.54",
            "p95": "105.48",
            "p99": "70.36",
            "min": "67.90",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "123.72",
            "p50": "119.22",
            "p95": "113.99",
            "p99": "110.68",
            "min": "110.59",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "164.36",
            "p50": "152.04",
            "p95": "146.86",
            "p99": "130.95",
            "min": "120.30",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "96.22",
            "p50": "93.07",
            "p95": "75.54",
            "p99": "73.34",
            "min": "73.18",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "117.38",
            "p50": "112.02",
            "p95": "106.05",
            "p99": "104.34",
            "min": "104.25",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1143.85",
            "p50": "1069.36",
            "p95": "734.66",
            "p99": "632.16",
            "min": "628.28",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "124.77",
            "p50": "120.70",
            "p95": "104.14",
            "p99": "95.78",
            "min": "94.98",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}