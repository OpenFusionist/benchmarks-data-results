{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "169.99",
            "p50": "168.07",
            "p95": "156.92",
            "p99": "152.75",
            "min": "152.69",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "170.46",
            "p50": "168.58",
            "p95": "166.28",
            "p99": "164.55",
            "min": "164.33",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "169.83",
            "p50": "167.98",
            "p95": "163.92",
            "p99": "154.99",
            "min": "153.01",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "759.30",
            "p50": "745.87",
            "p95": "212.41",
            "p99": "206.31",
            "min": "204.16",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "399.59",
            "p50": "392.81",
            "p95": "324.17",
            "p99": "310.62",
            "min": "309.08",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "436.53",
            "p50": "428.22",
            "p95": "242.11",
            "p99": "235.54",
            "min": "235.49",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "325.00",
            "p50": "317.88",
            "p95": "308.28",
            "p99": "302.72",
            "min": "302.69",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "187.48",
            "p50": "184.23",
            "p95": "180.14",
            "p99": "173.44",
            "min": "172.26",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "266.91",
            "p50": "259.06",
            "p95": "242.88",
            "p99": "235.75",
            "min": "235.21",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "264.39",
            "p50": "254.45",
            "p95": "250.85",
            "p99": "248.46",
            "min": "248.33",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "266.52",
            "p50": "257.69",
            "p95": "250.81",
            "p99": "245.48",
            "min": "245.42",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "189.79",
            "p50": "187.94",
            "p95": "185.32",
            "p99": "180.12",
            "min": "179.21",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "318.22",
            "p50": "315.23",
            "p95": "290.89",
            "p99": "284.13",
            "min": "281.91",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "308.91",
            "p50": "302.99",
            "p95": "196.38",
            "p99": "194.85",
            "min": "194.82",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "111.09",
            "p50": "106.89",
            "p95": "105.07",
            "p99": "103.74",
            "min": "103.26",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "170.31",
            "p50": "167.72",
            "p95": "162.90",
            "p99": "164.87",
            "min": "161.95",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "295.78",
            "p50": "245.63",
            "p95": "228.20",
            "p99": "236.12",
            "min": "222.12",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "242.55",
            "p50": "193.65",
            "p95": "181.65",
            "p99": "207.69",
            "min": "181.40",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "167.44",
            "p50": "164.37",
            "p95": "163.13",
            "p99": "164.68",
            "min": "162.60",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "890.70",
            "p50": "819.58",
            "p95": "785.24",
            "p99": "764.85",
            "min": "752.87",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "846.56",
            "p50": "818.09",
            "p95": "792.04",
            "p99": "757.95",
            "min": "757.76",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1037.75",
            "p50": "945.11",
            "p95": "895.87",
            "p99": "870.33",
            "min": "867.81",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1081.39",
            "p50": "962.34",
            "p95": "909.74",
            "p99": "714.80",
            "min": "553.83",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1081.73",
            "p50": "968.60",
            "p95": "932.05",
            "p99": "904.83",
            "min": "901.41",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "855.21",
            "p50": "815.39",
            "p95": "781.81",
            "p99": "730.71",
            "min": "700.85",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "200.33",
            "p50": "186.38",
            "p95": "182.52",
            "p99": "176.80",
            "min": "175.85",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "198.53",
            "p50": "185.97",
            "p95": "182.40",
            "p99": "179.54",
            "min": "178.98",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "197.65",
            "p50": "187.01",
            "p95": "182.58",
            "p99": "178.87",
            "min": "178.50",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "222.34",
            "p50": "212.06",
            "p95": "208.01",
            "p99": "203.67",
            "min": "203.33",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.79",
            "p50": "86.96",
            "p95": "86.55",
            "p99": "86.01",
            "min": "85.97",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "344.46",
            "p50": "309.43",
            "p95": "289.74",
            "p99": "111.10",
            "min": "111.02",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "330.40",
            "p50": "297.39",
            "p95": "285.36",
            "p99": "274.10",
            "min": "273.45",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "334.09",
            "p50": "301.19",
            "p95": "287.35",
            "p99": "186.73",
            "min": "162.99",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "338.12",
            "p50": "300.89",
            "p95": "285.88",
            "p99": "279.14",
            "min": "278.34",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2412.80",
            "p50": "2266.96",
            "p95": "2102.03",
            "p99": "1716.68",
            "min": "1583.32",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2323.36",
            "p50": "2200.56",
            "p95": "2022.16",
            "p99": "939.95",
            "min": "37.92",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "93.87",
            "p50": "93.18",
            "p95": "91.76",
            "p99": "89.37",
            "min": "89.12",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "5737.23",
            "p50": "5111.86",
            "p95": "2259.71",
            "p99": "48.40",
            "min": "28.64",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "93.94",
            "p50": "93.02",
            "p95": "91.89",
            "p99": "90.73",
            "min": "90.54",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3192.49",
            "p50": "2992.41",
            "p95": "2487.64",
            "p99": "1746.76",
            "min": "1517.81",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "263.04",
            "p50": "253.16",
            "p95": "247.97",
            "p99": "241.82",
            "min": "240.89",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "537.11",
            "p50": "531.22",
            "p95": "517.20",
            "p99": "485.59",
            "min": "481.28",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1236.50",
            "p50": "1196.27",
            "p95": "385.76",
            "p99": "366.22",
            "min": "355.13",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "17444.52",
            "p50": "8063.56",
            "p95": "2376.28",
            "p99": "266.37",
            "min": "193.30",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1150.17",
            "p50": "1097.82",
            "p95": "345.80",
            "p99": "269.91",
            "min": "193.54",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "49624.41",
            "p50": "9664.82",
            "p95": "2392.81",
            "p99": "820.11",
            "min": "116.02",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15738.90",
            "p50": "7425.18",
            "p95": "2541.40",
            "p99": "1647.00",
            "min": "1571.91",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "533.01",
            "p50": "487.76",
            "p95": "426.42",
            "p99": "362.27",
            "min": "340.49",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "517.87",
            "p50": "507.98",
            "p95": "497.62",
            "p99": "476.46",
            "min": "475.90",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "205.17",
            "p50": "202.50",
            "p95": "197.73",
            "p99": "189.02",
            "min": "187.22",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "435.61",
            "p50": "427.06",
            "p95": "417.49",
            "p99": "407.61",
            "min": "406.67",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "205.34",
            "p50": "202.10",
            "p95": "199.66",
            "p99": "197.39",
            "min": "196.87",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "328.41",
            "p50": "322.49",
            "p95": "315.72",
            "p99": "303.41",
            "min": "297.24",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "271.36",
            "p50": "267.39",
            "p95": "261.14",
            "p99": "236.21",
            "min": "231.06",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "516.66",
            "p50": "505.38",
            "p95": "493.72",
            "p99": "477.10",
            "min": "475.29",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1465.27",
            "p50": "1162.81",
            "p95": "835.60",
            "p99": "787.37",
            "min": "785.77",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "315.63",
            "p50": "310.95",
            "p95": "304.53",
            "p99": "299.33",
            "min": "298.98",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "87.86",
            "p50": "85.13",
            "p95": "78.88",
            "p99": "76.22",
            "min": "75.91",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "80.74",
            "p50": "77.99",
            "p95": "71.24",
            "p99": "68.90",
            "min": "68.58",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "82.19",
            "p50": "79.46",
            "p95": "72.13",
            "p99": "68.79",
            "min": "68.61",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "227.81",
            "p50": "208.96",
            "p95": "175.40",
            "p99": "104.09",
            "min": "83.05",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "171.47",
            "p50": "162.16",
            "p95": "136.03",
            "p99": "118.77",
            "min": "116.51",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "179.27",
            "p50": "168.09",
            "p95": "146.61",
            "p99": "129.76",
            "min": "126.44",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "175.13",
            "p50": "161.33",
            "p95": "140.45",
            "p99": "114.22",
            "min": "110.68",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "173.33",
            "p50": "160.32",
            "p95": "139.94",
            "p99": "126.56",
            "min": "125.67",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "194.97",
            "p50": "179.54",
            "p95": "152.09",
            "p99": "144.13",
            "min": "142.91",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "173.78",
            "p50": "162.86",
            "p95": "140.98",
            "p99": "131.63",
            "min": "130.51",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "194.30",
            "p50": "182.01",
            "p95": "156.55",
            "p99": "150.18",
            "min": "149.81",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "145.38",
            "p50": "135.62",
            "p95": "119.27",
            "p99": "80.83",
            "min": "76.87",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "217.40",
            "p50": "200.89",
            "p95": "171.52",
            "p99": "158.29",
            "min": "158.03",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "175.94",
            "p50": "164.62",
            "p95": "138.67",
            "p99": "121.73",
            "min": "119.52",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "67.99",
            "p50": "64.93",
            "p95": "60.86",
            "p99": "58.46",
            "min": "58.44",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "139.95",
            "p50": "130.37",
            "p95": "116.42",
            "p99": "121.46",
            "min": "111.51",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "413.47",
            "p50": "330.61",
            "p95": "252.89",
            "p99": "238.85",
            "min": "197.89",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "176.29",
            "p50": "142.31",
            "p95": "134.72",
            "p99": "152.10",
            "min": "133.86",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "130.72",
            "p50": "122.26",
            "p95": "113.47",
            "p99": "120.04",
            "min": "111.98",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1197.36",
            "p50": "932.60",
            "p95": "543.99",
            "p99": "437.62",
            "min": "435.04",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1036.22",
            "p50": "851.21",
            "p95": "559.98",
            "p99": "407.08",
            "min": "391.30",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1407.48",
            "p50": "1067.03",
            "p95": "519.28",
            "p99": "459.40",
            "min": "458.14",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1292.47",
            "p50": "980.60",
            "p95": "551.82",
            "p99": "459.59",
            "min": "459.29",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1247.73",
            "p50": "966.23",
            "p95": "608.83",
            "p99": "501.89",
            "min": "461.81",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1074.56",
            "p50": "868.62",
            "p95": "506.03",
            "p99": "435.30",
            "min": "433.04",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "685.06",
            "p50": "545.24",
            "p95": "386.90",
            "p99": "287.61",
            "min": "280.39",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "678.05",
            "p50": "549.09",
            "p95": "362.39",
            "p99": "303.47",
            "min": "303.12",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "714.11",
            "p50": "550.69",
            "p95": "398.67",
            "p99": "338.56",
            "min": "332.46",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "690.01",
            "p50": "575.95",
            "p95": "390.03",
            "p99": "316.28",
            "min": "304.58",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "294.34",
            "p50": "265.26",
            "p95": "215.86",
            "p99": "199.43",
            "min": "198.16",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "585.63",
            "p50": "463.87",
            "p95": "359.06",
            "p99": "255.76",
            "min": "237.37",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "591.65",
            "p50": "476.08",
            "p95": "332.70",
            "p99": "311.25",
            "min": "309.75",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "616.83",
            "p50": "487.85",
            "p95": "342.61",
            "p99": "312.96",
            "min": "308.56",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "609.25",
            "p50": "500.29",
            "p95": "365.23",
            "p99": "322.39",
            "min": "318.31",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.59",
            "p50": "101.99",
            "p95": "92.18",
            "p99": "83.49",
            "min": "76.78",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.23",
            "p50": "102.49",
            "p95": "90.64",
            "p99": "84.74",
            "min": "82.69",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.00",
            "p50": "94.80",
            "p95": "86.52",
            "p99": "83.65",
            "min": "83.51",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "253.53",
            "p50": "237.57",
            "p95": "196.04",
            "p99": "178.43",
            "min": "178.38",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.74",
            "p50": "94.41",
            "p95": "84.74",
            "p99": "77.22",
            "min": "75.30",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "245.29",
            "p50": "226.31",
            "p95": "184.95",
            "p99": "168.93",
            "min": "165.37",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "195.50",
            "p50": "181.93",
            "p95": "152.28",
            "p99": "143.33",
            "min": "142.68",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "198.66",
            "p50": "184.58",
            "p95": "157.25",
            "p99": "144.99",
            "min": "144.94",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "467.38",
            "p50": "411.12",
            "p95": "318.71",
            "p99": "282.33",
            "min": "281.06",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5274.03",
            "p50": "2216.40",
            "p95": "990.81",
            "p99": "671.38",
            "min": "661.82",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "447.91",
            "p50": "392.01",
            "p95": "289.36",
            "p99": "265.69",
            "min": "263.22",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "17668.78",
            "p50": "4018.13",
            "p95": "1312.92",
            "p99": "1072.03",
            "min": "1052.10",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3129.53",
            "p50": "1828.51",
            "p95": "692.67",
            "p99": "633.18",
            "min": "629.00",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "229.87",
            "p50": "210.75",
            "p95": "178.22",
            "p99": "149.61",
            "min": "146.95",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "249.53",
            "p50": "229.15",
            "p95": "195.20",
            "p99": "175.20",
            "min": "174.88",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "91.95",
            "p50": "88.40",
            "p95": "80.84",
            "p99": "76.01",
            "min": "75.14",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "225.06",
            "p50": "207.18",
            "p95": "175.73",
            "p99": "164.14",
            "min": "163.38",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "171.68",
            "p50": "162.07",
            "p95": "140.17",
            "p99": "133.80",
            "min": "133.76",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "202.67",
            "p50": "188.45",
            "p95": "163.34",
            "p99": "149.54",
            "min": "149.52",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "194.42",
            "p50": "183.05",
            "p95": "153.64",
            "p99": "143.51",
            "min": "142.67",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "196.77",
            "p50": "183.87",
            "p95": "157.11",
            "p99": "131.15",
            "min": "121.60",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1150.29",
            "p50": "917.17",
            "p95": "574.90",
            "p99": "466.71",
            "min": "461.27",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "177.81",
            "p50": "168.02",
            "p95": "121.45",
            "p99": "94.31",
            "min": "86.72",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.75",
            "p50": "190.02",
            "p95": "172.79",
            "p99": "159.80",
            "min": "159.56",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.31",
            "p50": "190.62",
            "p95": "173.44",
            "p99": "161.01",
            "min": "160.75",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.09",
            "p50": "190.90",
            "p95": "168.89",
            "p99": "161.75",
            "min": "160.98",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1191.19",
            "p50": "1111.39",
            "p95": "706.72",
            "p99": "567.96",
            "min": "535.05",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "703.00",
            "p50": "638.34",
            "p95": "506.54",
            "p99": "416.04",
            "min": "406.35",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "814.32",
            "p50": "748.15",
            "p95": "570.84",
            "p99": "424.17",
            "min": "413.52",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "751.31",
            "p50": "678.58",
            "p95": "501.07",
            "p99": "231.09",
            "min": "168.79",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "264.99",
            "p50": "257.06",
            "p95": "220.16",
            "p99": "207.25",
            "min": "207.06",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "902.69",
            "p50": "809.27",
            "p95": "597.51",
            "p99": "468.00",
            "min": "464.45",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "873.93",
            "p50": "776.34",
            "p95": "526.78",
            "p99": "457.64",
            "min": "457.22",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "870.35",
            "p50": "771.27",
            "p95": "553.10",
            "p99": "456.09",
            "min": "455.15",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "287.07",
            "p50": "275.70",
            "p95": "235.86",
            "p99": "219.69",
            "min": "218.71",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "654.41",
            "p50": "598.19",
            "p95": "431.14",
            "p99": "303.39",
            "min": "269.98",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "835.88",
            "p50": "737.15",
            "p95": "543.94",
            "p99": "492.58",
            "min": "490.09",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "111.70",
            "p50": "107.07",
            "p95": "100.36",
            "p99": "97.87",
            "min": "97.19",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "96.59",
            "p50": "95.11",
            "p95": "89.65",
            "p99": "90.98",
            "min": "87.96",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "413.76",
            "p50": "372.38",
            "p95": "312.65",
            "p99": "311.87",
            "min": "287.97",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "131.14",
            "p50": "103.53",
            "p95": "96.60",
            "p99": "111.04",
            "min": "95.88",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "91.13",
            "p50": "87.75",
            "p95": "84.23",
            "p99": "86.73",
            "min": "83.42",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1696.32",
            "p50": "1504.94",
            "p95": "810.45",
            "p99": "646.68",
            "min": "629.18",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1637.19",
            "p50": "1414.54",
            "p95": "789.91",
            "p99": "622.97",
            "min": "619.50",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2025.17",
            "p50": "1639.32",
            "p95": "936.53",
            "p99": "717.49",
            "min": "676.83",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2000.62",
            "p50": "1546.15",
            "p95": "895.46",
            "p99": "746.30",
            "min": "740.88",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1999.92",
            "p50": "1641.04",
            "p95": "891.36",
            "p99": "637.16",
            "min": "627.69",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1655.76",
            "p50": "1412.04",
            "p95": "767.50",
            "p99": "599.10",
            "min": "593.63",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "632.78",
            "p50": "559.96",
            "p95": "455.68",
            "p99": "374.03",
            "min": "370.66",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "627.93",
            "p50": "560.09",
            "p95": "436.71",
            "p99": "375.00",
            "min": "374.94",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "635.64",
            "p50": "571.94",
            "p95": "450.49",
            "p99": "383.06",
            "min": "382.55",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "653.91",
            "p50": "584.34",
            "p95": "471.77",
            "p99": "429.92",
            "min": "428.10",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.08",
            "p50": "86.05",
            "p95": "81.78",
            "p99": "80.19",
            "min": "79.95",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "571.50",
            "p50": "518.84",
            "p95": "425.06",
            "p99": "400.35",
            "min": "398.91",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "540.04",
            "p50": "490.07",
            "p95": "400.73",
            "p99": "342.30",
            "min": "339.09",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "540.30",
            "p50": "484.65",
            "p95": "380.91",
            "p99": "342.86",
            "min": "339.86",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "545.51",
            "p50": "493.05",
            "p95": "377.98",
            "p99": "346.83",
            "min": "346.26",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1352.31",
            "p50": "1254.69",
            "p95": "712.07",
            "p99": "549.15",
            "min": "536.12",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1661.21",
            "p50": "1532.45",
            "p95": "831.78",
            "p99": "634.30",
            "min": "632.73",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.13",
            "p50": "71.44",
            "p95": "68.42",
            "p99": "67.27",
            "min": "67.20",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "8834.04",
            "p50": "4547.03",
            "p95": "2321.12",
            "p99": "1997.57",
            "min": "1823.22",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.19",
            "p50": "71.31",
            "p95": "69.26",
            "p99": "67.12",
            "min": "67.08",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "221.56",
            "p50": "216.61",
            "p95": "193.29",
            "p99": "179.12",
            "min": "178.64",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "872.14",
            "p50": "779.26",
            "p95": "527.51",
            "p99": "452.20",
            "min": "449.29",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "669.38",
            "p50": "625.35",
            "p95": "458.62",
            "p99": "380.50",
            "min": "371.37",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1130.25",
            "p50": "1043.17",
            "p95": "678.33",
            "p99": "596.75",
            "min": "594.97",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "26305.45",
            "p50": "9056.13",
            "p95": "2793.96",
            "p99": "1570.68",
            "min": "1341.13",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1134.84",
            "p50": "1062.32",
            "p95": "754.97",
            "p99": "592.69",
            "min": "571.49",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "54957.57",
            "p50": "9309.65",
            "p95": "2647.86",
            "p99": "1780.08",
            "min": "1778.62",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14131.85",
            "p50": "5612.70",
            "p95": "1099.22",
            "p99": "791.81",
            "min": "784.42",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "557.96",
            "p50": "484.76",
            "p95": "398.20",
            "p99": "355.73",
            "min": "333.30",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "988.87",
            "p50": "885.55",
            "p95": "593.67",
            "p99": "487.73",
            "min": "484.22",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "286.62",
            "p50": "278.06",
            "p95": "247.46",
            "p99": "225.33",
            "min": "222.86",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1210.60",
            "p50": "1118.01",
            "p95": "781.32",
            "p99": "547.62",
            "min": "537.30",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "265.85",
            "p50": "254.87",
            "p95": "221.15",
            "p99": "206.67",
            "min": "205.94",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "538.84",
            "p50": "512.05",
            "p95": "404.97",
            "p99": "360.63",
            "min": "342.59",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "872.55",
            "p50": "768.11",
            "p95": "528.22",
            "p99": "445.00",
            "min": "444.99",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "913.63",
            "p50": "827.90",
            "p95": "575.69",
            "p99": "472.12",
            "min": "465.44",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2325.74",
            "p50": "1946.15",
            "p95": "1058.75",
            "p99": "926.40",
            "min": "913.04",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "894.42",
            "p50": "830.04",
            "p95": "582.98",
            "p99": "465.08",
            "min": "461.66",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "81.92",
            "p50": "78.86",
            "p95": "70.47",
            "p99": "60.08",
            "min": "59.35",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "75.35",
            "p50": "72.63",
            "p95": "65.45",
            "p99": "61.33",
            "min": "61.20",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "76.44",
            "p50": "74.06",
            "p95": "66.78",
            "p99": "61.49",
            "min": "61.11",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "210.07",
            "p50": "190.18",
            "p95": "153.13",
            "p99": "139.02",
            "min": "137.16",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.71",
            "p50": "98.26",
            "p95": "84.89",
            "p99": "79.80",
            "min": "79.61",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.04",
            "p50": "103.45",
            "p95": "91.77",
            "p99": "81.88",
            "min": "79.92",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "139.89",
            "p50": "132.91",
            "p95": "110.74",
            "p99": "99.98",
            "min": "99.27",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "140.01",
            "p50": "133.28",
            "p95": "115.79",
            "p99": "101.77",
            "min": "101.23",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "187.63",
            "p50": "171.91",
            "p95": "142.31",
            "p99": "120.16",
            "min": "119.62",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "183.22",
            "p50": "169.18",
            "p95": "136.92",
            "p99": "113.90",
            "min": "110.79",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "180.42",
            "p50": "170.46",
            "p95": "135.45",
            "p99": "92.55",
            "min": "85.85",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.55",
            "p50": "121.22",
            "p95": "105.10",
            "p99": "87.80",
            "min": "86.48",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "203.71",
            "p50": "185.48",
            "p95": "148.10",
            "p99": "130.10",
            "min": "129.00",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "186.98",
            "p50": "174.67",
            "p95": "142.52",
            "p99": "123.72",
            "min": "123.30",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "71.13",
            "p50": "66.88",
            "p95": "61.44",
            "p99": "58.20",
            "min": "58.10",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "130.69",
            "p50": "120.80",
            "p95": "100.16",
            "p99": "109.17",
            "min": "97.59",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "208.01",
            "p50": "188.13",
            "p95": "152.25",
            "p99": "144.17",
            "min": "129.19",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "151.65",
            "p50": "137.23",
            "p95": "127.92",
            "p99": "136.99",
            "min": "125.92",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "124.40",
            "p50": "116.91",
            "p95": "108.38",
            "p99": "113.40",
            "min": "105.11",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1039.44",
            "p50": "705.54",
            "p95": "393.57",
            "p99": "282.57",
            "min": "264.32",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1009.48",
            "p50": "711.05",
            "p95": "416.82",
            "p99": "264.57",
            "min": "256.72",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1154.65",
            "p50": "766.41",
            "p95": "434.76",
            "p99": "309.21",
            "min": "288.18",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1079.37",
            "p50": "756.57",
            "p95": "413.53",
            "p99": "280.07",
            "min": "256.76",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1020.82",
            "p50": "710.76",
            "p95": "404.33",
            "p99": "276.56",
            "min": "255.87",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1016.79",
            "p50": "715.86",
            "p95": "399.15",
            "p99": "357.45",
            "min": "354.34",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "339.85",
            "p50": "292.23",
            "p95": "212.47",
            "p99": "171.30",
            "min": "170.41",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "338.42",
            "p50": "294.95",
            "p95": "223.89",
            "p99": "194.59",
            "min": "193.82",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "338.99",
            "p50": "299.42",
            "p95": "225.91",
            "p99": "183.40",
            "min": "178.47",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "364.79",
            "p50": "318.63",
            "p95": "247.02",
            "p99": "228.87",
            "min": "226.97",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "286.05",
            "p50": "247.20",
            "p95": "197.52",
            "p99": "149.86",
            "min": "148.47",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "289.01",
            "p50": "257.38",
            "p95": "196.39",
            "p99": "155.65",
            "min": "153.91",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "282.76",
            "p50": "252.13",
            "p95": "198.25",
            "p99": "172.76",
            "min": "168.75",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "287.50",
            "p50": "256.08",
            "p95": "207.17",
            "p99": "188.76",
            "min": "186.06",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "290.96",
            "p50": "258.45",
            "p95": "192.51",
            "p99": "131.75",
            "min": "118.51",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.16",
            "p50": "100.39",
            "p95": "88.73",
            "p99": "79.97",
            "min": "76.83",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.40",
            "p50": "100.30",
            "p95": "87.35",
            "p99": "79.30",
            "min": "78.65",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.71",
            "p50": "92.94",
            "p95": "83.02",
            "p99": "79.60",
            "min": "78.81",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "250.50",
            "p50": "221.20",
            "p95": "175.30",
            "p99": "141.34",
            "min": "140.59",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.54",
            "p50": "93.29",
            "p95": "81.99",
            "p99": "76.96",
            "min": "76.34",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "241.41",
            "p50": "219.60",
            "p95": "170.95",
            "p99": "149.59",
            "min": "149.02",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "184.75",
            "p50": "171.36",
            "p95": "136.11",
            "p99": "125.37",
            "min": "124.99",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "154.22",
            "p50": "143.47",
            "p95": "121.46",
            "p99": "72.80",
            "min": "41.58",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "438.01",
            "p50": "361.93",
            "p95": "258.47",
            "p99": "209.66",
            "min": "194.16",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4043.69",
            "p50": "1484.76",
            "p95": "444.91",
            "p99": "369.95",
            "min": "365.13",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "439.26",
            "p50": "358.45",
            "p95": "260.26",
            "p99": "212.82",
            "min": "205.49",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "10699.40",
            "p50": "1907.41",
            "p95": "643.99",
            "p99": "306.53",
            "min": "190.01",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2661.52",
            "p50": "1236.83",
            "p95": "453.51",
            "p99": "375.51",
            "min": "349.10",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "208.23",
            "p50": "184.41",
            "p95": "146.40",
            "p99": "122.97",
            "min": "122.32",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "231.77",
            "p50": "211.80",
            "p95": "163.97",
            "p99": "133.42",
            "min": "131.26",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "127.38",
            "p50": "120.75",
            "p95": "103.67",
            "p99": "63.19",
            "min": "51.58",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "208.05",
            "p50": "189.04",
            "p95": "154.11",
            "p99": "140.96",
            "min": "136.66",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "140.01",
            "p50": "131.70",
            "p95": "110.98",
            "p99": "84.57",
            "min": "81.28",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "174.08",
            "p50": "160.36",
            "p95": "131.61",
            "p99": "114.17",
            "min": "111.13",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "182.20",
            "p50": "170.73",
            "p95": "141.72",
            "p99": "121.14",
            "min": "119.71",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "184.38",
            "p50": "172.21",
            "p95": "133.47",
            "p99": "115.56",
            "min": "111.88",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "285.26",
            "p50": "225.33",
            "p95": "142.14",
            "p99": "132.31",
            "min": "124.26",
            "n": "94",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "142.62",
            "p50": "135.51",
            "p95": "112.73",
            "p99": "112.09",
            "min": "102.45",
            "n": "75",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "89.21",
            "p50": "85.52",
            "p95": "80.68",
            "p99": "76.23",
            "min": "75.97",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "90.46",
            "p50": "86.88",
            "p95": "81.75",
            "p99": "74.46",
            "min": "73.23",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "89.99",
            "p50": "86.51",
            "p95": "82.55",
            "p99": "76.55",
            "min": "75.31",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "189.70",
            "p50": "185.24",
            "p95": "178.55",
            "p99": "163.73",
            "min": "158.19",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "95.28",
            "p50": "91.67",
            "p95": "87.73",
            "p99": "80.67",
            "min": "79.37",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "115.16",
            "p50": "112.14",
            "p95": "107.00",
            "p99": "100.48",
            "min": "99.61",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "122.97",
            "p50": "120.74",
            "p95": "108.71",
            "p99": "103.26",
            "min": "102.93",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "125.79",
            "p50": "123.71",
            "p95": "121.74",
            "p99": "115.43",
            "min": "114.83",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "97.03",
            "p50": "93.75",
            "p95": "77.64",
            "p99": "76.79",
            "min": "76.69",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.95",
            "p50": "96.92",
            "p95": "94.32",
            "p99": "89.81",
            "min": "89.80",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.40",
            "p50": "96.90",
            "p95": "93.94",
            "p99": "90.99",
            "min": "90.77",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.94",
            "p50": "122.56",
            "p95": "119.08",
            "p99": "116.83",
            "min": "116.56",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "120.97",
            "p50": "118.86",
            "p95": "115.33",
            "p99": "109.35",
            "min": "108.87",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "116.77",
            "p50": "114.21",
            "p95": "111.23",
            "p99": "109.62",
            "min": "109.57",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "76.62",
            "p50": "73.54",
            "p95": "71.19",
            "p99": "69.72",
            "min": "69.49",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "99.33",
            "p50": "98.46",
            "p95": "96.71",
            "p99": "94.48",
            "min": "91.87",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "62.07",
            "p50": "60.55",
            "p95": "57.76",
            "p99": "55.99",
            "min": "54.56",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "159.40",
            "p50": "128.05",
            "p95": "119.75",
            "p99": "136.31",
            "min": "118.89",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "110.14",
            "p50": "108.38",
            "p95": "104.59",
            "p99": "106.50",
            "min": "103.75",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "381.21",
            "p50": "370.10",
            "p95": "339.89",
            "p99": "319.26",
            "min": "318.19",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "513.48",
            "p50": "486.95",
            "p95": "468.54",
            "p99": "439.77",
            "min": "438.30",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "379.90",
            "p50": "368.00",
            "p95": "346.75",
            "p99": "308.93",
            "min": "306.82",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "383.61",
            "p50": "372.62",
            "p95": "355.21",
            "p99": "322.15",
            "min": "316.98",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "384.56",
            "p50": "372.10",
            "p95": "348.68",
            "p99": "301.33",
            "min": "295.71",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "472.97",
            "p50": "450.57",
            "p95": "419.87",
            "p99": "370.76",
            "min": "361.80",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "97.44",
            "p50": "95.74",
            "p95": "92.17",
            "p99": "89.45",
            "min": "88.99",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "97.64",
            "p50": "96.29",
            "p95": "92.77",
            "p99": "92.22",
            "min": "92.11",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "96.77",
            "p50": "95.06",
            "p95": "91.96",
            "p99": "91.17",
            "min": "91.13",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "88.74",
            "p50": "87.37",
            "p95": "84.89",
            "p99": "81.95",
            "min": "81.72",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.98",
            "p50": "86.64",
            "p95": "85.48",
            "p99": "83.57",
            "min": "83.34",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "90.37",
            "p50": "88.97",
            "p95": "84.22",
            "p99": "81.86",
            "min": "81.55",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "86.39",
            "p50": "84.46",
            "p95": "80.52",
            "p99": "79.38",
            "min": "79.31",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "86.28",
            "p50": "84.17",
            "p95": "80.27",
            "p99": "78.69",
            "min": "78.52",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "85.75",
            "p50": "84.10",
            "p95": "80.29",
            "p99": "79.63",
            "min": "79.61",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1357.76",
            "p50": "1248.61",
            "p95": "874.69",
            "p99": "364.73",
            "min": "339.47",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1319.53",
            "p50": "1207.47",
            "p95": "795.53",
            "p99": "344.01",
            "min": "263.84",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "90.18",
            "p50": "89.43",
            "p95": "85.54",
            "p99": "80.46",
            "min": "79.94",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "2048.24",
            "p50": "1791.42",
            "p95": "1041.19",
            "p99": "793.79",
            "min": "774.62",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "90.19",
            "p50": "89.40",
            "p95": "83.03",
            "p99": "81.55",
            "min": "81.54",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "1660.53",
            "p50": "1491.30",
            "p95": "825.43",
            "p99": "639.07",
            "min": "617.68",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.19",
            "p50": "96.55",
            "p95": "93.95",
            "p99": "89.84",
            "min": "89.83",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "184.99",
            "p50": "181.62",
            "p95": "172.60",
            "p99": "163.68",
            "min": "160.12",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "410.30",
            "p50": "350.40",
            "p95": "260.48",
            "p99": "210.21",
            "min": "186.87",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7615.89",
            "p50": "2301.83",
            "p95": "974.76",
            "p99": "519.19",
            "min": "502.74",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "440.83",
            "p50": "384.75",
            "p95": "304.84",
            "p99": "286.57",
            "min": "283.37",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "29867.22",
            "p50": "9613.99",
            "p95": "2694.45",
            "p99": "1231.69",
            "min": "781.15",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4686.68",
            "p50": "3129.81",
            "p95": "2129.26",
            "p99": "780.60",
            "min": "381.72",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "354.16",
            "p50": "314.99",
            "p95": "217.05",
            "p99": "158.68",
            "min": "156.77",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "155.45",
            "p50": "142.27",
            "p95": "126.61",
            "p99": "116.03",
            "min": "114.08",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "123.82",
            "p50": "111.47",
            "p95": "104.00",
            "p99": "100.13",
            "min": "99.68",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "137.42",
            "p50": "123.60",
            "p95": "118.42",
            "p99": "111.68",
            "min": "108.78",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "125.52",
            "p50": "118.35",
            "p95": "114.33",
            "p99": "112.00",
            "min": "111.96",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "172.61",
            "p50": "148.41",
            "p95": "141.96",
            "p99": "122.74",
            "min": "112.60",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "94.24",
            "p50": "92.90",
            "p95": "90.74",
            "p99": "88.96",
            "min": "88.87",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "116.75",
            "p50": "108.64",
            "p95": "105.77",
            "p99": "105.01",
            "min": "104.95",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "890.97",
            "p50": "826.04",
            "p95": "318.45",
            "p99": "311.34",
            "min": "311.33",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "124.04",
            "p50": "118.36",
            "p95": "110.20",
            "p99": "105.44",
            "min": "104.59",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}