{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "112.79",
            "p50": "107.14",
            "p95": "98.09",
            "p99": "94.01",
            "min": "93.66",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1096.26",
            "p50": "890.60",
            "p95": "584.55",
            "p99": "497.72",
            "min": "483.01",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "113.50",
            "p50": "107.14",
            "p95": "98.65",
            "p99": "95.65",
            "min": "95.56",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "752.76",
            "p50": "679.53",
            "p95": "483.66",
            "p99": "420.43",
            "min": "409.99",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "397.69",
            "p50": "369.84",
            "p95": "239.98",
            "p99": "209.05",
            "min": "203.44",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "424.38",
            "p50": "387.11",
            "p95": "248.31",
            "p99": "222.07",
            "min": "221.34",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "292.11",
            "p50": "272.53",
            "p95": "193.31",
            "p99": "128.54",
            "min": "113.10",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "182.40",
            "p50": "172.64",
            "p95": "156.64",
            "p99": "118.49",
            "min": "110.03",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "255.67",
            "p50": "234.89",
            "p95": "207.98",
            "p99": "194.79",
            "min": "194.74",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "260.02",
            "p50": "240.93",
            "p95": "212.68",
            "p99": "197.24",
            "min": "196.22",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "259.45",
            "p50": "239.66",
            "p95": "209.74",
            "p99": "199.09",
            "min": "198.08",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "201.60",
            "p50": "190.16",
            "p95": "173.24",
            "p99": "163.84",
            "min": "163.02",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "333.76",
            "p50": "310.89",
            "p95": "267.00",
            "p99": "249.82",
            "min": "245.99",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "294.89",
            "p50": "277.15",
            "p95": "237.46",
            "p99": "222.36",
            "min": "222.30",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8503.18",
            "p50": "3829.35",
            "p95": "1936.01",
            "p99": "1665.17",
            "min": "1653.98",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2978.56",
            "p50": "1713.01",
            "p95": "936.69",
            "p99": "1635.87",
            "min": "912.89",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "324.21",
            "p50": "290.98",
            "p95": "246.09",
            "p99": "247.72",
            "min": "229.77",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1419.83",
            "p50": "774.74",
            "p95": "332.13",
            "p99": "795.85",
            "min": "325.14",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7276.78",
            "p50": "3408.93",
            "p95": "1503.23",
            "p99": "3921.49",
            "min": "1390.31",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "823.48",
            "p50": "698.12",
            "p95": "506.58",
            "p99": "457.95",
            "min": "457.15",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "804.58",
            "p50": "727.26",
            "p95": "541.64",
            "p99": "455.84",
            "min": "433.92",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "943.04",
            "p50": "784.68",
            "p95": "543.24",
            "p99": "480.99",
            "min": "459.05",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2375.71",
            "p50": "1780.41",
            "p95": "939.60",
            "p99": "729.19",
            "min": "724.42",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2404.39",
            "p50": "1763.33",
            "p95": "916.47",
            "p99": "741.64",
            "min": "727.21",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "801.43",
            "p50": "709.42",
            "p95": "540.97",
            "p99": "447.47",
            "min": "426.35",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "168.41",
            "p50": "157.11",
            "p95": "144.48",
            "p99": "110.83",
            "min": "104.78",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "560.49",
            "p50": "491.10",
            "p95": "387.34",
            "p99": "337.76",
            "min": "337.76",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "169.83",
            "p50": "157.32",
            "p95": "146.53",
            "p99": "143.16",
            "min": "143.13",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "187.10",
            "p50": "174.04",
            "p95": "156.05",
            "p99": "113.10",
            "min": "111.40",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "33873.33",
            "p50": "7771.24",
            "p95": "2331.59",
            "p99": "792.32",
            "min": "419.03",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "412.99",
            "p50": "370.89",
            "p95": "309.81",
            "p99": "231.31",
            "min": "217.01",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "393.48",
            "p50": "356.63",
            "p95": "305.89",
            "p99": "258.83",
            "min": "255.44",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "395.70",
            "p50": "353.27",
            "p95": "288.01",
            "p99": "269.28",
            "min": "269.02",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "397.54",
            "p50": "352.26",
            "p95": "300.36",
            "p99": "266.57",
            "min": "266.34",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "16709.17",
            "p50": "5531.25",
            "p95": "2353.64",
            "p99": "1958.33",
            "min": "1893.59",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "16775.16",
            "p50": "5792.34",
            "p95": "2437.12",
            "p99": "1930.81",
            "min": "1762.08",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "16672.00",
            "p50": "5055.90",
            "p95": "2334.06",
            "p99": "1602.25",
            "min": "1497.36",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "16894.84",
            "p50": "5451.85",
            "p95": "2378.66",
            "p99": "1816.53",
            "min": "1805.71",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "16349.17",
            "p50": "5167.46",
            "p95": "2358.08",
            "p99": "1715.05",
            "min": "1668.36",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "16952.48",
            "p50": "5483.69",
            "p95": "2411.75",
            "p99": "2219.10",
            "min": "2199.03",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "258.52",
            "p50": "240.54",
            "p95": "213.25",
            "p99": "196.67",
            "min": "195.38",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "516.52",
            "p50": "473.61",
            "p95": "376.24",
            "p99": "242.50",
            "min": "163.45",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1618.33",
            "p50": "1328.13",
            "p95": "370.00",
            "p99": "292.90",
            "min": "287.00",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "21169.60",
            "p50": "5120.08",
            "p95": "186.16",
            "p99": "163.39",
            "min": "161.76",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1394.21",
            "p50": "1181.68",
            "p95": "772.38",
            "p99": "603.99",
            "min": "576.38",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "52781.35",
            "p50": "9138.69",
            "p95": "2412.20",
            "p99": "1351.25",
            "min": "683.76",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "12500.85",
            "p50": "6022.47",
            "p95": "187.27",
            "p99": "166.23",
            "min": "163.71",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "555.88",
            "p50": "480.95",
            "p95": "380.06",
            "p99": "361.58",
            "min": "358.74",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "545.76",
            "p50": "495.14",
            "p95": "395.37",
            "p99": "344.72",
            "min": "341.47",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "199.47",
            "p50": "190.80",
            "p95": "170.93",
            "p99": "163.61",
            "min": "163.55",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "381.56",
            "p50": "353.15",
            "p95": "292.20",
            "p99": "269.59",
            "min": "267.18",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "199.69",
            "p50": "189.16",
            "p95": "170.03",
            "p99": "164.57",
            "min": "164.39",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "338.34",
            "p50": "316.56",
            "p95": "269.25",
            "p99": "244.34",
            "min": "243.24",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "260.68",
            "p50": "239.33",
            "p95": "208.36",
            "p99": "199.04",
            "min": "198.25",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "565.52",
            "p50": "521.81",
            "p95": "425.62",
            "p99": "379.18",
            "min": "376.24",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1423.87",
            "p50": "1234.29",
            "p95": "913.60",
            "p99": "708.66",
            "min": "673.41",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "286.94",
            "p50": "271.32",
            "p95": "236.31",
            "p99": "215.52",
            "min": "212.14",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "139.35",
            "p50": "130.87",
            "p95": "112.86",
            "p99": "101.27",
            "min": "100.93",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "138.90",
            "p50": "130.19",
            "p95": "117.62",
            "p99": "108.50",
            "min": "106.90",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "138.12",
            "p50": "130.32",
            "p95": "115.76",
            "p99": "110.94",
            "min": "110.71",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "249.97",
            "p50": "227.58",
            "p95": "184.74",
            "p99": "165.24",
            "min": "158.05",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "188.43",
            "p50": "174.86",
            "p95": "150.16",
            "p99": "94.44",
            "min": "93.62",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "201.35",
            "p50": "184.90",
            "p95": "165.69",
            "p99": "151.76",
            "min": "150.21",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "189.29",
            "p50": "170.27",
            "p95": "149.06",
            "p99": "136.70",
            "min": "135.73",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "184.23",
            "p50": "168.47",
            "p95": "146.33",
            "p99": "134.44",
            "min": "133.58",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "207.29",
            "p50": "188.97",
            "p95": "158.64",
            "p99": "116.77",
            "min": "111.40",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "181.36",
            "p50": "167.58",
            "p95": "145.23",
            "p99": "131.85",
            "min": "131.29",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "205.88",
            "p50": "189.54",
            "p95": "163.44",
            "p99": "153.00",
            "min": "152.80",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "152.71",
            "p50": "140.10",
            "p95": "123.67",
            "p99": "111.14",
            "min": "111.11",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "224.87",
            "p50": "207.71",
            "p95": "178.06",
            "p99": "165.15",
            "min": "164.55",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "181.76",
            "p50": "167.93",
            "p95": "147.70",
            "p99": "137.99",
            "min": "137.90",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "100.90",
            "p50": "94.93",
            "p95": "86.39",
            "p99": "81.21",
            "min": "80.91",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "137.93",
            "p50": "126.56",
            "p95": "113.80",
            "p99": "117.94",
            "min": "107.18",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "424.86",
            "p50": "338.85",
            "p95": "272.21",
            "p99": "261.87",
            "min": "223.64",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "179.72",
            "p50": "140.41",
            "p95": "132.40",
            "p99": "152.32",
            "min": "131.65",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "130.59",
            "p50": "121.24",
            "p95": "107.73",
            "p99": "114.92",
            "min": "103.10",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1171.11",
            "p50": "915.94",
            "p95": "510.12",
            "p99": "421.94",
            "min": "416.14",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1016.77",
            "p50": "825.25",
            "p95": "513.35",
            "p99": "393.32",
            "min": "386.89",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1430.49",
            "p50": "1057.88",
            "p95": "588.09",
            "p99": "486.81",
            "min": "483.85",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1258.61",
            "p50": "991.03",
            "p95": "535.56",
            "p99": "435.70",
            "min": "424.23",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1252.20",
            "p50": "952.15",
            "p95": "558.14",
            "p99": "452.09",
            "min": "449.70",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1061.08",
            "p50": "825.78",
            "p95": "502.01",
            "p99": "405.00",
            "min": "402.50",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "688.59",
            "p50": "539.14",
            "p95": "374.33",
            "p99": "326.49",
            "min": "323.29",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "711.66",
            "p50": "545.61",
            "p95": "365.36",
            "p99": "293.64",
            "min": "285.83",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "681.40",
            "p50": "565.84",
            "p95": "419.42",
            "p99": "351.89",
            "min": "351.66",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "700.72",
            "p50": "549.50",
            "p95": "375.30",
            "p99": "353.03",
            "min": "352.55",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "290.52",
            "p50": "260.85",
            "p95": "208.65",
            "p99": "192.27",
            "min": "189.98",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "610.33",
            "p50": "463.16",
            "p95": "332.66",
            "p99": "296.67",
            "min": "293.66",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "592.37",
            "p50": "479.86",
            "p95": "344.55",
            "p99": "330.19",
            "min": "329.02",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "604.21",
            "p50": "493.85",
            "p95": "365.24",
            "p99": "317.93",
            "min": "316.98",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "621.78",
            "p50": "504.48",
            "p95": "340.37",
            "p99": "329.56",
            "min": "329.24",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.96",
            "p50": "100.62",
            "p95": "91.42",
            "p99": "88.39",
            "min": "87.75",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.86",
            "p50": "100.50",
            "p95": "90.69",
            "p99": "87.40",
            "min": "86.74",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.37",
            "p50": "93.58",
            "p95": "84.17",
            "p99": "80.96",
            "min": "80.04",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "252.05",
            "p50": "229.22",
            "p95": "193.94",
            "p99": "160.37",
            "min": "144.94",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.14",
            "p50": "93.23",
            "p95": "84.31",
            "p99": "79.89",
            "min": "78.96",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "245.75",
            "p50": "224.03",
            "p95": "193.67",
            "p99": "160.70",
            "min": "145.60",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "205.79",
            "p50": "189.67",
            "p95": "155.11",
            "p99": "114.35",
            "min": "105.70",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "237.59",
            "p50": "216.18",
            "p95": "183.86",
            "p99": "161.27",
            "min": "160.01",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "583.05",
            "p50": "498.22",
            "p95": "353.43",
            "p99": "300.65",
            "min": "294.45",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5339.23",
            "p50": "2625.01",
            "p95": "1061.45",
            "p99": "610.22",
            "min": "436.09",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "534.63",
            "p50": "458.75",
            "p95": "344.05",
            "p99": "295.11",
            "min": "294.67",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14685.43",
            "p50": "4161.24",
            "p95": "1235.21",
            "p99": "868.92",
            "min": "845.54",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3389.41",
            "p50": "2071.60",
            "p95": "914.69",
            "p99": "651.16",
            "min": "547.15",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "229.27",
            "p50": "200.90",
            "p95": "154.32",
            "p99": "138.65",
            "min": "138.35",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "261.09",
            "p50": "235.69",
            "p95": "196.84",
            "p99": "178.02",
            "min": "178.01",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "151.74",
            "p50": "141.63",
            "p95": "124.00",
            "p99": "106.29",
            "min": "105.87",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "242.66",
            "p50": "222.59",
            "p95": "188.76",
            "p99": "178.42",
            "min": "177.59",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "183.06",
            "p50": "167.72",
            "p95": "149.86",
            "p99": "126.31",
            "min": "123.00",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "221.18",
            "p50": "201.91",
            "p95": "172.65",
            "p99": "111.51",
            "min": "82.99",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "206.16",
            "p50": "190.06",
            "p95": "163.11",
            "p99": "151.97",
            "min": "151.54",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "204.62",
            "p50": "191.47",
            "p95": "162.13",
            "p99": "150.98",
            "min": "149.72",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1294.85",
            "p50": "1043.68",
            "p95": "698.73",
            "p99": "577.26",
            "min": "569.76",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "182.25",
            "p50": "167.15",
            "p95": "141.64",
            "p99": "134.86",
            "min": "133.39",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "190.14",
            "p50": "186.94",
            "p95": "177.69",
            "p99": "163.04",
            "min": "162.11",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "188.82",
            "p50": "186.71",
            "p95": "173.35",
            "p99": "167.24",
            "min": "166.81",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "190.28",
            "p50": "187.47",
            "p95": "171.74",
            "p99": "163.81",
            "min": "163.76",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1149.41",
            "p50": "1124.51",
            "p95": "874.85",
            "p99": "588.12",
            "min": "576.84",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "615.96",
            "p50": "604.10",
            "p95": "482.24",
            "p99": "412.95",
            "min": "412.90",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "665.69",
            "p50": "650.93",
            "p95": "529.90",
            "p99": "279.57",
            "min": "200.30",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "757.79",
            "p50": "740.78",
            "p95": "552.51",
            "p99": "449.28",
            "min": "444.52",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "822.67",
            "p50": "806.09",
            "p95": "608.13",
            "p99": "190.41",
            "min": "92.00",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "917.42",
            "p50": "897.47",
            "p95": "704.74",
            "p99": "636.11",
            "min": "635.38",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "874.93",
            "p50": "821.82",
            "p95": "688.55",
            "p99": "554.79",
            "min": "553.11",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "873.53",
            "p50": "858.96",
            "p95": "679.80",
            "p99": "513.47",
            "min": "500.39",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "834.54",
            "p50": "818.41",
            "p95": "628.34",
            "p99": "521.17",
            "min": "510.90",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "763.96",
            "p50": "750.88",
            "p95": "525.69",
            "p99": "453.14",
            "min": "447.59",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "857.42",
            "p50": "818.88",
            "p95": "622.09",
            "p99": "545.45",
            "min": "541.48",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "117.64",
            "p50": "111.66",
            "p95": "107.92",
            "p99": "100.75",
            "min": "98.72",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "90.45",
            "p50": "89.69",
            "p95": "86.42",
            "p99": "85.84",
            "min": "83.36",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "618.83",
            "p50": "608.03",
            "p95": "424.87",
            "p99": "356.20",
            "min": "294.60",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "121.93",
            "p50": "97.13",
            "p95": "91.19",
            "p99": "103.74",
            "min": "90.02",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "84.25",
            "p50": "82.70",
            "p95": "80.16",
            "p99": "81.42",
            "min": "79.29",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1894.80",
            "p50": "1826.61",
            "p95": "1266.74",
            "p99": "827.84",
            "min": "823.07",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1626.19",
            "p50": "1582.91",
            "p95": "1059.97",
            "p99": "704.91",
            "min": "691.05",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2465.82",
            "p50": "2346.51",
            "p95": "1406.92",
            "p99": "1094.77",
            "min": "979.84",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2438.54",
            "p50": "2344.21",
            "p95": "1464.99",
            "p99": "953.11",
            "min": "930.03",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2443.70",
            "p50": "2317.86",
            "p95": "1478.95",
            "p99": "937.51",
            "min": "811.95",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1689.44",
            "p50": "1630.55",
            "p95": "1146.46",
            "p99": "806.19",
            "min": "802.45",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "688.95",
            "p50": "679.54",
            "p95": "555.19",
            "p99": "498.11",
            "min": "495.84",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "675.86",
            "p50": "662.45",
            "p95": "541.83",
            "p99": "446.66",
            "min": "439.88",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "702.45",
            "p50": "687.29",
            "p95": "579.74",
            "p99": "523.15",
            "min": "520.07",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "519.80",
            "p50": "509.26",
            "p95": "438.14",
            "p99": "369.96",
            "min": "363.67",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.31",
            "p50": "85.12",
            "p95": "38.11",
            "p99": "37.80",
            "min": "37.79",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "824.25",
            "p50": "805.92",
            "p95": "603.59",
            "p99": "507.00",
            "min": "497.06",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "776.91",
            "p50": "759.19",
            "p95": "635.00",
            "p99": "505.48",
            "min": "492.40",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "774.55",
            "p50": "756.35",
            "p95": "632.22",
            "p99": "536.14",
            "min": "535.98",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "779.45",
            "p50": "761.18",
            "p95": "628.74",
            "p99": "427.58",
            "min": "419.50",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2420.36",
            "p50": "2280.36",
            "p95": "1458.06",
            "p99": "1081.38",
            "min": "1073.29",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2759.12",
            "p50": "2621.60",
            "p95": "1552.51",
            "p99": "1222.57",
            "min": "1199.89",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "104.69",
            "p50": "104.05",
            "p95": "98.18",
            "p99": "95.11",
            "min": "94.50",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "15075.45",
            "p50": "7533.36",
            "p95": "2421.86",
            "p99": "1797.80",
            "min": "1259.82",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "105.65",
            "p50": "103.98",
            "p95": "100.16",
            "p99": "96.15",
            "min": "95.97",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "6140.89",
            "p50": "5384.32",
            "p95": "2158.04",
            "p99": "1733.66",
            "min": "1720.75",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "872.41",
            "p50": "855.21",
            "p95": "671.95",
            "p99": "607.33",
            "min": "606.41",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "659.27",
            "p50": "647.32",
            "p95": "529.97",
            "p99": "428.96",
            "min": "416.64",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2433.48",
            "p50": "2314.11",
            "p95": "1261.03",
            "p99": "959.49",
            "min": "945.33",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "15230.78",
            "p50": "9108.58",
            "p95": "2473.46",
            "p99": "1981.02",
            "min": "1803.84",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2290.57",
            "p50": "2155.85",
            "p95": "999.23",
            "p99": "672.79",
            "min": "667.53",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "75696.15",
            "p50": "8646.54",
            "p95": "2448.97",
            "p99": "1890.83",
            "min": "1469.90",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13231.65",
            "p50": "8125.83",
            "p95": "2427.79",
            "p99": "1664.71",
            "min": "1398.26",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "786.08",
            "p50": "604.52",
            "p95": "515.23",
            "p99": "449.79",
            "min": "443.07",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "934.24",
            "p50": "907.78",
            "p95": "717.02",
            "p99": "299.64",
            "min": "220.42",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "818.59",
            "p50": "803.40",
            "p95": "670.49",
            "p99": "541.24",
            "min": "535.30",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1177.69",
            "p50": "1143.81",
            "p95": "908.54",
            "p99": "581.50",
            "min": "562.65",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "836.31",
            "p50": "816.25",
            "p95": "615.76",
            "p99": "311.83",
            "min": "249.72",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1155.85",
            "p50": "1129.73",
            "p95": "891.90",
            "p99": "733.49",
            "min": "693.31",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "824.23",
            "p50": "808.68",
            "p95": "648.46",
            "p99": "482.21",
            "min": "480.84",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "881.31",
            "p50": "857.11",
            "p95": "687.07",
            "p99": "513.53",
            "min": "508.78",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2058.30",
            "p50": "1761.18",
            "p95": "1340.26",
            "p99": "1033.15",
            "min": "1006.57",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "868.52",
            "p50": "849.27",
            "p95": "683.19",
            "p99": "486.62",
            "min": "466.20",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "121.51",
            "p50": "117.42",
            "p95": "103.02",
            "p99": "99.62",
            "min": "99.59",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "122.32",
            "p50": "116.78",
            "p95": "100.50",
            "p99": "95.55",
            "min": "95.14",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "121.96",
            "p50": "116.61",
            "p95": "102.93",
            "p99": "96.63",
            "min": "96.27",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "209.37",
            "p50": "189.96",
            "p95": "156.31",
            "p99": "109.43",
            "min": "80.31",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.31",
            "p50": "96.61",
            "p95": "84.91",
            "p99": "76.21",
            "min": "75.22",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "106.87",
            "p50": "101.58",
            "p95": "87.92",
            "p99": "77.92",
            "min": "75.81",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "136.04",
            "p50": "125.52",
            "p95": "100.94",
            "p99": "74.74",
            "min": "74.40",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "137.89",
            "p50": "127.93",
            "p95": "106.69",
            "p99": "98.93",
            "min": "98.66",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "181.62",
            "p50": "164.57",
            "p95": "125.84",
            "p99": "119.31",
            "min": "118.98",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "177.16",
            "p50": "164.09",
            "p95": "123.49",
            "p99": "77.49",
            "min": "68.98",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "176.46",
            "p50": "161.45",
            "p95": "125.49",
            "p99": "91.07",
            "min": "83.42",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.56",
            "p50": "118.13",
            "p95": "96.96",
            "p99": "82.11",
            "min": "81.48",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "198.85",
            "p50": "181.59",
            "p95": "140.77",
            "p99": "133.54",
            "min": "133.30",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "179.90",
            "p50": "165.34",
            "p95": "129.64",
            "p99": "113.54",
            "min": "111.91",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "74.58",
            "p50": "69.88",
            "p95": "64.33",
            "p99": "61.05",
            "min": "60.54",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "128.98",
            "p50": "118.66",
            "p95": "100.59",
            "p99": "107.70",
            "min": "96.24",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "209.28",
            "p50": "181.91",
            "p95": "144.62",
            "p99": "152.38",
            "min": "139.04",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "152.77",
            "p50": "134.53",
            "p95": "130.32",
            "p99": "139.91",
            "min": "130.21",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "124.75",
            "p50": "115.25",
            "p95": "96.14",
            "p99": "108.35",
            "min": "95.97",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1008.80",
            "p50": "680.83",
            "p95": "322.72",
            "p99": "277.12",
            "min": "269.79",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "988.69",
            "p50": "637.38",
            "p95": "308.43",
            "p99": "282.39",
            "min": "279.62",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1113.37",
            "p50": "711.82",
            "p95": "347.46",
            "p99": "257.82",
            "min": "257.03",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1057.72",
            "p50": "678.63",
            "p95": "339.54",
            "p99": "259.48",
            "min": "257.86",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "969.00",
            "p50": "675.50",
            "p95": "286.65",
            "p99": "261.75",
            "min": "259.91",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1004.88",
            "p50": "653.20",
            "p95": "321.07",
            "p99": "215.69",
            "min": "184.78",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "328.84",
            "p50": "275.02",
            "p95": "199.82",
            "p99": "185.75",
            "min": "184.16",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "335.38",
            "p50": "279.06",
            "p95": "206.46",
            "p99": "174.08",
            "min": "173.20",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "324.84",
            "p50": "284.06",
            "p95": "206.51",
            "p99": "186.51",
            "min": "186.39",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "357.22",
            "p50": "299.61",
            "p95": "221.13",
            "p99": "183.13",
            "min": "182.67",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "279.96",
            "p50": "246.22",
            "p95": "178.56",
            "p99": "160.07",
            "min": "157.78",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "278.12",
            "p50": "243.42",
            "p95": "180.19",
            "p99": "149.87",
            "min": "146.88",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "277.01",
            "p50": "240.69",
            "p95": "190.20",
            "p99": "164.17",
            "min": "162.93",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "276.59",
            "p50": "242.09",
            "p95": "182.51",
            "p99": "168.51",
            "min": "168.39",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "280.17",
            "p50": "243.98",
            "p95": "181.16",
            "p99": "150.15",
            "min": "146.83",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "103.79",
            "p50": "98.16",
            "p95": "85.84",
            "p99": "77.97",
            "min": "76.52",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "103.89",
            "p50": "97.77",
            "p95": "85.48",
            "p99": "80.82",
            "min": "79.87",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "96.80",
            "p50": "90.98",
            "p95": "79.49",
            "p99": "75.55",
            "min": "75.15",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "244.65",
            "p50": "217.56",
            "p95": "166.81",
            "p99": "147.08",
            "min": "144.33",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "95.74",
            "p50": "90.75",
            "p95": "77.76",
            "p99": "75.01",
            "min": "74.41",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "240.06",
            "p50": "209.94",
            "p95": "163.64",
            "p99": "145.09",
            "min": "144.22",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "182.18",
            "p50": "165.08",
            "p95": "133.20",
            "p99": "124.59",
            "min": "124.20",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "151.37",
            "p50": "139.47",
            "p95": "109.63",
            "p99": "80.01",
            "min": "59.59",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "436.06",
            "p50": "373.83",
            "p95": "245.47",
            "p99": "214.86",
            "min": "212.75",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5090.21",
            "p50": "2064.36",
            "p95": "637.26",
            "p99": "492.63",
            "min": "447.40",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "437.68",
            "p50": "371.66",
            "p95": "267.78",
            "p99": "231.19",
            "min": "219.88",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "11386.32",
            "p50": "3019.12",
            "p95": "974.03",
            "p99": "580.16",
            "min": "539.04",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3310.69",
            "p50": "1798.60",
            "p95": "660.54",
            "p99": "542.02",
            "min": "534.16",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "207.79",
            "p50": "186.43",
            "p95": "156.60",
            "p99": "144.27",
            "min": "143.91",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "232.33",
            "p50": "211.67",
            "p95": "176.73",
            "p99": "146.52",
            "min": "145.23",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "128.03",
            "p50": "120.41",
            "p95": "99.46",
            "p99": "87.34",
            "min": "84.70",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "206.89",
            "p50": "185.66",
            "p95": "144.15",
            "p99": "124.64",
            "min": "124.48",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "135.53",
            "p50": "127.93",
            "p95": "106.33",
            "p99": "101.74",
            "min": "101.56",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "172.71",
            "p50": "157.77",
            "p95": "127.28",
            "p99": "112.33",
            "min": "107.52",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "177.83",
            "p50": "160.59",
            "p95": "126.42",
            "p99": "121.46",
            "min": "121.32",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "178.44",
            "p50": "162.54",
            "p95": "130.40",
            "p99": "122.97",
            "min": "122.93",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "300.86",
            "p50": "247.54",
            "p95": "57.59",
            "p99": "51.74",
            "min": "51.62",
            "n": "104",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "143.55",
            "p50": "135.57",
            "p95": "59.62",
            "p99": "56.02",
            "min": "55.90",
            "n": "111",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "87.03",
            "p50": "82.83",
            "p95": "77.60",
            "p99": "73.64",
            "min": "73.31",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "88.37",
            "p50": "84.18",
            "p95": "81.14",
            "p99": "78.82",
            "min": "78.48",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "87.94",
            "p50": "83.41",
            "p95": "79.09",
            "p99": "73.65",
            "min": "73.52",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "237.02",
            "p50": "178.66",
            "p95": "173.82",
            "p99": "158.11",
            "min": "150.08",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "99.86",
            "p50": "94.52",
            "p95": "89.00",
            "p99": "86.38",
            "min": "86.09",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.96",
            "p50": "109.18",
            "p95": "105.72",
            "p99": "101.97",
            "min": "101.28",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "122.73",
            "p50": "118.35",
            "p95": "105.15",
            "p99": "101.44",
            "min": "101.08",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "124.25",
            "p50": "119.56",
            "p95": "115.78",
            "p99": "110.62",
            "min": "110.56",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "93.52",
            "p50": "91.54",
            "p95": "73.42",
            "p99": "72.36",
            "min": "72.22",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "99.89",
            "p50": "97.60",
            "p95": "70.75",
            "p99": "69.61",
            "min": "69.58",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "100.06",
            "p50": "97.76",
            "p95": "71.12",
            "p99": "70.58",
            "min": "70.55",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "123.48",
            "p50": "119.70",
            "p95": "113.62",
            "p99": "103.91",
            "min": "101.96",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "133.53",
            "p50": "129.66",
            "p95": "103.83",
            "p99": "91.16",
            "min": "87.65",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "113.41",
            "p50": "111.30",
            "p95": "68.80",
            "p99": "67.06",
            "min": "66.94",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "88.19",
            "p50": "83.25",
            "p95": "79.23",
            "p99": "72.84",
            "min": "70.97",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "101.11",
            "p50": "99.20",
            "p95": "92.04",
            "p99": "93.66",
            "min": "89.65",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "75.28",
            "p50": "72.64",
            "p95": "61.26",
            "p99": "63.52",
            "min": "60.76",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "156.06",
            "p50": "125.05",
            "p95": "117.29",
            "p99": "133.78",
            "min": "116.97",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "108.04",
            "p50": "106.15",
            "p95": "102.27",
            "p99": "104.40",
            "min": "101.66",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "424.11",
            "p50": "409.78",
            "p95": "331.87",
            "p99": "304.41",
            "min": "290.32",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "477.78",
            "p50": "467.13",
            "p95": "403.76",
            "p99": "382.46",
            "min": "375.79",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "455.53",
            "p50": "437.10",
            "p95": "351.12",
            "p99": "324.29",
            "min": "313.83",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "460.85",
            "p50": "441.67",
            "p95": "360.44",
            "p99": "346.09",
            "min": "340.15",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "465.27",
            "p50": "444.98",
            "p95": "362.72",
            "p99": "305.30",
            "min": "294.99",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "461.16",
            "p50": "451.45",
            "p95": "384.81",
            "p99": "344.36",
            "min": "342.28",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "121.47",
            "p50": "117.60",
            "p95": "99.77",
            "p99": "96.93",
            "min": "96.59",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "122.18",
            "p50": "118.25",
            "p95": "100.16",
            "p99": "97.02",
            "min": "96.83",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "119.74",
            "p50": "116.17",
            "p95": "98.21",
            "p99": "94.94",
            "min": "94.37",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "103.42",
            "p50": "100.66",
            "p95": "89.53",
            "p99": "88.87",
            "min": "88.85",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "85.56",
            "p50": "84.30",
            "p95": "83.67",
            "p99": "80.55",
            "min": "79.78",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "123.77",
            "p50": "116.65",
            "p95": "93.85",
            "p99": "93.03",
            "min": "92.96",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "114.99",
            "p50": "110.59",
            "p95": "89.36",
            "p99": "87.41",
            "min": "87.35",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "114.35",
            "p50": "109.89",
            "p95": "88.17",
            "p99": "85.75",
            "min": "85.61",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "115.24",
            "p50": "109.95",
            "p95": "88.65",
            "p99": "86.51",
            "min": "86.46",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1564.90",
            "p50": "1387.09",
            "p95": "797.02",
            "p99": "537.40",
            "min": "508.98",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1580.76",
            "p50": "1384.67",
            "p95": "880.16",
            "p99": "528.53",
            "min": "429.17",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.50",
            "p50": "151.43",
            "p95": "137.24",
            "p99": "110.28",
            "min": "109.30",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3866.85",
            "p50": "3481.17",
            "p95": "1209.04",
            "p99": "669.27",
            "min": "562.34",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "153.98",
            "p50": "151.02",
            "p95": "140.79",
            "p99": "108.16",
            "min": "103.56",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3988.43",
            "p50": "3559.32",
            "p95": "1103.29",
            "p99": "424.55",
            "min": "370.96",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "99.78",
            "p50": "97.71",
            "p95": "79.14",
            "p99": "74.82",
            "min": "74.79",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "174.91",
            "p50": "170.07",
            "p95": "166.05",
            "p99": "156.00",
            "min": "152.21",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "343.78",
            "p50": "248.87",
            "p95": "202.38",
            "p99": "179.98",
            "min": "179.65",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9652.27",
            "p50": "1570.70",
            "p95": "797.36",
            "p99": "432.81",
            "min": "426.42",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "340.70",
            "p50": "256.27",
            "p95": "199.33",
            "p99": "172.85",
            "min": "158.20",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "25806.69",
            "p50": "8936.41",
            "p95": "2487.76",
            "p99": "1905.29",
            "min": "1648.48",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6066.32",
            "p50": "3164.07",
            "p95": "1652.93",
            "p99": "1034.77",
            "min": "1028.00",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "290.95",
            "p50": "226.81",
            "p95": "175.70",
            "p99": "146.01",
            "min": "144.21",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "153.93",
            "p50": "132.01",
            "p95": "105.53",
            "p99": "87.86",
            "min": "84.81",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "121.83",
            "p50": "116.31",
            "p95": "76.04",
            "p99": "68.77",
            "min": "66.62",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "124.02",
            "p50": "118.53",
            "p95": "113.34",
            "p99": "110.61",
            "min": "110.38",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "121.37",
            "p50": "117.05",
            "p95": "84.56",
            "p99": "80.79",
            "min": "80.31",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "151.43",
            "p50": "144.83",
            "p95": "140.21",
            "p99": "131.73",
            "min": "130.15",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "95.04",
            "p50": "93.10",
            "p95": "80.12",
            "p99": "74.42",
            "min": "74.30",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "126.49",
            "p50": "119.35",
            "p95": "114.20",
            "p99": "112.99",
            "min": "112.83",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1180.28",
            "p50": "1102.36",
            "p95": "379.96",
            "p99": "364.77",
            "min": "362.42",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "122.97",
            "p50": "118.68",
            "p95": "62.04",
            "p99": "58.48",
            "min": "57.40",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}