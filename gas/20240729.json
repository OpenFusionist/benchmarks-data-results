{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "169.99",
            "p50": "168.04",
            "p95": "158.54",
            "p99": "154.46",
            "min": "153.90",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "170.53",
            "p50": "168.71",
            "p95": "166.69",
            "p99": "162.38",
            "min": "162.09",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "169.90",
            "p50": "167.97",
            "p95": "164.08",
            "p99": "157.28",
            "min": "156.02",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "760.22",
            "p50": "745.03",
            "p95": "419.29",
            "p99": "405.56",
            "min": "400.81",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "404.49",
            "p50": "394.90",
            "p95": "382.17",
            "p99": "366.63",
            "min": "365.41",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "440.30",
            "p50": "428.48",
            "p95": "419.38",
            "p99": "401.85",
            "min": "397.82",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "324.61",
            "p50": "319.17",
            "p95": "308.94",
            "p99": "295.45",
            "min": "295.01",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "187.65",
            "p50": "185.39",
            "p95": "179.12",
            "p99": "110.89",
            "min": "95.85",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "266.16",
            "p50": "258.15",
            "p95": "239.75",
            "p99": "233.80",
            "min": "232.28",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "256.96",
            "p50": "253.94",
            "p95": "248.95",
            "p99": "242.83",
            "min": "242.02",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "259.22",
            "p50": "256.73",
            "p95": "253.79",
            "p99": "245.11",
            "min": "243.66",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "190.77",
            "p50": "188.45",
            "p95": "183.83",
            "p99": "176.57",
            "min": "176.45",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "321.22",
            "p50": "315.08",
            "p95": "301.98",
            "p99": "282.41",
            "min": "278.24",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "311.46",
            "p50": "305.35",
            "p95": "295.57",
            "p99": "288.29",
            "min": "287.77",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "110.96",
            "p50": "106.84",
            "p95": "104.73",
            "p99": "103.96",
            "min": "103.96",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "170.64",
            "p50": "167.59",
            "p95": "163.91",
            "p99": "164.39",
            "min": "161.02",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "291.58",
            "p50": "242.05",
            "p95": "231.18",
            "p99": "234.96",
            "min": "221.68",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "241.73",
            "p50": "193.75",
            "p95": "181.51",
            "p99": "207.10",
            "min": "180.98",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "167.00",
            "p50": "164.35",
            "p95": "163.12",
            "p99": "164.54",
            "min": "162.69",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "885.30",
            "p50": "820.42",
            "p95": "785.63",
            "p99": "759.95",
            "min": "749.71",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "843.71",
            "p50": "816.74",
            "p95": "790.25",
            "p99": "749.11",
            "min": "729.44",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1044.46",
            "p50": "938.87",
            "p95": "893.00",
            "p99": "852.94",
            "min": "840.00",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1082.07",
            "p50": "964.05",
            "p95": "921.88",
            "p99": "899.88",
            "min": "892.34",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1078.66",
            "p50": "972.74",
            "p95": "925.17",
            "p99": "890.97",
            "min": "882.95",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "851.61",
            "p50": "814.86",
            "p95": "788.95",
            "p99": "769.60",
            "min": "768.37",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "201.44",
            "p50": "187.26",
            "p95": "175.56",
            "p99": "173.66",
            "min": "173.58",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "200.91",
            "p50": "186.02",
            "p95": "174.50",
            "p99": "171.54",
            "min": "171.41",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "200.75",
            "p50": "188.24",
            "p95": "174.78",
            "p99": "170.40",
            "min": "169.52",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "227.21",
            "p50": "212.64",
            "p95": "200.17",
            "p99": "197.57",
            "min": "197.49",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.88",
            "p50": "87.03",
            "p95": "86.68",
            "p99": "85.70",
            "min": "85.49",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "342.34",
            "p50": "306.67",
            "p95": "289.88",
            "p99": "105.11",
            "min": "103.73",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "331.17",
            "p50": "297.46",
            "p95": "284.81",
            "p99": "274.01",
            "min": "271.76",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "334.91",
            "p50": "300.27",
            "p95": "287.82",
            "p99": "275.73",
            "min": "274.00",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "332.50",
            "p50": "300.58",
            "p95": "286.12",
            "p99": "114.33",
            "min": "111.91",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2386.49",
            "p50": "2254.26",
            "p95": "2072.15",
            "p99": "1491.84",
            "min": "1344.01",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2311.18",
            "p50": "2193.80",
            "p95": "1969.19",
            "p99": "891.98",
            "min": "68.55",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "93.94",
            "p50": "92.97",
            "p95": "91.22",
            "p99": "87.28",
            "min": "87.06",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "5734.34",
            "p50": "5093.28",
            "p95": "2611.73",
            "p99": "1846.94",
            "min": "1684.52",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "93.97",
            "p50": "93.10",
            "p95": "91.78",
            "p99": "89.42",
            "min": "88.91",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3189.13",
            "p50": "2961.35",
            "p95": "2354.78",
            "p99": "1892.44",
            "min": "1883.64",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "255.88",
            "p50": "252.21",
            "p95": "246.64",
            "p99": "241.42",
            "min": "241.30",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "539.27",
            "p50": "531.28",
            "p95": "517.25",
            "p99": "506.55",
            "min": "505.04",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1273.72",
            "p50": "1202.67",
            "p95": "385.50",
            "p99": "371.28",
            "min": "371.15",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "17968.32",
            "p50": "8202.85",
            "p95": "2477.90",
            "p99": "1923.54",
            "min": "1847.80",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1151.54",
            "p50": "1111.12",
            "p95": "344.45",
            "p99": "302.78",
            "min": "270.08",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "50114.03",
            "p50": "9165.25",
            "p95": "2525.67",
            "p99": "1527.24",
            "min": "1308.34",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15714.54",
            "p50": "6664.38",
            "p95": "2683.59",
            "p99": "2246.14",
            "min": "2224.13",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "537.86",
            "p50": "490.46",
            "p95": "441.63",
            "p99": "366.63",
            "min": "359.43",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "520.01",
            "p50": "508.04",
            "p95": "494.30",
            "p99": "482.96",
            "min": "479.35",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "205.12",
            "p50": "201.81",
            "p95": "196.41",
            "p99": "183.00",
            "min": "181.79",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "434.55",
            "p50": "424.35",
            "p95": "413.41",
            "p99": "402.46",
            "min": "401.77",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "205.50",
            "p50": "201.26",
            "p95": "197.04",
            "p99": "191.07",
            "min": "190.09",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "334.25",
            "p50": "322.01",
            "p95": "314.92",
            "p99": "296.52",
            "min": "290.87",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "270.05",
            "p50": "266.39",
            "p95": "261.73",
            "p99": "254.57",
            "min": "254.53",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "514.21",
            "p50": "505.76",
            "p95": "489.92",
            "p99": "444.82",
            "min": "437.10",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1428.11",
            "p50": "1136.66",
            "p95": "878.80",
            "p99": "653.71",
            "min": "592.11",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "315.62",
            "p50": "310.81",
            "p95": "304.59",
            "p99": "302.74",
            "min": "302.53",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "87.77",
            "p50": "84.55",
            "p95": "76.33",
            "p99": "74.20",
            "min": "73.81",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "80.31",
            "p50": "77.25",
            "p95": "72.66",
            "p99": "69.28",
            "min": "69.03",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "81.89",
            "p50": "79.17",
            "p95": "73.30",
            "p99": "56.38",
            "min": "52.41",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "225.54",
            "p50": "208.75",
            "p95": "172.72",
            "p99": "151.71",
            "min": "142.15",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "172.33",
            "p50": "160.76",
            "p95": "137.03",
            "p99": "103.78",
            "min": "96.37",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "179.41",
            "p50": "167.23",
            "p95": "140.07",
            "p99": "135.39",
            "min": "134.78",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "173.93",
            "p50": "159.80",
            "p95": "136.08",
            "p99": "119.18",
            "min": "118.21",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "171.44",
            "p50": "159.75",
            "p95": "134.63",
            "p99": "117.94",
            "min": "117.35",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "197.39",
            "p50": "179.99",
            "p95": "154.11",
            "p99": "131.45",
            "min": "126.06",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "174.11",
            "p50": "160.04",
            "p95": "137.21",
            "p99": "96.02",
            "min": "88.15",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "192.46",
            "p50": "177.50",
            "p95": "147.56",
            "p99": "136.77",
            "min": "135.89",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "146.21",
            "p50": "135.32",
            "p95": "119.56",
            "p99": "106.42",
            "min": "103.52",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "216.99",
            "p50": "198.21",
            "p95": "164.17",
            "p99": "149.97",
            "min": "148.71",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "177.38",
            "p50": "161.66",
            "p95": "139.33",
            "p99": "125.16",
            "min": "124.77",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.48",
            "p50": "65.00",
            "p95": "60.75",
            "p99": "58.24",
            "min": "57.92",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "138.27",
            "p50": "129.66",
            "p95": "120.39",
            "p99": "123.95",
            "min": "116.25",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "406.81",
            "p50": "316.07",
            "p95": "225.64",
            "p99": "237.12",
            "min": "197.31",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "173.07",
            "p50": "142.36",
            "p95": "134.05",
            "p99": "150.57",
            "min": "133.60",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "128.87",
            "p50": "121.75",
            "p95": "112.50",
            "p99": "114.36",
            "min": "103.42",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1160.88",
            "p50": "892.11",
            "p95": "493.03",
            "p99": "402.52",
            "min": "399.84",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1046.27",
            "p50": "809.51",
            "p95": "531.20",
            "p99": "394.62",
            "min": "382.77",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1399.92",
            "p50": "1005.11",
            "p95": "526.05",
            "p99": "440.90",
            "min": "439.34",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1299.95",
            "p50": "967.88",
            "p95": "529.38",
            "p99": "425.84",
            "min": "419.48",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1269.02",
            "p50": "902.93",
            "p95": "547.83",
            "p99": "428.37",
            "min": "428.28",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1071.20",
            "p50": "837.03",
            "p95": "508.58",
            "p99": "395.78",
            "min": "395.08",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "678.49",
            "p50": "538.75",
            "p95": "379.80",
            "p99": "361.32",
            "min": "360.76",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "693.49",
            "p50": "548.83",
            "p95": "346.59",
            "p99": "284.63",
            "min": "284.02",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "678.01",
            "p50": "543.39",
            "p95": "383.00",
            "p99": "329.37",
            "min": "322.74",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "697.93",
            "p50": "563.30",
            "p95": "393.44",
            "p99": "339.96",
            "min": "337.37",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "289.61",
            "p50": "260.98",
            "p95": "220.23",
            "p99": "192.23",
            "min": "191.85",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "588.66",
            "p50": "463.51",
            "p95": "356.22",
            "p99": "321.57",
            "min": "318.84",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "583.94",
            "p50": "457.29",
            "p95": "330.03",
            "p99": "295.02",
            "min": "293.85",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "615.51",
            "p50": "491.14",
            "p95": "339.12",
            "p99": "318.68",
            "min": "315.85",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "603.26",
            "p50": "491.86",
            "p95": "336.02",
            "p99": "296.68",
            "min": "295.95",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.44",
            "p50": "101.37",
            "p95": "90.68",
            "p99": "85.64",
            "min": "85.49",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.35",
            "p50": "102.30",
            "p95": "91.38",
            "p99": "85.62",
            "min": "83.76",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.57",
            "p50": "94.81",
            "p95": "84.78",
            "p99": "79.62",
            "min": "79.27",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "253.29",
            "p50": "232.80",
            "p95": "182.67",
            "p99": "170.72",
            "min": "166.79",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.92",
            "p50": "94.61",
            "p95": "85.85",
            "p99": "78.19",
            "min": "77.94",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "247.67",
            "p50": "223.98",
            "p95": "184.51",
            "p99": "170.75",
            "min": "169.95",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "196.36",
            "p50": "180.02",
            "p95": "145.32",
            "p99": "100.13",
            "min": "94.25",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "198.61",
            "p50": "184.25",
            "p95": "156.83",
            "p99": "145.31",
            "min": "143.71",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "469.65",
            "p50": "404.79",
            "p95": "308.52",
            "p99": "277.28",
            "min": "274.12",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5218.04",
            "p50": "2141.98",
            "p95": "807.33",
            "p99": "759.13",
            "min": "758.88",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "449.83",
            "p50": "392.05",
            "p95": "300.54",
            "p99": "276.19",
            "min": "274.83",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "17225.63",
            "p50": "3892.79",
            "p95": "1371.46",
            "p99": "852.44",
            "min": "566.99",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3156.45",
            "p50": "1841.64",
            "p95": "737.33",
            "p99": "588.94",
            "min": "583.05",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "228.07",
            "p50": "208.93",
            "p95": "179.81",
            "p99": "161.53",
            "min": "160.98",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "245.13",
            "p50": "225.68",
            "p95": "186.12",
            "p99": "174.89",
            "min": "174.41",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "92.09",
            "p50": "88.07",
            "p95": "79.14",
            "p99": "75.14",
            "min": "74.55",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "224.38",
            "p50": "206.86",
            "p95": "170.65",
            "p99": "159.11",
            "min": "158.50",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "171.66",
            "p50": "162.16",
            "p95": "136.33",
            "p99": "129.62",
            "min": "128.91",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "202.25",
            "p50": "186.44",
            "p95": "156.48",
            "p99": "149.57",
            "min": "148.90",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "193.78",
            "p50": "180.90",
            "p95": "156.60",
            "p99": "135.93",
            "min": "132.92",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "197.89",
            "p50": "182.44",
            "p95": "152.11",
            "p99": "140.48",
            "min": "139.15",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1101.88",
            "p50": "915.55",
            "p95": "562.08",
            "p99": "513.19",
            "min": "510.28",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "176.65",
            "p50": "166.66",
            "p95": "125.74",
            "p99": "113.11",
            "min": "112.33",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.64",
            "p50": "189.14",
            "p95": "169.50",
            "p99": "161.26",
            "min": "160.77",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.26",
            "p50": "189.20",
            "p95": "169.26",
            "p99": "161.20",
            "min": "161.17",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.13",
            "p50": "189.33",
            "p95": "170.26",
            "p99": "163.76",
            "min": "163.70",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1190.87",
            "p50": "1060.58",
            "p95": "646.69",
            "p99": "540.21",
            "min": "539.20",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "702.22",
            "p50": "630.44",
            "p95": "458.23",
            "p99": "399.28",
            "min": "396.58",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "811.19",
            "p50": "749.84",
            "p95": "537.79",
            "p99": "441.43",
            "min": "440.39",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "746.11",
            "p50": "669.35",
            "p95": "473.77",
            "p99": "423.49",
            "min": "422.12",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "264.56",
            "p50": "253.76",
            "p95": "226.71",
            "p99": "206.25",
            "min": "204.89",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "905.99",
            "p50": "788.23",
            "p95": "543.10",
            "p99": "473.72",
            "min": "473.28",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "872.59",
            "p50": "762.72",
            "p95": "550.35",
            "p99": "513.62",
            "min": "510.63",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "870.11",
            "p50": "752.78",
            "p95": "555.87",
            "p99": "462.47",
            "min": "462.08",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "286.65",
            "p50": "272.36",
            "p95": "244.98",
            "p99": "231.76",
            "min": "230.88",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "653.32",
            "p50": "591.93",
            "p95": "447.66",
            "p99": "284.57",
            "min": "244.45",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "848.59",
            "p50": "737.53",
            "p95": "510.61",
            "p99": "158.95",
            "min": "84.04",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "111.71",
            "p50": "106.79",
            "p95": "101.74",
            "p99": "99.42",
            "min": "99.23",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "96.39",
            "p50": "94.43",
            "p95": "89.50",
            "p99": "90.51",
            "min": "87.35",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "415.00",
            "p50": "377.04",
            "p95": "326.75",
            "p99": "326.65",
            "min": "305.92",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "132.40",
            "p50": "103.89",
            "p95": "97.03",
            "p99": "112.07",
            "min": "96.73",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "90.62",
            "p50": "87.38",
            "p95": "83.78",
            "p99": "86.57",
            "min": "83.51",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1693.23",
            "p50": "1440.09",
            "p95": "811.01",
            "p99": "608.58",
            "min": "598.05",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1634.87",
            "p50": "1421.89",
            "p95": "723.95",
            "p99": "606.01",
            "min": "580.77",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2033.45",
            "p50": "1689.07",
            "p95": "865.29",
            "p99": "648.57",
            "min": "631.11",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2002.51",
            "p50": "1614.76",
            "p95": "910.58",
            "p99": "638.32",
            "min": "633.93",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2008.06",
            "p50": "1548.21",
            "p95": "797.53",
            "p99": "651.50",
            "min": "645.77",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1652.03",
            "p50": "1375.69",
            "p95": "797.39",
            "p99": "660.55",
            "min": "605.55",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "632.32",
            "p50": "570.98",
            "p95": "439.94",
            "p99": "391.77",
            "min": "384.66",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "628.41",
            "p50": "576.73",
            "p95": "449.13",
            "p99": "381.42",
            "min": "380.96",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "628.58",
            "p50": "570.65",
            "p95": "417.03",
            "p99": "383.70",
            "min": "382.38",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "651.86",
            "p50": "586.95",
            "p95": "424.98",
            "p99": "383.96",
            "min": "383.86",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.03",
            "p50": "85.89",
            "p95": "81.56",
            "p99": "79.55",
            "min": "79.51",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "574.84",
            "p50": "513.39",
            "p95": "418.86",
            "p99": "389.20",
            "min": "388.51",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "539.63",
            "p50": "485.04",
            "p95": "386.74",
            "p99": "343.09",
            "min": "342.96",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "534.22",
            "p50": "481.25",
            "p95": "378.88",
            "p99": "342.03",
            "min": "340.34",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "546.50",
            "p50": "485.10",
            "p95": "406.72",
            "p99": "346.62",
            "min": "345.80",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1357.65",
            "p50": "1157.06",
            "p95": "743.76",
            "p99": "555.14",
            "min": "542.74",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1663.47",
            "p50": "1453.03",
            "p95": "887.60",
            "p99": "629.63",
            "min": "601.50",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.09",
            "p50": "71.14",
            "p95": "68.48",
            "p99": "66.85",
            "min": "66.80",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "8781.38",
            "p50": "4493.36",
            "p95": "2304.14",
            "p99": "2129.98",
            "min": "2095.48",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.18",
            "p50": "71.23",
            "p95": "68.70",
            "p99": "67.14",
            "min": "67.12",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "221.29",
            "p50": "214.96",
            "p95": "191.90",
            "p99": "179.59",
            "min": "178.99",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "870.70",
            "p50": "760.57",
            "p95": "562.07",
            "p99": "484.59",
            "min": "477.93",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "669.37",
            "p50": "621.57",
            "p95": "470.08",
            "p99": "405.56",
            "min": "387.17",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1131.42",
            "p50": "1006.04",
            "p95": "677.42",
            "p99": "589.61",
            "min": "582.67",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "26816.35",
            "p50": "8775.78",
            "p95": "2782.71",
            "p99": "1736.10",
            "min": "1676.42",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1132.71",
            "p50": "1010.54",
            "p95": "684.64",
            "p99": "527.37",
            "min": "526.91",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "54287.35",
            "p50": "9453.78",
            "p95": "2749.70",
            "p99": "2000.13",
            "min": "1753.38",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14297.43",
            "p50": "5818.92",
            "p95": "854.08",
            "p99": "807.88",
            "min": "807.15",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "565.86",
            "p50": "494.37",
            "p95": "403.07",
            "p99": "350.94",
            "min": "343.88",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "987.21",
            "p50": "864.00",
            "p95": "590.34",
            "p99": "519.47",
            "min": "508.72",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "287.16",
            "p50": "274.08",
            "p95": "235.77",
            "p99": "218.80",
            "min": "217.88",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1213.58",
            "p50": "1083.90",
            "p95": "623.55",
            "p99": "543.32",
            "min": "541.11",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "265.46",
            "p50": "255.58",
            "p95": "225.52",
            "p99": "215.29",
            "min": "214.33",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "538.51",
            "p50": "516.14",
            "p95": "405.45",
            "p99": "349.61",
            "min": "348.37",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "856.71",
            "p50": "744.21",
            "p95": "532.42",
            "p99": "425.37",
            "min": "417.97",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "916.22",
            "p50": "800.15",
            "p95": "583.03",
            "p99": "471.51",
            "min": "471.46",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2281.04",
            "p50": "1921.02",
            "p95": "990.69",
            "p99": "890.57",
            "min": "873.11",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "896.35",
            "p50": "804.40",
            "p95": "556.78",
            "p99": "470.76",
            "min": "467.81",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "81.91",
            "p50": "78.93",
            "p95": "70.26",
            "p99": "64.56",
            "min": "64.13",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "75.10",
            "p50": "72.62",
            "p95": "65.15",
            "p99": "60.87",
            "min": "60.66",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "76.55",
            "p50": "73.44",
            "p95": "66.67",
            "p99": "60.27",
            "min": "59.08",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "209.41",
            "p50": "191.16",
            "p95": "148.40",
            "p99": "126.58",
            "min": "123.53",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.84",
            "p50": "97.49",
            "p95": "86.34",
            "p99": "72.58",
            "min": "71.61",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "108.89",
            "p50": "103.06",
            "p95": "88.62",
            "p99": "78.67",
            "min": "78.42",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "139.94",
            "p50": "132.33",
            "p95": "111.63",
            "p99": "102.21",
            "min": "100.87",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "139.88",
            "p50": "133.13",
            "p95": "111.53",
            "p99": "101.33",
            "min": "101.28",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "185.65",
            "p50": "169.70",
            "p95": "137.92",
            "p99": "124.31",
            "min": "122.04",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "182.06",
            "p50": "169.96",
            "p95": "140.32",
            "p99": "111.39",
            "min": "106.93",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "183.51",
            "p50": "168.04",
            "p95": "131.85",
            "p99": "107.70",
            "min": "106.12",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.42",
            "p50": "120.26",
            "p95": "102.64",
            "p99": "87.55",
            "min": "84.67",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "201.03",
            "p50": "184.99",
            "p95": "132.92",
            "p99": "109.15",
            "min": "104.98",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "187.81",
            "p50": "173.48",
            "p95": "138.92",
            "p99": "108.25",
            "min": "104.94",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "70.90",
            "p50": "67.04",
            "p95": "61.18",
            "p99": "58.62",
            "min": "58.08",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "130.68",
            "p50": "122.96",
            "p95": "104.40",
            "p99": "105.75",
            "min": "92.33",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "207.79",
            "p50": "186.78",
            "p95": "141.99",
            "p99": "137.22",
            "min": "120.67",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "149.46",
            "p50": "137.18",
            "p95": "127.69",
            "p99": "135.66",
            "min": "125.25",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "124.70",
            "p50": "117.91",
            "p95": "101.08",
            "p99": "110.61",
            "min": "99.97",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1039.03",
            "p50": "710.45",
            "p95": "370.21",
            "p99": "262.83",
            "min": "261.63",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1013.51",
            "p50": "695.63",
            "p95": "378.33",
            "p99": "270.26",
            "min": "256.71",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1154.24",
            "p50": "754.85",
            "p95": "381.96",
            "p99": "235.86",
            "min": "233.46",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1080.16",
            "p50": "746.59",
            "p95": "367.01",
            "p99": "268.25",
            "min": "237.29",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1006.38",
            "p50": "714.08",
            "p95": "379.68",
            "p99": "272.58",
            "min": "259.92",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1013.10",
            "p50": "697.23",
            "p95": "366.39",
            "p99": "224.72",
            "min": "182.95",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "328.42",
            "p50": "293.70",
            "p95": "233.00",
            "p99": "194.20",
            "min": "192.90",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "335.76",
            "p50": "293.28",
            "p95": "208.14",
            "p99": "167.07",
            "min": "166.42",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "338.08",
            "p50": "298.24",
            "p95": "234.92",
            "p99": "191.11",
            "min": "188.96",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "364.66",
            "p50": "316.78",
            "p95": "228.62",
            "p99": "172.68",
            "min": "172.46",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "285.30",
            "p50": "246.76",
            "p95": "187.67",
            "p99": "144.45",
            "min": "140.09",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "288.27",
            "p50": "254.49",
            "p95": "198.28",
            "p99": "181.50",
            "min": "180.54",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "293.25",
            "p50": "252.67",
            "p95": "185.55",
            "p99": "160.51",
            "min": "158.85",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "290.34",
            "p50": "257.39",
            "p95": "202.80",
            "p99": "165.30",
            "min": "163.09",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "296.43",
            "p50": "255.78",
            "p95": "184.32",
            "p99": "143.19",
            "min": "136.75",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.44",
            "p50": "99.98",
            "p95": "86.88",
            "p99": "79.49",
            "min": "77.99",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.13",
            "p50": "99.90",
            "p95": "87.24",
            "p99": "81.12",
            "min": "77.06",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.50",
            "p50": "92.56",
            "p95": "82.11",
            "p99": "75.49",
            "min": "74.09",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "248.87",
            "p50": "222.25",
            "p95": "167.21",
            "p99": "138.27",
            "min": "136.73",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.39",
            "p50": "92.74",
            "p95": "83.81",
            "p99": "78.45",
            "min": "78.18",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "243.35",
            "p50": "216.81",
            "p95": "169.01",
            "p99": "153.67",
            "min": "152.58",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "184.87",
            "p50": "170.52",
            "p95": "132.26",
            "p99": "100.78",
            "min": "96.16",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "153.49",
            "p50": "142.71",
            "p95": "120.96",
            "p99": "109.66",
            "min": "103.95",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "439.74",
            "p50": "359.00",
            "p95": "241.14",
            "p99": "227.07",
            "min": "226.43",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4100.10",
            "p50": "1457.01",
            "p95": "364.21",
            "p99": "289.99",
            "min": "288.25",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "437.68",
            "p50": "357.62",
            "p95": "246.37",
            "p99": "179.10",
            "min": "178.08",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "10507.04",
            "p50": "1844.82",
            "p95": "596.48",
            "p99": "422.30",
            "min": "408.23",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2842.06",
            "p50": "1207.61",
            "p95": "428.23",
            "p99": "333.99",
            "min": "293.77",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "205.87",
            "p50": "184.92",
            "p95": "150.78",
            "p99": "134.62",
            "min": "133.53",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "231.13",
            "p50": "208.25",
            "p95": "154.25",
            "p99": "138.40",
            "min": "136.86",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "127.45",
            "p50": "119.53",
            "p95": "105.05",
            "p99": "94.53",
            "min": "94.03",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "207.57",
            "p50": "188.01",
            "p95": "148.47",
            "p99": "125.15",
            "min": "120.21",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "140.22",
            "p50": "131.71",
            "p95": "112.85",
            "p99": "81.69",
            "min": "78.54",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "173.39",
            "p50": "160.47",
            "p95": "129.57",
            "p99": "105.85",
            "min": "100.61",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "182.61",
            "p50": "170.99",
            "p95": "141.91",
            "p99": "118.71",
            "min": "117.17",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "185.09",
            "p50": "168.57",
            "p95": "133.93",
            "p99": "101.72",
            "min": "94.59",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "291.48",
            "p50": "219.79",
            "p95": "137.56",
            "p99": "142.02",
            "min": "127.24",
            "n": "90",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "142.67",
            "p50": "134.45",
            "p95": "103.04",
            "p99": "110.41",
            "min": "99.07",
            "n": "73",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "89.73",
            "p50": "85.44",
            "p95": "78.24",
            "p99": "76.01",
            "min": "75.76",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "90.95",
            "p50": "86.52",
            "p95": "82.32",
            "p99": "79.80",
            "min": "79.69",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "90.44",
            "p50": "86.19",
            "p95": "83.05",
            "p99": "76.70",
            "min": "75.26",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "189.68",
            "p50": "185.11",
            "p95": "177.62",
            "p99": "173.74",
            "min": "173.06",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "94.42",
            "p50": "90.82",
            "p95": "86.98",
            "p99": "83.69",
            "min": "83.40",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "115.80",
            "p50": "110.47",
            "p95": "101.98",
            "p99": "98.78",
            "min": "98.76",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "125.00",
            "p50": "121.62",
            "p95": "104.82",
            "p99": "97.87",
            "min": "96.68",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "127.76",
            "p50": "125.04",
            "p95": "122.71",
            "p99": "114.55",
            "min": "114.32",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "97.47",
            "p50": "95.52",
            "p95": "92.46",
            "p99": "91.29",
            "min": "91.26",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.93",
            "p50": "96.46",
            "p95": "93.69",
            "p99": "91.96",
            "min": "91.82",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.15",
            "p50": "96.38",
            "p95": "94.08",
            "p99": "89.20",
            "min": "88.84",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.77",
            "p50": "123.20",
            "p95": "121.02",
            "p99": "113.72",
            "min": "113.58",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "125.57",
            "p50": "118.86",
            "p95": "114.85",
            "p99": "111.78",
            "min": "111.17",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "115.72",
            "p50": "113.85",
            "p95": "111.01",
            "p99": "107.09",
            "min": "106.79",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "75.92",
            "p50": "73.33",
            "p95": "70.07",
            "p99": "65.18",
            "min": "63.97",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "98.91",
            "p50": "97.98",
            "p95": "95.43",
            "p99": "94.59",
            "min": "92.27",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "60.48",
            "p50": "59.26",
            "p95": "56.05",
            "p99": "51.82",
            "min": "49.78",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "159.26",
            "p50": "127.91",
            "p95": "119.93",
            "p99": "136.74",
            "min": "119.76",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "110.23",
            "p50": "108.44",
            "p95": "107.30",
            "p99": "107.51",
            "min": "105.47",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "378.48",
            "p50": "366.87",
            "p95": "343.20",
            "p99": "304.79",
            "min": "290.74",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "513.61",
            "p50": "483.76",
            "p95": "466.32",
            "p99": "440.38",
            "min": "425.53",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "375.29",
            "p50": "364.01",
            "p95": "346.64",
            "p99": "328.73",
            "min": "312.49",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "377.95",
            "p50": "366.98",
            "p95": "347.45",
            "p99": "305.21",
            "min": "289.92",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "381.78",
            "p50": "369.50",
            "p95": "352.01",
            "p99": "304.88",
            "min": "288.39",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "471.69",
            "p50": "448.85",
            "p95": "434.62",
            "p99": "369.69",
            "min": "366.40",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "96.23",
            "p50": "94.32",
            "p95": "90.22",
            "p99": "89.00",
            "min": "88.76",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "97.12",
            "p50": "94.92",
            "p95": "90.80",
            "p99": "88.65",
            "min": "88.47",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "96.19",
            "p50": "93.69",
            "p95": "89.57",
            "p99": "86.21",
            "min": "85.50",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "88.43",
            "p50": "86.65",
            "p95": "83.61",
            "p99": "83.02",
            "min": "83.00",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.93",
            "p50": "86.25",
            "p95": "83.52",
            "p99": "82.45",
            "min": "82.39",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "90.05",
            "p50": "87.27",
            "p95": "82.85",
            "p99": "81.74",
            "min": "81.67",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "85.54",
            "p50": "83.11",
            "p95": "78.30",
            "p99": "77.04",
            "min": "76.88",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "86.17",
            "p50": "82.75",
            "p95": "78.32",
            "p99": "77.34",
            "min": "77.26",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "85.76",
            "p50": "82.69",
            "p95": "78.60",
            "p99": "76.92",
            "min": "76.66",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1338.29",
            "p50": "1248.60",
            "p95": "841.91",
            "p99": "556.59",
            "min": "461.02",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1317.17",
            "p50": "1201.44",
            "p95": "875.51",
            "p99": "415.87",
            "min": "403.23",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "90.26",
            "p50": "89.47",
            "p95": "86.05",
            "p99": "75.38",
            "min": "74.35",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "2038.71",
            "p50": "1788.16",
            "p95": "1065.64",
            "p99": "518.52",
            "min": "475.16",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "90.23",
            "p50": "89.45",
            "p95": "84.72",
            "p99": "78.58",
            "min": "77.81",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "1640.78",
            "p50": "1473.28",
            "p95": "736.74",
            "p99": "531.83",
            "min": "497.09",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "97.77",
            "p50": "96.20",
            "p95": "92.25",
            "p99": "87.92",
            "min": "87.32",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "189.83",
            "p50": "181.78",
            "p95": "172.10",
            "p99": "170.22",
            "min": "169.83",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "419.91",
            "p50": "361.25",
            "p95": "274.78",
            "p99": "236.47",
            "min": "216.89",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5083.52",
            "p50": "2365.12",
            "p95": "1080.23",
            "p99": "587.72",
            "min": "584.77",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "446.63",
            "p50": "373.93",
            "p95": "307.15",
            "p99": "284.63",
            "min": "275.54",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "29990.08",
            "p50": "8758.22",
            "p95": "2650.18",
            "p99": "1729.16",
            "min": "1389.74",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4509.06",
            "p50": "3048.57",
            "p95": "1415.19",
            "p99": "790.14",
            "min": "602.62",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "363.96",
            "p50": "316.65",
            "p95": "237.18",
            "p99": "176.37",
            "min": "164.00",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "155.44",
            "p50": "144.76",
            "p95": "116.27",
            "p99": "103.23",
            "min": "102.60",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "127.60",
            "p50": "113.55",
            "p95": "106.38",
            "p99": "99.18",
            "min": "98.82",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "137.46",
            "p50": "135.10",
            "p95": "117.45",
            "p99": "117.05",
            "min": "117.00",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "128.27",
            "p50": "123.13",
            "p95": "116.10",
            "p99": "113.46",
            "min": "113.23",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "172.93",
            "p50": "170.90",
            "p95": "142.45",
            "p99": "138.01",
            "min": "137.67",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "94.26",
            "p50": "92.88",
            "p95": "83.32",
            "p99": "82.74",
            "min": "82.72",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "118.09",
            "p50": "113.88",
            "p95": "106.36",
            "p99": "105.26",
            "min": "105.09",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "906.43",
            "p50": "842.15",
            "p95": "323.07",
            "p99": "309.83",
            "min": "307.89",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "127.92",
            "p50": "123.74",
            "p95": "115.40",
            "p99": "108.58",
            "min": "107.34",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}