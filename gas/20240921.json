{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "169.87",
            "p50": "167.97",
            "p95": "155.00",
            "p99": "152.37",
            "min": "152.31",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "170.39",
            "p50": "168.19",
            "p95": "167.01",
            "p99": "162.37",
            "min": "161.80",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "170.10",
            "p50": "167.99",
            "p95": "163.43",
            "p99": "162.48",
            "min": "162.46",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "759.91",
            "p50": "743.54",
            "p95": "422.06",
            "p99": "400.92",
            "min": "388.80",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "400.26",
            "p50": "394.39",
            "p95": "386.90",
            "p99": "375.73",
            "min": "373.46",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "437.64",
            "p50": "429.33",
            "p95": "414.81",
            "p99": "380.50",
            "min": "370.34",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "324.08",
            "p50": "317.86",
            "p95": "304.20",
            "p99": "286.01",
            "min": "285.87",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "187.66",
            "p50": "184.79",
            "p95": "178.62",
            "p99": "175.04",
            "min": "174.30",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "265.61",
            "p50": "258.02",
            "p95": "241.00",
            "p99": "233.75",
            "min": "232.12",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "257.59",
            "p50": "254.36",
            "p95": "243.03",
            "p99": "236.64",
            "min": "236.35",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "259.97",
            "p50": "257.46",
            "p95": "253.93",
            "p99": "242.58",
            "min": "242.30",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "190.85",
            "p50": "188.27",
            "p95": "185.85",
            "p99": "180.51",
            "min": "180.32",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "320.44",
            "p50": "314.94",
            "p95": "302.88",
            "p99": "296.33",
            "min": "295.37",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "308.66",
            "p50": "302.77",
            "p95": "295.95",
            "p99": "277.85",
            "min": "274.24",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "7756.09",
            "p50": "5944.24",
            "p95": "2606.02",
            "p99": "1625.54",
            "min": "1359.44",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2563.79",
            "p50": "2160.49",
            "p95": "1014.51",
            "p99": "1506.47",
            "min": "937.14",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "294.55",
            "p50": "249.73",
            "p95": "232.47",
            "p99": "241.22",
            "min": "228.71",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "7881.66",
            "p50": "3781.64",
            "p95": "1094.81",
            "p99": "3997.68",
            "min": "1067.66",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "8135.08",
            "p50": "4449.17",
            "p95": "2529.92",
            "p99": "4404.08",
            "min": "1589.47",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1814.60",
            "p50": "1638.16",
            "p95": "586.76",
            "p99": "553.69",
            "min": "546.62",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "19981.12",
            "p50": "4952.91",
            "p95": "782.53",
            "p99": "738.28",
            "min": "728.77",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1291.97",
            "p50": "1173.30",
            "p95": "499.16",
            "p99": "426.13",
            "min": "371.11",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2114.24",
            "p50": "1954.29",
            "p95": "1148.36",
            "p99": "458.19",
            "min": "376.95",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2127.32",
            "p50": "1963.85",
            "p95": "774.26",
            "p99": "355.19",
            "min": "318.62",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "6343.98",
            "p50": "5391.13",
            "p95": "751.30",
            "p99": "391.91",
            "min": "86.04",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "297.55",
            "p50": "259.20",
            "p95": "145.53",
            "p99": "139.05",
            "min": "138.75",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "495.12",
            "p50": "440.80",
            "p95": "387.46",
            "p99": "383.28",
            "min": "383.08",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "338.93",
            "p50": "285.42",
            "p95": "57.83",
            "p99": "55.87",
            "min": "55.87",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "420.22",
            "p50": "387.64",
            "p95": "157.12",
            "p99": "97.32",
            "min": "83.20",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "36961.28",
            "p50": "8114.58",
            "p95": "2570.75",
            "p99": "689.18",
            "min": "216.65",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "367.91",
            "p50": "348.10",
            "p95": "300.39",
            "p99": "173.31",
            "min": "146.26",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "350.50",
            "p50": "335.38",
            "p95": "284.57",
            "p99": "279.97",
            "min": "279.65",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "352.05",
            "p50": "340.87",
            "p95": "286.43",
            "p99": "264.04",
            "min": "260.03",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "354.55",
            "p50": "329.42",
            "p95": "285.97",
            "p99": "97.53",
            "min": "54.42",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "15061.56",
            "p50": "7530.47",
            "p95": "2571.38",
            "p99": "934.94",
            "min": "142.72",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "14815.44",
            "p50": "7793.31",
            "p95": "2581.50",
            "p99": "552.78",
            "min": "510.82",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "14225.80",
            "p50": "6266.80",
            "p95": "2652.42",
            "p99": "1888.30",
            "min": "1631.87",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "14922.11",
            "p50": "7435.95",
            "p95": "2604.27",
            "p99": "1851.04",
            "min": "1731.95",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "14366.61",
            "p50": "6611.95",
            "p95": "2535.44",
            "p99": "476.64",
            "min": "60.11",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "14998.80",
            "p50": "7167.43",
            "p95": "2414.62",
            "p99": "1196.07",
            "min": "686.72",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "256.95",
            "p50": "253.65",
            "p95": "244.62",
            "p99": "231.42",
            "min": "230.72",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "539.40",
            "p50": "530.94",
            "p95": "515.98",
            "p99": "489.54",
            "min": "488.53",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1189.36",
            "p50": "1138.25",
            "p95": "402.10",
            "p99": "337.62",
            "min": "305.44",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "20147.85",
            "p50": "8757.81",
            "p95": "2352.15",
            "p99": "614.00",
            "min": "237.36",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1097.34",
            "p50": "1056.53",
            "p95": "351.99",
            "p99": "304.87",
            "min": "275.44",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "49422.19",
            "p50": "9070.32",
            "p95": "2752.07",
            "p99": "1365.68",
            "min": "1365.38",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "17800.90",
            "p50": "6889.38",
            "p95": "2643.64",
            "p99": "1685.90",
            "min": "1593.98",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "523.39",
            "p50": "500.56",
            "p95": "435.31",
            "p99": "394.13",
            "min": "377.62",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "516.55",
            "p50": "509.41",
            "p95": "491.92",
            "p99": "387.26",
            "min": "353.34",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "204.62",
            "p50": "202.76",
            "p95": "199.15",
            "p99": "188.75",
            "min": "186.85",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "435.63",
            "p50": "426.87",
            "p95": "416.26",
            "p99": "403.86",
            "min": "401.89",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "204.55",
            "p50": "202.07",
            "p95": "199.02",
            "p99": "194.71",
            "min": "194.34",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "327.72",
            "p50": "321.66",
            "p95": "314.90",
            "p99": "260.80",
            "min": "243.13",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "270.95",
            "p50": "265.90",
            "p95": "250.27",
            "p99": "231.86",
            "min": "229.18",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "518.54",
            "p50": "509.57",
            "p95": "494.78",
            "p99": "484.84",
            "min": "481.44",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1480.42",
            "p50": "1160.66",
            "p95": "856.21",
            "p99": "692.96",
            "min": "691.44",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "317.85",
            "p50": "312.90",
            "p95": "306.72",
            "p99": "301.90",
            "min": "301.65",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.43",
            "p50": "84.94",
            "p95": "78.20",
            "p99": "75.61",
            "min": "75.08",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "81.09",
            "p50": "78.09",
            "p95": "72.10",
            "p99": "68.79",
            "min": "68.76",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "82.45",
            "p50": "79.65",
            "p95": "73.25",
            "p99": "69.52",
            "min": "68.77",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "227.20",
            "p50": "207.32",
            "p95": "175.54",
            "p99": "154.79",
            "min": "154.75",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "171.91",
            "p50": "161.50",
            "p95": "140.91",
            "p99": "132.39",
            "min": "131.92",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "183.88",
            "p50": "170.67",
            "p95": "152.15",
            "p99": "139.48",
            "min": "139.18",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "170.65",
            "p50": "158.15",
            "p95": "136.59",
            "p99": "130.52",
            "min": "129.93",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "170.04",
            "p50": "156.06",
            "p95": "132.74",
            "p99": "122.20",
            "min": "120.48",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "190.08",
            "p50": "177.42",
            "p95": "149.14",
            "p99": "127.27",
            "min": "125.99",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "175.14",
            "p50": "160.31",
            "p95": "135.02",
            "p99": "124.47",
            "min": "123.25",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "193.79",
            "p50": "179.00",
            "p95": "151.22",
            "p99": "133.47",
            "min": "129.68",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "139.82",
            "p50": "132.38",
            "p95": "116.66",
            "p99": "111.09",
            "min": "110.26",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "218.89",
            "p50": "201.48",
            "p95": "172.39",
            "p99": "160.74",
            "min": "159.85",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "172.13",
            "p50": "159.98",
            "p95": "135.04",
            "p99": "127.60",
            "min": "126.69",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.22",
            "p50": "64.66",
            "p95": "60.55",
            "p99": "56.32",
            "min": "54.63",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "139.28",
            "p50": "129.18",
            "p95": "114.76",
            "p99": "118.43",
            "min": "107.20",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "400.07",
            "p50": "314.91",
            "p95": "233.31",
            "p99": "205.94",
            "min": "160.40",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "175.94",
            "p50": "142.03",
            "p95": "131.93",
            "p99": "145.53",
            "min": "122.59",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "129.24",
            "p50": "122.42",
            "p95": "113.29",
            "p99": "119.32",
            "min": "111.84",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1156.88",
            "p50": "907.50",
            "p95": "556.24",
            "p99": "414.71",
            "min": "410.70",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1034.92",
            "p50": "834.73",
            "p95": "512.84",
            "p99": "428.84",
            "min": "424.94",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1354.89",
            "p50": "991.65",
            "p95": "542.16",
            "p99": "431.14",
            "min": "419.20",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1297.22",
            "p50": "960.15",
            "p95": "519.88",
            "p99": "414.56",
            "min": "374.75",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1224.98",
            "p50": "922.37",
            "p95": "538.53",
            "p99": "422.49",
            "min": "415.16",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1060.76",
            "p50": "831.42",
            "p95": "513.01",
            "p99": "391.87",
            "min": "380.54",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "672.67",
            "p50": "505.10",
            "p95": "369.40",
            "p99": "296.64",
            "min": "287.17",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "636.30",
            "p50": "523.38",
            "p95": "347.64",
            "p99": "271.97",
            "min": "259.39",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "636.60",
            "p50": "510.14",
            "p95": "350.91",
            "p99": "315.06",
            "min": "311.36",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "667.01",
            "p50": "533.02",
            "p95": "351.91",
            "p99": "326.42",
            "min": "323.98",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "289.05",
            "p50": "263.39",
            "p95": "211.42",
            "p99": "193.43",
            "min": "191.50",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "540.37",
            "p50": "422.97",
            "p95": "304.30",
            "p99": "273.40",
            "min": "272.59",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "552.94",
            "p50": "437.10",
            "p95": "352.42",
            "p99": "312.13",
            "min": "311.97",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "554.61",
            "p50": "460.67",
            "p95": "365.74",
            "p99": "330.82",
            "min": "329.32",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "558.37",
            "p50": "464.90",
            "p95": "325.97",
            "p99": "309.98",
            "min": "309.70",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.83",
            "p50": "102.08",
            "p95": "92.68",
            "p99": "88.22",
            "min": "87.75",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.62",
            "p50": "102.34",
            "p95": "91.84",
            "p99": "86.77",
            "min": "86.71",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.01",
            "p50": "95.11",
            "p95": "86.30",
            "p99": "81.96",
            "min": "81.30",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "254.91",
            "p50": "233.50",
            "p95": "187.19",
            "p99": "172.81",
            "min": "172.65",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.97",
            "p50": "94.72",
            "p95": "88.10",
            "p99": "84.97",
            "min": "84.70",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "246.10",
            "p50": "224.63",
            "p95": "186.62",
            "p99": "170.19",
            "min": "169.88",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "193.79",
            "p50": "179.80",
            "p95": "155.85",
            "p99": "141.73",
            "min": "140.42",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "197.81",
            "p50": "185.17",
            "p95": "158.36",
            "p99": "148.22",
            "min": "147.72",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "357.15",
            "p50": "317.14",
            "p95": "250.25",
            "p99": "198.74",
            "min": "178.99",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5387.20",
            "p50": "2191.03",
            "p95": "872.06",
            "p99": "579.01",
            "min": "571.46",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "342.83",
            "p50": "307.66",
            "p95": "242.93",
            "p99": "218.79",
            "min": "216.90",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14499.35",
            "p50": "3564.62",
            "p95": "1340.03",
            "p99": "848.98",
            "min": "716.37",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3365.15",
            "p50": "1828.27",
            "p95": "708.91",
            "p99": "552.03",
            "min": "513.72",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "178.22",
            "p50": "164.00",
            "p95": "143.04",
            "p99": "129.92",
            "min": "127.66",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "249.76",
            "p50": "227.00",
            "p95": "191.49",
            "p99": "174.81",
            "min": "170.57",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "91.53",
            "p50": "87.74",
            "p95": "79.83",
            "p99": "75.04",
            "min": "74.33",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "223.27",
            "p50": "203.24",
            "p95": "167.68",
            "p99": "142.16",
            "min": "133.35",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "170.91",
            "p50": "158.50",
            "p95": "137.98",
            "p99": "98.17",
            "min": "88.32",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "201.64",
            "p50": "186.41",
            "p95": "155.23",
            "p99": "137.35",
            "min": "129.63",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "194.90",
            "p50": "180.13",
            "p95": "158.49",
            "p99": "147.79",
            "min": "146.44",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "197.47",
            "p50": "182.63",
            "p95": "151.99",
            "p99": "143.39",
            "min": "142.86",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1123.88",
            "p50": "895.84",
            "p95": "565.05",
            "p99": "474.35",
            "min": "449.99",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "174.30",
            "p50": "163.69",
            "p95": "119.81",
            "p99": "114.44",
            "min": "114.27",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "193.94",
            "p50": "188.19",
            "p95": "172.97",
            "p99": "163.35",
            "min": "162.21",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.62",
            "p50": "187.99",
            "p95": "167.75",
            "p99": "161.96",
            "min": "161.83",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.22",
            "p50": "190.30",
            "p95": "175.82",
            "p99": "167.66",
            "min": "167.21",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1189.70",
            "p50": "1087.14",
            "p95": "749.35",
            "p99": "598.32",
            "min": "583.20",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "700.48",
            "p50": "631.29",
            "p95": "450.47",
            "p99": "400.35",
            "min": "400.14",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "809.25",
            "p50": "763.08",
            "p95": "566.53",
            "p99": "447.62",
            "min": "432.61",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "720.31",
            "p50": "650.85",
            "p95": "503.01",
            "p99": "411.29",
            "min": "398.35",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "728.90",
            "p50": "670.03",
            "p95": "466.20",
            "p99": "409.02",
            "min": "407.40",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "891.93",
            "p50": "795.17",
            "p95": "583.07",
            "p99": "486.03",
            "min": "467.59",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "848.50",
            "p50": "744.20",
            "p95": "507.15",
            "p99": "444.00",
            "min": "442.94",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "834.46",
            "p50": "738.49",
            "p95": "520.30",
            "p99": "457.88",
            "min": "446.59",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "819.97",
            "p50": "737.57",
            "p95": "544.62",
            "p99": "448.52",
            "min": "447.48",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "884.58",
            "p50": "796.64",
            "p95": "573.89",
            "p99": "471.44",
            "min": "464.89",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "847.28",
            "p50": "733.46",
            "p95": "507.01",
            "p99": "443.39",
            "min": "441.68",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "64.45",
            "p50": "62.48",
            "p95": "60.40",
            "p99": "59.10",
            "min": "58.68",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "96.92",
            "p50": "94.27",
            "p95": "88.28",
            "p99": "90.61",
            "min": "87.21",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "488.10",
            "p50": "435.94",
            "p95": "342.03",
            "p99": "352.71",
            "min": "320.95",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "132.49",
            "p50": "103.95",
            "p95": "96.31",
            "p99": "111.58",
            "min": "95.80",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "90.68",
            "p50": "87.30",
            "p95": "84.20",
            "p99": "86.48",
            "min": "83.31",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1788.41",
            "p50": "1608.41",
            "p95": "824.81",
            "p99": "619.51",
            "min": "619.43",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1636.10",
            "p50": "1348.96",
            "p95": "796.93",
            "p99": "622.43",
            "min": "605.72",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2235.46",
            "p50": "1777.55",
            "p95": "918.11",
            "p99": "656.98",
            "min": "645.05",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2209.70",
            "p50": "1811.95",
            "p95": "863.08",
            "p99": "673.07",
            "min": "665.34",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2202.69",
            "p50": "1640.86",
            "p95": "800.86",
            "p99": "701.00",
            "min": "692.63",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1677.29",
            "p50": "1440.07",
            "p95": "865.00",
            "p99": "605.27",
            "min": "591.85",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "712.44",
            "p50": "631.24",
            "p95": "491.12",
            "p99": "409.57",
            "min": "406.77",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "719.93",
            "p50": "618.33",
            "p95": "464.60",
            "p99": "437.57",
            "min": "434.81",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "721.02",
            "p50": "632.01",
            "p95": "500.53",
            "p99": "409.28",
            "min": "408.39",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "735.52",
            "p50": "645.49",
            "p95": "492.20",
            "p99": "413.52",
            "min": "411.11",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.67",
            "p50": "85.48",
            "p95": "80.97",
            "p99": "78.88",
            "min": "78.76",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "638.48",
            "p50": "570.71",
            "p95": "464.22",
            "p99": "383.36",
            "min": "383.16",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "602.02",
            "p50": "533.97",
            "p95": "414.16",
            "p99": "374.45",
            "min": "373.11",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "596.59",
            "p50": "536.46",
            "p95": "395.24",
            "p99": "358.83",
            "min": "356.55",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "608.68",
            "p50": "543.27",
            "p95": "446.21",
            "p99": "407.06",
            "min": "404.16",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1924.10",
            "p50": "1483.52",
            "p95": "772.53",
            "p99": "609.43",
            "min": "597.12",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2207.36",
            "p50": "1784.84",
            "p95": "821.62",
            "p99": "691.97",
            "min": "685.90",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.86",
            "p50": "71.83",
            "p95": "69.69",
            "p99": "67.98",
            "min": "67.49",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9263.17",
            "p50": "4856.28",
            "p95": "2342.13",
            "p99": "1693.03",
            "min": "1628.59",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.84",
            "p50": "71.75",
            "p95": "69.10",
            "p99": "67.30",
            "min": "67.19",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "221.85",
            "p50": "216.96",
            "p95": "193.22",
            "p99": "177.67",
            "min": "177.65",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "834.43",
            "p50": "763.87",
            "p95": "565.65",
            "p99": "457.48",
            "min": "449.03",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.83",
            "p50": "629.67",
            "p95": "490.89",
            "p99": "388.53",
            "min": "387.87",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1065.82",
            "p50": "961.60",
            "p95": "626.43",
            "p99": "561.44",
            "min": "559.80",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "28455.06",
            "p50": "9147.00",
            "p95": "2680.80",
            "p99": "1626.96",
            "min": "1556.79",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1063.04",
            "p50": "982.90",
            "p95": "703.40",
            "p99": "531.31",
            "min": "529.89",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "56038.70",
            "p50": "9467.91",
            "p95": "2701.84",
            "p99": "1728.32",
            "min": "1660.39",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15709.93",
            "p50": "6107.37",
            "p95": "1419.72",
            "p99": "1048.63",
            "min": "1046.02",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "551.91",
            "p50": "480.53",
            "p95": "375.63",
            "p99": "326.75",
            "min": "324.25",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "978.69",
            "p50": "907.06",
            "p95": "607.90",
            "p99": "501.22",
            "min": "481.84",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "820.75",
            "p50": "738.88",
            "p95": "578.26",
            "p99": "496.69",
            "min": "495.28",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1198.16",
            "p50": "1084.59",
            "p95": "767.01",
            "p99": "557.52",
            "min": "539.38",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "728.03",
            "p50": "649.54",
            "p95": "498.53",
            "p99": "241.97",
            "min": "196.08",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1153.58",
            "p50": "1067.14",
            "p95": "728.12",
            "p99": "570.35",
            "min": "539.39",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "870.00",
            "p50": "758.88",
            "p95": "474.86",
            "p99": "424.98",
            "min": "417.73",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "906.32",
            "p50": "832.74",
            "p95": "557.66",
            "p99": "474.92",
            "min": "467.38",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2337.43",
            "p50": "2032.23",
            "p95": "1069.73",
            "p99": "960.59",
            "min": "960.38",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "856.63",
            "p50": "763.15",
            "p95": "518.67",
            "p99": "452.26",
            "min": "446.88",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "81.44",
            "p50": "79.13",
            "p95": "72.23",
            "p99": "68.86",
            "min": "68.49",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "75.11",
            "p50": "72.92",
            "p95": "67.07",
            "p99": "62.59",
            "min": "62.26",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "76.50",
            "p50": "74.15",
            "p95": "67.88",
            "p99": "64.98",
            "min": "64.56",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "212.30",
            "p50": "197.18",
            "p95": "154.55",
            "p99": "138.99",
            "min": "138.56",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "103.98",
            "p50": "99.48",
            "p95": "88.47",
            "p99": "84.07",
            "min": "83.90",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.99",
            "p50": "104.65",
            "p95": "92.90",
            "p99": "79.39",
            "min": "75.81",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "142.68",
            "p50": "134.84",
            "p95": "116.61",
            "p99": "106.66",
            "min": "105.86",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "143.35",
            "p50": "134.09",
            "p95": "113.68",
            "p99": "95.81",
            "min": "93.35",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "187.07",
            "p50": "173.06",
            "p95": "146.74",
            "p99": "131.27",
            "min": "130.75",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "185.43",
            "p50": "172.32",
            "p95": "143.13",
            "p99": "110.53",
            "min": "106.63",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "185.63",
            "p50": "174.01",
            "p95": "146.24",
            "p99": "101.78",
            "min": "93.87",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.32",
            "p50": "122.63",
            "p95": "106.37",
            "p99": "99.16",
            "min": "98.89",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "205.50",
            "p50": "189.42",
            "p95": "145.82",
            "p99": "134.10",
            "min": "133.19",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "188.28",
            "p50": "178.03",
            "p95": "150.65",
            "p99": "134.55",
            "min": "133.87",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "72.78",
            "p50": "69.00",
            "p95": "63.61",
            "p99": "60.41",
            "min": "60.10",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "133.75",
            "p50": "123.96",
            "p95": "107.79",
            "p99": "114.10",
            "min": "103.52",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "218.43",
            "p50": "192.98",
            "p95": "157.98",
            "p99": "152.46",
            "min": "136.99",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "164.49",
            "p50": "140.88",
            "p95": "134.92",
            "p99": "145.52",
            "min": "131.20",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "128.28",
            "p50": "118.26",
            "p95": "107.59",
            "p99": "112.12",
            "min": "99.94",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1038.31",
            "p50": "758.93",
            "p95": "415.34",
            "p99": "314.13",
            "min": "305.17",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1028.85",
            "p50": "732.72",
            "p95": "406.38",
            "p99": "339.41",
            "min": "336.96",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1142.99",
            "p50": "809.38",
            "p95": "389.30",
            "p99": "348.36",
            "min": "344.35",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1086.04",
            "p50": "792.66",
            "p95": "449.06",
            "p99": "313.88",
            "min": "311.94",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1048.65",
            "p50": "803.65",
            "p95": "401.68",
            "p99": "330.43",
            "min": "313.34",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1025.27",
            "p50": "743.77",
            "p95": "443.14",
            "p99": "346.50",
            "min": "338.56",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "341.64",
            "p50": "298.46",
            "p95": "217.14",
            "p99": "186.50",
            "min": "185.38",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "337.83",
            "p50": "295.46",
            "p95": "225.07",
            "p99": "187.88",
            "min": "186.12",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "339.91",
            "p50": "297.82",
            "p95": "231.49",
            "p99": "198.64",
            "min": "196.84",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "375.06",
            "p50": "319.72",
            "p95": "230.69",
            "p99": "208.20",
            "min": "207.17",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "287.13",
            "p50": "255.54",
            "p95": "194.33",
            "p99": "176.13",
            "min": "174.75",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "289.62",
            "p50": "259.37",
            "p95": "189.80",
            "p99": "170.25",
            "min": "169.92",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "295.86",
            "p50": "260.12",
            "p95": "209.61",
            "p99": "166.22",
            "min": "164.57",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "295.47",
            "p50": "260.55",
            "p95": "210.17",
            "p99": "168.25",
            "min": "165.32",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "300.75",
            "p50": "263.55",
            "p95": "203.36",
            "p99": "179.87",
            "min": "179.53",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.30",
            "p50": "101.50",
            "p95": "92.19",
            "p99": "84.10",
            "min": "82.04",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.89",
            "p50": "101.34",
            "p95": "89.12",
            "p99": "83.71",
            "min": "82.52",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.93",
            "p50": "94.41",
            "p95": "82.57",
            "p99": "79.15",
            "min": "78.57",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "250.63",
            "p50": "229.34",
            "p95": "173.77",
            "p99": "152.43",
            "min": "150.47",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.21",
            "p50": "93.59",
            "p95": "82.02",
            "p99": "75.16",
            "min": "73.78",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "243.99",
            "p50": "224.08",
            "p95": "180.62",
            "p99": "155.05",
            "min": "152.45",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "188.70",
            "p50": "174.54",
            "p95": "136.05",
            "p99": "125.75",
            "min": "125.03",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "155.03",
            "p50": "144.70",
            "p95": "125.05",
            "p99": "113.52",
            "min": "113.42",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "442.91",
            "p50": "378.60",
            "p95": "265.61",
            "p99": "214.35",
            "min": "206.91",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4633.82",
            "p50": "1813.69",
            "p95": "499.58",
            "p99": "388.73",
            "min": "349.49",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "444.02",
            "p50": "374.00",
            "p95": "261.65",
            "p99": "204.77",
            "min": "204.32",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "13779.55",
            "p50": "2814.95",
            "p95": "1026.74",
            "p99": "634.69",
            "min": "583.70",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3268.50",
            "p50": "1412.37",
            "p95": "481.53",
            "p99": "419.68",
            "min": "406.98",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "208.11",
            "p50": "191.52",
            "p95": "163.88",
            "p99": "144.69",
            "min": "143.05",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "235.49",
            "p50": "212.42",
            "p95": "170.05",
            "p99": "150.29",
            "min": "148.08",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "128.00",
            "p50": "121.75",
            "p95": "102.17",
            "p99": "95.72",
            "min": "94.74",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "210.86",
            "p50": "194.22",
            "p95": "151.14",
            "p99": "103.51",
            "min": "84.16",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "142.59",
            "p50": "132.71",
            "p95": "112.90",
            "p99": "87.61",
            "min": "84.11",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "175.77",
            "p50": "162.12",
            "p95": "131.19",
            "p99": "94.88",
            "min": "75.55",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "186.43",
            "p50": "172.27",
            "p95": "139.19",
            "p99": "124.52",
            "min": "122.42",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "186.57",
            "p50": "170.56",
            "p95": "140.84",
            "p99": "127.27",
            "min": "125.13",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "296.23",
            "p50": "233.88",
            "p95": "142.75",
            "p99": "136.81",
            "min": "130.17",
            "n": "95",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "143.24",
            "p50": "136.21",
            "p95": "112.76",
            "p99": "116.85",
            "min": "108.52",
            "n": "75",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "87.76",
            "p50": "84.38",
            "p95": "77.27",
            "p99": "75.35",
            "min": "75.19",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "88.75",
            "p50": "85.40",
            "p95": "82.44",
            "p99": "81.19",
            "min": "81.18",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "88.76",
            "p50": "84.96",
            "p95": "79.53",
            "p99": "77.08",
            "min": "76.97",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "192.31",
            "p50": "182.79",
            "p95": "176.78",
            "p99": "127.77",
            "min": "127.62",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "93.37",
            "p50": "89.71",
            "p95": "86.75",
            "p99": "84.16",
            "min": "83.96",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "112.57",
            "p50": "108.08",
            "p95": "105.02",
            "p99": "100.60",
            "min": "99.84",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "124.88",
            "p50": "120.73",
            "p95": "103.46",
            "p99": "96.55",
            "min": "96.10",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "124.71",
            "p50": "120.56",
            "p95": "116.59",
            "p99": "111.21",
            "min": "111.21",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "98.84",
            "p50": "96.79",
            "p95": "88.08",
            "p99": "85.19",
            "min": "84.30",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "98.58",
            "p50": "95.46",
            "p95": "91.40",
            "p99": "86.18",
            "min": "86.15",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "97.74",
            "p50": "96.04",
            "p95": "93.97",
            "p99": "90.95",
            "min": "90.94",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "125.53",
            "p50": "122.69",
            "p95": "118.97",
            "p99": "114.84",
            "min": "114.58",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "123.49",
            "p50": "114.07",
            "p95": "107.54",
            "p99": "104.52",
            "min": "104.37",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "115.57",
            "p50": "113.39",
            "p95": "110.24",
            "p99": "107.72",
            "min": "107.54",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "75.67",
            "p50": "71.66",
            "p95": "67.87",
            "p99": "63.47",
            "min": "63.37",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "98.13",
            "p50": "97.05",
            "p95": "90.53",
            "p99": "91.69",
            "min": "88.22",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "59.61",
            "p50": "57.09",
            "p95": "55.58",
            "p99": "54.17",
            "min": "52.89",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "158.55",
            "p50": "127.32",
            "p95": "118.15",
            "p99": "134.75",
            "min": "116.80",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "110.06",
            "p50": "108.01",
            "p95": "106.60",
            "p99": "107.40",
            "min": "105.40",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "376.34",
            "p50": "360.97",
            "p95": "347.77",
            "p99": "303.88",
            "min": "296.46",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "508.53",
            "p50": "477.68",
            "p95": "463.74",
            "p99": "430.28",
            "min": "428.20",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "372.30",
            "p50": "356.70",
            "p95": "331.14",
            "p99": "307.91",
            "min": "306.86",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "376.72",
            "p50": "360.29",
            "p95": "337.23",
            "p99": "283.38",
            "min": "272.24",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "379.90",
            "p50": "362.81",
            "p95": "340.40",
            "p99": "313.68",
            "min": "311.93",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "467.85",
            "p50": "442.57",
            "p95": "428.33",
            "p99": "406.17",
            "min": "404.77",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "97.37",
            "p50": "92.73",
            "p95": "90.42",
            "p99": "88.10",
            "min": "88.05",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "97.39",
            "p50": "93.31",
            "p95": "90.17",
            "p99": "88.37",
            "min": "88.30",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "96.33",
            "p50": "92.07",
            "p95": "88.88",
            "p99": "85.24",
            "min": "84.86",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "88.16",
            "p50": "85.49",
            "p95": "83.60",
            "p99": "80.41",
            "min": "80.38",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.84",
            "p50": "86.00",
            "p95": "85.39",
            "p99": "84.75",
            "min": "84.73",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "89.50",
            "p50": "85.37",
            "p95": "82.40",
            "p99": "81.18",
            "min": "81.13",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "85.43",
            "p50": "81.42",
            "p95": "79.24",
            "p99": "76.84",
            "min": "76.39",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "84.74",
            "p50": "81.22",
            "p95": "79.19",
            "p99": "76.71",
            "min": "76.62",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "85.17",
            "p50": "81.10",
            "p95": "79.07",
            "p99": "76.93",
            "min": "76.92",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "370.33",
            "p50": "358.13",
            "p95": "274.48",
            "p99": "221.69",
            "min": "214.30",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "371.95",
            "p50": "353.85",
            "p95": "296.77",
            "p99": "225.65",
            "min": "211.49",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.73",
            "p50": "151.45",
            "p95": "135.31",
            "p99": "128.07",
            "min": "126.08",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "476.19",
            "p50": "455.80",
            "p95": "342.40",
            "p99": "208.67",
            "min": "201.77",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "154.43",
            "p50": "152.14",
            "p95": "134.98",
            "p99": "114.42",
            "min": "110.56",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "274.98",
            "p50": "265.85",
            "p95": "222.45",
            "p99": "162.72",
            "min": "144.87",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "99.51",
            "p50": "96.30",
            "p95": "92.13",
            "p99": "84.85",
            "min": "84.23",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "186.81",
            "p50": "184.08",
            "p95": "178.23",
            "p99": "165.82",
            "min": "162.11",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "398.72",
            "p50": "303.32",
            "p95": "227.82",
            "p99": "206.42",
            "min": "204.06",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7457.86",
            "p50": "1867.48",
            "p95": "852.08",
            "p99": "604.67",
            "min": "550.38",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "379.64",
            "p50": "298.60",
            "p95": "247.79",
            "p99": "231.00",
            "min": "227.47",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "28018.14",
            "p50": "9398.24",
            "p95": "2709.22",
            "p99": "2117.26",
            "min": "2043.32",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4893.06",
            "p50": "3025.73",
            "p95": "1421.00",
            "p99": "971.11",
            "min": "970.13",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "318.54",
            "p50": "257.98",
            "p95": "216.81",
            "p99": "151.90",
            "min": "141.29",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "150.71",
            "p50": "132.67",
            "p95": "115.92",
            "p99": "110.18",
            "min": "109.81",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "121.14",
            "p50": "118.90",
            "p95": "94.54",
            "p99": "89.71",
            "min": "89.51",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "128.63",
            "p50": "121.00",
            "p95": "115.85",
            "p99": "108.43",
            "min": "107.43",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "121.22",
            "p50": "118.56",
            "p95": "115.49",
            "p99": "112.98",
            "min": "112.87",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "154.68",
            "p50": "149.53",
            "p95": "145.72",
            "p99": "140.63",
            "min": "140.47",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "96.49",
            "p50": "93.13",
            "p95": "90.06",
            "p99": "87.41",
            "min": "86.89",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "117.78",
            "p50": "113.39",
            "p95": "104.91",
            "p99": "102.61",
            "min": "102.05",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "928.38",
            "p50": "867.80",
            "p95": "644.88",
            "p99": "577.55",
            "min": "576.29",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "121.70",
            "p50": "119.88",
            "p95": "97.14",
            "p99": "82.66",
            "min": "77.98",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}