{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "169.22",
            "p50": "168.60",
            "p95": "160.57",
            "p99": "167.49",
            "min": "158.41",
            "n": "15",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "169.55",
            "p50": "169.20",
            "p95": "168.60",
            "p99": "169.36",
            "min": "168.36",
            "n": "15",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "169.32",
            "p50": "168.75",
            "p95": "165.43",
            "p99": "168.54",
            "min": "164.45",
            "n": "15",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "753.59",
            "p50": "748.53",
            "p95": "486.39",
            "p99": "700.15",
            "min": "472.32",
            "n": "18",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "397.93",
            "p50": "393.55",
            "p95": "389.72",
            "p99": "396.29",
            "min": "387.67",
            "n": "15",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "430.03",
            "p50": "428.25",
            "p95": "412.00",
            "p99": "426.42",
            "min": "408.82",
            "n": "16",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "322.56",
            "p50": "320.34",
            "p95": "311.52",
            "p99": "320.35",
            "min": "308.76",
            "n": "15",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "186.87",
            "p50": "185.52",
            "p95": "184.17",
            "p99": "186.33",
            "min": "183.50",
            "n": "15",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "265.38",
            "p50": "262.53",
            "p95": "248.17",
            "p99": "261.94",
            "min": "245.14",
            "n": "16",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "261.85",
            "p50": "259.54",
            "p95": "253.58",
            "p99": "260.20",
            "min": "251.51",
            "n": "15",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "257.05",
            "p50": "256.15",
            "p95": "249.79",
            "p99": "255.60",
            "min": "247.97",
            "n": "15",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "189.11",
            "p50": "187.17",
            "p95": "180.99",
            "p99": "187.49",
            "min": "178.96",
            "n": "15",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "319.80",
            "p50": "316.86",
            "p95": "306.72",
            "p99": "317.18",
            "min": "304.42",
            "n": "16",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "306.32",
            "p50": "303.12",
            "p95": "299.14",
            "p99": "304.88",
            "min": "297.35",
            "n": "15",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "109.74",
            "p50": "106.56",
            "p95": "104.31",
            "p99": "108.65",
            "min": "103.71",
            "n": "17",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "168.91",
            "p50": "167.74",
            "p95": "167.09",
            "p99": "168.54",
            "min": "164.86",
            "n": "8",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "256.79",
            "p50": "237.36",
            "p95": "241.81",
            "p99": "253.79",
            "min": "229.54",
            "n": "10",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "240.78",
            "p50": "193.58",
            "p95": "217.43",
            "p99": "236.11",
            "min": "182.41",
            "n": "7",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "166.08",
            "p50": "164.53",
            "p95": "165.14",
            "p99": "165.89",
            "min": "163.72",
            "n": "7",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "856.16",
            "p50": "823.35",
            "p95": "744.65",
            "p99": "833.86",
            "min": "744.65",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "838.40",
            "p50": "815.96",
            "p95": "801.06",
            "p99": "830.93",
            "min": "801.06",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1013.66",
            "p50": "946.04",
            "p95": "893.11",
            "p99": "989.55",
            "min": "893.11",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1042.64",
            "p50": "961.98",
            "p95": "879.07",
            "p99": "1009.92",
            "min": "879.07",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1049.51",
            "p50": "960.39",
            "p95": "910.50",
            "p99": "1021.71",
            "min": "903.18",
            "n": "18",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "847.88",
            "p50": "817.54",
            "p95": "769.28",
            "p99": "832.16",
            "min": "769.28",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "192.91",
            "p50": "184.55",
            "p95": "182.54",
            "p99": "190.84",
            "min": "179.94",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "188.07",
            "p50": "184.58",
            "p95": "182.85",
            "p99": "187.03",
            "min": "181.55",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "189.46",
            "p50": "183.45",
            "p95": "180.15",
            "p99": "187.60",
            "min": "177.82",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "213.33",
            "p50": "210.01",
            "p95": "209.70",
            "p99": "212.61",
            "min": "208.79",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.05",
            "p50": "86.91",
            "p95": "86.53",
            "p99": "86.95",
            "min": "86.47",
            "n": "17",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "325.08",
            "p50": "304.69",
            "p95": "293.06",
            "p99": "318.68",
            "min": "285.05",
            "n": "15",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "317.79",
            "p50": "296.82",
            "p95": "290.91",
            "p99": "312.42",
            "min": "284.19",
            "n": "15",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "316.03",
            "p50": "294.81",
            "p95": "289.35",
            "p99": "310.69",
            "min": "282.68",
            "n": "15",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "321.13",
            "p50": "294.46",
            "p95": "292.31",
            "p99": "315.36",
            "min": "285.10",
            "n": "15",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2404.68",
            "p50": "2251.91",
            "p95": "1840.61",
            "p99": "2291.87",
            "min": "1840.61",
            "n": "19",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2297.04",
            "p50": "2189.21",
            "p95": "1925.49",
            "p99": "2222.73",
            "min": "1925.49",
            "n": "19",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "93.96",
            "p50": "93.61",
            "p95": "92.80",
            "p99": "93.73",
            "min": "92.67",
            "n": "17",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "5519.54",
            "p50": "5020.71",
            "p95": "59.75",
            "p99": "4427.59",
            "min": "59.75",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "93.93",
            "p50": "93.41",
            "p95": "92.64",
            "p99": "93.67",
            "min": "92.41",
            "n": "16",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3151.92",
            "p50": "3006.69",
            "p95": "2749.77",
            "p99": "3071.49",
            "min": "2749.77",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "262.95",
            "p50": "260.18",
            "p95": "252.30",
            "p99": "260.82",
            "min": "249.64",
            "n": "15",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "536.84",
            "p50": "532.30",
            "p95": "514.27",
            "p99": "532.33",
            "min": "513.08",
            "n": "18",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1266.61",
            "p50": "1236.14",
            "p95": "379.81",
            "p99": "1089.25",
            "min": "379.81",
            "n": "19",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "16930.18",
            "p50": "7257.24",
            "p95": "1993.17",
            "p99": "13942.78",
            "min": "1993.17",
            "n": "19",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1162.25",
            "p50": "1129.22",
            "p95": "347.82",
            "p99": "999.37",
            "min": "347.82",
            "n": "19",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "43506.71",
            "p50": "10356.67",
            "p95": "2448.55",
            "p99": "35295.08",
            "min": "2448.55",
            "n": "19",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14018.23",
            "p50": "6557.56",
            "p95": "2160.86",
            "p99": "11646.76",
            "min": "2160.86",
            "n": "19",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "531.64",
            "p50": "486.50",
            "p95": "390.61",
            "p99": "503.43",
            "min": "383.18",
            "n": "18",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "510.08",
            "p50": "505.75",
            "p95": "490.18",
            "p99": "506.10",
            "min": "486.66",
            "n": "16",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "202.62",
            "p50": "202.04",
            "p95": "200.73",
            "p99": "202.24",
            "min": "200.39",
            "n": "16",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "430.47",
            "p50": "426.98",
            "p95": "421.92",
            "p99": "428.76",
            "min": "420.97",
            "n": "17",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "202.70",
            "p50": "200.67",
            "p95": "199.14",
            "p99": "201.99",
            "min": "198.25",
            "n": "15",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "328.13",
            "p50": "325.16",
            "p95": "319.69",
            "p99": "326.44",
            "min": "319.25",
            "n": "18",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "269.36",
            "p50": "266.77",
            "p95": "259.89",
            "p99": "267.47",
            "min": "257.53",
            "n": "15",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "508.63",
            "p50": "502.90",
            "p95": "490.79",
            "p99": "505.07",
            "min": "488.81",
            "n": "17",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1445.20",
            "p50": "1228.25",
            "p95": "960.45",
            "p99": "1348.25",
            "min": "874.91",
            "n": "16",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "314.55",
            "p50": "310.35",
            "p95": "300.56",
            "p99": "311.75",
            "min": "298.09",
            "n": "16",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "86.42",
            "p50": "85.00",
            "p95": "81.26",
            "p99": "85.39",
            "min": "79.97",
            "n": "15",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "79.62",
            "p50": "78.25",
            "p95": "72.07",
            "p99": "78.11",
            "min": "70.19",
            "n": "15",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "81.79",
            "p50": "77.92",
            "p95": "74.46",
            "p99": "80.32",
            "min": "72.62",
            "n": "15",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "223.47",
            "p50": "213.71",
            "p95": "192.53",
            "p99": "217.28",
            "min": "190.91",
            "n": "18",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "168.13",
            "p50": "159.39",
            "p95": "141.04",
            "p99": "162.71",
            "min": "134.27",
            "n": "15",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "174.94",
            "p50": "165.84",
            "p95": "152.30",
            "p99": "170.42",
            "min": "148.30",
            "n": "16",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "169.16",
            "p50": "161.61",
            "p95": "137.51",
            "p99": "162.83",
            "min": "129.60",
            "n": "15",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "167.87",
            "p50": "162.36",
            "p95": "151.29",
            "p99": "164.55",
            "min": "147.15",
            "n": "15",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "192.00",
            "p50": "179.65",
            "p95": "99.84",
            "p99": "173.56",
            "min": "83.58",
            "n": "16",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "170.89",
            "p50": "158.81",
            "p95": "144.09",
            "p99": "165.53",
            "min": "137.39",
            "n": "15",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "193.74",
            "p50": "181.68",
            "p95": "156.49",
            "p99": "186.29",
            "min": "147.18",
            "n": "15",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "141.98",
            "p50": "137.70",
            "p95": "125.30",
            "p99": "138.65",
            "min": "121.13",
            "n": "15",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "214.11",
            "p50": "198.69",
            "p95": "173.25",
            "p99": "205.94",
            "min": "166.03",
            "n": "16",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "172.36",
            "p50": "159.24",
            "p95": "147.80",
            "p99": "167.44",
            "min": "141.66",
            "n": "15",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "67.83",
            "p50": "64.53",
            "p95": "61.73",
            "p99": "66.61",
            "min": "61.05",
            "n": "17",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "135.66",
            "p50": "132.07",
            "p95": "130.12",
            "p99": "134.55",
            "min": "123.35",
            "n": "8",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "404.11",
            "p50": "317.47",
            "p95": "303.27",
            "p99": "383.94",
            "min": "220.77",
            "n": "10",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "162.00",
            "p50": "143.71",
            "p95": "150.85",
            "p99": "159.77",
            "min": "134.12",
            "n": "7",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "127.07",
            "p50": "122.03",
            "p95": "124.38",
            "p99": "126.54",
            "min": "120.33",
            "n": "7",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1102.54",
            "p50": "1012.40",
            "p95": "531.68",
            "p99": "988.36",
            "min": "531.68",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1033.79",
            "p50": "884.81",
            "p95": "578.18",
            "p99": "942.67",
            "min": "578.18",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1265.87",
            "p50": "981.91",
            "p95": "472.19",
            "p99": "1107.13",
            "min": "472.19",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1229.51",
            "p50": "1010.03",
            "p95": "511.19",
            "p99": "1085.84",
            "min": "511.19",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1126.50",
            "p50": "905.60",
            "p95": "523.18",
            "p99": "1005.84",
            "min": "491.43",
            "n": "18",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1040.14",
            "p50": "918.86",
            "p95": "434.49",
            "p99": "919.01",
            "min": "434.49",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "687.69",
            "p50": "528.05",
            "p95": "432.03",
            "p99": "636.56",
            "min": "368.11",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "650.82",
            "p50": "591.23",
            "p95": "470.08",
            "p99": "614.67",
            "min": "424.89",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "687.39",
            "p50": "534.16",
            "p95": "423.81",
            "p99": "634.68",
            "min": "357.92",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "682.94",
            "p50": "561.65",
            "p95": "524.43",
            "p99": "651.24",
            "min": "484.80",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "287.85",
            "p50": "266.19",
            "p95": "205.03",
            "p99": "271.29",
            "min": "195.83",
            "n": "17",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "572.03",
            "p50": "475.29",
            "p95": "397.96",
            "p99": "537.21",
            "min": "354.44",
            "n": "15",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "593.22",
            "p50": "462.93",
            "p95": "376.99",
            "p99": "549.98",
            "min": "322.93",
            "n": "15",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "548.65",
            "p50": "470.70",
            "p95": "366.74",
            "p99": "512.27",
            "min": "321.27",
            "n": "15",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "587.96",
            "p50": "495.01",
            "p95": "381.39",
            "p99": "546.64",
            "min": "329.75",
            "n": "15",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.00",
            "p50": "101.87",
            "p95": "91.12",
            "p99": "103.02",
            "min": "91.12",
            "n": "19",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.61",
            "p50": "102.68",
            "p95": "84.99",
            "p99": "102.28",
            "min": "84.99",
            "n": "19",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.79",
            "p50": "95.25",
            "p95": "89.72",
            "p99": "96.98",
            "min": "88.72",
            "n": "17",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "251.13",
            "p50": "233.57",
            "p95": "202.51",
            "p99": "241.40",
            "min": "202.51",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.50",
            "p50": "95.46",
            "p95": "85.71",
            "p99": "95.14",
            "min": "83.63",
            "n": "16",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "245.86",
            "p50": "230.89",
            "p95": "176.46",
            "p99": "231.98",
            "min": "176.46",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "192.48",
            "p50": "183.07",
            "p95": "163.23",
            "p99": "186.63",
            "min": "155.92",
            "n": "15",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "199.75",
            "p50": "184.95",
            "p95": "152.81",
            "p99": "190.36",
            "min": "150.34",
            "n": "18",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "461.46",
            "p50": "410.47",
            "p95": "292.15",
            "p99": "427.60",
            "min": "292.15",
            "n": "19",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4432.47",
            "p50": "2358.27",
            "p95": "848.98",
            "p99": "3715.77",
            "min": "848.98",
            "n": "19",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "449.50",
            "p50": "391.77",
            "p95": "269.80",
            "p99": "413.56",
            "min": "269.80",
            "n": "19",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "13524.03",
            "p50": "4164.94",
            "p95": "676.82",
            "p99": "10954.59",
            "min": "676.82",
            "n": "19",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2938.76",
            "p50": "1965.61",
            "p95": "683.70",
            "p99": "2487.75",
            "min": "683.70",
            "n": "19",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "225.06",
            "p50": "211.38",
            "p95": "166.34",
            "p99": "213.31",
            "min": "163.25",
            "n": "18",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "242.54",
            "p50": "231.57",
            "p95": "190.96",
            "p99": "232.22",
            "min": "181.85",
            "n": "16",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "91.59",
            "p50": "86.93",
            "p95": "83.59",
            "p99": "89.99",
            "min": "82.17",
            "n": "16",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "222.20",
            "p50": "210.94",
            "p95": "169.08",
            "p99": "211.57",
            "min": "163.18",
            "n": "17",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "171.16",
            "p50": "161.95",
            "p95": "145.11",
            "p99": "165.95",
            "min": "138.60",
            "n": "15",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "202.09",
            "p50": "185.71",
            "p95": "106.96",
            "p99": "183.06",
            "min": "101.95",
            "n": "18",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "188.76",
            "p50": "180.81",
            "p95": "156.85",
            "p99": "182.38",
            "min": "148.87",
            "n": "15",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "193.84",
            "p50": "186.23",
            "p95": "152.33",
            "p99": "185.54",
            "min": "147.72",
            "n": "17",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1108.68",
            "p50": "873.75",
            "p95": "626.04",
            "p99": "1012.15",
            "min": "540.87",
            "n": "16",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "173.95",
            "p50": "165.75",
            "p95": "129.49",
            "p99": "165.06",
            "min": "121.64",
            "n": "16",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.15",
            "p50": "189.26",
            "p95": "184.00",
            "p99": "192.12",
            "min": "181.46",
            "n": "15",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.36",
            "p50": "191.11",
            "p95": "183.91",
            "p99": "192.27",
            "min": "181.30",
            "n": "15",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "193.26",
            "p50": "188.85",
            "p95": "174.36",
            "p99": "189.48",
            "min": "169.63",
            "n": "15",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1189.52",
            "p50": "1032.08",
            "p95": "678.25",
            "p99": "1087.27",
            "min": "651.34",
            "n": "18",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "697.21",
            "p50": "678.18",
            "p95": "560.33",
            "p99": "669.83",
            "min": "526.11",
            "n": "15",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "809.14",
            "p50": "771.31",
            "p95": "638.05",
            "p99": "774.92",
            "min": "607.86",
            "n": "16",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "749.58",
            "p50": "654.62",
            "p95": "532.66",
            "p99": "706.20",
            "min": "478.43",
            "n": "15",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "264.27",
            "p50": "261.89",
            "p95": "237.02",
            "p99": "258.82",
            "min": "230.21",
            "n": "15",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "905.89",
            "p50": "782.56",
            "p95": "544.48",
            "p99": "833.61",
            "min": "480.70",
            "n": "16",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "865.76",
            "p50": "798.76",
            "p95": "544.55",
            "p99": "801.52",
            "min": "464.25",
            "n": "15",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "866.27",
            "p50": "806.21",
            "p95": "667.14",
            "p99": "826.44",
            "min": "617.35",
            "n": "15",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "286.78",
            "p50": "270.24",
            "p95": "234.31",
            "p99": "276.29",
            "min": "221.19",
            "n": "15",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "653.03",
            "p50": "593.76",
            "p95": "489.26",
            "p99": "620.27",
            "min": "460.36",
            "n": "16",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "831.20",
            "p50": "705.12",
            "p95": "568.56",
            "p99": "778.67",
            "min": "502.90",
            "n": "15",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "110.75",
            "p50": "106.08",
            "p95": "98.09",
            "p99": "108.22",
            "min": "96.69",
            "n": "17",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "95.92",
            "p50": "93.45",
            "p95": "94.16",
            "p99": "95.57",
            "min": "92.01",
            "n": "8",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "415.41",
            "p50": "401.74",
            "p95": "366.06",
            "p99": "405.54",
            "min": "325.69",
            "n": "10",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "129.06",
            "p50": "104.35",
            "p95": "116.73",
            "p99": "126.59",
            "min": "98.24",
            "n": "7",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "90.30",
            "p50": "89.14",
            "p95": "87.82",
            "p99": "89.80",
            "min": "84.09",
            "n": "7",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1676.62",
            "p50": "1477.01",
            "p95": "732.81",
            "p99": "1487.86",
            "min": "732.81",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1637.28",
            "p50": "1310.14",
            "p95": "572.11",
            "p99": "1424.25",
            "min": "572.11",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1996.14",
            "p50": "1504.68",
            "p95": "769.24",
            "p99": "1750.76",
            "min": "769.24",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1998.13",
            "p50": "1723.28",
            "p95": "959.73",
            "p99": "1790.45",
            "min": "959.73",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2014.50",
            "p50": "1847.29",
            "p95": "799.92",
            "p99": "1771.58",
            "min": "736.00",
            "n": "18",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1652.24",
            "p50": "1268.78",
            "p95": "727.57",
            "p99": "1467.31",
            "min": "727.57",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "620.88",
            "p50": "568.13",
            "p95": "471.72",
            "p99": "591.05",
            "min": "434.42",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "621.58",
            "p50": "589.10",
            "p95": "467.29",
            "p99": "590.72",
            "min": "428.72",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "623.73",
            "p50": "543.89",
            "p95": "452.52",
            "p99": "589.49",
            "min": "409.72",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "646.01",
            "p50": "569.25",
            "p95": "480.55",
            "p99": "612.92",
            "min": "439.19",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.10",
            "p50": "86.30",
            "p95": "80.46",
            "p99": "85.77",
            "min": "79.72",
            "n": "17",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "571.29",
            "p50": "493.05",
            "p95": "434.07",
            "p99": "543.84",
            "min": "399.76",
            "n": "15",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "538.63",
            "p50": "490.73",
            "p95": "448.07",
            "p99": "520.52",
            "min": "425.43",
            "n": "15",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "531.90",
            "p50": "498.39",
            "p95": "381.56",
            "p99": "501.83",
            "min": "343.97",
            "n": "15",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "543.87",
            "p50": "497.69",
            "p95": "435.25",
            "p99": "522.14",
            "min": "408.10",
            "n": "15",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1355.02",
            "p50": "1171.76",
            "p95": "925.15",
            "p99": "1269.05",
            "min": "925.15",
            "n": "19",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1647.60",
            "p50": "1403.30",
            "p95": "830.82",
            "p99": "1484.24",
            "min": "830.82",
            "n": "19",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.09",
            "p50": "71.20",
            "p95": "67.61",
            "p99": "71.20",
            "min": "67.11",
            "n": "17",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "8708.12",
            "p50": "4302.03",
            "p95": "2268.37",
            "p99": "7420.17",
            "min": "2268.37",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.12",
            "p50": "71.05",
            "p95": "69.63",
            "p99": "71.63",
            "min": "69.20",
            "n": "16",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "221.50",
            "p50": "219.78",
            "p95": "187.30",
            "p99": "214.66",
            "min": "187.30",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "858.25",
            "p50": "752.62",
            "p95": "541.75",
            "p99": "794.95",
            "min": "462.63",
            "n": "15",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "669.14",
            "p50": "599.85",
            "p95": "468.64",
            "p99": "629.04",
            "min": "458.09",
            "n": "18",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1123.45",
            "p50": "1029.35",
            "p95": "663.63",
            "p99": "1031.49",
            "min": "663.63",
            "n": "19",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "24476.59",
            "p50": "8505.74",
            "p95": "2760.29",
            "p99": "20133.33",
            "min": "2760.29",
            "n": "19",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1118.62",
            "p50": "1067.24",
            "p95": "570.64",
            "p99": "1009.03",
            "min": "570.64",
            "n": "19",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "35171.30",
            "p50": "10127.52",
            "p95": "2850.50",
            "p99": "28707.14",
            "min": "2850.50",
            "n": "19",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13579.25",
            "p50": "5609.60",
            "p95": "857.12",
            "p99": "11034.83",
            "min": "857.12",
            "n": "19",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "554.34",
            "p50": "504.02",
            "p95": "430.14",
            "p99": "529.50",
            "min": "423.61",
            "n": "18",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "984.49",
            "p50": "906.19",
            "p95": "633.20",
            "p99": "914.23",
            "min": "571.21",
            "n": "16",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "286.88",
            "p50": "282.29",
            "p95": "234.06",
            "p99": "276.31",
            "min": "224.74",
            "n": "16",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1199.11",
            "p50": "1016.03",
            "p95": "740.04",
            "p99": "1107.30",
            "min": "689.03",
            "n": "17",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "264.47",
            "p50": "260.38",
            "p95": "248.28",
            "p99": "261.23",
            "min": "244.24",
            "n": "15",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "537.11",
            "p50": "525.92",
            "p95": "454.18",
            "p99": "520.52",
            "min": "449.81",
            "n": "18",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "831.38",
            "p50": "762.64",
            "p95": "605.11",
            "p99": "786.13",
            "min": "548.54",
            "n": "15",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "912.62",
            "p50": "809.54",
            "p95": "611.06",
            "p99": "852.31",
            "min": "577.55",
            "n": "17",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2267.52",
            "p50": "1884.08",
            "p95": "1228.36",
            "p99": "2059.69",
            "min": "1044.98",
            "n": "16",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "891.76",
            "p50": "825.30",
            "p95": "621.50",
            "p99": "837.71",
            "min": "573.81",
            "n": "16",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "80.65",
            "p50": "77.09",
            "p95": "72.58",
            "p99": "79.04",
            "min": "69.89",
            "n": "14",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "74.08",
            "p50": "72.36",
            "p95": "68.98",
            "p99": "73.06",
            "min": "67.71",
            "n": "15",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "75.51",
            "p50": "73.34",
            "p95": "71.11",
            "p99": "74.63",
            "min": "70.01",
            "n": "15",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "210.82",
            "p50": "190.44",
            "p95": "163.24",
            "p99": "201.30",
            "min": "160.73",
            "n": "18",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.28",
            "p50": "99.08",
            "p95": "92.85",
            "p99": "100.40",
            "min": "90.50",
            "n": "15",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "108.46",
            "p50": "105.05",
            "p95": "96.19",
            "p99": "106.01",
            "min": "94.03",
            "n": "16",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "139.94",
            "p50": "131.64",
            "p95": "124.11",
            "p99": "136.77",
            "min": "120.15",
            "n": "15",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "139.08",
            "p50": "133.93",
            "p95": "118.82",
            "p99": "135.03",
            "min": "113.75",
            "n": "15",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "183.22",
            "p50": "170.04",
            "p95": "124.55",
            "p99": "171.48",
            "min": "114.19",
            "n": "16",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "180.28",
            "p50": "166.25",
            "p95": "150.83",
            "p99": "174.39",
            "min": "143.47",
            "n": "15",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "177.81",
            "p50": "172.62",
            "p95": "150.95",
            "p99": "172.43",
            "min": "144.23",
            "n": "15",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "125.38",
            "p50": "122.17",
            "p95": "106.30",
            "p99": "121.56",
            "min": "101.53",
            "n": "15",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "200.79",
            "p50": "184.49",
            "p95": "158.54",
            "p99": "192.34",
            "min": "151.09",
            "n": "16",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "182.81",
            "p50": "175.13",
            "p95": "137.50",
            "p99": "173.75",
            "min": "126.17",
            "n": "15",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "70.69",
            "p50": "67.40",
            "p95": "62.42",
            "p99": "69.04",
            "min": "61.50",
            "n": "17",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "130.22",
            "p50": "124.50",
            "p95": "122.94",
            "p99": "128.76",
            "min": "114.04",
            "n": "8",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "206.65",
            "p50": "183.61",
            "p95": "177.20",
            "p99": "200.76",
            "min": "153.11",
            "n": "10",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "142.85",
            "p50": "137.19",
            "p95": "136.54",
            "p99": "141.58",
            "min": "127.07",
            "n": "7",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "122.76",
            "p50": "116.14",
            "p95": "117.46",
            "p99": "121.70",
            "min": "109.51",
            "n": "7",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1025.28",
            "p50": "719.12",
            "p95": "423.90",
            "p99": "905.00",
            "min": "423.90",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "997.34",
            "p50": "716.70",
            "p95": "411.82",
            "p99": "880.24",
            "min": "411.82",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1149.25",
            "p50": "732.17",
            "p95": "349.92",
            "p99": "989.38",
            "min": "349.92",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1042.02",
            "p50": "791.02",
            "p95": "413.92",
            "p99": "916.40",
            "min": "413.92",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "987.22",
            "p50": "629.29",
            "p95": "449.64",
            "p99": "879.70",
            "min": "421.34",
            "n": "18",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1004.31",
            "p50": "699.00",
            "p95": "388.18",
            "p99": "881.09",
            "min": "388.18",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "334.63",
            "p50": "291.44",
            "p95": "218.57",
            "p99": "311.42",
            "min": "189.56",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "336.31",
            "p50": "298.26",
            "p95": "257.57",
            "p99": "320.56",
            "min": "237.88",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "315.26",
            "p50": "301.15",
            "p95": "249.44",
            "p99": "302.10",
            "min": "232.98",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "346.60",
            "p50": "323.21",
            "p95": "277.80",
            "p99": "332.84",
            "min": "260.60",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "283.09",
            "p50": "249.75",
            "p95": "200.48",
            "p99": "266.56",
            "min": "191.30",
            "n": "17",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "283.38",
            "p50": "263.22",
            "p95": "227.53",
            "p99": "272.21",
            "min": "213.56",
            "n": "15",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "277.88",
            "p50": "246.11",
            "p95": "192.13",
            "p99": "260.73",
            "min": "170.69",
            "n": "15",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "282.07",
            "p50": "251.71",
            "p95": "182.55",
            "p99": "262.17",
            "min": "157.66",
            "n": "15",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "287.39",
            "p50": "261.69",
            "p95": "208.15",
            "p99": "271.54",
            "min": "188.34",
            "n": "15",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "104.85",
            "p50": "100.88",
            "p95": "88.22",
            "p99": "101.52",
            "min": "88.22",
            "n": "19",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.32",
            "p50": "101.20",
            "p95": "83.44",
            "p99": "100.94",
            "min": "83.44",
            "n": "19",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.23",
            "p50": "93.62",
            "p95": "84.21",
            "p99": "94.63",
            "min": "82.77",
            "n": "17",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "249.92",
            "p50": "219.14",
            "p95": "172.22",
            "p99": "234.38",
            "min": "172.22",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "96.01",
            "p50": "92.49",
            "p95": "83.64",
            "p99": "93.53",
            "min": "81.46",
            "n": "16",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "238.69",
            "p50": "213.22",
            "p95": "160.22",
            "p99": "223.00",
            "min": "160.22",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "181.16",
            "p50": "171.45",
            "p95": "152.18",
            "p99": "175.36",
            "min": "144.93",
            "n": "15",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "152.16",
            "p50": "141.38",
            "p95": "117.52",
            "p99": "145.23",
            "min": "115.69",
            "n": "18",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "438.32",
            "p50": "373.63",
            "p95": "200.70",
            "p99": "390.80",
            "min": "200.70",
            "n": "19",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4456.03",
            "p50": "1426.23",
            "p95": "349.61",
            "p99": "3634.75",
            "min": "349.61",
            "n": "19",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "436.98",
            "p50": "364.67",
            "p95": "221.77",
            "p99": "393.94",
            "min": "221.77",
            "n": "19",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "10236.40",
            "p50": "1904.83",
            "p95": "280.20",
            "p99": "8245.16",
            "min": "280.20",
            "n": "19",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2589.56",
            "p50": "1227.82",
            "p95": "518.59",
            "p99": "2175.37",
            "min": "518.59",
            "n": "19",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "202.41",
            "p50": "184.12",
            "p95": "143.65",
            "p99": "190.66",
            "min": "140.56",
            "n": "18",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "229.13",
            "p50": "208.44",
            "p95": "179.25",
            "p99": "219.15",
            "min": "170.45",
            "n": "16",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "127.89",
            "p50": "120.00",
            "p95": "111.39",
            "p99": "124.59",
            "min": "108.48",
            "n": "16",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "205.16",
            "p50": "190.21",
            "p95": "156.82",
            "p99": "195.49",
            "min": "151.45",
            "n": "17",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "138.59",
            "p50": "132.35",
            "p95": "118.72",
            "p99": "134.62",
            "min": "113.75",
            "n": "15",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "173.66",
            "p50": "162.50",
            "p95": "137.66",
            "p99": "166.46",
            "min": "135.76",
            "n": "18",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "180.58",
            "p50": "170.33",
            "p95": "149.26",
            "p99": "174.31",
            "min": "141.43",
            "n": "15",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "184.27",
            "p50": "172.21",
            "p95": "139.34",
            "p99": "175.29",
            "min": "134.35",
            "n": "17",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "270.26",
            "p50": "209.85",
            "p95": "183.15",
            "p99": "252.84",
            "min": "136.25",
            "n": "12",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "139.89",
            "p50": "133.98",
            "p95": "119.01",
            "p99": "135.71",
            "min": "101.93",
            "n": "10",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "85.61",
            "p50": "84.79",
            "p95": "77.79",
            "p99": "84.05",
            "min": "75.84",
            "n": "15",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "86.47",
            "p50": "86.28",
            "p95": "80.84",
            "p99": "85.34",
            "min": "79.44",
            "n": "15",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "86.35",
            "p50": "85.93",
            "p95": "84.25",
            "p99": "85.93",
            "min": "83.73",
            "n": "15",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "188.78",
            "p50": "187.66",
            "p95": "184.62",
            "p99": "187.95",
            "min": "184.40",
            "n": "18",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "92.88",
            "p50": "92.45",
            "p95": "89.12",
            "p99": "92.12",
            "min": "88.18",
            "n": "15",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "113.04",
            "p50": "112.14",
            "p95": "106.19",
            "p99": "111.67",
            "min": "104.99",
            "n": "16",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "121.48",
            "p50": "120.76",
            "p95": "108.97",
            "p99": "118.98",
            "min": "105.85",
            "n": "15",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "124.61",
            "p50": "123.86",
            "p95": "121.85",
            "p99": "124.06",
            "min": "121.16",
            "n": "15",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "96.34",
            "p50": "95.80",
            "p95": "94.02",
            "p99": "95.88",
            "min": "93.61",
            "n": "16",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.16",
            "p50": "96.24",
            "p95": "92.76",
            "p99": "96.28",
            "min": "91.66",
            "n": "15",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "96.42",
            "p50": "95.49",
            "p95": "92.33",
            "p99": "95.60",
            "min": "91.30",
            "n": "15",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "123.90",
            "p50": "121.91",
            "p95": "117.63",
            "p99": "122.65",
            "min": "116.06",
            "n": "15",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "120.38",
            "p50": "119.57",
            "p95": "115.51",
            "p99": "119.41",
            "min": "114.66",
            "n": "16",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "114.13",
            "p50": "113.52",
            "p95": "112.34",
            "p99": "113.77",
            "min": "111.89",
            "n": "15",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "75.92",
            "p50": "73.54",
            "p95": "64.20",
            "p99": "73.57",
            "min": "62.89",
            "n": "17",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "98.78",
            "p50": "98.36",
            "p95": "98.22",
            "p99": "98.66",
            "min": "97.55",
            "n": "8",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "60.62",
            "p50": "60.20",
            "p95": "60.34",
            "p99": "60.56",
            "min": "60.12",
            "n": "10",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "152.76",
            "p50": "127.73",
            "p95": "139.72",
            "p99": "150.15",
            "min": "120.16",
            "n": "7",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "109.98",
            "p50": "108.50",
            "p95": "109.11",
            "p99": "109.81",
            "min": "107.81",
            "n": "7",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "370.85",
            "p50": "369.36",
            "p95": "317.75",
            "p99": "360.23",
            "min": "317.75",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "485.94",
            "p50": "482.32",
            "p95": "467.94",
            "p99": "482.34",
            "min": "467.94",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "368.15",
            "p50": "364.71",
            "p95": "347.39",
            "p99": "364.00",
            "min": "347.39",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "371.99",
            "p50": "367.72",
            "p95": "328.98",
            "p99": "363.39",
            "min": "328.98",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "375.59",
            "p50": "369.98",
            "p95": "296.10",
            "p99": "359.69",
            "min": "291.92",
            "n": "18",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "451.66",
            "p50": "447.90",
            "p95": "436.50",
            "p99": "448.62",
            "min": "436.50",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "96.62",
            "p50": "95.59",
            "p95": "95.08",
            "p99": "96.31",
            "min": "94.69",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "96.72",
            "p50": "96.58",
            "p95": "96.10",
            "p99": "96.60",
            "min": "95.95",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "95.90",
            "p50": "95.26",
            "p95": "93.57",
            "p99": "95.44",
            "min": "92.99",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "88.12",
            "p50": "87.41",
            "p95": "86.09",
            "p99": "87.72",
            "min": "85.58",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.86",
            "p50": "86.64",
            "p95": "86.21",
            "p99": "86.73",
            "min": "86.14",
            "n": "17",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "90.46",
            "p50": "89.26",
            "p95": "82.93",
            "p99": "88.96",
            "min": "81.05",
            "n": "15",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "85.65",
            "p50": "84.68",
            "p95": "83.85",
            "p99": "85.29",
            "min": "83.39",
            "n": "15",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "85.41",
            "p50": "84.81",
            "p95": "84.02",
            "p99": "85.13",
            "min": "83.67",
            "n": "15",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "85.50",
            "p50": "84.77",
            "p95": "84.30",
            "p99": "85.26",
            "min": "84.00",
            "n": "15",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1355.67",
            "p50": "1295.02",
            "p95": "1095.21",
            "p99": "1303.58",
            "min": "1095.21",
            "n": "19",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1302.02",
            "p50": "1245.31",
            "p95": "1115.93",
            "p99": "1264.81",
            "min": "1115.93",
            "n": "19",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "90.08",
            "p50": "89.44",
            "p95": "83.17",
            "p99": "88.70",
            "min": "82.41",
            "n": "17",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "2035.62",
            "p50": "1815.41",
            "p95": "760.85",
            "p99": "1780.66",
            "min": "760.85",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "89.89",
            "p50": "89.48",
            "p95": "86.55",
            "p99": "89.22",
            "min": "85.96",
            "n": "16",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "1639.11",
            "p50": "1489.85",
            "p95": "576.26",
            "p99": "1426.54",
            "min": "576.26",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "97.19",
            "p50": "96.49",
            "p95": "92.14",
            "p99": "96.18",
            "min": "90.87",
            "n": "15",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "184.46",
            "p50": "182.72",
            "p95": "181.89",
            "p99": "183.95",
            "min": "181.76",
            "n": "18",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "413.46",
            "p50": "381.58",
            "p95": "237.82",
            "p99": "378.33",
            "min": "237.82",
            "n": "19",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4104.12",
            "p50": "2415.16",
            "p95": "623.14",
            "p99": "3407.92",
            "min": "623.14",
            "n": "19",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "442.57",
            "p50": "383.70",
            "p95": "300.41",
            "p99": "414.14",
            "min": "300.41",
            "n": "19",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "29137.60",
            "p50": "8950.63",
            "p95": "2060.72",
            "p99": "23722.22",
            "min": "2060.72",
            "n": "19",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "5013.02",
            "p50": "3090.88",
            "p95": "528.07",
            "p99": "4116.03",
            "min": "528.07",
            "n": "19",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "349.44",
            "p50": "319.27",
            "p95": "254.13",
            "p99": "330.38",
            "min": "249.11",
            "n": "18",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "153.33",
            "p50": "147.98",
            "p95": "134.63",
            "p99": "149.59",
            "min": "131.33",
            "n": "16",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "118.61",
            "p50": "111.40",
            "p95": "106.18",
            "p99": "116.12",
            "min": "103.98",
            "n": "16",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "136.82",
            "p50": "136.33",
            "p95": "132.78",
            "p99": "136.01",
            "min": "132.33",
            "n": "17",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "125.59",
            "p50": "123.21",
            "p95": "120.67",
            "p99": "124.61",
            "min": "119.45",
            "n": "15",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "171.93",
            "p50": "171.32",
            "p95": "167.62",
            "p99": "171.07",
            "min": "167.40",
            "n": "18",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "93.70",
            "p50": "93.04",
            "p95": "88.15",
            "p99": "92.59",
            "min": "86.76",
            "n": "15",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "116.94",
            "p50": "115.21",
            "p95": "113.46",
            "p99": "116.25",
            "min": "113.07",
            "n": "17",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "890.80",
            "p50": "849.60",
            "p95": "397.62",
            "p99": "792.16",
            "min": "310.58",
            "n": "16",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "124.53",
            "p50": "124.17",
            "p95": "116.52",
            "p99": "122.93",
            "min": "115.11",
            "n": "16",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}