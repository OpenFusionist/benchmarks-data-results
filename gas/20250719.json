{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "114.89",
            "p50": "109.26",
            "p95": "97.72",
            "p99": "86.13",
            "min": "85.48",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1096.99",
            "p50": "923.88",
            "p95": "592.18",
            "p99": "496.96",
            "min": "493.35",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "115.07",
            "p50": "109.80",
            "p95": "99.23",
            "p99": "98.31",
            "min": "98.28",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "993.67",
            "p50": "879.87",
            "p95": "577.21",
            "p99": "486.85",
            "min": "479.98",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "477.35",
            "p50": "431.32",
            "p95": "342.90",
            "p99": "311.39",
            "min": "309.92",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "462.33",
            "p50": "421.25",
            "p95": "332.52",
            "p99": "302.33",
            "min": "298.71",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "413.18",
            "p50": "380.66",
            "p95": "243.52",
            "p99": "229.43",
            "min": "229.27",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "428.95",
            "p50": "391.02",
            "p95": "318.67",
            "p99": "288.15",
            "min": "287.00",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "410.10",
            "p50": "381.55",
            "p95": "297.26",
            "p99": "261.89",
            "min": "256.25",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "697.34",
            "p50": "584.42",
            "p95": "455.91",
            "p99": "427.15",
            "min": "422.43",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "707.20",
            "p50": "595.25",
            "p95": "447.44",
            "p99": "392.44",
            "min": "386.50",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "659.65",
            "p50": "574.23",
            "p95": "443.65",
            "p99": "391.38",
            "min": "388.37",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "390.15",
            "p50": "359.78",
            "p95": "300.08",
            "p99": "239.16",
            "min": "226.60",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "420.11",
            "p50": "381.23",
            "p95": "318.90",
            "p99": "305.05",
            "min": "303.68",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8200.16",
            "p50": "3703.46",
            "p95": "1671.07",
            "p99": "1350.26",
            "min": "1330.79",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2860.15",
            "p50": "2341.39",
            "p95": "857.31",
            "p99": "1501.86",
            "min": "770.47",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "315.51",
            "p50": "283.99",
            "p95": "243.22",
            "p99": "246.91",
            "min": "230.82",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1423.52",
            "p50": "748.87",
            "p95": "345.29",
            "p99": "798.06",
            "min": "326.22",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7292.41",
            "p50": "3886.06",
            "p95": "1448.35",
            "p99": "3857.45",
            "min": "1266.16",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "814.53",
            "p50": "700.14",
            "p95": "497.77",
            "p99": "435.29",
            "min": "430.62",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "809.59",
            "p50": "737.50",
            "p95": "559.00",
            "p99": "424.83",
            "min": "421.28",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "927.45",
            "p50": "781.87",
            "p95": "547.59",
            "p99": "456.49",
            "min": "429.55",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2341.09",
            "p50": "1949.84",
            "p95": "915.90",
            "p99": "702.86",
            "min": "691.69",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2320.83",
            "p50": "1826.95",
            "p95": "865.52",
            "p99": "693.81",
            "min": "668.77",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "797.02",
            "p50": "705.17",
            "p95": "558.71",
            "p99": "449.63",
            "min": "424.78",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "164.68",
            "p50": "152.09",
            "p95": "136.85",
            "p99": "101.63",
            "min": "93.50",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "544.54",
            "p50": "465.83",
            "p95": "363.18",
            "p99": "341.28",
            "min": "340.69",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "164.81",
            "p50": "151.04",
            "p95": "138.02",
            "p99": "92.91",
            "min": "92.52",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "185.68",
            "p50": "167.46",
            "p95": "145.86",
            "p99": "99.45",
            "min": "98.49",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "33365.76",
            "p50": "8480.20",
            "p95": "2429.84",
            "p99": "1162.77",
            "min": "963.37",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "403.09",
            "p50": "354.03",
            "p95": "302.50",
            "p99": "269.44",
            "min": "265.70",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "384.59",
            "p50": "339.66",
            "p95": "291.25",
            "p99": "146.16",
            "min": "115.17",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "386.71",
            "p50": "340.79",
            "p95": "284.98",
            "p99": "228.48",
            "min": "220.41",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "384.91",
            "p50": "345.28",
            "p95": "294.33",
            "p99": "248.14",
            "min": "246.03",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "16014.07",
            "p50": "5109.74",
            "p95": "2352.72",
            "p99": "2063.93",
            "min": "1940.31",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "16181.80",
            "p50": "4967.11",
            "p95": "2339.52",
            "p99": "1658.40",
            "min": "1446.95",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "15703.89",
            "p50": "4762.64",
            "p95": "2431.82",
            "p99": "1896.43",
            "min": "1723.50",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "15692.39",
            "p50": "5227.66",
            "p95": "2447.84",
            "p99": "1804.57",
            "min": "1461.50",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "15385.62",
            "p50": "4705.67",
            "p95": "2285.42",
            "p99": "1780.44",
            "min": "1734.06",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "16154.42",
            "p50": "4894.69",
            "p95": "2499.30",
            "p99": "2192.97",
            "min": "2084.04",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "704.63",
            "p50": "613.13",
            "p95": "477.42",
            "p99": "418.90",
            "min": "410.74",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "601.18",
            "p50": "482.10",
            "p95": "377.36",
            "p99": "346.70",
            "min": "342.04",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1408.98",
            "p50": "1159.92",
            "p95": "313.16",
            "p99": "255.18",
            "min": "250.50",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "20489.75",
            "p50": "7970.01",
            "p95": "1985.40",
            "p99": "422.71",
            "min": "393.25",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1342.02",
            "p50": "1183.02",
            "p95": "767.34",
            "p99": "609.19",
            "min": "591.23",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "54682.21",
            "p50": "7636.22",
            "p95": "2412.14",
            "p99": "1431.27",
            "min": "1362.42",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "12727.59",
            "p50": "6242.09",
            "p95": "2261.60",
            "p99": "1063.21",
            "min": "705.37",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "583.77",
            "p50": "498.58",
            "p95": "380.11",
            "p99": "343.10",
            "min": "339.90",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "559.53",
            "p50": "497.77",
            "p95": "388.04",
            "p99": "348.43",
            "min": "344.88",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "643.33",
            "p50": "556.29",
            "p95": "428.33",
            "p99": "378.50",
            "min": "378.32",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "642.98",
            "p50": "575.85",
            "p95": "430.14",
            "p99": "377.92",
            "min": "370.75",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "649.58",
            "p50": "571.06",
            "p95": "441.02",
            "p99": "379.67",
            "min": "374.87",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "937.11",
            "p50": "802.07",
            "p95": "554.74",
            "p99": "337.16",
            "min": "208.76",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "694.70",
            "p50": "609.14",
            "p95": "462.23",
            "p99": "398.93",
            "min": "397.52",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "738.00",
            "p50": "644.56",
            "p95": "471.59",
            "p99": "417.01",
            "min": "414.96",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1544.26",
            "p50": "1362.10",
            "p95": "1053.80",
            "p99": "968.99",
            "min": "968.14",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "685.58",
            "p50": "604.11",
            "p95": "471.23",
            "p99": "394.26",
            "min": "390.29",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "139.66",
            "p50": "137.87",
            "p95": "127.59",
            "p99": "112.94",
            "min": "111.78",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "140.41",
            "p50": "136.56",
            "p95": "123.64",
            "p99": "113.37",
            "min": "112.67",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "140.02",
            "p50": "136.11",
            "p95": "126.11",
            "p99": "121.85",
            "min": "121.58",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "241.55",
            "p50": "233.63",
            "p95": "211.36",
            "p99": "201.50",
            "min": "201.20",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "190.33",
            "p50": "185.91",
            "p95": "170.35",
            "p99": "159.44",
            "min": "159.04",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "202.49",
            "p50": "198.73",
            "p95": "176.93",
            "p99": "165.27",
            "min": "164.73",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "183.55",
            "p50": "173.48",
            "p95": "159.02",
            "p99": "107.88",
            "min": "96.29",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "193.20",
            "p50": "181.26",
            "p95": "165.40",
            "p99": "136.47",
            "min": "133.57",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "211.53",
            "p50": "201.42",
            "p95": "176.61",
            "p99": "145.70",
            "min": "144.94",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "182.03",
            "p50": "173.94",
            "p95": "161.52",
            "p99": "152.05",
            "min": "151.51",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "210.59",
            "p50": "201.13",
            "p95": "180.64",
            "p99": "155.96",
            "min": "152.45",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "148.80",
            "p50": "142.88",
            "p95": "129.42",
            "p99": "124.21",
            "min": "123.51",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "232.40",
            "p50": "225.92",
            "p95": "200.66",
            "p99": "158.81",
            "min": "145.79",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "182.34",
            "p50": "174.08",
            "p95": "160.23",
            "p99": "142.81",
            "min": "141.93",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "101.00",
            "p50": "96.84",
            "p95": "91.80",
            "p99": "86.16",
            "min": "85.32",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "140.29",
            "p50": "135.20",
            "p95": "125.13",
            "p99": "129.93",
            "min": "124.35",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "455.18",
            "p50": "333.60",
            "p95": "263.22",
            "p99": "275.55",
            "min": "233.41",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "194.07",
            "p50": "151.65",
            "p95": "137.72",
            "p99": "160.76",
            "min": "135.63",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "133.03",
            "p50": "130.32",
            "p95": "119.54",
            "p99": "124.34",
            "min": "117.78",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1208.53",
            "p50": "1087.31",
            "p95": "763.11",
            "p99": "646.11",
            "min": "637.61",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1043.35",
            "p50": "1008.67",
            "p95": "742.32",
            "p99": "614.06",
            "min": "593.04",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1462.35",
            "p50": "1203.03",
            "p95": "846.32",
            "p99": "638.66",
            "min": "631.12",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1356.35",
            "p50": "1118.67",
            "p95": "718.97",
            "p99": "598.01",
            "min": "590.40",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1338.76",
            "p50": "1073.58",
            "p95": "791.40",
            "p99": "607.14",
            "min": "580.69",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1077.43",
            "p50": "1026.33",
            "p95": "680.84",
            "p99": "548.21",
            "min": "537.50",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "714.75",
            "p50": "530.58",
            "p95": "429.60",
            "p99": "388.98",
            "min": "387.78",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "723.06",
            "p50": "530.73",
            "p95": "397.71",
            "p99": "326.65",
            "min": "326.16",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "736.97",
            "p50": "549.39",
            "p95": "423.62",
            "p99": "337.71",
            "min": "321.20",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "736.83",
            "p50": "566.85",
            "p95": "448.94",
            "p99": "339.42",
            "min": "327.67",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "290.93",
            "p50": "285.09",
            "p95": "246.30",
            "p99": "224.19",
            "min": "221.96",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "590.13",
            "p50": "411.42",
            "p95": "323.57",
            "p99": "273.47",
            "min": "271.49",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "604.59",
            "p50": "463.75",
            "p95": "375.14",
            "p99": "315.96",
            "min": "309.12",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "619.70",
            "p50": "487.41",
            "p95": "396.86",
            "p99": "365.03",
            "min": "361.82",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "665.11",
            "p50": "491.60",
            "p95": "382.84",
            "p99": "296.52",
            "min": "287.07",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.57",
            "p50": "102.00",
            "p95": "97.67",
            "p99": "94.46",
            "min": "93.48",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.56",
            "p50": "101.98",
            "p95": "96.64",
            "p99": "91.69",
            "min": "90.93",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.95",
            "p50": "94.71",
            "p95": "87.86",
            "p99": "81.52",
            "min": "81.04",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "254.01",
            "p50": "241.08",
            "p95": "210.91",
            "p99": "184.04",
            "min": "178.36",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.35",
            "p50": "94.40",
            "p95": "90.38",
            "p99": "84.60",
            "min": "83.46",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "247.06",
            "p50": "231.92",
            "p95": "208.36",
            "p99": "199.27",
            "min": "197.62",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "212.84",
            "p50": "204.83",
            "p95": "182.28",
            "p99": "171.01",
            "min": "169.96",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "237.96",
            "p50": "233.29",
            "p95": "212.29",
            "p99": "204.37",
            "min": "203.78",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "554.24",
            "p50": "539.06",
            "p95": "435.40",
            "p99": "404.37",
            "min": "399.33",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7333.43",
            "p50": "2662.15",
            "p95": "1728.35",
            "p99": "1540.87",
            "min": "1496.52",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "522.73",
            "p50": "507.37",
            "p95": "409.83",
            "p99": "354.21",
            "min": "354.15",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "21527.35",
            "p50": "7209.79",
            "p95": "2360.98",
            "p99": "2053.10",
            "min": "1926.33",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4212.00",
            "p50": "2577.44",
            "p95": "1468.84",
            "p99": "1147.75",
            "min": "1069.53",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "243.01",
            "p50": "177.60",
            "p95": "154.06",
            "p99": "135.59",
            "min": "134.93",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "267.86",
            "p50": "260.73",
            "p95": "231.13",
            "p99": "214.24",
            "min": "211.19",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "150.18",
            "p50": "145.13",
            "p95": "132.55",
            "p99": "62.94",
            "min": "43.92",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "245.06",
            "p50": "237.76",
            "p95": "207.21",
            "p99": "170.48",
            "min": "157.55",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "192.68",
            "p50": "185.03",
            "p95": "164.41",
            "p99": "139.52",
            "min": "137.02",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "218.76",
            "p50": "211.49",
            "p95": "193.20",
            "p99": "130.31",
            "min": "86.82",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "211.30",
            "p50": "204.55",
            "p95": "186.50",
            "p99": "145.46",
            "min": "135.70",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "211.09",
            "p50": "204.20",
            "p95": "182.58",
            "p99": "96.34",
            "min": "66.87",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1227.04",
            "p50": "1107.12",
            "p95": "929.90",
            "p99": "784.54",
            "min": "777.22",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "185.29",
            "p50": "178.29",
            "p95": "164.26",
            "p99": "153.05",
            "min": "151.32",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "189.95",
            "p50": "187.33",
            "p95": "176.56",
            "p99": "156.49",
            "min": "152.75",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "190.40",
            "p50": "187.71",
            "p95": "178.13",
            "p99": "162.78",
            "min": "162.46",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "189.73",
            "p50": "187.96",
            "p95": "176.33",
            "p99": "170.23",
            "min": "170.20",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1126.62",
            "p50": "1092.59",
            "p95": "816.02",
            "p99": "579.58",
            "min": "510.60",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "633.94",
            "p50": "623.53",
            "p95": "531.19",
            "p99": "442.89",
            "min": "439.22",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "604.62",
            "p50": "595.80",
            "p95": "500.13",
            "p99": "462.61",
            "min": "456.45",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "652.37",
            "p50": "637.54",
            "p95": "534.01",
            "p99": "469.19",
            "min": "461.14",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "761.66",
            "p50": "742.86",
            "p95": "584.59",
            "p99": "466.58",
            "min": "451.69",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "906.59",
            "p50": "836.76",
            "p95": "689.88",
            "p99": "505.42",
            "min": "492.86",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "882.17",
            "p50": "859.55",
            "p95": "636.55",
            "p99": "248.10",
            "min": "174.03",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "883.70",
            "p50": "858.16",
            "p95": "569.35",
            "p99": "511.62",
            "min": "510.27",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "806.47",
            "p50": "792.91",
            "p95": "648.49",
            "p99": "566.58",
            "min": "561.13",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "685.56",
            "p50": "672.37",
            "p95": "519.75",
            "p99": "404.25",
            "min": "389.89",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "860.80",
            "p50": "824.14",
            "p95": "653.57",
            "p99": "516.97",
            "min": "513.60",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "11291.25",
            "p50": "6673.39",
            "p95": "2293.18",
            "p99": "1478.00",
            "min": "1452.18",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "3909.70",
            "p50": "3298.62",
            "p95": "1363.23",
            "p99": "2114.44",
            "min": "1147.76",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "439.91",
            "p50": "431.84",
            "p95": "330.38",
            "p99": "340.49",
            "min": "317.17",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "7469.29",
            "p50": "3800.91",
            "p95": "548.64",
            "p99": "3484.61",
            "min": "478.63",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7361.47",
            "p50": "3957.80",
            "p95": "2085.73",
            "p99": "4203.94",
            "min": "1821.94",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1511.56",
            "p50": "1378.47",
            "p95": "969.02",
            "p99": "793.79",
            "min": "745.39",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "14970.03",
            "p50": "1289.34",
            "p95": "1061.97",
            "p99": "909.51",
            "min": "876.87",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1688.34",
            "p50": "1551.96",
            "p95": "1076.52",
            "p99": "840.38",
            "min": "791.06",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "3235.98",
            "p50": "3023.64",
            "p95": "1626.54",
            "p99": "1152.20",
            "min": "1147.67",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "3236.31",
            "p50": "3013.83",
            "p95": "1657.55",
            "p99": "1148.18",
            "min": "1080.11",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1467.33",
            "p50": "1369.52",
            "p95": "899.37",
            "p99": "668.57",
            "min": "660.78",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "527.61",
            "p50": "501.84",
            "p95": "441.35",
            "p99": "357.09",
            "min": "346.47",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "738.95",
            "p50": "720.40",
            "p95": "557.69",
            "p99": "458.75",
            "min": "457.97",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "521.59",
            "p50": "501.59",
            "p95": "427.50",
            "p99": "359.13",
            "min": "358.18",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "550.49",
            "p50": "512.23",
            "p95": "429.74",
            "p99": "378.90",
            "min": "376.01",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "31170.98",
            "p50": "8248.46",
            "p95": "2368.95",
            "p99": "1876.14",
            "min": "1670.08",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "547.81",
            "p50": "538.38",
            "p95": "460.57",
            "p99": "372.09",
            "min": "371.11",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "529.85",
            "p50": "517.04",
            "p95": "432.95",
            "p99": "370.48",
            "min": "362.91",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "529.25",
            "p50": "521.52",
            "p95": "459.76",
            "p99": "371.67",
            "min": "358.67",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "536.07",
            "p50": "528.92",
            "p95": "426.51",
            "p99": "352.90",
            "min": "346.30",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "22390.69",
            "p50": "7765.58",
            "p95": "2542.08",
            "p99": "2309.15",
            "min": "2287.58",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "22180.90",
            "p50": "8495.68",
            "p95": "2375.78",
            "p99": "2240.90",
            "min": "2230.18",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "21551.62",
            "p50": "7305.41",
            "p95": "2335.55",
            "p99": "1929.07",
            "min": "1775.56",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "22315.28",
            "p50": "7513.21",
            "p95": "2350.81",
            "p99": "1833.80",
            "min": "1423.78",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "21158.24",
            "p50": "7184.62",
            "p95": "2324.66",
            "p99": "1511.05",
            "min": "1353.82",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "22351.17",
            "p50": "7823.52",
            "p95": "2413.44",
            "p99": "1674.40",
            "min": "1444.40",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "874.04",
            "p50": "814.46",
            "p95": "649.49",
            "p99": "577.80",
            "min": "567.33",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "632.25",
            "p50": "613.81",
            "p95": "515.70",
            "p99": "437.91",
            "min": "417.25",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1955.39",
            "p50": "1854.55",
            "p95": "1097.36",
            "p99": "689.43",
            "min": "687.48",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "15002.85",
            "p50": "8991.44",
            "p95": "2377.35",
            "p99": "1478.27",
            "min": "1443.98",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1855.93",
            "p50": "1761.59",
            "p95": "1004.38",
            "p99": "639.01",
            "min": "595.85",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "79331.65",
            "p50": "9241.50",
            "p95": "2348.05",
            "p99": "1432.24",
            "min": "1431.34",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13605.22",
            "p50": "8129.26",
            "p95": "2356.98",
            "p99": "1934.96",
            "min": "1911.56",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "682.68",
            "p50": "563.63",
            "p95": "465.02",
            "p99": "404.88",
            "min": "395.52",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "922.41",
            "p50": "898.32",
            "p95": "650.75",
            "p99": "539.59",
            "min": "519.26",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "805.72",
            "p50": "792.18",
            "p95": "606.29",
            "p99": "460.15",
            "min": "447.40",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1141.78",
            "p50": "1093.68",
            "p95": "741.19",
            "p99": "581.46",
            "min": "576.00",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "759.17",
            "p50": "737.75",
            "p95": "575.28",
            "p99": "504.34",
            "min": "501.69",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1076.12",
            "p50": "1025.81",
            "p95": "796.50",
            "p99": "564.20",
            "min": "535.97",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "836.59",
            "p50": "818.48",
            "p95": "599.26",
            "p99": "483.95",
            "min": "483.01",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "893.86",
            "p50": "869.74",
            "p95": "711.69",
            "p99": "537.00",
            "min": "515.25",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2070.86",
            "p50": "1812.91",
            "p95": "1461.39",
            "p99": "1200.31",
            "min": "1194.27",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "851.24",
            "p50": "821.45",
            "p95": "683.20",
            "p99": "545.50",
            "min": "530.51",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "121.57",
            "p50": "115.60",
            "p95": "101.63",
            "p99": "92.97",
            "min": "92.41",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "121.12",
            "p50": "115.95",
            "p95": "98.33",
            "p99": "92.30",
            "min": "91.44",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "120.97",
            "p50": "115.37",
            "p95": "100.73",
            "p99": "94.33",
            "min": "94.02",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "206.39",
            "p50": "188.58",
            "p95": "154.95",
            "p99": "133.21",
            "min": "132.93",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.53",
            "p50": "97.71",
            "p95": "82.92",
            "p99": "81.22",
            "min": "81.08",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "108.82",
            "p50": "102.03",
            "p95": "88.24",
            "p99": "81.71",
            "min": "80.30",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "139.54",
            "p50": "130.00",
            "p95": "109.90",
            "p99": "101.09",
            "min": "99.92",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "137.28",
            "p50": "130.27",
            "p95": "105.99",
            "p99": "101.14",
            "min": "101.07",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "180.71",
            "p50": "162.73",
            "p95": "134.39",
            "p99": "123.89",
            "min": "123.75",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "179.63",
            "p50": "164.18",
            "p95": "133.62",
            "p99": "120.12",
            "min": "119.98",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "178.21",
            "p50": "165.39",
            "p95": "128.28",
            "p99": "122.03",
            "min": "121.36",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "124.16",
            "p50": "116.37",
            "p95": "95.20",
            "p99": "91.92",
            "min": "91.90",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "198.96",
            "p50": "182.73",
            "p95": "142.02",
            "p99": "129.01",
            "min": "127.05",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "182.45",
            "p50": "169.50",
            "p95": "127.84",
            "p99": "124.15",
            "min": "123.64",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "74.52",
            "p50": "69.91",
            "p95": "62.92",
            "p99": "60.56",
            "min": "60.15",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "128.24",
            "p50": "118.22",
            "p95": "100.08",
            "p99": "107.66",
            "min": "96.58",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "201.03",
            "p50": "176.55",
            "p95": "143.07",
            "p99": "150.59",
            "min": "138.76",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "154.16",
            "p50": "134.07",
            "p95": "129.31",
            "p99": "139.19",
            "min": "127.90",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "123.32",
            "p50": "114.04",
            "p95": "98.50",
            "p99": "108.50",
            "min": "97.32",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1009.91",
            "p50": "663.26",
            "p95": "339.70",
            "p99": "278.84",
            "min": "256.13",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "988.84",
            "p50": "656.80",
            "p95": "341.61",
            "p99": "239.36",
            "min": "196.96",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1098.19",
            "p50": "687.46",
            "p95": "323.95",
            "p99": "235.93",
            "min": "232.21",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1037.70",
            "p50": "679.03",
            "p95": "319.71",
            "p99": "260.21",
            "min": "236.31",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "968.90",
            "p50": "665.28",
            "p95": "338.65",
            "p99": "274.87",
            "min": "271.53",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "997.36",
            "p50": "670.52",
            "p95": "318.31",
            "p99": "237.56",
            "min": "205.45",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "324.82",
            "p50": "282.21",
            "p95": "205.61",
            "p99": "178.49",
            "min": "178.26",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "330.57",
            "p50": "276.43",
            "p95": "184.00",
            "p99": "173.10",
            "min": "172.63",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "317.35",
            "p50": "278.07",
            "p95": "192.57",
            "p99": "179.25",
            "min": "178.73",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "360.35",
            "p50": "298.18",
            "p95": "219.50",
            "p99": "181.29",
            "min": "180.24",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "284.09",
            "p50": "243.01",
            "p95": "184.43",
            "p99": "155.37",
            "min": "154.83",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "285.37",
            "p50": "241.71",
            "p95": "182.89",
            "p99": "156.03",
            "min": "155.35",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "278.98",
            "p50": "238.70",
            "p95": "175.05",
            "p99": "148.16",
            "min": "146.26",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "287.43",
            "p50": "245.70",
            "p95": "184.16",
            "p99": "167.72",
            "min": "166.88",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "278.09",
            "p50": "243.68",
            "p95": "173.95",
            "p99": "160.55",
            "min": "159.02",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "104.29",
            "p50": "97.33",
            "p95": "84.18",
            "p99": "81.24",
            "min": "79.56",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "103.58",
            "p50": "97.88",
            "p95": "85.73",
            "p99": "81.07",
            "min": "80.81",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "95.95",
            "p50": "90.91",
            "p95": "79.77",
            "p99": "74.95",
            "min": "74.70",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "244.71",
            "p50": "215.72",
            "p95": "168.15",
            "p99": "150.79",
            "min": "149.50",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "96.11",
            "p50": "90.61",
            "p95": "79.94",
            "p99": "74.58",
            "min": "74.49",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "239.54",
            "p50": "209.78",
            "p95": "161.51",
            "p99": "141.03",
            "min": "139.71",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "176.51",
            "p50": "163.15",
            "p95": "133.06",
            "p99": "109.21",
            "min": "107.83",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "147.79",
            "p50": "135.81",
            "p95": "113.39",
            "p99": "103.61",
            "min": "103.52",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "434.60",
            "p50": "373.32",
            "p95": "261.63",
            "p99": "221.90",
            "min": "220.73",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5262.76",
            "p50": "2088.61",
            "p95": "618.63",
            "p99": "427.71",
            "min": "398.45",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "435.25",
            "p50": "375.08",
            "p95": "263.11",
            "p99": "205.22",
            "min": "203.97",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14283.45",
            "p50": "2918.23",
            "p95": "1001.87",
            "p99": "524.79",
            "min": "498.81",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3452.42",
            "p50": "1718.16",
            "p95": "596.01",
            "p99": "477.66",
            "min": "450.22",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "206.04",
            "p50": "187.75",
            "p95": "157.66",
            "p99": "139.72",
            "min": "139.57",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "230.38",
            "p50": "213.50",
            "p95": "158.83",
            "p99": "151.09",
            "min": "150.47",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "125.92",
            "p50": "117.12",
            "p95": "101.35",
            "p99": "94.74",
            "min": "94.59",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "203.82",
            "p50": "181.25",
            "p95": "145.10",
            "p99": "125.94",
            "min": "125.32",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "140.05",
            "p50": "129.78",
            "p95": "109.34",
            "p99": "101.99",
            "min": "101.76",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "175.57",
            "p50": "159.30",
            "p95": "125.92",
            "p99": "109.32",
            "min": "103.62",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "176.34",
            "p50": "161.72",
            "p95": "131.35",
            "p99": "122.88",
            "min": "122.76",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "179.16",
            "p50": "165.30",
            "p95": "132.72",
            "p99": "112.97",
            "min": "108.68",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "307.94",
            "p50": "248.50",
            "p95": "55.50",
            "p99": "51.70",
            "min": "51.69",
            "n": "104",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "143.93",
            "p50": "136.66",
            "p95": "116.01",
            "p99": "110.89",
            "min": "110.73",
            "n": "104",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "87.29",
            "p50": "82.39",
            "p95": "76.34",
            "p99": "74.23",
            "min": "74.17",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "88.22",
            "p50": "83.54",
            "p95": "81.37",
            "p99": "78.08",
            "min": "77.61",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "87.09",
            "p50": "83.15",
            "p95": "79.71",
            "p99": "70.02",
            "min": "68.46",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "235.29",
            "p50": "177.17",
            "p95": "172.80",
            "p99": "145.45",
            "min": "135.71",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "96.22",
            "p50": "94.23",
            "p95": "88.96",
            "p99": "86.33",
            "min": "86.32",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.91",
            "p50": "109.46",
            "p95": "105.81",
            "p99": "100.25",
            "min": "99.55",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "121.57",
            "p50": "118.41",
            "p95": "108.67",
            "p99": "101.22",
            "min": "100.90",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "121.91",
            "p50": "119.14",
            "p95": "115.80",
            "p99": "114.29",
            "min": "113.98",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "94.52",
            "p50": "92.42",
            "p95": "90.40",
            "p99": "86.90",
            "min": "86.67",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "99.86",
            "p50": "98.29",
            "p95": "95.52",
            "p99": "94.99",
            "min": "94.91",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "100.50",
            "p50": "98.60",
            "p95": "95.12",
            "p99": "90.60",
            "min": "89.86",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "122.79",
            "p50": "119.50",
            "p95": "115.11",
            "p99": "109.10",
            "min": "108.72",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "134.60",
            "p50": "131.84",
            "p95": "120.43",
            "p99": "116.25",
            "min": "116.02",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "112.48",
            "p50": "111.24",
            "p95": "105.97",
            "p99": "97.60",
            "min": "97.23",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "88.45",
            "p50": "83.54",
            "p95": "79.21",
            "p99": "75.04",
            "min": "74.29",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "100.26",
            "p50": "99.24",
            "p95": "94.39",
            "p99": "95.26",
            "min": "92.57",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "75.16",
            "p50": "73.15",
            "p95": "69.51",
            "p99": "64.09",
            "min": "61.50",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "155.25",
            "p50": "124.76",
            "p95": "116.83",
            "p99": "133.30",
            "min": "116.75",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "108.55",
            "p50": "105.80",
            "p95": "103.17",
            "p99": "105.12",
            "min": "102.54",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "421.70",
            "p50": "412.19",
            "p95": "389.01",
            "p99": "349.25",
            "min": "348.00",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "476.89",
            "p50": "469.18",
            "p95": "452.16",
            "p99": "424.05",
            "min": "417.83",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "452.82",
            "p50": "440.08",
            "p95": "396.61",
            "p99": "343.23",
            "min": "342.20",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "460.48",
            "p50": "446.00",
            "p95": "391.68",
            "p99": "333.77",
            "min": "320.12",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "460.94",
            "p50": "449.29",
            "p95": "420.47",
            "p99": "341.56",
            "min": "319.95",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "460.73",
            "p50": "454.44",
            "p95": "432.29",
            "p99": "374.64",
            "min": "342.97",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "122.04",
            "p50": "118.69",
            "p95": "113.98",
            "p99": "111.66",
            "min": "111.27",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "124.17",
            "p50": "119.18",
            "p95": "115.63",
            "p99": "112.00",
            "min": "111.50",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "121.68",
            "p50": "117.53",
            "p95": "114.29",
            "p99": "110.71",
            "min": "110.00",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "103.79",
            "p50": "101.51",
            "p95": "98.40",
            "p99": "96.60",
            "min": "96.37",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "85.45",
            "p50": "84.22",
            "p95": "83.50",
            "p99": "82.78",
            "min": "82.70",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "120.98",
            "p50": "118.20",
            "p95": "113.26",
            "p99": "108.60",
            "min": "107.94",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "114.59",
            "p50": "111.81",
            "p95": "107.42",
            "p99": "102.06",
            "min": "101.56",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "114.00",
            "p50": "111.23",
            "p95": "107.26",
            "p99": "101.29",
            "min": "100.60",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "114.17",
            "p50": "111.43",
            "p95": "106.26",
            "p99": "102.59",
            "min": "101.97",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1593.06",
            "p50": "1429.82",
            "p95": "677.74",
            "p99": "369.08",
            "min": "274.07",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1598.82",
            "p50": "1431.88",
            "p95": "707.47",
            "p99": "425.29",
            "min": "201.07",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.44",
            "p50": "151.76",
            "p95": "136.71",
            "p99": "116.40",
            "min": "109.20",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3949.03",
            "p50": "3547.48",
            "p95": "1418.96",
            "p99": "700.11",
            "min": "670.17",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "154.26",
            "p50": "151.61",
            "p95": "137.27",
            "p99": "116.06",
            "min": "115.46",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3933.86",
            "p50": "3588.40",
            "p95": "1395.81",
            "p99": "429.98",
            "min": "362.56",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "101.07",
            "p50": "98.81",
            "p95": "93.38",
            "p99": "90.39",
            "min": "90.02",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "174.10",
            "p50": "169.38",
            "p95": "163.60",
            "p99": "126.37",
            "min": "100.96",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "345.80",
            "p50": "256.34",
            "p95": "192.46",
            "p99": "163.69",
            "min": "158.03",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "10536.99",
            "p50": "1664.49",
            "p95": "905.35",
            "p99": "731.67",
            "min": "701.13",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "350.37",
            "p50": "266.64",
            "p95": "204.60",
            "p99": "170.75",
            "min": "167.18",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "25704.56",
            "p50": "8758.79",
            "p95": "2357.01",
            "p99": "1938.01",
            "min": "1739.65",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6848.03",
            "p50": "3131.27",
            "p95": "1650.28",
            "p99": "755.87",
            "min": "588.25",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "294.14",
            "p50": "231.69",
            "p95": "172.23",
            "p99": "142.94",
            "min": "141.11",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "153.86",
            "p50": "136.71",
            "p95": "111.10",
            "p99": "104.58",
            "min": "103.89",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "123.36",
            "p50": "117.22",
            "p95": "94.78",
            "p99": "89.27",
            "min": "88.62",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "124.86",
            "p50": "120.63",
            "p95": "115.74",
            "p99": "112.70",
            "min": "111.91",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "121.54",
            "p50": "118.58",
            "p95": "113.61",
            "p99": "106.91",
            "min": "106.65",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "151.98",
            "p50": "146.44",
            "p95": "140.95",
            "p99": "134.19",
            "min": "134.19",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "95.25",
            "p50": "93.77",
            "p95": "88.03",
            "p99": "85.41",
            "min": "85.17",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "126.94",
            "p50": "116.06",
            "p95": "112.60",
            "p99": "108.97",
            "min": "108.20",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1207.98",
            "p50": "1085.21",
            "p95": "387.35",
            "p99": "368.37",
            "min": "365.30",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "123.51",
            "p50": "119.22",
            "p95": "106.69",
            "p99": "98.91",
            "min": "97.48",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}