{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "110.36",
            "p50": "107.04",
            "p95": "98.00",
            "p99": "96.46",
            "min": "96.32",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1118.64",
            "p50": "911.90",
            "p95": "573.49",
            "p99": "521.14",
            "min": "520.48",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "111.09",
            "p50": "107.18",
            "p95": "98.10",
            "p99": "96.66",
            "min": "96.47",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "766.95",
            "p50": "683.24",
            "p95": "453.81",
            "p99": "411.55",
            "min": "396.20",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "406.26",
            "p50": "371.58",
            "p95": "300.54",
            "p99": "282.29",
            "min": "280.97",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "430.67",
            "p50": "397.90",
            "p95": "334.23",
            "p99": "300.37",
            "min": "295.02",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "294.68",
            "p50": "275.93",
            "p95": "197.43",
            "p99": "191.07",
            "min": "190.94",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "184.88",
            "p50": "175.28",
            "p95": "160.42",
            "p99": "150.06",
            "min": "149.52",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "258.88",
            "p50": "239.76",
            "p95": "208.48",
            "p99": "199.44",
            "min": "198.57",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "262.73",
            "p50": "244.91",
            "p95": "209.43",
            "p99": "197.30",
            "min": "196.82",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "259.63",
            "p50": "240.92",
            "p95": "213.60",
            "p99": "205.30",
            "min": "203.73",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "204.32",
            "p50": "193.17",
            "p95": "174.30",
            "p99": "128.56",
            "min": "128.06",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "338.34",
            "p50": "314.10",
            "p95": "267.28",
            "p99": "253.22",
            "min": "252.25",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "298.48",
            "p50": "281.68",
            "p95": "238.78",
            "p99": "226.75",
            "min": "225.02",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8743.90",
            "p50": "4235.41",
            "p95": "2189.47",
            "p99": "1645.12",
            "min": "1643.79",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "3008.00",
            "p50": "2000.27",
            "p95": "998.96",
            "p99": "1640.77",
            "min": "904.57",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "329.68",
            "p50": "296.15",
            "p95": "255.20",
            "p99": "258.19",
            "min": "241.42",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1440.34",
            "p50": "721.84",
            "p95": "345.90",
            "p99": "805.78",
            "min": "327.08",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7679.14",
            "p50": "3539.38",
            "p95": "1470.56",
            "p99": "4086.93",
            "min": "1377.02",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "825.08",
            "p50": "724.92",
            "p95": "522.88",
            "p99": "427.04",
            "min": "425.40",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "815.93",
            "p50": "742.03",
            "p95": "509.01",
            "p99": "454.75",
            "min": "453.36",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "943.37",
            "p50": "810.36",
            "p95": "553.78",
            "p99": "512.12",
            "min": "510.48",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2442.05",
            "p50": "1755.77",
            "p95": "918.69",
            "p99": "750.39",
            "min": "734.15",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2471.47",
            "p50": "2037.80",
            "p95": "1026.19",
            "p99": "847.23",
            "min": "824.78",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "810.79",
            "p50": "742.21",
            "p95": "537.92",
            "p99": "432.18",
            "min": "427.61",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "171.42",
            "p50": "157.76",
            "p95": "147.20",
            "p99": "141.69",
            "min": "141.19",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "556.85",
            "p50": "495.07",
            "p95": "395.36",
            "p99": "332.52",
            "min": "327.48",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "168.11",
            "p50": "158.37",
            "p95": "146.97",
            "p99": "141.45",
            "min": "140.92",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "189.16",
            "p50": "175.31",
            "p95": "159.43",
            "p99": "152.48",
            "min": "151.67",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "36248.60",
            "p50": "8119.30",
            "p95": "2274.13",
            "p99": "1841.29",
            "min": "1736.45",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "417.78",
            "p50": "378.36",
            "p95": "321.88",
            "p99": "305.91",
            "min": "304.54",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "403.58",
            "p50": "366.23",
            "p95": "305.41",
            "p99": "282.24",
            "min": "279.57",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "407.88",
            "p50": "367.91",
            "p95": "298.02",
            "p99": "268.77",
            "min": "267.79",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "403.45",
            "p50": "367.70",
            "p95": "304.83",
            "p99": "278.98",
            "min": "276.60",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "17203.11",
            "p50": "5484.29",
            "p95": "2441.46",
            "p99": "1962.25",
            "min": "1935.75",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "17156.29",
            "p50": "5458.46",
            "p95": "2464.40",
            "p99": "1821.81",
            "min": "1552.28",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "16690.93",
            "p50": "5269.00",
            "p95": "2485.64",
            "p99": "2030.18",
            "min": "2028.71",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "16878.82",
            "p50": "5251.09",
            "p95": "2316.64",
            "p99": "1352.84",
            "min": "1255.92",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "16724.80",
            "p50": "5169.92",
            "p95": "2405.62",
            "p99": "1596.89",
            "min": "1530.17",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "17060.29",
            "p50": "5461.22",
            "p95": "2483.98",
            "p99": "2085.48",
            "min": "2023.23",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "262.66",
            "p50": "243.36",
            "p95": "208.58",
            "p99": "198.68",
            "min": "198.51",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "525.28",
            "p50": "483.81",
            "p95": "380.75",
            "p99": "345.84",
            "min": "341.59",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1643.38",
            "p50": "1351.54",
            "p95": "368.90",
            "p99": "303.79",
            "min": "296.51",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "23088.61",
            "p50": "5329.66",
            "p95": "187.93",
            "p99": "175.93",
            "min": "172.03",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1409.17",
            "p50": "1179.04",
            "p95": "637.02",
            "p99": "350.19",
            "min": "286.56",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "54907.91",
            "p50": "8993.77",
            "p95": "2320.88",
            "p99": "1194.68",
            "min": "794.50",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14852.40",
            "p50": "5959.05",
            "p95": "196.73",
            "p99": "181.48",
            "min": "180.53",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "567.08",
            "p50": "507.43",
            "p95": "418.65",
            "p99": "371.33",
            "min": "370.78",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "551.17",
            "p50": "505.02",
            "p95": "412.72",
            "p99": "378.13",
            "min": "377.86",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "201.29",
            "p50": "193.28",
            "p95": "172.64",
            "p99": "157.26",
            "min": "154.91",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "386.88",
            "p50": "363.18",
            "p95": "304.96",
            "p99": "271.77",
            "min": "270.33",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "201.31",
            "p50": "193.60",
            "p95": "178.39",
            "p99": "166.73",
            "min": "165.50",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "340.11",
            "p50": "320.35",
            "p95": "256.75",
            "p99": "177.79",
            "min": "177.20",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "262.11",
            "p50": "244.01",
            "p95": "215.11",
            "p99": "200.66",
            "min": "200.08",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "573.17",
            "p50": "525.65",
            "p95": "410.41",
            "p99": "346.05",
            "min": "340.78",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1440.29",
            "p50": "1265.52",
            "p95": "963.51",
            "p99": "924.52",
            "min": "918.02",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "291.12",
            "p50": "274.24",
            "p95": "238.00",
            "p99": "229.31",
            "min": "228.95",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "138.47",
            "p50": "135.71",
            "p95": "125.58",
            "p99": "118.35",
            "min": "118.08",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "138.29",
            "p50": "136.20",
            "p95": "123.12",
            "p99": "114.66",
            "min": "113.63",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "138.28",
            "p50": "136.51",
            "p95": "124.04",
            "p99": "101.74",
            "min": "96.76",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "233.36",
            "p50": "228.87",
            "p95": "199.85",
            "p99": "173.46",
            "min": "158.76",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "192.74",
            "p50": "187.53",
            "p95": "165.29",
            "p99": "156.96",
            "min": "156.59",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "205.75",
            "p50": "200.06",
            "p95": "175.01",
            "p99": "160.02",
            "min": "158.51",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "191.36",
            "p50": "182.23",
            "p95": "156.78",
            "p99": "146.65",
            "min": "144.42",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "186.80",
            "p50": "179.97",
            "p95": "164.95",
            "p99": "143.28",
            "min": "143.20",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "213.93",
            "p50": "206.29",
            "p95": "180.12",
            "p99": "153.77",
            "min": "152.87",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "184.24",
            "p50": "177.06",
            "p95": "158.64",
            "p99": "151.59",
            "min": "151.34",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "211.90",
            "p50": "206.92",
            "p95": "181.23",
            "p99": "156.48",
            "min": "156.32",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "148.35",
            "p50": "144.07",
            "p95": "133.98",
            "p99": "125.36",
            "min": "125.09",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "231.03",
            "p50": "226.64",
            "p95": "198.42",
            "p99": "183.37",
            "min": "183.29",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "184.04",
            "p50": "178.57",
            "p95": "164.49",
            "p99": "152.32",
            "min": "150.78",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "73.01",
            "p50": "70.69",
            "p95": "67.95",
            "p99": "64.79",
            "min": "63.63",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "142.87",
            "p50": "141.33",
            "p95": "129.08",
            "p99": "130.96",
            "min": "124.55",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "481.73",
            "p50": "396.34",
            "p95": "305.14",
            "p99": "283.96",
            "min": "237.58",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "196.28",
            "p50": "153.27",
            "p95": "141.71",
            "p99": "164.20",
            "min": "140.00",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.36",
            "p50": "133.16",
            "p95": "121.86",
            "p99": "125.05",
            "min": "117.27",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1240.78",
            "p50": "1180.40",
            "p95": "750.19",
            "p99": "483.77",
            "min": "418.68",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1060.57",
            "p50": "1039.81",
            "p95": "723.34",
            "p99": "558.32",
            "min": "553.44",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1489.74",
            "p50": "1364.90",
            "p95": "783.61",
            "p99": "629.28",
            "min": "591.08",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1379.24",
            "p50": "1271.76",
            "p95": "800.25",
            "p99": "656.24",
            "min": "648.69",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1360.13",
            "p50": "1252.70",
            "p95": "752.50",
            "p99": "536.51",
            "min": "530.59",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1103.38",
            "p50": "1070.98",
            "p95": "650.07",
            "p99": "441.21",
            "min": "377.47",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "743.66",
            "p50": "669.23",
            "p95": "473.79",
            "p99": "352.12",
            "min": "336.66",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "738.50",
            "p50": "680.47",
            "p95": "479.04",
            "p99": "387.08",
            "min": "371.88",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "746.19",
            "p50": "641.50",
            "p95": "466.90",
            "p99": "356.00",
            "min": "342.44",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "746.72",
            "p50": "663.03",
            "p95": "507.15",
            "p99": "435.77",
            "min": "432.97",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "296.61",
            "p50": "291.02",
            "p95": "250.40",
            "p99": "222.20",
            "min": "219.28",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "657.97",
            "p50": "555.88",
            "p95": "398.82",
            "p99": "307.05",
            "min": "295.46",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "645.51",
            "p50": "560.51",
            "p95": "444.76",
            "p99": "332.29",
            "min": "312.46",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "650.87",
            "p50": "569.75",
            "p95": "439.46",
            "p99": "325.83",
            "min": "303.99",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "668.46",
            "p50": "588.63",
            "p95": "433.75",
            "p99": "395.58",
            "min": "394.95",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "107.44",
            "p50": "106.15",
            "p95": "100.37",
            "p99": "97.26",
            "min": "97.05",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "107.55",
            "p50": "105.71",
            "p95": "98.47",
            "p99": "92.92",
            "min": "90.36",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.95",
            "p50": "98.72",
            "p95": "92.42",
            "p99": "89.30",
            "min": "89.23",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "258.12",
            "p50": "251.92",
            "p95": "223.81",
            "p99": "197.64",
            "min": "196.04",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "100.03",
            "p50": "98.61",
            "p95": "91.91",
            "p99": "87.11",
            "min": "86.11",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "250.91",
            "p50": "245.68",
            "p95": "214.93",
            "p99": "195.88",
            "min": "194.82",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "211.78",
            "p50": "206.20",
            "p95": "187.13",
            "p99": "171.51",
            "min": "169.25",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "241.31",
            "p50": "234.99",
            "p95": "191.98",
            "p99": "74.11",
            "min": "43.42",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "575.16",
            "p50": "561.20",
            "p95": "417.99",
            "p99": "351.06",
            "min": "350.30",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7600.19",
            "p50": "4791.00",
            "p95": "2211.68",
            "p99": "1654.30",
            "min": "1496.64",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "533.52",
            "p50": "523.99",
            "p95": "411.13",
            "p99": "341.97",
            "min": "327.30",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "21451.28",
            "p50": "6594.44",
            "p95": "2442.62",
            "p99": "2073.34",
            "min": "1927.61",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4615.57",
            "p50": "3427.24",
            "p95": "1514.00",
            "p99": "1189.63",
            "min": "1093.66",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "255.38",
            "p50": "215.14",
            "p95": "189.84",
            "p99": "172.95",
            "min": "172.28",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "267.06",
            "p50": "261.71",
            "p95": "227.85",
            "p99": "206.23",
            "min": "204.67",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "148.32",
            "p50": "146.01",
            "p95": "132.39",
            "p99": "126.46",
            "min": "126.36",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "244.21",
            "p50": "238.86",
            "p95": "202.61",
            "p99": "113.25",
            "min": "85.38",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "186.52",
            "p50": "183.76",
            "p95": "161.66",
            "p99": "96.69",
            "min": "87.89",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "221.15",
            "p50": "216.73",
            "p95": "190.73",
            "p99": "147.68",
            "min": "122.30",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "210.68",
            "p50": "207.97",
            "p95": "195.29",
            "p99": "154.12",
            "min": "145.93",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "210.89",
            "p50": "207.31",
            "p95": "182.07",
            "p99": "167.63",
            "min": "167.34",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1299.61",
            "p50": "1167.03",
            "p95": "898.03",
            "p99": "646.77",
            "min": "617.65",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "183.59",
            "p50": "179.95",
            "p95": "165.47",
            "p99": "155.13",
            "min": "154.02",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "193.26",
            "p50": "191.27",
            "p95": "183.25",
            "p99": "161.69",
            "min": "160.86",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "193.55",
            "p50": "191.11",
            "p95": "182.18",
            "p99": "167.50",
            "min": "166.10",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "193.90",
            "p50": "191.92",
            "p95": "185.42",
            "p99": "168.78",
            "min": "166.95",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1149.60",
            "p50": "1118.38",
            "p95": "814.45",
            "p99": "598.90",
            "min": "545.26",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "624.79",
            "p50": "612.53",
            "p95": "542.29",
            "p99": "405.44",
            "min": "402.84",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "677.43",
            "p50": "661.70",
            "p95": "562.98",
            "p99": "486.79",
            "min": "481.93",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "679.87",
            "p50": "665.93",
            "p95": "583.94",
            "p99": "441.98",
            "min": "433.91",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "776.78",
            "p50": "762.90",
            "p95": "675.13",
            "p99": "463.28",
            "min": "462.75",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "911.97",
            "p50": "891.14",
            "p95": "694.24",
            "p99": "466.41",
            "min": "444.23",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "849.96",
            "p50": "831.51",
            "p95": "590.93",
            "p99": "447.61",
            "min": "446.62",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "852.79",
            "p50": "831.71",
            "p95": "695.55",
            "p99": "588.11",
            "min": "587.40",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "839.90",
            "p50": "822.00",
            "p95": "656.30",
            "p99": "513.73",
            "min": "480.83",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "744.40",
            "p50": "727.04",
            "p95": "615.87",
            "p99": "532.31",
            "min": "520.65",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "851.91",
            "p50": "836.26",
            "p95": "728.67",
            "p99": "273.97",
            "min": "170.10",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "118.66",
            "p50": "113.86",
            "p95": "111.02",
            "p99": "105.64",
            "min": "103.50",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "95.57",
            "p50": "94.67",
            "p95": "91.49",
            "p99": "92.53",
            "min": "90.89",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "558.26",
            "p50": "541.68",
            "p95": "455.33",
            "p99": "432.71",
            "min": "403.26",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "129.21",
            "p50": "103.54",
            "p95": "96.23",
            "p99": "109.82",
            "min": "95.18",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "89.40",
            "p50": "87.66",
            "p95": "85.07",
            "p99": "86.28",
            "min": "83.93",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1882.27",
            "p50": "1811.88",
            "p95": "1174.01",
            "p99": "819.09",
            "min": "734.33",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1639.44",
            "p50": "1583.59",
            "p95": "1165.71",
            "p99": "893.53",
            "min": "792.82",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2379.95",
            "p50": "2287.79",
            "p95": "1287.61",
            "p99": "964.67",
            "min": "962.19",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2381.73",
            "p50": "2277.71",
            "p95": "1273.87",
            "p99": "868.51",
            "min": "810.24",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2368.91",
            "p50": "2268.21",
            "p95": "1464.32",
            "p99": "840.60",
            "min": "793.05",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1697.84",
            "p50": "1637.31",
            "p95": "1102.18",
            "p99": "753.06",
            "min": "681.60",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "820.27",
            "p50": "791.16",
            "p95": "659.38",
            "p99": "497.84",
            "min": "497.08",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "824.07",
            "p50": "792.88",
            "p95": "660.62",
            "p99": "580.81",
            "min": "579.20",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "825.16",
            "p50": "797.96",
            "p95": "680.95",
            "p99": "571.19",
            "min": "553.18",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "825.20",
            "p50": "798.91",
            "p95": "648.99",
            "p99": "522.29",
            "min": "503.02",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.47",
            "p50": "86.68",
            "p95": "83.75",
            "p99": "81.67",
            "min": "80.83",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "753.67",
            "p50": "718.03",
            "p95": "592.75",
            "p99": "465.70",
            "min": "464.28",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "709.44",
            "p50": "676.52",
            "p95": "602.51",
            "p99": "420.67",
            "min": "404.76",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "694.02",
            "p50": "673.26",
            "p95": "597.44",
            "p99": "439.09",
            "min": "433.17",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "708.75",
            "p50": "672.34",
            "p95": "536.24",
            "p99": "453.07",
            "min": "451.76",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2039.20",
            "p50": "1957.25",
            "p95": "1268.15",
            "p99": "880.64",
            "min": "855.65",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2349.90",
            "p50": "2242.60",
            "p95": "1491.37",
            "p99": "1118.79",
            "min": "1086.05",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.38",
            "p50": "71.84",
            "p95": "70.43",
            "p99": "67.49",
            "min": "67.10",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9759.95",
            "p50": "6913.50",
            "p95": "2383.28",
            "p99": "1427.92",
            "min": "1394.83",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.45",
            "p50": "71.86",
            "p95": "70.72",
            "p99": "69.74",
            "min": "69.69",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "223.61",
            "p50": "221.38",
            "p95": "210.23",
            "p99": "192.72",
            "min": "189.51",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "848.24",
            "p50": "829.25",
            "p95": "671.31",
            "p99": "483.84",
            "min": "468.50",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "668.27",
            "p50": "657.48",
            "p95": "597.08",
            "p99": "528.81",
            "min": "512.17",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2402.95",
            "p50": "2250.63",
            "p95": "1383.46",
            "p99": "789.10",
            "min": "752.11",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "21112.41",
            "p50": "8721.40",
            "p95": "2339.67",
            "p99": "1900.03",
            "min": "1823.97",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2213.12",
            "p50": "2086.52",
            "p95": "1159.95",
            "p99": "734.05",
            "min": "665.62",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "83640.18",
            "p50": "9108.87",
            "p95": "2469.38",
            "p99": "1632.08",
            "min": "1429.64",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "17406.83",
            "p50": "8558.16",
            "p95": "2486.29",
            "p99": "1959.42",
            "min": "1792.77",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "818.98",
            "p50": "706.26",
            "p95": "546.66",
            "p99": "445.48",
            "min": "431.24",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "932.58",
            "p50": "906.81",
            "p95": "712.85",
            "p99": "607.76",
            "min": "607.64",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "837.00",
            "p50": "815.57",
            "p95": "685.05",
            "p99": "454.17",
            "min": "452.02",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1163.79",
            "p50": "1129.80",
            "p95": "834.72",
            "p99": "582.61",
            "min": "569.74",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "776.32",
            "p50": "756.96",
            "p95": "621.17",
            "p99": "480.83",
            "min": "473.80",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1152.27",
            "p50": "1118.61",
            "p95": "852.50",
            "p99": "601.13",
            "min": "570.68",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "809.08",
            "p50": "791.84",
            "p95": "658.20",
            "p99": "560.58",
            "min": "559.75",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "885.41",
            "p50": "862.53",
            "p95": "740.49",
            "p99": "616.62",
            "min": "610.62",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2228.94",
            "p50": "2016.10",
            "p95": "1812.06",
            "p99": "1493.11",
            "min": "1443.92",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "855.14",
            "p50": "832.54",
            "p95": "678.88",
            "p99": "482.74",
            "min": "454.64",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "125.25",
            "p50": "120.83",
            "p95": "103.54",
            "p99": "99.22",
            "min": "99.19",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "124.98",
            "p50": "120.18",
            "p95": "107.85",
            "p99": "102.18",
            "min": "102.01",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "124.79",
            "p50": "120.64",
            "p95": "107.64",
            "p99": "96.60",
            "min": "95.60",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "210.91",
            "p50": "194.22",
            "p95": "157.21",
            "p99": "106.26",
            "min": "74.16",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "103.64",
            "p50": "99.18",
            "p95": "83.56",
            "p99": "78.26",
            "min": "77.78",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.36",
            "p50": "103.51",
            "p95": "87.25",
            "p99": "79.00",
            "min": "77.30",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "139.67",
            "p50": "131.55",
            "p95": "108.90",
            "p99": "100.23",
            "min": "99.80",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "138.56",
            "p50": "130.42",
            "p95": "107.21",
            "p99": "100.81",
            "min": "100.27",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "183.80",
            "p50": "166.37",
            "p95": "133.46",
            "p99": "120.23",
            "min": "120.18",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "177.79",
            "p50": "163.01",
            "p95": "127.72",
            "p99": "111.25",
            "min": "107.70",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "178.91",
            "p50": "164.50",
            "p95": "129.48",
            "p99": "118.14",
            "min": "116.44",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.73",
            "p50": "121.54",
            "p95": "104.05",
            "p99": "96.09",
            "min": "95.51",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "206.23",
            "p50": "185.09",
            "p95": "138.39",
            "p99": "129.42",
            "min": "129.37",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "184.69",
            "p50": "167.78",
            "p95": "135.98",
            "p99": "122.80",
            "min": "121.79",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "75.49",
            "p50": "71.10",
            "p95": "65.02",
            "p99": "61.86",
            "min": "61.78",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "129.75",
            "p50": "121.32",
            "p95": "100.76",
            "p99": "107.99",
            "min": "96.27",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "211.33",
            "p50": "185.32",
            "p95": "147.17",
            "p99": "154.94",
            "min": "141.71",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "154.44",
            "p50": "135.52",
            "p95": "132.25",
            "p99": "141.72",
            "min": "132.12",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "124.64",
            "p50": "115.27",
            "p95": "99.70",
            "p99": "109.61",
            "min": "98.27",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1051.63",
            "p50": "677.45",
            "p95": "350.76",
            "p99": "271.19",
            "min": "259.88",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "999.63",
            "p50": "663.60",
            "p95": "342.38",
            "p99": "265.62",
            "min": "257.10",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1125.02",
            "p50": "744.39",
            "p95": "364.98",
            "p99": "238.86",
            "min": "214.07",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1050.70",
            "p50": "698.81",
            "p95": "349.12",
            "p99": "272.22",
            "min": "260.67",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1010.99",
            "p50": "701.09",
            "p95": "359.70",
            "p99": "285.78",
            "min": "284.61",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1012.66",
            "p50": "692.31",
            "p95": "337.90",
            "p99": "285.61",
            "min": "284.49",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "335.53",
            "p50": "289.59",
            "p95": "198.21",
            "p99": "155.54",
            "min": "149.85",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "336.09",
            "p50": "289.49",
            "p95": "206.42",
            "p99": "167.28",
            "min": "163.06",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "331.96",
            "p50": "283.78",
            "p95": "209.92",
            "p99": "173.34",
            "min": "170.11",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "372.89",
            "p50": "312.38",
            "p95": "215.52",
            "p99": "186.54",
            "min": "185.96",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "284.47",
            "p50": "252.37",
            "p95": "190.17",
            "p99": "162.89",
            "min": "161.02",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "286.14",
            "p50": "252.03",
            "p95": "177.41",
            "p99": "165.62",
            "min": "164.62",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "281.76",
            "p50": "248.05",
            "p95": "183.30",
            "p99": "159.66",
            "min": "158.90",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "292.44",
            "p50": "254.89",
            "p95": "185.27",
            "p99": "168.54",
            "min": "167.20",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "281.68",
            "p50": "250.01",
            "p95": "175.05",
            "p99": "163.06",
            "min": "161.77",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.27",
            "p50": "99.73",
            "p95": "87.15",
            "p99": "83.12",
            "min": "83.08",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.49",
            "p50": "99.71",
            "p95": "88.11",
            "p99": "81.87",
            "min": "80.70",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.87",
            "p50": "92.51",
            "p95": "83.53",
            "p99": "76.79",
            "min": "76.36",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "249.12",
            "p50": "221.92",
            "p95": "165.56",
            "p99": "149.97",
            "min": "148.11",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "96.93",
            "p50": "92.51",
            "p95": "79.07",
            "p99": "77.33",
            "min": "77.14",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "241.64",
            "p50": "215.98",
            "p95": "165.46",
            "p99": "148.38",
            "min": "142.45",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "182.65",
            "p50": "167.78",
            "p95": "138.21",
            "p99": "127.50",
            "min": "127.45",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "148.94",
            "p50": "138.66",
            "p95": "114.28",
            "p99": "108.62",
            "min": "108.23",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "443.49",
            "p50": "388.91",
            "p95": "273.62",
            "p99": "238.04",
            "min": "237.06",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "6110.36",
            "p50": "2131.66",
            "p95": "685.62",
            "p99": "485.27",
            "min": "456.77",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "441.95",
            "p50": "395.56",
            "p95": "287.07",
            "p99": "232.01",
            "min": "227.34",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14508.61",
            "p50": "3272.61",
            "p95": "1094.97",
            "p99": "560.70",
            "min": "542.85",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3443.58",
            "p50": "1974.97",
            "p95": "646.56",
            "p99": "546.91",
            "min": "533.41",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "209.89",
            "p50": "197.02",
            "p95": "170.22",
            "p99": "151.83",
            "min": "147.30",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "232.34",
            "p50": "219.86",
            "p95": "178.24",
            "p99": "155.38",
            "min": "152.24",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "130.17",
            "p50": "121.82",
            "p95": "104.42",
            "p99": "99.26",
            "min": "98.70",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "209.48",
            "p50": "189.25",
            "p95": "141.48",
            "p99": "131.52",
            "min": "129.56",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "139.40",
            "p50": "130.46",
            "p95": "107.77",
            "p99": "86.53",
            "min": "82.86",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "175.16",
            "p50": "161.61",
            "p95": "126.20",
            "p99": "116.68",
            "min": "116.63",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "176.73",
            "p50": "162.61",
            "p95": "129.66",
            "p99": "121.26",
            "min": "120.55",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "180.29",
            "p50": "165.71",
            "p95": "133.42",
            "p99": "116.98",
            "min": "115.76",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "311.35",
            "p50": "247.90",
            "p95": "57.46",
            "p99": "50.73",
            "min": "50.63",
            "n": "105",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "145.92",
            "p50": "139.59",
            "p95": "113.48",
            "p99": "57.29",
            "min": "57.25",
            "n": "108",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "87.69",
            "p50": "83.23",
            "p95": "74.15",
            "p99": "70.15",
            "min": "70.10",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "88.87",
            "p50": "84.40",
            "p95": "80.75",
            "p99": "75.10",
            "min": "74.40",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "88.49",
            "p50": "83.66",
            "p95": "79.21",
            "p99": "77.54",
            "min": "77.41",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "191.71",
            "p50": "184.02",
            "p95": "168.42",
            "p99": "139.37",
            "min": "131.79",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "95.12",
            "p50": "90.14",
            "p95": "86.48",
            "p99": "85.08",
            "min": "84.96",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.56",
            "p50": "107.94",
            "p95": "102.48",
            "p99": "100.27",
            "min": "100.23",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "123.80",
            "p50": "119.93",
            "p95": "102.11",
            "p99": "88.30",
            "min": "87.89",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "125.35",
            "p50": "121.34",
            "p95": "116.90",
            "p99": "112.77",
            "min": "112.32",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "97.61",
            "p50": "93.87",
            "p95": "74.09",
            "p99": "72.29",
            "min": "72.02",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "98.32",
            "p50": "95.86",
            "p95": "93.01",
            "p99": "90.68",
            "min": "90.34",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.37",
            "p50": "96.28",
            "p95": "92.82",
            "p99": "88.76",
            "min": "88.76",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "125.32",
            "p50": "121.63",
            "p95": "118.30",
            "p99": "113.50",
            "min": "113.11",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "121.96",
            "p50": "112.05",
            "p95": "103.79",
            "p99": "97.16",
            "min": "96.94",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "116.92",
            "p50": "113.76",
            "p95": "96.80",
            "p99": "89.53",
            "min": "88.29",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "89.03",
            "p50": "84.60",
            "p95": "80.53",
            "p99": "78.36",
            "min": "77.71",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "101.11",
            "p50": "99.87",
            "p95": "94.78",
            "p99": "94.34",
            "min": "90.69",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "72.31",
            "p50": "68.71",
            "p95": "65.87",
            "p99": "59.48",
            "min": "56.47",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "158.52",
            "p50": "126.88",
            "p95": "118.82",
            "p99": "135.44",
            "min": "118.02",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "110.03",
            "p50": "107.74",
            "p95": "104.85",
            "p99": "106.02",
            "min": "102.99",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "410.73",
            "p50": "400.63",
            "p95": "368.24",
            "p99": "324.15",
            "min": "316.73",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "483.66",
            "p50": "474.98",
            "p95": "455.75",
            "p99": "401.93",
            "min": "392.98",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "432.29",
            "p50": "420.38",
            "p95": "391.05",
            "p99": "331.43",
            "min": "308.99",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "439.17",
            "p50": "424.93",
            "p95": "396.56",
            "p99": "317.67",
            "min": "310.17",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "440.49",
            "p50": "428.50",
            "p95": "400.27",
            "p99": "355.20",
            "min": "335.90",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "462.90",
            "p50": "455.22",
            "p95": "426.09",
            "p99": "364.22",
            "min": "358.37",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "117.04",
            "p50": "111.12",
            "p95": "105.45",
            "p99": "101.17",
            "min": "100.39",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "117.87",
            "p50": "111.96",
            "p95": "106.21",
            "p99": "103.53",
            "min": "103.27",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "115.91",
            "p50": "110.00",
            "p95": "105.60",
            "p99": "102.57",
            "min": "102.44",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "100.70",
            "p50": "96.57",
            "p95": "95.17",
            "p99": "92.37",
            "min": "91.92",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.72",
            "p50": "85.82",
            "p95": "85.04",
            "p99": "83.85",
            "min": "83.50",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "114.01",
            "p50": "106.87",
            "p95": "103.27",
            "p99": "102.17",
            "min": "102.00",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "108.38",
            "p50": "102.33",
            "p95": "97.49",
            "p99": "95.26",
            "min": "95.17",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "107.42",
            "p50": "101.44",
            "p95": "97.49",
            "p99": "92.53",
            "min": "92.12",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "107.21",
            "p50": "102.09",
            "p95": "98.07",
            "p99": "94.98",
            "min": "94.61",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1533.41",
            "p50": "1382.33",
            "p95": "627.86",
            "p99": "326.89",
            "min": "268.75",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1545.10",
            "p50": "1380.77",
            "p95": "699.51",
            "p99": "454.08",
            "min": "325.74",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "157.08",
            "p50": "152.94",
            "p95": "141.46",
            "p99": "128.96",
            "min": "127.94",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3781.18",
            "p50": "3358.44",
            "p95": "1575.20",
            "p99": "573.55",
            "min": "567.08",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "156.35",
            "p50": "152.60",
            "p95": "140.31",
            "p99": "127.20",
            "min": "124.93",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3676.94",
            "p50": "3330.76",
            "p95": "1495.77",
            "p99": "958.30",
            "min": "933.43",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "99.21",
            "p50": "96.84",
            "p95": "91.87",
            "p99": "82.36",
            "min": "81.60",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "185.00",
            "p50": "180.55",
            "p95": "175.38",
            "p99": "171.39",
            "min": "171.10",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "359.13",
            "p50": "270.72",
            "p95": "213.44",
            "p99": "162.06",
            "min": "154.07",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9685.93",
            "p50": "1712.84",
            "p95": "969.02",
            "p99": "748.89",
            "min": "705.81",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "364.85",
            "p50": "276.71",
            "p95": "232.73",
            "p99": "210.46",
            "min": "200.63",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "25536.80",
            "p50": "8537.62",
            "p95": "2479.28",
            "p99": "2077.59",
            "min": "2000.27",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "5977.93",
            "p50": "3264.37",
            "p95": "1202.78",
            "p99": "711.52",
            "min": "681.79",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "300.90",
            "p50": "231.10",
            "p95": "183.31",
            "p99": "137.58",
            "min": "129.04",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "154.55",
            "p50": "133.80",
            "p95": "118.88",
            "p99": "117.60",
            "min": "117.59",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "122.21",
            "p50": "119.53",
            "p95": "97.25",
            "p99": "95.34",
            "min": "95.10",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "131.79",
            "p50": "127.88",
            "p95": "120.05",
            "p99": "116.97",
            "min": "116.76",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "123.69",
            "p50": "119.36",
            "p95": "114.90",
            "p99": "113.23",
            "min": "113.07",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "164.72",
            "p50": "156.43",
            "p95": "147.39",
            "p99": "133.25",
            "min": "127.86",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "96.18",
            "p50": "93.58",
            "p95": "90.52",
            "p99": "88.57",
            "min": "88.37",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "118.39",
            "p50": "112.62",
            "p95": "109.40",
            "p99": "106.29",
            "min": "105.80",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1211.46",
            "p50": "1153.49",
            "p95": "367.89",
            "p99": "360.43",
            "min": "360.27",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "125.28",
            "p50": "121.24",
            "p95": "109.16",
            "p99": "103.54",
            "min": "103.25",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}