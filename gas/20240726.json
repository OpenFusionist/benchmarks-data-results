{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "170.06",
            "p50": "168.09",
            "p95": "158.64",
            "p99": "151.93",
            "min": "151.88",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "170.35",
            "p50": "168.38",
            "p95": "166.13",
            "p99": "164.66",
            "min": "164.65",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "169.81",
            "p50": "167.96",
            "p95": "163.30",
            "p99": "156.92",
            "min": "156.41",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "760.08",
            "p50": "746.44",
            "p95": "472.38",
            "p99": "357.77",
            "min": "295.43",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "401.59",
            "p50": "393.94",
            "p95": "306.59",
            "p99": "301.40",
            "min": "300.43",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "438.11",
            "p50": "428.71",
            "p95": "350.79",
            "p99": "345.78",
            "min": "344.17",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "324.72",
            "p50": "318.20",
            "p95": "310.35",
            "p99": "308.01",
            "min": "307.79",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "187.57",
            "p50": "185.51",
            "p95": "182.20",
            "p99": "176.27",
            "min": "175.38",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "265.82",
            "p50": "260.19",
            "p95": "87.41",
            "p99": "86.25",
            "min": "86.05",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "262.53",
            "p50": "253.95",
            "p95": "87.73",
            "p99": "87.60",
            "min": "87.60",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "264.59",
            "p50": "257.44",
            "p95": "251.13",
            "p99": "244.27",
            "min": "244.05",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "190.77",
            "p50": "188.65",
            "p95": "182.76",
            "p99": "176.43",
            "min": "176.38",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "320.26",
            "p50": "315.80",
            "p95": "302.53",
            "p99": "275.75",
            "min": "269.42",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "311.56",
            "p50": "303.47",
            "p95": "296.14",
            "p99": "294.86",
            "min": "294.86",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "111.28",
            "p50": "106.90",
            "p95": "104.74",
            "p99": "104.13",
            "min": "104.08",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "170.66",
            "p50": "167.83",
            "p95": "165.09",
            "p99": "164.65",
            "min": "161.42",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "295.97",
            "p50": "242.99",
            "p95": "231.23",
            "p99": "239.89",
            "min": "226.74",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "241.47",
            "p50": "193.70",
            "p95": "181.37",
            "p99": "207.15",
            "min": "181.26",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "167.33",
            "p50": "164.18",
            "p95": "163.19",
            "p99": "164.75",
            "min": "162.80",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "879.23",
            "p50": "824.89",
            "p95": "784.91",
            "p99": "768.19",
            "min": "761.99",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "841.53",
            "p50": "817.80",
            "p95": "782.74",
            "p99": "758.49",
            "min": "755.05",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1054.60",
            "p50": "952.04",
            "p95": "901.62",
            "p99": "885.01",
            "min": "879.10",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1080.59",
            "p50": "971.10",
            "p95": "918.68",
            "p99": "892.49",
            "min": "879.59",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1090.36",
            "p50": "981.03",
            "p95": "929.04",
            "p99": "879.92",
            "min": "863.27",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "850.26",
            "p50": "816.41",
            "p95": "784.09",
            "p99": "765.86",
            "min": "765.40",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "199.08",
            "p50": "184.99",
            "p95": "179.37",
            "p99": "176.20",
            "min": "175.83",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "202.04",
            "p50": "184.90",
            "p95": "181.24",
            "p99": "170.48",
            "min": "170.39",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "197.78",
            "p50": "185.71",
            "p95": "181.13",
            "p99": "176.08",
            "min": "175.90",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "227.11",
            "p50": "210.43",
            "p95": "206.45",
            "p99": "204.89",
            "min": "204.83",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.87",
            "p50": "87.30",
            "p95": "86.78",
            "p99": "86.47",
            "min": "86.38",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "348.99",
            "p50": "307.35",
            "p95": "287.55",
            "p99": "143.83",
            "min": "107.56",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "331.43",
            "p50": "297.98",
            "p95": "284.71",
            "p99": "281.97",
            "min": "281.94",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "337.03",
            "p50": "301.52",
            "p95": "286.49",
            "p99": "176.35",
            "min": "150.25",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "336.92",
            "p50": "302.13",
            "p95": "290.07",
            "p99": "286.24",
            "min": "286.23",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2388.12",
            "p50": "2255.34",
            "p95": "2065.12",
            "p99": "1721.00",
            "min": "1698.19",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2301.40",
            "p50": "2195.74",
            "p95": "2031.77",
            "p99": "77.40",
            "min": "35.45",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "93.93",
            "p50": "92.99",
            "p95": "92.44",
            "p99": "89.80",
            "min": "88.58",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "5657.40",
            "p50": "5115.09",
            "p95": "2097.98",
            "p99": "883.79",
            "min": "68.07",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "94.07",
            "p50": "93.04",
            "p95": "92.43",
            "p99": "91.44",
            "min": "91.15",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3200.11",
            "p50": "2976.45",
            "p95": "2339.18",
            "p99": "1701.02",
            "min": "1610.53",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "261.14",
            "p50": "251.05",
            "p95": "88.67",
            "p99": "88.52",
            "min": "88.52",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "539.04",
            "p50": "530.74",
            "p95": "510.67",
            "p99": "481.01",
            "min": "470.02",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1266.66",
            "p50": "1199.91",
            "p95": "426.82",
            "p99": "360.21",
            "min": "350.50",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "17198.98",
            "p50": "8151.23",
            "p95": "2500.79",
            "p99": "1544.97",
            "min": "1507.73",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1148.11",
            "p50": "1111.56",
            "p95": "349.07",
            "p99": "301.20",
            "min": "276.59",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "49162.99",
            "p50": "9016.42",
            "p95": "2379.17",
            "p99": "928.38",
            "min": "104.08",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "16995.69",
            "p50": "6411.86",
            "p95": "2581.46",
            "p99": "1846.75",
            "min": "1667.14",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "537.78",
            "p50": "488.63",
            "p95": "437.37",
            "p99": "228.54",
            "min": "97.63",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "518.34",
            "p50": "506.37",
            "p95": "473.43",
            "p99": "455.50",
            "min": "451.82",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "204.44",
            "p50": "201.71",
            "p95": "195.60",
            "p99": "185.82",
            "min": "185.30",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "438.20",
            "p50": "427.25",
            "p95": "157.82",
            "p99": "155.85",
            "min": "155.26",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "204.91",
            "p50": "201.84",
            "p95": "198.42",
            "p99": "192.15",
            "min": "192.14",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "327.97",
            "p50": "321.60",
            "p95": "310.20",
            "p99": "303.03",
            "min": "301.72",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "270.04",
            "p50": "266.02",
            "p95": "254.63",
            "p99": "252.99",
            "min": "252.83",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "516.95",
            "p50": "506.92",
            "p95": "491.03",
            "p99": "454.59",
            "min": "438.22",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1471.46",
            "p50": "1166.79",
            "p95": "857.52",
            "p99": "677.82",
            "min": "624.17",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "316.90",
            "p50": "310.44",
            "p95": "304.89",
            "p99": "282.05",
            "min": "277.46",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "87.71",
            "p50": "85.18",
            "p95": "78.32",
            "p99": "72.69",
            "min": "71.65",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "80.78",
            "p50": "78.11",
            "p95": "72.51",
            "p99": "68.72",
            "min": "68.30",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "82.21",
            "p50": "79.17",
            "p95": "74.74",
            "p99": "71.06",
            "min": "70.47",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "226.29",
            "p50": "210.76",
            "p95": "173.39",
            "p99": "163.49",
            "min": "163.13",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "174.03",
            "p50": "160.26",
            "p95": "139.79",
            "p99": "132.19",
            "min": "131.93",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "179.59",
            "p50": "168.51",
            "p95": "141.25",
            "p99": "131.97",
            "min": "129.79",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "173.08",
            "p50": "160.81",
            "p95": "135.87",
            "p99": "93.28",
            "min": "86.32",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "171.93",
            "p50": "160.49",
            "p95": "137.15",
            "p99": "130.78",
            "min": "129.93",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "196.89",
            "p50": "181.55",
            "p95": "157.26",
            "p99": "141.44",
            "min": "140.80",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "176.21",
            "p50": "162.15",
            "p95": "142.16",
            "p99": "137.01",
            "min": "136.91",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "194.62",
            "p50": "180.47",
            "p95": "156.45",
            "p99": "147.94",
            "min": "147.42",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "145.76",
            "p50": "137.49",
            "p95": "120.09",
            "p99": "115.68",
            "min": "115.61",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "213.99",
            "p50": "199.67",
            "p95": "168.48",
            "p99": "147.01",
            "min": "143.74",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "175.49",
            "p50": "163.50",
            "p95": "138.85",
            "p99": "122.62",
            "min": "122.55",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.33",
            "p50": "65.04",
            "p95": "60.31",
            "p99": "58.86",
            "min": "58.61",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "138.29",
            "p50": "127.87",
            "p95": "115.50",
            "p99": "118.75",
            "min": "108.23",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "419.09",
            "p50": "335.22",
            "p95": "261.56",
            "p99": "260.70",
            "min": "223.55",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "175.91",
            "p50": "140.56",
            "p95": "133.61",
            "p99": "149.66",
            "min": "129.85",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "129.19",
            "p50": "122.77",
            "p95": "109.89",
            "p99": "117.41",
            "min": "108.51",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1192.44",
            "p50": "902.20",
            "p95": "590.52",
            "p99": "452.58",
            "min": "430.27",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1042.71",
            "p50": "839.58",
            "p95": "547.42",
            "p99": "438.77",
            "min": "434.59",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1381.72",
            "p50": "1052.09",
            "p95": "614.13",
            "p99": "458.33",
            "min": "457.82",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1317.18",
            "p50": "1018.80",
            "p95": "625.33",
            "p99": "480.17",
            "min": "466.07",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1249.56",
            "p50": "961.94",
            "p95": "557.68",
            "p99": "458.88",
            "min": "451.19",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1083.17",
            "p50": "853.31",
            "p95": "500.87",
            "p99": "416.63",
            "min": "415.80",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "665.91",
            "p50": "541.45",
            "p95": "403.90",
            "p99": "336.22",
            "min": "329.64",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "663.43",
            "p50": "548.26",
            "p95": "354.36",
            "p99": "286.48",
            "min": "285.63",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "707.48",
            "p50": "555.32",
            "p95": "365.77",
            "p99": "346.42",
            "min": "344.81",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "686.41",
            "p50": "568.58",
            "p95": "384.98",
            "p99": "333.12",
            "min": "323.11",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "289.77",
            "p50": "266.18",
            "p95": "226.89",
            "p99": "195.85",
            "min": "194.68",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "587.19",
            "p50": "457.61",
            "p95": "347.57",
            "p99": "255.98",
            "min": "241.55",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "585.92",
            "p50": "464.17",
            "p95": "367.20",
            "p99": "317.31",
            "min": "315.50",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "599.49",
            "p50": "485.28",
            "p95": "339.50",
            "p99": "287.47",
            "min": "283.76",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "634.70",
            "p50": "511.42",
            "p95": "345.02",
            "p99": "242.06",
            "min": "220.99",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "107.13",
            "p50": "102.20",
            "p95": "91.44",
            "p99": "89.05",
            "min": "89.01",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.28",
            "p50": "102.21",
            "p95": "92.00",
            "p99": "88.56",
            "min": "86.55",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.16",
            "p50": "94.75",
            "p95": "85.68",
            "p99": "83.59",
            "min": "83.11",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "252.48",
            "p50": "235.32",
            "p95": "189.45",
            "p99": "164.38",
            "min": "150.06",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.98",
            "p50": "94.82",
            "p95": "85.91",
            "p99": "78.69",
            "min": "76.96",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "247.48",
            "p50": "227.97",
            "p95": "189.19",
            "p99": "168.37",
            "min": "162.62",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "196.19",
            "p50": "182.52",
            "p95": "158.56",
            "p99": "143.81",
            "min": "142.71",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "198.79",
            "p50": "184.90",
            "p95": "159.31",
            "p99": "90.04",
            "min": "43.93",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "469.91",
            "p50": "411.00",
            "p95": "313.26",
            "p99": "283.99",
            "min": "278.97",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5370.68",
            "p50": "2300.81",
            "p95": "908.74",
            "p99": "630.09",
            "min": "599.55",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "443.75",
            "p50": "395.73",
            "p95": "312.78",
            "p99": "274.18",
            "min": "264.54",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "17743.26",
            "p50": "3941.26",
            "p95": "1413.44",
            "p99": "838.60",
            "min": "748.24",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3139.87",
            "p50": "1840.34",
            "p95": "791.47",
            "p99": "618.22",
            "min": "588.95",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "228.27",
            "p50": "209.10",
            "p95": "169.21",
            "p99": "150.99",
            "min": "138.07",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "248.63",
            "p50": "225.88",
            "p95": "186.53",
            "p99": "174.62",
            "min": "174.38",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "91.94",
            "p50": "88.27",
            "p95": "81.01",
            "p99": "60.83",
            "min": "57.39",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "223.89",
            "p50": "208.79",
            "p95": "175.64",
            "p99": "139.43",
            "min": "132.45",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "172.76",
            "p50": "162.54",
            "p95": "135.46",
            "p99": "126.00",
            "min": "125.58",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "201.26",
            "p50": "189.50",
            "p95": "161.03",
            "p99": "151.30",
            "min": "150.99",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "196.51",
            "p50": "182.37",
            "p95": "158.93",
            "p99": "147.25",
            "min": "146.95",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "197.75",
            "p50": "184.38",
            "p95": "154.12",
            "p99": "146.51",
            "min": "145.93",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1152.50",
            "p50": "923.55",
            "p95": "530.01",
            "p99": "460.78",
            "min": "459.81",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "177.48",
            "p50": "166.70",
            "p95": "124.41",
            "p99": "107.54",
            "min": "103.95",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.27",
            "p50": "189.01",
            "p95": "170.66",
            "p99": "161.02",
            "min": "160.36",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.13",
            "p50": "188.93",
            "p95": "170.90",
            "p99": "159.76",
            "min": "159.74",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "194.77",
            "p50": "188.23",
            "p95": "169.16",
            "p99": "161.77",
            "min": "161.51",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1190.87",
            "p50": "1091.66",
            "p95": "700.66",
            "p99": "529.38",
            "min": "529.08",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "705.65",
            "p50": "630.88",
            "p95": "478.06",
            "p99": "369.72",
            "min": "358.08",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "811.82",
            "p50": "746.85",
            "p95": "518.46",
            "p99": "429.86",
            "min": "428.57",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "749.23",
            "p50": "661.03",
            "p95": "519.95",
            "p99": "463.63",
            "min": "462.55",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "264.94",
            "p50": "255.07",
            "p95": "219.98",
            "p99": "183.84",
            "min": "178.35",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "918.51",
            "p50": "815.85",
            "p95": "631.26",
            "p99": "496.35",
            "min": "459.08",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "867.99",
            "p50": "763.20",
            "p95": "524.84",
            "p99": "233.86",
            "min": "174.71",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "869.34",
            "p50": "761.44",
            "p95": "557.33",
            "p99": "230.37",
            "min": "170.70",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "286.65",
            "p50": "273.75",
            "p95": "243.07",
            "p99": "226.13",
            "min": "223.52",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "652.39",
            "p50": "596.55",
            "p95": "451.79",
            "p99": "405.10",
            "min": "391.50",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "846.04",
            "p50": "770.44",
            "p95": "507.39",
            "p99": "233.48",
            "min": "177.67",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "111.74",
            "p50": "106.39",
            "p95": "100.30",
            "p99": "96.42",
            "min": "96.15",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "96.40",
            "p50": "94.55",
            "p95": "89.44",
            "p99": "90.79",
            "min": "87.76",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "413.87",
            "p50": "379.82",
            "p95": "325.39",
            "p99": "332.21",
            "min": "313.06",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "131.21",
            "p50": "103.06",
            "p95": "96.87",
            "p99": "111.46",
            "min": "96.56",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "90.28",
            "p50": "87.99",
            "p95": "83.64",
            "p99": "86.07",
            "min": "82.90",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1701.39",
            "p50": "1424.11",
            "p95": "829.62",
            "p99": "594.60",
            "min": "590.48",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1637.92",
            "p50": "1479.95",
            "p95": "875.26",
            "p99": "618.64",
            "min": "606.84",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2021.02",
            "p50": "1654.12",
            "p95": "839.93",
            "p99": "651.59",
            "min": "640.13",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2010.65",
            "p50": "1640.44",
            "p95": "831.35",
            "p99": "628.19",
            "min": "624.20",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2015.11",
            "p50": "1557.68",
            "p95": "868.78",
            "p99": "647.62",
            "min": "640.30",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1654.05",
            "p50": "1370.31",
            "p95": "774.85",
            "p99": "611.04",
            "min": "603.81",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "633.03",
            "p50": "572.49",
            "p95": "454.29",
            "p99": "408.52",
            "min": "406.28",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "630.19",
            "p50": "569.43",
            "p95": "463.27",
            "p99": "401.55",
            "min": "394.90",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "628.35",
            "p50": "574.27",
            "p95": "451.72",
            "p99": "383.82",
            "min": "379.05",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "652.94",
            "p50": "575.90",
            "p95": "460.51",
            "p99": "423.11",
            "min": "421.47",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.98",
            "p50": "85.81",
            "p95": "81.52",
            "p99": "79.47",
            "min": "79.46",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "575.31",
            "p50": "510.62",
            "p95": "393.35",
            "p99": "358.60",
            "min": "356.00",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "541.66",
            "p50": "490.99",
            "p95": "380.69",
            "p99": "348.91",
            "min": "345.29",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "540.98",
            "p50": "484.68",
            "p95": "396.35",
            "p99": "356.71",
            "min": "352.17",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "544.29",
            "p50": "491.44",
            "p95": "406.67",
            "p99": "345.60",
            "min": "342.13",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1355.64",
            "p50": "1224.06",
            "p95": "713.13",
            "p99": "560.82",
            "min": "557.79",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1656.53",
            "p50": "1389.85",
            "p95": "837.59",
            "p99": "619.56",
            "min": "610.39",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.08",
            "p50": "71.25",
            "p95": "68.45",
            "p99": "66.73",
            "min": "66.61",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "8706.53",
            "p50": "4025.47",
            "p95": "2347.62",
            "p99": "2061.81",
            "min": "1977.43",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.17",
            "p50": "71.19",
            "p95": "68.99",
            "p99": "67.54",
            "min": "67.34",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "221.00",
            "p50": "216.81",
            "p95": "192.33",
            "p99": "179.20",
            "min": "178.12",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "872.98",
            "p50": "765.26",
            "p95": "551.10",
            "p99": "470.08",
            "min": "458.24",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.77",
            "p50": "626.63",
            "p95": "470.20",
            "p99": "398.44",
            "min": "397.20",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1131.81",
            "p50": "1015.62",
            "p95": "654.72",
            "p99": "592.10",
            "min": "590.00",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "26378.55",
            "p50": "8761.74",
            "p95": "2702.37",
            "p99": "1761.75",
            "min": "1756.52",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1136.24",
            "p50": "1011.03",
            "p95": "685.06",
            "p99": "528.95",
            "min": "527.83",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "55563.74",
            "p50": "9771.37",
            "p95": "2731.40",
            "p99": "1955.09",
            "min": "1812.27",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14369.02",
            "p50": "5973.59",
            "p95": "1278.63",
            "p99": "814.92",
            "min": "813.80",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "571.43",
            "p50": "500.97",
            "p95": "421.43",
            "p99": "348.92",
            "min": "339.67",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "991.59",
            "p50": "857.39",
            "p95": "591.76",
            "p99": "490.62",
            "min": "490.31",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "286.95",
            "p50": "275.26",
            "p95": "237.28",
            "p99": "221.53",
            "min": "221.10",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1216.59",
            "p50": "1110.18",
            "p95": "742.91",
            "p99": "581.75",
            "min": "554.82",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "265.31",
            "p50": "256.65",
            "p95": "227.49",
            "p99": "217.36",
            "min": "216.96",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "537.40",
            "p50": "517.32",
            "p95": "408.91",
            "p99": "352.19",
            "min": "350.24",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "835.13",
            "p50": "750.62",
            "p95": "553.24",
            "p99": "477.42",
            "min": "474.47",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "911.73",
            "p50": "820.49",
            "p95": "588.36",
            "p99": "468.69",
            "min": "461.92",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2275.32",
            "p50": "1935.87",
            "p95": "1050.21",
            "p99": "938.10",
            "min": "931.44",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "891.49",
            "p50": "821.01",
            "p95": "542.43",
            "p99": "458.98",
            "min": "451.10",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "81.77",
            "p50": "78.46",
            "p95": "71.29",
            "p99": "63.79",
            "min": "63.19",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "74.56",
            "p50": "72.34",
            "p95": "66.81",
            "p99": "64.36",
            "min": "64.09",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "76.10",
            "p50": "73.72",
            "p95": "67.10",
            "p99": "64.52",
            "min": "64.46",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "209.36",
            "p50": "190.54",
            "p95": "148.80",
            "p99": "130.22",
            "min": "125.60",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.72",
            "p50": "97.20",
            "p95": "85.80",
            "p99": "74.93",
            "min": "73.49",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.49",
            "p50": "103.73",
            "p95": "90.57",
            "p99": "83.24",
            "min": "82.11",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "139.93",
            "p50": "131.77",
            "p95": "113.14",
            "p99": "92.20",
            "min": "90.81",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "140.64",
            "p50": "133.13",
            "p95": "115.48",
            "p99": "111.86",
            "min": "111.68",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "186.83",
            "p50": "170.98",
            "p95": "138.23",
            "p99": "127.55",
            "min": "125.97",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "182.25",
            "p50": "168.57",
            "p95": "143.02",
            "p99": "115.93",
            "min": "113.36",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "183.84",
            "p50": "171.07",
            "p95": "137.11",
            "p99": "126.65",
            "min": "125.55",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.65",
            "p50": "120.26",
            "p95": "105.63",
            "p99": "84.19",
            "min": "83.31",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "203.72",
            "p50": "187.44",
            "p95": "148.38",
            "p99": "120.56",
            "min": "114.87",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "187.94",
            "p50": "172.72",
            "p95": "136.84",
            "p99": "117.93",
            "min": "117.19",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "71.11",
            "p50": "67.16",
            "p95": "61.17",
            "p99": "59.27",
            "min": "59.11",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "130.28",
            "p50": "121.89",
            "p95": "108.56",
            "p99": "110.54",
            "min": "99.91",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "214.12",
            "p50": "187.06",
            "p95": "146.19",
            "p99": "129.73",
            "min": "109.94",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "154.75",
            "p50": "136.86",
            "p95": "127.52",
            "p99": "136.62",
            "min": "122.93",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "124.06",
            "p50": "117.88",
            "p95": "103.06",
            "p99": "108.39",
            "min": "96.57",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1027.89",
            "p50": "718.67",
            "p95": "368.47",
            "p99": "248.64",
            "min": "226.58",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1007.85",
            "p50": "701.74",
            "p95": "390.23",
            "p99": "314.63",
            "min": "272.41",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1146.10",
            "p50": "776.86",
            "p95": "389.03",
            "p99": "271.22",
            "min": "255.01",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1085.91",
            "p50": "733.35",
            "p95": "373.39",
            "p99": "302.71",
            "min": "302.59",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1023.20",
            "p50": "709.53",
            "p95": "361.65",
            "p99": "249.64",
            "min": "246.04",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1018.86",
            "p50": "706.47",
            "p95": "390.62",
            "p99": "279.38",
            "min": "220.52",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "340.46",
            "p50": "294.90",
            "p95": "205.68",
            "p99": "178.04",
            "min": "177.87",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "339.34",
            "p50": "292.73",
            "p95": "219.62",
            "p99": "182.96",
            "min": "180.35",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "337.68",
            "p50": "295.39",
            "p95": "228.03",
            "p99": "199.66",
            "min": "198.50",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "363.91",
            "p50": "317.75",
            "p95": "222.57",
            "p99": "190.39",
            "min": "188.54",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "282.66",
            "p50": "251.01",
            "p95": "187.92",
            "p99": "163.93",
            "min": "163.59",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "290.45",
            "p50": "258.47",
            "p95": "201.30",
            "p99": "158.29",
            "min": "156.63",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "284.73",
            "p50": "251.38",
            "p95": "203.95",
            "p99": "194.26",
            "min": "193.69",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "287.95",
            "p50": "254.82",
            "p95": "202.54",
            "p99": "152.34",
            "min": "143.40",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "298.45",
            "p50": "258.83",
            "p95": "198.65",
            "p99": "161.43",
            "min": "161.14",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.43",
            "p50": "100.41",
            "p95": "88.37",
            "p99": "81.14",
            "min": "80.34",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.57",
            "p50": "100.25",
            "p95": "88.20",
            "p99": "79.73",
            "min": "79.54",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.47",
            "p50": "93.14",
            "p95": "82.67",
            "p99": "77.09",
            "min": "76.55",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "250.61",
            "p50": "222.62",
            "p95": "174.53",
            "p99": "148.24",
            "min": "144.11",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.05",
            "p50": "92.84",
            "p95": "82.69",
            "p99": "73.34",
            "min": "72.63",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "242.37",
            "p50": "216.79",
            "p95": "171.62",
            "p99": "148.91",
            "min": "143.90",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "185.10",
            "p50": "171.00",
            "p95": "135.77",
            "p99": "107.17",
            "min": "106.38",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "153.86",
            "p50": "142.91",
            "p95": "120.81",
            "p99": "90.77",
            "min": "81.93",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "439.05",
            "p50": "359.05",
            "p95": "236.26",
            "p99": "201.39",
            "min": "197.18",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "3919.83",
            "p50": "1447.35",
            "p95": "443.33",
            "p99": "340.15",
            "min": "338.01",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "439.21",
            "p50": "360.29",
            "p95": "230.72",
            "p99": "204.12",
            "min": "201.75",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "10615.84",
            "p50": "1869.22",
            "p95": "526.35",
            "p99": "380.87",
            "min": "357.43",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2726.90",
            "p50": "1123.81",
            "p95": "418.26",
            "p99": "263.37",
            "min": "241.73",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "206.75",
            "p50": "186.98",
            "p95": "155.35",
            "p99": "144.24",
            "min": "143.67",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "229.74",
            "p50": "212.32",
            "p95": "155.67",
            "p99": "139.91",
            "min": "137.35",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "127.36",
            "p50": "121.15",
            "p95": "105.95",
            "p99": "101.28",
            "min": "100.71",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "207.47",
            "p50": "189.09",
            "p95": "150.99",
            "p99": "137.52",
            "min": "134.83",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "140.63",
            "p50": "132.74",
            "p95": "105.41",
            "p99": "89.87",
            "min": "88.98",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "174.83",
            "p50": "161.05",
            "p95": "125.94",
            "p99": "91.89",
            "min": "79.62",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "183.50",
            "p50": "170.66",
            "p95": "140.23",
            "p99": "122.80",
            "min": "122.37",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "185.92",
            "p50": "170.44",
            "p95": "139.94",
            "p99": "128.19",
            "min": "124.42",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "280.85",
            "p50": "222.19",
            "p95": "134.55",
            "p99": "129.65",
            "min": "124.97",
            "n": "96",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "142.81",
            "p50": "135.10",
            "p95": "113.92",
            "p99": "109.66",
            "min": "98.60",
            "n": "74",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.63",
            "p50": "85.58",
            "p95": "78.51",
            "p99": "75.94",
            "min": "75.76",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "89.96",
            "p50": "86.83",
            "p95": "82.82",
            "p99": "79.83",
            "min": "79.61",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "89.40",
            "p50": "86.18",
            "p95": "82.56",
            "p99": "81.65",
            "min": "81.64",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "189.44",
            "p50": "181.43",
            "p95": "175.43",
            "p99": "170.57",
            "min": "169.66",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "93.11",
            "p50": "90.65",
            "p95": "86.66",
            "p99": "85.56",
            "min": "85.46",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "113.97",
            "p50": "111.91",
            "p95": "107.42",
            "p99": "98.20",
            "min": "95.05",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "123.00",
            "p50": "120.76",
            "p95": "105.90",
            "p99": "100.42",
            "min": "100.20",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "127.33",
            "p50": "123.90",
            "p95": "120.97",
            "p99": "117.70",
            "min": "117.65",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "96.86",
            "p50": "94.38",
            "p95": "92.72",
            "p99": "89.52",
            "min": "88.60",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.38",
            "p50": "95.90",
            "p95": "92.90",
            "p99": "88.27",
            "min": "87.42",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.03",
            "p50": "95.99",
            "p95": "93.80",
            "p99": "87.99",
            "min": "86.96",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "125.64",
            "p50": "122.23",
            "p95": "118.30",
            "p99": "113.61",
            "min": "113.33",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "120.29",
            "p50": "118.03",
            "p95": "114.53",
            "p99": "111.74",
            "min": "111.14",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "115.76",
            "p50": "113.67",
            "p95": "111.32",
            "p99": "105.13",
            "min": "104.25",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "76.34",
            "p50": "73.44",
            "p95": "70.48",
            "p99": "66.32",
            "min": "65.98",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "99.22",
            "p50": "98.27",
            "p95": "92.22",
            "p99": "94.18",
            "min": "91.47",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "61.91",
            "p50": "59.70",
            "p95": "57.90",
            "p99": "55.40",
            "min": "53.87",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "159.48",
            "p50": "127.92",
            "p95": "119.81",
            "p99": "136.73",
            "min": "119.56",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "110.15",
            "p50": "108.33",
            "p95": "106.42",
            "p99": "107.05",
            "min": "104.72",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "378.12",
            "p50": "367.84",
            "p95": "350.85",
            "p99": "328.65",
            "min": "324.56",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "505.38",
            "p50": "485.03",
            "p95": "447.34",
            "p99": "381.15",
            "min": "358.77",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "378.08",
            "p50": "366.05",
            "p95": "345.42",
            "p99": "311.78",
            "min": "310.12",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "380.66",
            "p50": "368.29",
            "p95": "343.04",
            "p99": "290.17",
            "min": "278.01",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "383.89",
            "p50": "371.00",
            "p95": "355.94",
            "p99": "307.20",
            "min": "292.92",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "463.97",
            "p50": "449.72",
            "p95": "421.63",
            "p99": "372.22",
            "min": "340.55",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "96.45",
            "p50": "94.64",
            "p95": "91.41",
            "p99": "89.44",
            "min": "89.36",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "96.94",
            "p50": "95.40",
            "p95": "92.09",
            "p99": "90.87",
            "min": "90.79",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "95.64",
            "p50": "94.01",
            "p95": "90.94",
            "p99": "88.68",
            "min": "88.34",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "88.14",
            "p50": "86.79",
            "p95": "84.65",
            "p99": "83.68",
            "min": "83.49",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.95",
            "p50": "86.63",
            "p95": "85.88",
            "p99": "82.98",
            "min": "81.68",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "89.26",
            "p50": "87.43",
            "p95": "83.79",
            "p99": "81.76",
            "min": "81.68",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "84.78",
            "p50": "83.35",
            "p95": "79.33",
            "p99": "77.91",
            "min": "77.90",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "84.52",
            "p50": "83.15",
            "p95": "79.37",
            "p99": "77.63",
            "min": "77.58",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "84.83",
            "p50": "83.16",
            "p95": "79.29",
            "p99": "75.67",
            "min": "74.86",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1362.53",
            "p50": "1243.75",
            "p95": "724.19",
            "p99": "462.91",
            "min": "454.22",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1312.31",
            "p50": "1209.41",
            "p95": "802.54",
            "p99": "489.65",
            "min": "447.52",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "90.31",
            "p50": "89.31",
            "p95": "82.59",
            "p99": "73.03",
            "min": "69.95",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "2059.97",
            "p50": "1788.32",
            "p95": "1210.04",
            "p99": "521.53",
            "min": "284.37",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "90.27",
            "p50": "89.36",
            "p95": "83.22",
            "p99": "69.89",
            "min": "66.05",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "1657.23",
            "p50": "1494.94",
            "p95": "1027.47",
            "p99": "385.31",
            "min": "368.26",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "97.43",
            "p50": "95.99",
            "p95": "91.98",
            "p99": "85.38",
            "min": "84.50",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "185.22",
            "p50": "174.24",
            "p95": "170.08",
            "p99": "164.11",
            "min": "163.69",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "418.44",
            "p50": "361.35",
            "p95": "265.90",
            "p99": "239.09",
            "min": "238.45",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7714.38",
            "p50": "2324.14",
            "p95": "783.43",
            "p99": "501.61",
            "min": "477.40",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "450.83",
            "p50": "394.36",
            "p95": "301.29",
            "p99": "274.02",
            "min": "253.41",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "30998.35",
            "p50": "9332.12",
            "p95": "2676.74",
            "p99": "1957.75",
            "min": "1892.09",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "5278.95",
            "p50": "3111.14",
            "p95": "1859.56",
            "p99": "809.23",
            "min": "446.90",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "371.32",
            "p50": "322.02",
            "p95": "250.37",
            "p99": "232.33",
            "min": "229.75",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "154.45",
            "p50": "142.89",
            "p95": "127.34",
            "p99": "96.78",
            "min": "96.77",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "123.59",
            "p50": "112.60",
            "p95": "105.51",
            "p99": "102.10",
            "min": "101.19",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "136.79",
            "p50": "125.34",
            "p95": "116.46",
            "p99": "112.09",
            "min": "110.10",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "125.93",
            "p50": "121.36",
            "p95": "116.19",
            "p99": "113.62",
            "min": "113.46",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "173.78",
            "p50": "151.49",
            "p95": "142.72",
            "p99": "142.22",
            "min": "142.20",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "94.11",
            "p50": "92.41",
            "p95": "83.62",
            "p99": "83.00",
            "min": "82.95",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "116.92",
            "p50": "112.39",
            "p95": "106.88",
            "p99": "104.83",
            "min": "104.66",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "902.02",
            "p50": "836.27",
            "p95": "318.25",
            "p99": "307.42",
            "min": "306.67",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "124.68",
            "p50": "119.82",
            "p95": "113.73",
            "p99": "109.87",
            "min": "109.77",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}