{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "170.31",
            "p50": "168.39",
            "p95": "159.56",
            "p99": "152.54",
            "min": "152.48",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "170.65",
            "p50": "168.93",
            "p95": "167.00",
            "p99": "160.77",
            "min": "160.00",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "170.11",
            "p50": "168.17",
            "p95": "164.04",
            "p99": "149.13",
            "min": "145.52",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "759.94",
            "p50": "746.45",
            "p95": "511.02",
            "p99": "484.22",
            "min": "481.07",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "402.33",
            "p50": "395.63",
            "p95": "388.42",
            "p99": "371.85",
            "min": "370.37",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "440.95",
            "p50": "431.20",
            "p95": "418.38",
            "p99": "373.91",
            "min": "360.20",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "323.20",
            "p50": "318.73",
            "p95": "308.84",
            "p99": "291.86",
            "min": "288.09",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "186.87",
            "p50": "184.73",
            "p95": "179.63",
            "p99": "124.88",
            "min": "112.73",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "267.04",
            "p50": "259.36",
            "p95": "244.34",
            "p99": "238.45",
            "min": "238.36",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "264.97",
            "p50": "255.75",
            "p95": "245.21",
            "p99": "231.74",
            "min": "228.76",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "260.45",
            "p50": "257.74",
            "p95": "253.67",
            "p99": "239.85",
            "min": "238.53",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "190.72",
            "p50": "188.34",
            "p95": "182.85",
            "p99": "177.20",
            "min": "176.94",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "319.64",
            "p50": "315.74",
            "p95": "303.73",
            "p99": "299.86",
            "min": "299.15",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "311.19",
            "p50": "305.42",
            "p95": "297.61",
            "p99": "270.75",
            "min": "264.55",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "7818.25",
            "p50": "5458.29",
            "p95": "2520.19",
            "p99": "1847.35",
            "min": "1784.86",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2522.89",
            "p50": "2118.88",
            "p95": "1064.00",
            "p99": "1532.17",
            "min": "998.70",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "291.91",
            "p50": "251.26",
            "p95": "226.86",
            "p99": "217.30",
            "min": "199.80",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "8213.91",
            "p50": "3515.83",
            "p95": "1097.48",
            "p99": "3744.71",
            "min": "373.21",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "8080.69",
            "p50": "4616.73",
            "p95": "2472.61",
            "p99": "4330.17",
            "min": "1500.82",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1830.42",
            "p50": "1642.30",
            "p95": "562.47",
            "p99": "164.96",
            "min": "161.40",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "20287.41",
            "p50": "4751.00",
            "p95": "792.02",
            "p99": "761.68",
            "min": "761.29",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1310.42",
            "p50": "1177.09",
            "p95": "492.84",
            "p99": "466.24",
            "min": "455.32",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2149.06",
            "p50": "1915.97",
            "p95": "1478.50",
            "p99": "460.67",
            "min": "284.13",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2158.81",
            "p50": "1937.08",
            "p95": "1371.07",
            "p99": "469.55",
            "min": "404.46",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "6131.31",
            "p50": "5269.96",
            "p95": "768.53",
            "p99": "199.28",
            "min": "166.96",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "301.79",
            "p50": "255.11",
            "p95": "145.89",
            "p99": "140.66",
            "min": "139.86",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "496.69",
            "p50": "447.04",
            "p95": "377.50",
            "p99": "113.68",
            "min": "111.76",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "344.98",
            "p50": "292.93",
            "p95": "58.71",
            "p99": "56.66",
            "min": "56.54",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "421.07",
            "p50": "382.01",
            "p95": "158.44",
            "p99": "77.87",
            "min": "76.46",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "38556.18",
            "p50": "8104.30",
            "p95": "2181.62",
            "p99": "784.74",
            "min": "246.58",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "368.44",
            "p50": "344.44",
            "p95": "294.81",
            "p99": "258.54",
            "min": "255.12",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "353.89",
            "p50": "331.17",
            "p95": "286.70",
            "p99": "275.26",
            "min": "274.31",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "354.36",
            "p50": "339.62",
            "p95": "286.88",
            "p99": "273.57",
            "min": "272.70",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "356.95",
            "p50": "336.27",
            "p95": "284.29",
            "p99": "279.11",
            "min": "278.80",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "14934.23",
            "p50": "7152.39",
            "p95": "2355.67",
            "p99": "908.55",
            "min": "78.55",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "14909.84",
            "p50": "7498.85",
            "p95": "2600.46",
            "p99": "1870.38",
            "min": "1643.24",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "14748.90",
            "p50": "6322.70",
            "p95": "1687.43",
            "p99": "185.00",
            "min": "116.47",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "15058.19",
            "p50": "6832.18",
            "p95": "2636.75",
            "p99": "1416.52",
            "min": "1193.02",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "14623.38",
            "p50": "6454.52",
            "p95": "2612.51",
            "p99": "1727.83",
            "min": "1412.65",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "15165.34",
            "p50": "7880.01",
            "p95": "2614.34",
            "p99": "1243.08",
            "min": "390.24",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "263.57",
            "p50": "254.30",
            "p95": "241.91",
            "p99": "235.32",
            "min": "235.08",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "538.19",
            "p50": "531.27",
            "p95": "514.22",
            "p99": "367.42",
            "min": "275.22",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1182.30",
            "p50": "1124.00",
            "p95": "379.40",
            "p99": "357.29",
            "min": "347.25",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "19596.31",
            "p50": "8778.48",
            "p95": "2596.79",
            "p99": "1646.64",
            "min": "1573.45",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1095.08",
            "p50": "1040.82",
            "p95": "351.47",
            "p99": "322.42",
            "min": "306.36",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "49677.79",
            "p50": "9389.56",
            "p95": "2554.76",
            "p99": "1557.97",
            "min": "1406.51",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "18104.27",
            "p50": "6758.56",
            "p95": "2599.15",
            "p99": "1499.41",
            "min": "1302.45",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "526.59",
            "p50": "495.73",
            "p95": "432.75",
            "p99": "238.28",
            "min": "117.59",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "521.19",
            "p50": "510.62",
            "p95": "497.60",
            "p99": "431.88",
            "min": "431.29",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "205.74",
            "p50": "203.04",
            "p95": "196.33",
            "p99": "187.20",
            "min": "186.42",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "435.89",
            "p50": "427.95",
            "p95": "417.94",
            "p99": "410.87",
            "min": "410.66",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "205.17",
            "p50": "203.39",
            "p95": "200.41",
            "p99": "193.35",
            "min": "193.32",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "329.39",
            "p50": "324.17",
            "p95": "316.29",
            "p99": "186.36",
            "min": "157.00",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "272.03",
            "p50": "266.58",
            "p95": "253.33",
            "p99": "251.66",
            "min": "251.59",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "519.63",
            "p50": "506.53",
            "p95": "493.21",
            "p99": "369.99",
            "min": "307.54",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1480.67",
            "p50": "1135.24",
            "p95": "852.52",
            "p99": "658.24",
            "min": "606.64",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "318.34",
            "p50": "314.09",
            "p95": "307.15",
            "p99": "301.63",
            "min": "301.31",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.49",
            "p50": "84.69",
            "p95": "77.26",
            "p99": "73.81",
            "min": "73.68",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "80.39",
            "p50": "77.83",
            "p95": "71.76",
            "p99": "69.42",
            "min": "69.04",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "82.18",
            "p50": "79.36",
            "p95": "73.17",
            "p99": "71.20",
            "min": "71.08",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "229.08",
            "p50": "212.21",
            "p95": "183.53",
            "p99": "120.29",
            "min": "80.55",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "173.20",
            "p50": "162.20",
            "p95": "139.22",
            "p99": "125.59",
            "min": "123.88",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "180.48",
            "p50": "168.54",
            "p95": "141.55",
            "p99": "106.98",
            "min": "98.84",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "171.22",
            "p50": "158.00",
            "p95": "134.79",
            "p99": "119.72",
            "min": "118.28",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "169.47",
            "p50": "158.41",
            "p95": "138.14",
            "p99": "121.13",
            "min": "119.84",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "195.25",
            "p50": "178.30",
            "p95": "148.66",
            "p99": "146.50",
            "min": "146.22",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "173.15",
            "p50": "161.57",
            "p95": "144.70",
            "p99": "136.70",
            "min": "136.34",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "193.51",
            "p50": "178.65",
            "p95": "149.27",
            "p99": "138.70",
            "min": "136.77",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "144.29",
            "p50": "133.96",
            "p95": "120.46",
            "p99": "91.23",
            "min": "86.47",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "220.54",
            "p50": "202.75",
            "p95": "172.07",
            "p99": "160.82",
            "min": "160.08",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "174.92",
            "p50": "163.18",
            "p95": "144.52",
            "p99": "123.37",
            "min": "119.84",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.21",
            "p50": "65.00",
            "p95": "60.52",
            "p99": "59.21",
            "min": "59.13",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "136.28",
            "p50": "129.73",
            "p95": "112.84",
            "p99": "118.51",
            "min": "108.95",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "402.14",
            "p50": "311.57",
            "p95": "221.56",
            "p99": "230.34",
            "min": "190.04",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "165.74",
            "p50": "142.42",
            "p95": "134.55",
            "p99": "147.08",
            "min": "133.00",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "129.06",
            "p50": "121.83",
            "p95": "110.01",
            "p99": "115.65",
            "min": "105.54",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1165.93",
            "p50": "886.54",
            "p95": "574.64",
            "p99": "438.29",
            "min": "431.05",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1031.80",
            "p50": "816.54",
            "p95": "498.64",
            "p99": "428.40",
            "min": "416.77",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1360.64",
            "p50": "1046.43",
            "p95": "620.18",
            "p99": "508.96",
            "min": "486.04",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1239.16",
            "p50": "953.13",
            "p95": "534.72",
            "p99": "460.22",
            "min": "453.34",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1222.49",
            "p50": "929.29",
            "p95": "572.04",
            "p99": "489.27",
            "min": "482.23",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1068.46",
            "p50": "825.99",
            "p95": "509.18",
            "p99": "435.96",
            "min": "426.81",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "663.29",
            "p50": "505.36",
            "p95": "377.64",
            "p99": "332.64",
            "min": "328.36",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "629.42",
            "p50": "523.31",
            "p95": "382.49",
            "p99": "311.22",
            "min": "306.39",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "656.56",
            "p50": "527.06",
            "p95": "363.66",
            "p99": "333.67",
            "min": "330.72",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "675.19",
            "p50": "541.93",
            "p95": "396.64",
            "p99": "346.05",
            "min": "343.22",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "290.84",
            "p50": "266.19",
            "p95": "211.89",
            "p99": "195.37",
            "min": "194.89",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "545.36",
            "p50": "431.84",
            "p95": "317.51",
            "p99": "254.92",
            "min": "241.28",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "523.60",
            "p50": "444.04",
            "p95": "312.36",
            "p99": "233.51",
            "min": "224.22",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "545.41",
            "p50": "453.45",
            "p95": "352.16",
            "p99": "301.69",
            "min": "295.05",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "561.30",
            "p50": "470.89",
            "p95": "328.29",
            "p99": "319.63",
            "min": "319.41",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.40",
            "p50": "101.68",
            "p95": "90.80",
            "p99": "86.33",
            "min": "84.90",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.31",
            "p50": "101.77",
            "p95": "92.53",
            "p99": "89.17",
            "min": "88.33",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.29",
            "p50": "94.74",
            "p95": "87.80",
            "p99": "84.01",
            "min": "83.86",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "253.24",
            "p50": "233.27",
            "p95": "192.52",
            "p99": "175.65",
            "min": "175.33",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.34",
            "p50": "94.85",
            "p95": "88.04",
            "p99": "80.68",
            "min": "80.10",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "246.44",
            "p50": "227.09",
            "p95": "189.91",
            "p99": "176.10",
            "min": "174.76",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "195.74",
            "p50": "181.50",
            "p95": "151.95",
            "p99": "127.96",
            "min": "126.81",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "199.64",
            "p50": "186.68",
            "p95": "159.27",
            "p99": "111.27",
            "min": "87.18",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "355.31",
            "p50": "314.41",
            "p95": "252.17",
            "p99": "219.26",
            "min": "216.00",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4911.82",
            "p50": "2186.34",
            "p95": "1006.52",
            "p99": "839.43",
            "min": "830.23",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "344.28",
            "p50": "306.43",
            "p95": "250.35",
            "p99": "204.00",
            "min": "182.40",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "13567.78",
            "p50": "3595.40",
            "p95": "1324.37",
            "p99": "750.90",
            "min": "665.86",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3260.56",
            "p50": "1837.13",
            "p95": "809.42",
            "p99": "572.02",
            "min": "571.41",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "161.74",
            "p50": "144.94",
            "p95": "127.66",
            "p99": "115.80",
            "min": "113.38",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "237.82",
            "p50": "164.69",
            "p95": "134.46",
            "p99": "125.51",
            "min": "125.35",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "91.46",
            "p50": "87.79",
            "p95": "79.61",
            "p99": "63.54",
            "min": "58.58",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "231.67",
            "p50": "211.43",
            "p95": "176.18",
            "p99": "118.18",
            "min": "91.73",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "172.27",
            "p50": "160.28",
            "p95": "141.08",
            "p99": "118.87",
            "min": "116.14",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "200.00",
            "p50": "185.61",
            "p95": "159.47",
            "p99": "135.59",
            "min": "124.44",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "194.46",
            "p50": "182.04",
            "p95": "154.46",
            "p99": "92.75",
            "min": "78.74",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "197.26",
            "p50": "184.83",
            "p95": "152.42",
            "p99": "146.10",
            "min": "145.50",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1133.46",
            "p50": "901.22",
            "p95": "613.42",
            "p99": "516.47",
            "min": "501.16",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "171.00",
            "p50": "161.33",
            "p95": "122.58",
            "p99": "110.18",
            "min": "107.96",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "191.15",
            "p50": "185.99",
            "p95": "166.21",
            "p99": "158.64",
            "min": "158.58",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "190.14",
            "p50": "184.71",
            "p95": "164.79",
            "p99": "138.04",
            "min": "137.24",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "194.94",
            "p50": "190.06",
            "p95": "174.61",
            "p99": "159.58",
            "min": "158.97",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1190.70",
            "p50": "1124.95",
            "p95": "760.51",
            "p99": "674.41",
            "min": "667.81",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "700.97",
            "p50": "633.94",
            "p95": "474.11",
            "p99": "406.20",
            "min": "393.79",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "811.67",
            "p50": "743.77",
            "p95": "565.11",
            "p99": "454.59",
            "min": "440.39",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "726.77",
            "p50": "657.31",
            "p95": "490.24",
            "p99": "453.76",
            "min": "451.84",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "731.15",
            "p50": "659.34",
            "p95": "495.20",
            "p99": "424.58",
            "min": "417.19",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "894.97",
            "p50": "799.60",
            "p95": "557.66",
            "p99": "478.08",
            "min": "461.62",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "867.51",
            "p50": "793.37",
            "p95": "552.97",
            "p99": "471.18",
            "min": "460.73",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "828.65",
            "p50": "746.65",
            "p95": "514.33",
            "p99": "446.24",
            "min": "442.77",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "821.69",
            "p50": "745.41",
            "p95": "531.89",
            "p99": "449.24",
            "min": "446.55",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "883.70",
            "p50": "790.88",
            "p95": "610.32",
            "p99": "462.50",
            "min": "447.39",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "851.81",
            "p50": "741.09",
            "p95": "554.89",
            "p99": "430.62",
            "min": "428.37",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "64.29",
            "p50": "62.47",
            "p95": "61.05",
            "p99": "58.90",
            "min": "58.41",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "97.54",
            "p50": "95.62",
            "p95": "88.31",
            "p99": "91.14",
            "min": "87.70",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "492.88",
            "p50": "466.86",
            "p95": "387.67",
            "p99": "376.89",
            "min": "349.69",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "131.74",
            "p50": "102.78",
            "p95": "97.14",
            "p99": "111.53",
            "min": "96.28",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "91.66",
            "p50": "88.60",
            "p95": "84.56",
            "p99": "86.90",
            "min": "83.31",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1795.58",
            "p50": "1550.72",
            "p95": "846.64",
            "p99": "671.25",
            "min": "604.69",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1638.11",
            "p50": "1419.50",
            "p95": "865.32",
            "p99": "581.93",
            "min": "561.56",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2235.46",
            "p50": "1802.49",
            "p95": "927.60",
            "p99": "673.18",
            "min": "653.90",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2223.11",
            "p50": "1867.93",
            "p95": "1089.91",
            "p99": "745.70",
            "min": "673.55",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2216.23",
            "p50": "1712.23",
            "p95": "830.92",
            "p99": "695.06",
            "min": "691.50",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1680.21",
            "p50": "1522.09",
            "p95": "839.78",
            "p99": "687.52",
            "min": "673.24",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "708.62",
            "p50": "654.32",
            "p95": "521.37",
            "p99": "467.14",
            "min": "466.41",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "715.01",
            "p50": "633.37",
            "p95": "501.67",
            "p99": "410.38",
            "min": "409.02",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "719.73",
            "p50": "645.41",
            "p95": "511.32",
            "p99": "412.77",
            "min": "408.25",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "730.58",
            "p50": "649.10",
            "p95": "509.78",
            "p99": "425.61",
            "min": "419.80",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.64",
            "p50": "85.63",
            "p95": "80.71",
            "p99": "79.14",
            "min": "79.04",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "635.49",
            "p50": "568.08",
            "p95": "454.71",
            "p99": "380.49",
            "min": "376.56",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "598.06",
            "p50": "536.01",
            "p95": "413.29",
            "p99": "394.61",
            "min": "393.42",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "594.13",
            "p50": "554.06",
            "p95": "451.99",
            "p99": "375.29",
            "min": "369.96",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "609.86",
            "p50": "564.08",
            "p95": "454.22",
            "p99": "420.67",
            "min": "418.21",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1928.69",
            "p50": "1566.76",
            "p95": "890.22",
            "p99": "643.94",
            "min": "633.89",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2212.38",
            "p50": "1998.78",
            "p95": "1009.32",
            "p99": "795.88",
            "min": "728.02",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.80",
            "p50": "71.95",
            "p95": "68.68",
            "p99": "67.38",
            "min": "67.36",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9395.48",
            "p50": "4313.70",
            "p95": "2497.91",
            "p99": "1681.55",
            "min": "1572.70",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.80",
            "p50": "71.85",
            "p95": "69.35",
            "p99": "67.59",
            "min": "67.49",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "221.85",
            "p50": "216.80",
            "p95": "190.56",
            "p99": "180.38",
            "min": "180.36",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "831.37",
            "p50": "736.82",
            "p95": "517.36",
            "p99": "444.34",
            "min": "441.47",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "671.02",
            "p50": "628.49",
            "p95": "475.89",
            "p99": "399.21",
            "min": "396.37",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1090.04",
            "p50": "1003.29",
            "p95": "682.75",
            "p99": "593.39",
            "min": "592.50",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "30349.31",
            "p50": "8920.98",
            "p95": "2667.81",
            "p99": "2040.31",
            "min": "1764.09",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1095.06",
            "p50": "1029.30",
            "p95": "718.28",
            "p99": "584.92",
            "min": "512.16",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "56916.00",
            "p50": "9846.81",
            "p95": "2761.39",
            "p99": "2104.56",
            "min": "1758.06",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15723.43",
            "p50": "6050.19",
            "p95": "1432.55",
            "p99": "984.17",
            "min": "981.33",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "552.06",
            "p50": "473.52",
            "p95": "382.41",
            "p99": "329.19",
            "min": "317.98",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "979.45",
            "p50": "890.80",
            "p95": "654.23",
            "p99": "490.57",
            "min": "490.22",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "818.68",
            "p50": "733.28",
            "p95": "525.21",
            "p99": "446.91",
            "min": "444.17",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1201.78",
            "p50": "1098.03",
            "p95": "699.63",
            "p99": "643.24",
            "min": "622.22",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "735.45",
            "p50": "671.47",
            "p95": "511.96",
            "p99": "468.66",
            "min": "468.61",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1155.99",
            "p50": "1069.27",
            "p95": "719.07",
            "p99": "537.48",
            "min": "524.03",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "874.27",
            "p50": "775.97",
            "p95": "565.16",
            "p99": "466.17",
            "min": "453.23",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "910.32",
            "p50": "846.27",
            "p95": "597.01",
            "p99": "496.82",
            "min": "487.45",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2375.59",
            "p50": "1999.19",
            "p95": "1103.67",
            "p99": "1018.51",
            "min": "1002.31",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "829.19",
            "p50": "772.20",
            "p95": "548.11",
            "p99": "492.50",
            "min": "487.59",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "81.61",
            "p50": "78.51",
            "p95": "68.95",
            "p99": "56.88",
            "min": "55.79",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "74.59",
            "p50": "72.00",
            "p95": "66.29",
            "p99": "57.30",
            "min": "57.14",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "76.29",
            "p50": "73.86",
            "p95": "67.34",
            "p99": "63.94",
            "min": "63.87",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "212.38",
            "p50": "192.78",
            "p95": "153.08",
            "p99": "125.83",
            "min": "116.31",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "103.28",
            "p50": "98.69",
            "p95": "87.39",
            "p99": "68.83",
            "min": "65.90",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.61",
            "p50": "104.52",
            "p95": "92.66",
            "p99": "83.19",
            "min": "81.69",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "141.74",
            "p50": "132.30",
            "p95": "112.55",
            "p99": "96.43",
            "min": "95.14",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "140.28",
            "p50": "133.48",
            "p95": "107.38",
            "p99": "76.80",
            "min": "71.45",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "185.72",
            "p50": "170.21",
            "p95": "144.50",
            "p99": "125.32",
            "min": "121.31",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "182.00",
            "p50": "170.06",
            "p95": "128.51",
            "p99": "107.97",
            "min": "106.93",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "183.37",
            "p50": "170.83",
            "p95": "138.11",
            "p99": "115.15",
            "min": "113.31",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "131.28",
            "p50": "124.32",
            "p95": "105.51",
            "p99": "93.69",
            "min": "92.56",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "202.38",
            "p50": "184.39",
            "p95": "142.40",
            "p99": "123.06",
            "min": "122.40",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "188.26",
            "p50": "174.36",
            "p95": "141.93",
            "p99": "132.10",
            "min": "131.54",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "70.90",
            "p50": "67.13",
            "p95": "61.79",
            "p99": "59.93",
            "min": "59.78",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "129.95",
            "p50": "121.44",
            "p95": "101.12",
            "p99": "104.62",
            "min": "90.98",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "210.61",
            "p50": "187.32",
            "p95": "147.68",
            "p99": "144.94",
            "min": "129.54",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "153.58",
            "p50": "136.84",
            "p95": "127.22",
            "p99": "134.12",
            "min": "119.44",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "124.70",
            "p50": "117.59",
            "p95": "99.61",
            "p99": "109.21",
            "min": "97.53",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1037.42",
            "p50": "709.87",
            "p95": "390.42",
            "p99": "290.23",
            "min": "287.12",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1014.29",
            "p50": "701.86",
            "p95": "367.24",
            "p99": "287.83",
            "min": "281.65",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1157.54",
            "p50": "760.92",
            "p95": "440.04",
            "p99": "331.36",
            "min": "278.53",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1080.86",
            "p50": "728.27",
            "p95": "414.67",
            "p99": "288.41",
            "min": "279.57",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1013.99",
            "p50": "714.16",
            "p95": "420.42",
            "p99": "273.12",
            "min": "232.89",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1019.85",
            "p50": "709.03",
            "p95": "407.66",
            "p99": "308.28",
            "min": "305.01",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "335.46",
            "p50": "295.43",
            "p95": "236.66",
            "p99": "185.90",
            "min": "183.70",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "342.21",
            "p50": "294.33",
            "p95": "222.56",
            "p99": "187.27",
            "min": "185.91",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "331.39",
            "p50": "294.52",
            "p95": "231.11",
            "p99": "180.28",
            "min": "176.49",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "361.44",
            "p50": "319.32",
            "p95": "249.56",
            "p99": "188.06",
            "min": "186.50",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "285.97",
            "p50": "252.45",
            "p95": "196.68",
            "p99": "142.54",
            "min": "142.13",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "288.10",
            "p50": "261.01",
            "p95": "178.84",
            "p99": "163.11",
            "min": "162.40",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "282.76",
            "p50": "252.30",
            "p95": "202.58",
            "p99": "156.10",
            "min": "155.97",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "291.97",
            "p50": "257.34",
            "p95": "205.51",
            "p99": "121.23",
            "min": "112.54",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "289.99",
            "p50": "255.68",
            "p95": "207.02",
            "p99": "146.24",
            "min": "136.04",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.59",
            "p50": "100.53",
            "p95": "88.92",
            "p99": "77.38",
            "min": "74.67",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.56",
            "p50": "99.82",
            "p95": "88.50",
            "p99": "83.90",
            "min": "83.81",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.47",
            "p50": "93.29",
            "p95": "82.91",
            "p99": "78.34",
            "min": "76.43",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "248.81",
            "p50": "223.69",
            "p95": "174.86",
            "p99": "153.11",
            "min": "149.61",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.31",
            "p50": "92.72",
            "p95": "83.37",
            "p99": "68.24",
            "min": "64.83",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "241.72",
            "p50": "217.21",
            "p95": "171.42",
            "p99": "147.04",
            "min": "145.98",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "184.97",
            "p50": "171.43",
            "p95": "134.69",
            "p99": "103.68",
            "min": "98.84",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "154.26",
            "p50": "143.90",
            "p95": "119.05",
            "p99": "108.10",
            "min": "107.29",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "436.81",
            "p50": "362.80",
            "p95": "257.88",
            "p99": "196.79",
            "min": "194.27",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4602.33",
            "p50": "1497.62",
            "p95": "456.18",
            "p99": "402.40",
            "min": "399.78",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "438.79",
            "p50": "363.30",
            "p95": "263.95",
            "p99": "187.26",
            "min": "185.10",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "10311.97",
            "p50": "1850.50",
            "p95": "593.90",
            "p99": "375.00",
            "min": "346.43",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2966.37",
            "p50": "1186.40",
            "p95": "415.76",
            "p99": "342.07",
            "min": "329.87",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "205.83",
            "p50": "185.93",
            "p95": "148.00",
            "p99": "128.28",
            "min": "119.15",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "231.95",
            "p50": "210.44",
            "p95": "159.82",
            "p99": "134.60",
            "min": "131.62",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "131.74",
            "p50": "124.67",
            "p95": "106.79",
            "p99": "86.75",
            "min": "81.19",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "210.55",
            "p50": "191.29",
            "p95": "152.63",
            "p99": "95.50",
            "min": "78.95",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "140.69",
            "p50": "132.16",
            "p95": "110.04",
            "p99": "84.76",
            "min": "79.59",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "178.01",
            "p50": "164.35",
            "p95": "136.90",
            "p99": "126.49",
            "min": "125.71",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "183.23",
            "p50": "170.39",
            "p95": "140.68",
            "p99": "127.42",
            "min": "125.14",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "185.62",
            "p50": "170.18",
            "p95": "141.35",
            "p99": "112.07",
            "min": "110.07",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "293.91",
            "p50": "228.08",
            "p95": "136.12",
            "p99": "128.23",
            "min": "119.51",
            "n": "94",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "146.09",
            "p50": "136.41",
            "p95": "105.33",
            "p99": "110.44",
            "min": "97.25",
            "n": "72",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "87.54",
            "p50": "84.24",
            "p95": "77.05",
            "p99": "72.76",
            "min": "72.51",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "88.78",
            "p50": "85.37",
            "p95": "82.42",
            "p99": "77.19",
            "min": "76.37",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "88.28",
            "p50": "84.90",
            "p95": "80.79",
            "p99": "78.96",
            "min": "78.73",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "192.65",
            "p50": "182.21",
            "p95": "174.24",
            "p99": "155.30",
            "min": "152.86",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "91.79",
            "p50": "89.76",
            "p95": "86.01",
            "p99": "83.57",
            "min": "83.40",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "111.64",
            "p50": "107.54",
            "p95": "104.36",
            "p99": "101.46",
            "min": "100.85",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "123.35",
            "p50": "120.93",
            "p95": "107.67",
            "p99": "100.69",
            "min": "100.47",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "123.47",
            "p50": "120.88",
            "p95": "117.49",
            "p99": "114.01",
            "min": "113.95",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "98.42",
            "p50": "96.78",
            "p95": "74.76",
            "p99": "74.23",
            "min": "74.08",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "98.68",
            "p50": "95.61",
            "p95": "92.43",
            "p99": "89.29",
            "min": "88.85",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.75",
            "p50": "95.71",
            "p95": "92.68",
            "p99": "90.09",
            "min": "90.04",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "125.35",
            "p50": "122.72",
            "p95": "118.09",
            "p99": "115.67",
            "min": "115.59",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "123.38",
            "p50": "115.82",
            "p95": "105.99",
            "p99": "97.91",
            "min": "96.57",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "115.84",
            "p50": "113.27",
            "p95": "109.55",
            "p99": "103.87",
            "min": "103.70",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "74.99",
            "p50": "71.15",
            "p95": "66.18",
            "p99": "59.16",
            "min": "58.78",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "92.76",
            "p50": "91.50",
            "p95": "85.61",
            "p99": "87.46",
            "min": "84.60",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "58.79",
            "p50": "56.65",
            "p95": "54.61",
            "p99": "55.01",
            "min": "54.12",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "149.69",
            "p50": "119.22",
            "p95": "111.52",
            "p99": "127.11",
            "min": "110.07",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "103.77",
            "p50": "101.43",
            "p95": "97.64",
            "p99": "99.08",
            "min": "95.54",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "378.28",
            "p50": "360.63",
            "p95": "338.91",
            "p99": "311.98",
            "min": "306.59",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "508.56",
            "p50": "481.10",
            "p95": "446.77",
            "p99": "365.16",
            "min": "349.74",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "370.17",
            "p50": "358.26",
            "p95": "344.97",
            "p99": "317.84",
            "min": "301.50",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "374.61",
            "p50": "360.98",
            "p95": "345.74",
            "p99": "334.68",
            "min": "334.02",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "375.30",
            "p50": "362.08",
            "p95": "345.66",
            "p99": "289.24",
            "min": "279.64",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "466.62",
            "p50": "444.10",
            "p95": "400.17",
            "p99": "342.43",
            "min": "317.43",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "95.39",
            "p50": "93.21",
            "p95": "90.93",
            "p99": "86.90",
            "min": "85.98",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "96.35",
            "p50": "93.59",
            "p95": "90.69",
            "p99": "90.16",
            "min": "90.15",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "94.87",
            "p50": "92.70",
            "p95": "89.47",
            "p99": "86.54",
            "min": "86.07",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "87.82",
            "p50": "85.68",
            "p95": "83.62",
            "p99": "81.97",
            "min": "81.69",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.87",
            "p50": "86.01",
            "p95": "80.90",
            "p99": "78.72",
            "min": "78.36",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "89.33",
            "p50": "86.51",
            "p95": "82.51",
            "p99": "81.00",
            "min": "80.93",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "84.78",
            "p50": "82.17",
            "p95": "79.63",
            "p99": "74.53",
            "min": "74.19",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "84.76",
            "p50": "81.79",
            "p95": "78.68",
            "p99": "77.86",
            "min": "77.82",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "84.63",
            "p50": "81.80",
            "p95": "79.47",
            "p99": "76.29",
            "min": "75.59",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1260.65",
            "p50": "1149.52",
            "p95": "645.05",
            "p99": "401.06",
            "min": "395.27",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1275.01",
            "p50": "1154.30",
            "p95": "710.31",
            "p99": "550.42",
            "min": "546.18",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.22",
            "p50": "152.27",
            "p95": "139.68",
            "p99": "117.28",
            "min": "107.24",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3010.41",
            "p50": "2743.15",
            "p95": "1086.25",
            "p99": "761.04",
            "min": "736.90",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "154.86",
            "p50": "151.73",
            "p95": "135.32",
            "p99": "102.80",
            "min": "100.79",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "2993.29",
            "p50": "2785.92",
            "p95": "1769.38",
            "p99": "747.74",
            "min": "586.58",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "99.75",
            "p50": "95.99",
            "p95": "91.16",
            "p99": "87.93",
            "min": "87.84",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "186.09",
            "p50": "183.66",
            "p95": "177.40",
            "p99": "167.03",
            "min": "165.44",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "390.19",
            "p50": "303.51",
            "p95": "223.56",
            "p99": "197.62",
            "min": "192.24",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7742.20",
            "p50": "2196.78",
            "p95": "866.24",
            "p99": "609.09",
            "min": "557.31",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "371.97",
            "p50": "294.67",
            "p95": "238.61",
            "p99": "189.02",
            "min": "165.20",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "27825.05",
            "p50": "9436.32",
            "p95": "2639.66",
            "p99": "1803.84",
            "min": "1794.77",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4798.52",
            "p50": "3194.26",
            "p95": "1645.64",
            "p99": "852.51",
            "min": "636.24",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "316.78",
            "p50": "258.48",
            "p95": "199.14",
            "p99": "156.48",
            "min": "152.22",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "151.89",
            "p50": "134.95",
            "p95": "117.74",
            "p99": "109.81",
            "min": "108.98",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "121.57",
            "p50": "118.22",
            "p95": "96.35",
            "p99": "90.04",
            "min": "88.86",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "129.55",
            "p50": "121.05",
            "p95": "117.32",
            "p99": "114.47",
            "min": "113.97",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "121.37",
            "p50": "118.58",
            "p95": "62.72",
            "p99": "62.54",
            "min": "62.54",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "159.70",
            "p50": "149.76",
            "p95": "146.39",
            "p99": "137.97",
            "min": "133.98",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "97.85",
            "p50": "93.02",
            "p95": "88.71",
            "p99": "86.20",
            "min": "86.18",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "117.98",
            "p50": "113.53",
            "p95": "110.60",
            "p99": "106.76",
            "min": "105.58",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "995.57",
            "p50": "887.07",
            "p95": "646.51",
            "p99": "554.06",
            "min": "540.91",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "121.75",
            "p50": "119.29",
            "p95": "101.50",
            "p99": "96.43",
            "min": "96.27",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}