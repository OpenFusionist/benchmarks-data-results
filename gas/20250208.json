{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "112.65",
            "p50": "109.39",
            "p95": "102.32",
            "p99": "97.39",
            "min": "96.38",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "998.06",
            "p50": "967.86",
            "p95": "933.30",
            "p99": "897.27",
            "min": "890.13",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "112.74",
            "p50": "109.51",
            "p95": "105.07",
            "p99": "104.47",
            "min": "104.46",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "731.17",
            "p50": "717.87",
            "p95": "497.96",
            "p99": "478.05",
            "min": "474.94",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "370.27",
            "p50": "362.19",
            "p95": "345.42",
            "p99": "321.18",
            "min": "317.75",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "398.99",
            "p50": "389.94",
            "p95": "382.40",
            "p99": "375.71",
            "min": "375.66",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "310.85",
            "p50": "305.87",
            "p95": "188.95",
            "p99": "187.50",
            "min": "187.40",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "187.28",
            "p50": "184.34",
            "p95": "178.07",
            "p99": "172.25",
            "min": "172.13",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "247.51",
            "p50": "238.26",
            "p95": "223.82",
            "p99": "219.61",
            "min": "219.57",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "251.85",
            "p50": "238.98",
            "p95": "232.60",
            "p99": "229.24",
            "min": "229.18",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "257.19",
            "p50": "247.52",
            "p95": "243.66",
            "p99": "237.09",
            "min": "236.87",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "202.78",
            "p50": "199.64",
            "p95": "192.30",
            "p99": "181.03",
            "min": "179.56",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "314.51",
            "p50": "309.47",
            "p95": "272.46",
            "p99": "270.44",
            "min": "270.12",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "295.88",
            "p50": "290.77",
            "p95": "254.99",
            "p99": "244.32",
            "min": "242.29",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "7086.80",
            "p50": "6144.19",
            "p95": "2491.38",
            "p99": "1849.19",
            "min": "1603.32",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2575.93",
            "p50": "2233.45",
            "p95": "1923.57",
            "p99": "2061.69",
            "min": "1784.79",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "282.57",
            "p50": "253.44",
            "p95": "233.26",
            "p99": "237.63",
            "min": "227.09",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1439.18",
            "p50": "950.22",
            "p95": "357.00",
            "p99": "810.76",
            "min": "336.69",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7920.35",
            "p50": "4445.01",
            "p95": "2346.86",
            "p99": "4221.79",
            "min": "1431.65",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "809.75",
            "p50": "783.10",
            "p95": "540.17",
            "p99": "526.40",
            "min": "526.02",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "818.73",
            "p50": "800.70",
            "p95": "754.70",
            "p99": "734.93",
            "min": "734.10",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "910.11",
            "p50": "879.77",
            "p95": "756.28",
            "p99": "652.71",
            "min": "644.50",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2190.10",
            "p50": "2076.30",
            "p95": "1786.35",
            "p99": "1703.71",
            "min": "1667.65",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2194.85",
            "p50": "2081.44",
            "p95": "1869.45",
            "p99": "1716.40",
            "min": "1702.22",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "807.79",
            "p50": "791.67",
            "p95": "741.88",
            "p99": "725.80",
            "min": "723.49",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "162.80",
            "p50": "154.57",
            "p95": "135.23",
            "p99": "116.24",
            "min": "112.67",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "506.57",
            "p50": "487.34",
            "p95": "406.48",
            "p99": "399.51",
            "min": "399.18",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "162.50",
            "p50": "151.91",
            "p95": "141.00",
            "p99": "133.13",
            "min": "132.40",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "183.11",
            "p50": "175.61",
            "p95": "154.13",
            "p99": "148.93",
            "min": "148.19",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "33980.91",
            "p50": "8189.47",
            "p95": "2339.92",
            "p99": "473.89",
            "min": "435.03",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "380.29",
            "p50": "316.19",
            "p95": "307.26",
            "p99": "259.10",
            "min": "258.48",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "363.68",
            "p50": "300.69",
            "p95": "293.42",
            "p99": "281.08",
            "min": "279.65",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "364.34",
            "p50": "309.55",
            "p95": "294.09",
            "p99": "290.74",
            "min": "290.34",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "364.51",
            "p50": "300.53",
            "p95": "292.66",
            "p99": "289.17",
            "min": "289.07",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "14263.01",
            "p50": "7128.95",
            "p95": "2389.38",
            "p99": "1911.45",
            "min": "1883.78",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "13995.89",
            "p50": "8171.07",
            "p95": "2555.15",
            "p99": "1906.86",
            "min": "1612.82",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "13390.93",
            "p50": "6490.85",
            "p95": "2417.18",
            "p99": "2018.14",
            "min": "1889.44",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "13941.29",
            "p50": "6934.13",
            "p95": "2405.15",
            "p99": "1930.54",
            "min": "1610.44",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "13259.38",
            "p50": "5525.83",
            "p95": "2349.37",
            "p99": "772.75",
            "min": "176.39",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "14233.46",
            "p50": "6746.20",
            "p95": "2426.58",
            "p99": "2065.22",
            "min": "1753.58",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "253.16",
            "p50": "241.47",
            "p95": "232.63",
            "p99": "224.97",
            "min": "223.46",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "525.07",
            "p50": "516.99",
            "p95": "506.45",
            "p99": "353.08",
            "min": "258.83",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1632.59",
            "p50": "1569.96",
            "p95": "374.57",
            "p99": "203.92",
            "min": "110.29",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "22786.67",
            "p50": "6138.50",
            "p95": "298.98",
            "p99": "244.61",
            "min": "244.16",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1430.26",
            "p50": "1380.41",
            "p95": "277.09",
            "p99": "271.92",
            "min": "271.19",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "55586.98",
            "p50": "9426.23",
            "p95": "2489.23",
            "p99": "1302.85",
            "min": "223.23",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15281.20",
            "p50": "7301.66",
            "p95": "300.72",
            "p99": "235.17",
            "min": "221.53",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "572.99",
            "p50": "542.41",
            "p95": "469.47",
            "p99": "440.78",
            "min": "433.63",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "518.72",
            "p50": "507.74",
            "p95": "495.33",
            "p99": "353.50",
            "min": "308.55",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "204.34",
            "p50": "201.27",
            "p95": "194.38",
            "p99": "189.94",
            "min": "189.10",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "385.02",
            "p50": "374.28",
            "p95": "366.63",
            "p99": "337.97",
            "min": "331.94",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "205.84",
            "p50": "202.35",
            "p95": "195.80",
            "p99": "186.61",
            "min": "185.20",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "343.36",
            "p50": "336.03",
            "p95": "323.41",
            "p99": "318.40",
            "min": "318.27",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "262.86",
            "p50": "255.82",
            "p95": "249.57",
            "p99": "227.05",
            "min": "224.01",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "523.57",
            "p50": "511.18",
            "p95": "498.99",
            "p99": "409.40",
            "min": "358.97",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1451.27",
            "p50": "1277.17",
            "p95": "977.70",
            "p99": "902.98",
            "min": "890.72",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "311.55",
            "p50": "302.64",
            "p95": "284.38",
            "p99": "277.00",
            "min": "276.24",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "90.32",
            "p50": "89.44",
            "p95": "85.20",
            "p99": "75.29",
            "min": "73.31",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "82.31",
            "p50": "81.49",
            "p95": "78.18",
            "p99": "76.52",
            "min": "76.46",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "84.09",
            "p50": "83.01",
            "p95": "79.50",
            "p99": "76.55",
            "min": "76.53",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "250.15",
            "p50": "245.76",
            "p95": "225.43",
            "p99": "201.63",
            "min": "196.57",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "186.38",
            "p50": "182.90",
            "p95": "160.53",
            "p99": "110.24",
            "min": "100.79",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "196.00",
            "p50": "193.28",
            "p95": "174.09",
            "p99": "107.28",
            "min": "88.91",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "185.76",
            "p50": "178.99",
            "p95": "157.09",
            "p99": "150.95",
            "min": "150.00",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "182.72",
            "p50": "176.95",
            "p95": "155.92",
            "p99": "80.16",
            "min": "64.26",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "209.47",
            "p50": "200.73",
            "p95": "176.38",
            "p99": "135.37",
            "min": "130.39",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "186.80",
            "p50": "180.34",
            "p95": "160.88",
            "p99": "110.36",
            "min": "99.91",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "210.15",
            "p50": "204.09",
            "p95": "177.57",
            "p99": "134.01",
            "min": "128.53",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "153.92",
            "p50": "148.42",
            "p95": "136.24",
            "p99": "127.07",
            "min": "125.61",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "226.26",
            "p50": "221.99",
            "p95": "195.97",
            "p99": "158.15",
            "min": "150.14",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "186.72",
            "p50": "181.23",
            "p95": "168.27",
            "p99": "153.39",
            "min": "153.15",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.53",
            "p50": "66.55",
            "p95": "64.05",
            "p99": "59.88",
            "min": "57.90",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "142.67",
            "p50": "141.54",
            "p95": "127.26",
            "p99": "125.30",
            "min": "115.95",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "445.22",
            "p50": "369.91",
            "p95": "282.16",
            "p99": "295.09",
            "min": "259.88",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "196.53",
            "p50": "156.42",
            "p95": "141.28",
            "p99": "164.62",
            "min": "140.54",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.55",
            "p50": "132.70",
            "p95": "124.21",
            "p99": "127.17",
            "min": "120.85",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1233.49",
            "p50": "1159.64",
            "p95": "765.92",
            "p99": "528.72",
            "min": "527.51",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1065.72",
            "p50": "1038.62",
            "p95": "626.25",
            "p99": "525.11",
            "min": "489.88",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1479.57",
            "p50": "1392.13",
            "p95": "848.96",
            "p99": "666.58",
            "min": "662.08",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1378.26",
            "p50": "1265.23",
            "p95": "804.00",
            "p99": "621.98",
            "min": "612.88",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1340.12",
            "p50": "1226.78",
            "p95": "730.87",
            "p99": "638.60",
            "min": "620.43",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1103.80",
            "p50": "1074.56",
            "p95": "744.55",
            "p99": "599.08",
            "min": "597.44",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "736.86",
            "p50": "655.09",
            "p95": "499.16",
            "p99": "412.27",
            "min": "399.92",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "744.21",
            "p50": "624.87",
            "p95": "455.98",
            "p99": "396.21",
            "min": "393.44",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "756.42",
            "p50": "678.12",
            "p95": "467.84",
            "p99": "414.67",
            "min": "407.01",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "740.22",
            "p50": "679.18",
            "p95": "463.53",
            "p99": "404.87",
            "min": "404.13",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "296.14",
            "p50": "292.31",
            "p95": "261.60",
            "p99": "226.32",
            "min": "223.41",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "662.00",
            "p50": "547.71",
            "p95": "417.50",
            "p99": "381.71",
            "min": "380.51",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "647.02",
            "p50": "553.71",
            "p95": "432.64",
            "p99": "343.27",
            "min": "340.19",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "660.15",
            "p50": "569.57",
            "p95": "449.52",
            "p99": "365.61",
            "min": "362.78",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "679.24",
            "p50": "586.24",
            "p95": "422.85",
            "p99": "378.97",
            "min": "376.10",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "107.23",
            "p50": "105.75",
            "p95": "101.16",
            "p99": "97.02",
            "min": "95.97",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "107.16",
            "p50": "105.72",
            "p95": "100.28",
            "p99": "96.34",
            "min": "95.84",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.81",
            "p50": "98.20",
            "p95": "91.65",
            "p99": "84.36",
            "min": "81.19",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "257.01",
            "p50": "250.59",
            "p95": "214.73",
            "p99": "189.40",
            "min": "185.77",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.74",
            "p50": "98.00",
            "p95": "91.26",
            "p99": "85.78",
            "min": "84.62",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "250.26",
            "p50": "246.23",
            "p95": "222.67",
            "p99": "198.03",
            "min": "191.49",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "210.51",
            "p50": "207.13",
            "p95": "186.35",
            "p99": "168.13",
            "min": "167.73",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "243.36",
            "p50": "237.71",
            "p95": "207.03",
            "p99": "188.43",
            "min": "179.00",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "461.46",
            "p50": "453.93",
            "p95": "384.32",
            "p99": "310.44",
            "min": "304.50",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7299.11",
            "p50": "4584.48",
            "p95": "2205.97",
            "p99": "1870.11",
            "min": "1856.61",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "441.03",
            "p50": "432.04",
            "p95": "349.28",
            "p99": "328.60",
            "min": "325.66",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "18024.97",
            "p50": "7489.57",
            "p95": "2528.07",
            "p99": "2294.41",
            "min": "2267.85",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4387.10",
            "p50": "3671.74",
            "p95": "1977.54",
            "p99": "1312.94",
            "min": "1187.05",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "217.10",
            "p50": "187.93",
            "p95": "164.41",
            "p99": "150.76",
            "min": "148.03",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "265.31",
            "p50": "261.49",
            "p95": "222.89",
            "p99": "163.69",
            "min": "146.92",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "95.19",
            "p50": "94.40",
            "p95": "88.17",
            "p99": "78.13",
            "min": "75.12",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "247.63",
            "p50": "243.57",
            "p95": "213.30",
            "p99": "179.85",
            "min": "172.94",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "183.07",
            "p50": "179.84",
            "p95": "158.64",
            "p99": "113.82",
            "min": "103.20",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "223.95",
            "p50": "218.59",
            "p95": "189.83",
            "p99": "172.67",
            "min": "169.37",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "211.14",
            "p50": "207.05",
            "p95": "183.54",
            "p99": "171.28",
            "min": "171.12",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "208.50",
            "p50": "204.11",
            "p95": "181.19",
            "p99": "170.82",
            "min": "168.06",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1222.00",
            "p50": "1097.38",
            "p95": "811.19",
            "p99": "650.85",
            "min": "632.30",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "183.32",
            "p50": "179.16",
            "p95": "150.55",
            "p99": "116.25",
            "min": "110.26",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.29",
            "p50": "192.62",
            "p95": "187.73",
            "p99": "170.89",
            "min": "168.44",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "195.05",
            "p50": "193.42",
            "p95": "187.45",
            "p99": "167.50",
            "min": "167.27",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.67",
            "p50": "193.76",
            "p95": "177.76",
            "p99": "168.38",
            "min": "167.61",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1191.22",
            "p50": "1167.69",
            "p95": "990.42",
            "p99": "695.11",
            "min": "615.86",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "701.86",
            "p50": "693.24",
            "p95": "585.31",
            "p99": "221.04",
            "min": "159.55",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "813.22",
            "p50": "798.95",
            "p95": "665.18",
            "p99": "564.29",
            "min": "555.82",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "737.75",
            "p50": "722.86",
            "p95": "635.05",
            "p99": "522.65",
            "min": "512.56",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "745.33",
            "p50": "735.59",
            "p95": "609.01",
            "p99": "508.85",
            "min": "504.83",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "918.62",
            "p50": "901.18",
            "p95": "756.59",
            "p99": "534.75",
            "min": "516.28",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "864.68",
            "p50": "835.16",
            "p95": "686.28",
            "p99": "525.76",
            "min": "499.37",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "854.77",
            "p50": "838.07",
            "p95": "746.43",
            "p99": "614.96",
            "min": "605.69",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "845.89",
            "p50": "827.23",
            "p95": "633.19",
            "p99": "527.66",
            "min": "519.78",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "888.08",
            "p50": "870.72",
            "p95": "757.65",
            "p99": "519.62",
            "min": "446.32",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "871.89",
            "p50": "838.85",
            "p95": "750.60",
            "p99": "631.82",
            "min": "628.78",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "109.77",
            "p50": "105.62",
            "p95": "103.68",
            "p99": "99.00",
            "min": "98.69",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "96.09",
            "p50": "95.38",
            "p95": "92.32",
            "p99": "90.13",
            "min": "86.92",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "579.02",
            "p50": "560.05",
            "p95": "481.54",
            "p99": "452.27",
            "min": "422.54",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "130.16",
            "p50": "104.03",
            "p95": "96.77",
            "p99": "110.09",
            "min": "94.95",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "89.82",
            "p50": "88.25",
            "p95": "85.88",
            "p99": "87.42",
            "min": "85.60",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1894.17",
            "p50": "1848.03",
            "p95": "1570.66",
            "p99": "1051.61",
            "min": "882.28",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1643.20",
            "p50": "1605.23",
            "p95": "1106.31",
            "p99": "945.90",
            "min": "797.56",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2381.06",
            "p50": "2316.11",
            "p95": "1580.56",
            "p99": "1038.02",
            "min": "986.90",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2389.12",
            "p50": "2309.40",
            "p95": "1574.65",
            "p99": "1027.56",
            "min": "1005.52",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2371.36",
            "p50": "2298.45",
            "p95": "1707.35",
            "p99": "965.64",
            "min": "817.32",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1699.26",
            "p50": "1659.08",
            "p95": "1269.31",
            "p99": "988.59",
            "min": "882.53",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "832.33",
            "p50": "797.81",
            "p95": "684.73",
            "p99": "590.66",
            "min": "584.59",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "820.87",
            "p50": "793.96",
            "p95": "719.53",
            "p99": "618.22",
            "min": "610.22",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "829.73",
            "p50": "798.57",
            "p95": "733.75",
            "p99": "582.34",
            "min": "576.04",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "841.83",
            "p50": "813.90",
            "p95": "648.98",
            "p99": "574.98",
            "min": "569.96",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.65",
            "p50": "86.05",
            "p95": "83.14",
            "p99": "82.02",
            "min": "81.72",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "766.67",
            "p50": "740.55",
            "p95": "659.27",
            "p99": "441.97",
            "min": "428.09",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "727.03",
            "p50": "701.55",
            "p95": "600.61",
            "p99": "481.29",
            "min": "476.76",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "725.39",
            "p50": "701.68",
            "p95": "630.47",
            "p99": "508.22",
            "min": "502.81",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "735.06",
            "p50": "711.39",
            "p95": "614.38",
            "p99": "570.32",
            "min": "563.00",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2030.80",
            "p50": "1961.19",
            "p95": "1211.71",
            "p99": "886.72",
            "min": "848.78",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2342.50",
            "p50": "2265.98",
            "p95": "1672.99",
            "p99": "1216.06",
            "min": "1056.53",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.45",
            "p50": "71.97",
            "p95": "70.29",
            "p99": "68.64",
            "min": "68.29",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9992.42",
            "p50": "7703.17",
            "p95": "2432.02",
            "p99": "2023.65",
            "min": "1730.70",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.49",
            "p50": "72.01",
            "p95": "70.75",
            "p99": "69.48",
            "min": "69.42",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "223.85",
            "p50": "221.77",
            "p95": "217.43",
            "p99": "209.40",
            "min": "207.41",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "867.50",
            "p50": "834.95",
            "p95": "670.58",
            "p99": "518.17",
            "min": "510.59",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.82",
            "p50": "662.79",
            "p95": "591.23",
            "p99": "466.45",
            "min": "443.22",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2345.97",
            "p50": "2224.03",
            "p95": "1385.85",
            "p99": "776.34",
            "min": "695.46",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "29035.70",
            "p50": "9545.40",
            "p95": "2678.34",
            "p99": "1916.09",
            "min": "1465.96",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2180.51",
            "p50": "2100.00",
            "p95": "1218.95",
            "p99": "656.23",
            "min": "641.15",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "85119.04",
            "p50": "9979.71",
            "p95": "2566.79",
            "p99": "1751.26",
            "min": "1559.16",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "17957.62",
            "p50": "8943.04",
            "p95": "2668.19",
            "p99": "2107.74",
            "min": "2055.27",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "861.71",
            "p50": "732.44",
            "p95": "617.07",
            "p99": "542.28",
            "min": "531.43",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "991.99",
            "p50": "973.43",
            "p95": "863.88",
            "p99": "561.04",
            "min": "530.75",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "843.48",
            "p50": "822.21",
            "p95": "729.77",
            "p99": "589.66",
            "min": "577.16",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1199.67",
            "p50": "1174.63",
            "p95": "927.53",
            "p99": "808.56",
            "min": "801.09",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "744.86",
            "p50": "734.21",
            "p95": "630.79",
            "p99": "484.56",
            "min": "467.55",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1155.71",
            "p50": "1129.08",
            "p95": "956.11",
            "p99": "799.42",
            "min": "757.37",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "877.43",
            "p50": "837.08",
            "p95": "747.51",
            "p99": "631.60",
            "min": "625.21",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "930.60",
            "p50": "911.96",
            "p95": "833.09",
            "p99": "629.54",
            "min": "622.52",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2583.55",
            "p50": "2396.89",
            "p95": "2037.75",
            "p99": "1260.86",
            "min": "1250.39",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "875.14",
            "p50": "834.95",
            "p95": "713.71",
            "p99": "555.80",
            "min": "553.15",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "123.68",
            "p50": "119.76",
            "p95": "105.98",
            "p99": "101.33",
            "min": "100.94",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "124.56",
            "p50": "120.88",
            "p95": "109.56",
            "p99": "101.71",
            "min": "101.28",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "124.40",
            "p50": "119.91",
            "p95": "106.91",
            "p99": "98.38",
            "min": "98.11",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "214.49",
            "p50": "203.10",
            "p95": "173.05",
            "p99": "105.22",
            "min": "97.75",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "105.29",
            "p50": "101.88",
            "p95": "91.25",
            "p99": "84.59",
            "min": "84.26",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "111.23",
            "p50": "107.55",
            "p95": "95.80",
            "p99": "83.76",
            "min": "80.95",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "142.13",
            "p50": "136.93",
            "p95": "122.00",
            "p99": "94.79",
            "min": "91.64",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "143.98",
            "p50": "137.45",
            "p95": "121.88",
            "p99": "84.98",
            "min": "78.00",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "187.69",
            "p50": "174.72",
            "p95": "147.71",
            "p99": "135.56",
            "min": "134.81",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "186.09",
            "p50": "177.47",
            "p95": "152.11",
            "p99": "135.32",
            "min": "135.10",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "186.17",
            "p50": "177.74",
            "p95": "154.08",
            "p99": "138.40",
            "min": "137.74",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.66",
            "p50": "123.80",
            "p95": "111.52",
            "p99": "101.62",
            "min": "101.26",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "204.98",
            "p50": "193.03",
            "p95": "162.43",
            "p99": "139.94",
            "min": "133.13",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "191.31",
            "p50": "180.19",
            "p95": "145.95",
            "p99": "135.82",
            "min": "134.93",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "71.74",
            "p50": "68.52",
            "p95": "63.30",
            "p99": "58.53",
            "min": "57.80",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "134.26",
            "p50": "127.71",
            "p95": "109.20",
            "p99": "114.66",
            "min": "104.10",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "223.02",
            "p50": "203.52",
            "p95": "157.54",
            "p99": "162.94",
            "min": "148.84",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "179.53",
            "p50": "145.40",
            "p95": "136.05",
            "p99": "153.57",
            "min": "133.99",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "130.37",
            "p50": "124.26",
            "p95": "112.05",
            "p99": "118.21",
            "min": "109.04",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1054.00",
            "p50": "848.81",
            "p95": "481.87",
            "p99": "331.10",
            "min": "329.38",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1028.98",
            "p50": "871.17",
            "p95": "465.20",
            "p99": "355.51",
            "min": "353.50",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1176.66",
            "p50": "930.12",
            "p95": "513.11",
            "p99": "347.53",
            "min": "331.91",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1105.55",
            "p50": "892.22",
            "p95": "503.27",
            "p99": "355.90",
            "min": "348.31",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1058.96",
            "p50": "884.88",
            "p95": "475.02",
            "p99": "380.66",
            "min": "374.43",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1035.91",
            "p50": "854.32",
            "p95": "547.38",
            "p99": "404.05",
            "min": "395.53",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "355.98",
            "p50": "319.37",
            "p95": "266.57",
            "p99": "213.35",
            "min": "208.93",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "350.93",
            "p50": "311.92",
            "p95": "244.71",
            "p99": "219.45",
            "min": "218.24",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "349.01",
            "p50": "315.64",
            "p95": "239.99",
            "p99": "198.55",
            "min": "192.70",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "383.31",
            "p50": "344.39",
            "p95": "272.99",
            "p99": "224.96",
            "min": "220.72",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "290.94",
            "p50": "266.91",
            "p95": "210.05",
            "p99": "179.32",
            "min": "175.67",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "303.55",
            "p50": "272.53",
            "p95": "221.96",
            "p99": "186.29",
            "min": "183.02",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "298.81",
            "p50": "268.54",
            "p95": "221.43",
            "p99": "191.21",
            "min": "191.13",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "305.29",
            "p50": "270.37",
            "p95": "222.59",
            "p99": "176.29",
            "min": "174.72",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "303.37",
            "p50": "274.91",
            "p95": "218.04",
            "p99": "195.27",
            "min": "195.18",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.64",
            "p50": "102.68",
            "p95": "92.99",
            "p99": "85.04",
            "min": "84.46",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.62",
            "p50": "102.34",
            "p95": "92.21",
            "p99": "88.12",
            "min": "87.25",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.09",
            "p50": "95.37",
            "p95": "85.97",
            "p99": "82.18",
            "min": "81.61",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "250.66",
            "p50": "234.50",
            "p95": "191.70",
            "p99": "167.01",
            "min": "166.61",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.26",
            "p50": "95.02",
            "p95": "86.52",
            "p99": "80.29",
            "min": "79.68",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "243.29",
            "p50": "229.17",
            "p95": "186.67",
            "p99": "164.20",
            "min": "157.47",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "187.51",
            "p50": "176.08",
            "p95": "149.90",
            "p99": "140.65",
            "min": "139.82",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "155.10",
            "p50": "147.36",
            "p95": "128.18",
            "p99": "116.07",
            "min": "115.06",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "435.67",
            "p50": "390.20",
            "p95": "262.93",
            "p99": "222.67",
            "min": "220.80",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5463.23",
            "p50": "2541.48",
            "p95": "828.10",
            "p99": "525.19",
            "min": "509.80",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "434.62",
            "p50": "389.38",
            "p95": "275.23",
            "p99": "250.10",
            "min": "246.96",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "15461.75",
            "p50": "3495.33",
            "p95": "1443.87",
            "p99": "867.68",
            "min": "694.51",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3445.09",
            "p50": "1872.44",
            "p95": "633.83",
            "p99": "505.56",
            "min": "498.90",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "208.03",
            "p50": "193.31",
            "p95": "165.02",
            "p99": "146.55",
            "min": "144.31",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "237.62",
            "p50": "221.51",
            "p95": "183.03",
            "p99": "154.89",
            "min": "151.40",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "127.73",
            "p50": "124.17",
            "p95": "110.79",
            "p99": "104.70",
            "min": "104.46",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "213.12",
            "p50": "198.77",
            "p95": "163.83",
            "p99": "134.53",
            "min": "133.61",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "143.38",
            "p50": "137.77",
            "p95": "119.17",
            "p99": "109.86",
            "min": "109.13",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "178.49",
            "p50": "168.92",
            "p95": "140.57",
            "p99": "81.65",
            "min": "80.84",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "185.92",
            "p50": "176.44",
            "p95": "144.60",
            "p99": "133.96",
            "min": "133.88",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "185.51",
            "p50": "176.58",
            "p95": "150.99",
            "p99": "118.80",
            "min": "108.35",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "303.13",
            "p50": "263.47",
            "p95": "137.87",
            "p99": "117.91",
            "min": "117.55",
            "n": "104",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "144.89",
            "p50": "139.32",
            "p95": "83.99",
            "p99": "69.39",
            "min": "64.41",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "87.87",
            "p50": "84.31",
            "p95": "74.44",
            "p99": "73.13",
            "min": "72.98",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "89.34",
            "p50": "85.49",
            "p95": "82.56",
            "p99": "81.10",
            "min": "80.85",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "88.43",
            "p50": "85.01",
            "p95": "80.41",
            "p99": "78.89",
            "min": "78.79",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "183.87",
            "p50": "181.75",
            "p95": "177.16",
            "p99": "171.47",
            "min": "168.90",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "94.73",
            "p50": "89.91",
            "p95": "85.94",
            "p99": "84.85",
            "min": "84.73",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.57",
            "p50": "108.84",
            "p95": "104.59",
            "p99": "99.80",
            "min": "98.66",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "121.95",
            "p50": "120.06",
            "p95": "107.94",
            "p99": "96.86",
            "min": "94.72",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "124.20",
            "p50": "122.28",
            "p95": "117.53",
            "p99": "114.80",
            "min": "114.54",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "98.06",
            "p50": "96.28",
            "p95": "93.49",
            "p99": "89.78",
            "min": "89.56",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "96.81",
            "p50": "95.45",
            "p95": "92.36",
            "p99": "89.88",
            "min": "89.58",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "97.30",
            "p50": "95.76",
            "p95": "93.87",
            "p99": "90.17",
            "min": "89.76",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "125.48",
            "p50": "123.10",
            "p95": "120.21",
            "p99": "118.83",
            "min": "118.81",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "122.99",
            "p50": "112.90",
            "p95": "107.16",
            "p99": "104.94",
            "min": "104.85",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "116.87",
            "p50": "115.26",
            "p95": "112.13",
            "p99": "104.94",
            "min": "103.46",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "86.01",
            "p50": "81.38",
            "p95": "76.68",
            "p99": "68.27",
            "min": "68.16",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "95.93",
            "p50": "94.18",
            "p95": "88.65",
            "p99": "90.65",
            "min": "87.81",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "71.70",
            "p50": "67.60",
            "p95": "64.84",
            "p99": "64.80",
            "min": "63.18",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "149.98",
            "p50": "119.30",
            "p95": "111.97",
            "p99": "126.91",
            "min": "109.52",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "103.93",
            "p50": "101.14",
            "p95": "97.91",
            "p99": "99.76",
            "min": "96.61",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "413.90",
            "p50": "398.43",
            "p95": "381.11",
            "p99": "348.82",
            "min": "328.74",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "486.08",
            "p50": "478.20",
            "p95": "460.25",
            "p99": "414.08",
            "min": "397.10",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "436.13",
            "p50": "414.32",
            "p95": "399.01",
            "p99": "366.10",
            "min": "341.93",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "439.72",
            "p50": "418.30",
            "p95": "389.55",
            "p99": "332.94",
            "min": "316.77",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "442.91",
            "p50": "421.55",
            "p95": "399.52",
            "p99": "346.28",
            "min": "339.65",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "468.08",
            "p50": "457.50",
            "p95": "440.04",
            "p99": "357.21",
            "min": "340.00",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "119.35",
            "p50": "110.53",
            "p95": "104.98",
            "p99": "102.14",
            "min": "101.54",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "120.07",
            "p50": "111.69",
            "p95": "105.89",
            "p99": "100.44",
            "min": "99.35",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "118.67",
            "p50": "109.75",
            "p95": "103.21",
            "p99": "101.21",
            "min": "101.12",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "102.78",
            "p50": "96.91",
            "p95": "93.29",
            "p99": "91.79",
            "min": "91.72",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.98",
            "p50": "86.06",
            "p95": "85.12",
            "p99": "84.06",
            "min": "83.81",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "116.70",
            "p50": "106.82",
            "p95": "100.12",
            "p99": "95.76",
            "min": "95.07",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "111.26",
            "p50": "102.12",
            "p95": "96.61",
            "p99": "93.78",
            "min": "93.33",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "111.21",
            "p50": "101.47",
            "p95": "96.24",
            "p99": "95.27",
            "min": "95.25",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "111.10",
            "p50": "101.81",
            "p95": "95.73",
            "p99": "92.58",
            "min": "92.44",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1408.61",
            "p50": "1266.31",
            "p95": "872.76",
            "p99": "511.46",
            "min": "493.22",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1390.18",
            "p50": "1268.30",
            "p95": "672.85",
            "p99": "527.19",
            "min": "509.51",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "154.97",
            "p50": "152.27",
            "p95": "139.02",
            "p99": "111.12",
            "min": "109.04",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3859.88",
            "p50": "3376.43",
            "p95": "1194.81",
            "p99": "600.15",
            "min": "469.12",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "154.67",
            "p50": "151.87",
            "p95": "137.45",
            "p99": "102.58",
            "min": "94.40",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3888.50",
            "p50": "3345.44",
            "p95": "1436.09",
            "p99": "1082.95",
            "min": "1027.28",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "97.92",
            "p50": "95.95",
            "p95": "90.46",
            "p99": "86.42",
            "min": "85.52",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "189.75",
            "p50": "184.61",
            "p95": "180.54",
            "p99": "174.47",
            "min": "173.59",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "390.92",
            "p50": "291.26",
            "p95": "227.36",
            "p99": "199.84",
            "min": "192.03",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9247.57",
            "p50": "1796.47",
            "p95": "972.77",
            "p99": "445.49",
            "min": "408.40",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "367.16",
            "p50": "283.89",
            "p95": "227.48",
            "p99": "187.16",
            "min": "173.24",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "26574.87",
            "p50": "9057.51",
            "p95": "2655.54",
            "p99": "2087.70",
            "min": "1988.12",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6138.02",
            "p50": "3236.81",
            "p95": "1589.31",
            "p99": "875.30",
            "min": "862.00",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "306.75",
            "p50": "247.91",
            "p95": "185.75",
            "p99": "133.48",
            "min": "113.20",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "152.77",
            "p50": "131.50",
            "p95": "116.52",
            "p99": "105.10",
            "min": "104.25",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "123.92",
            "p50": "119.36",
            "p95": "95.62",
            "p99": "88.99",
            "min": "88.06",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "130.73",
            "p50": "120.72",
            "p95": "117.17",
            "p99": "105.44",
            "min": "103.02",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "127.91",
            "p50": "120.69",
            "p95": "116.37",
            "p99": "109.76",
            "min": "109.24",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "164.35",
            "p50": "148.73",
            "p95": "145.38",
            "p99": "134.36",
            "min": "127.06",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "94.22",
            "p50": "92.95",
            "p95": "88.86",
            "p99": "85.76",
            "min": "85.55",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "120.21",
            "p50": "115.31",
            "p95": "111.63",
            "p99": "109.00",
            "min": "108.44",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1075.40",
            "p50": "995.52",
            "p95": "686.21",
            "p99": "656.20",
            "min": "651.88",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "126.45",
            "p50": "121.89",
            "p95": "104.67",
            "p99": "97.68",
            "min": "97.18",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}