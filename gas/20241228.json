{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "112.83",
            "p50": "109.39",
            "p95": "102.38",
            "p99": "99.62",
            "min": "99.51",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "996.72",
            "p50": "972.13",
            "p95": "840.68",
            "p99": "825.23",
            "min": "824.05",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "112.47",
            "p50": "110.06",
            "p95": "105.01",
            "p99": "103.98",
            "min": "103.90",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "731.02",
            "p50": "719.86",
            "p95": "500.48",
            "p99": "481.04",
            "min": "478.11",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "370.64",
            "p50": "365.68",
            "p95": "290.16",
            "p99": "281.68",
            "min": "280.03",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "399.31",
            "p50": "392.13",
            "p95": "302.13",
            "p99": "288.69",
            "min": "285.34",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "313.19",
            "p50": "307.25",
            "p95": "189.12",
            "p99": "161.66",
            "min": "154.50",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "188.44",
            "p50": "181.15",
            "p95": "177.98",
            "p99": "173.92",
            "min": "173.81",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "247.25",
            "p50": "240.49",
            "p95": "227.57",
            "p99": "219.79",
            "min": "219.49",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "250.75",
            "p50": "241.69",
            "p95": "232.77",
            "p99": "227.29",
            "min": "227.27",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "257.04",
            "p50": "252.42",
            "p95": "218.99",
            "p99": "216.30",
            "min": "216.10",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "203.00",
            "p50": "197.86",
            "p95": "194.99",
            "p99": "190.93",
            "min": "190.92",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "316.53",
            "p50": "311.35",
            "p95": "274.15",
            "p99": "271.99",
            "min": "271.84",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "295.97",
            "p50": "291.30",
            "p95": "256.48",
            "p99": "252.28",
            "min": "251.96",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "7171.61",
            "p50": "6007.68",
            "p95": "2367.35",
            "p99": "2253.10",
            "min": "2246.68",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2563.17",
            "p50": "2202.70",
            "p95": "1895.97",
            "p99": "2114.49",
            "min": "1872.89",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "283.74",
            "p50": "251.95",
            "p95": "237.90",
            "p99": "232.31",
            "min": "220.25",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1436.98",
            "p50": "949.09",
            "p95": "459.71",
            "p99": "819.25",
            "min": "353.23",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7966.75",
            "p50": "4832.46",
            "p95": "2340.07",
            "p99": "4702.73",
            "min": "2240.39",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "804.95",
            "p50": "780.55",
            "p95": "532.09",
            "p99": "520.63",
            "min": "517.78",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "819.84",
            "p50": "797.00",
            "p95": "750.60",
            "p99": "483.33",
            "min": "214.56",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "912.55",
            "p50": "876.74",
            "p95": "715.72",
            "p99": "639.03",
            "min": "637.90",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2211.58",
            "p50": "2030.67",
            "p95": "1746.32",
            "p99": "1652.54",
            "min": "1589.90",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2218.83",
            "p50": "2036.62",
            "p95": "1778.88",
            "p99": "1710.38",
            "min": "1709.17",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "804.07",
            "p50": "790.12",
            "p95": "732.69",
            "p99": "716.62",
            "min": "713.79",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "163.75",
            "p50": "156.60",
            "p95": "134.83",
            "p99": "110.03",
            "min": "104.03",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "508.43",
            "p50": "473.91",
            "p95": "396.86",
            "p99": "390.12",
            "min": "389.37",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "164.35",
            "p50": "150.19",
            "p95": "143.06",
            "p99": "137.59",
            "min": "136.66",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "183.17",
            "p50": "177.61",
            "p95": "153.37",
            "p99": "149.83",
            "min": "149.60",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "35254.67",
            "p50": "8527.57",
            "p95": "2475.38",
            "p99": "1298.93",
            "min": "1171.14",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "378.37",
            "p50": "313.51",
            "p95": "298.72",
            "p99": "293.61",
            "min": "293.55",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "362.37",
            "p50": "298.19",
            "p95": "285.32",
            "p99": "282.01",
            "min": "281.86",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "362.16",
            "p50": "301.86",
            "p95": "285.35",
            "p99": "269.48",
            "min": "268.08",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "358.40",
            "p50": "297.16",
            "p95": "285.03",
            "p99": "282.92",
            "min": "282.69",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "14249.60",
            "p50": "6862.45",
            "p95": "2477.37",
            "p99": "1900.99",
            "min": "1814.57",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "13991.07",
            "p50": "8127.96",
            "p95": "2518.39",
            "p99": "2312.37",
            "min": "2263.20",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "13544.94",
            "p50": "6707.47",
            "p95": "2487.22",
            "p99": "1793.62",
            "min": "1541.01",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "13877.57",
            "p50": "7072.06",
            "p95": "2468.38",
            "p99": "2292.02",
            "min": "2287.60",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "12997.77",
            "p50": "6278.04",
            "p95": "2386.85",
            "p99": "2119.37",
            "min": "2092.90",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "13664.53",
            "p50": "7443.77",
            "p95": "2629.20",
            "p99": "2255.85",
            "min": "2250.26",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "252.93",
            "p50": "239.20",
            "p95": "230.36",
            "p99": "185.26",
            "min": "176.01",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "523.93",
            "p50": "516.71",
            "p95": "499.24",
            "p99": "128.66",
            "min": "73.83",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1639.19",
            "p50": "1548.60",
            "p95": "376.66",
            "p99": "360.21",
            "min": "351.41",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "22244.80",
            "p50": "5965.22",
            "p95": "193.94",
            "p99": "171.57",
            "min": "170.95",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1428.43",
            "p50": "1377.37",
            "p95": "275.89",
            "p99": "172.00",
            "min": "118.74",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "53698.61",
            "p50": "9317.45",
            "p95": "2540.89",
            "p99": "2305.10",
            "min": "2287.41",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15098.41",
            "p50": "7564.12",
            "p95": "187.78",
            "p99": "61.39",
            "min": "56.91",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "574.58",
            "p50": "535.75",
            "p95": "459.96",
            "p99": "405.29",
            "min": "402.04",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "515.56",
            "p50": "505.09",
            "p95": "495.20",
            "p99": "484.99",
            "min": "484.73",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "202.28",
            "p50": "198.39",
            "p95": "195.12",
            "p99": "186.30",
            "min": "185.33",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "380.74",
            "p50": "374.80",
            "p95": "367.01",
            "p99": "360.04",
            "min": "359.78",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "203.18",
            "p50": "198.49",
            "p95": "195.12",
            "p99": "189.62",
            "min": "189.43",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "341.62",
            "p50": "335.43",
            "p95": "325.01",
            "p99": "312.85",
            "min": "310.64",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "259.67",
            "p50": "253.27",
            "p95": "249.37",
            "p99": "237.71",
            "min": "234.92",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "519.32",
            "p50": "507.84",
            "p95": "496.96",
            "p99": "474.53",
            "min": "466.84",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1453.66",
            "p50": "1303.86",
            "p95": "953.76",
            "p99": "816.35",
            "min": "797.88",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "310.08",
            "p50": "303.79",
            "p95": "285.55",
            "p99": "282.27",
            "min": "282.18",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "90.40",
            "p50": "88.96",
            "p95": "83.36",
            "p99": "81.03",
            "min": "80.89",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "82.32",
            "p50": "81.46",
            "p95": "77.98",
            "p99": "74.18",
            "min": "73.73",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "84.01",
            "p50": "83.16",
            "p95": "79.40",
            "p99": "77.73",
            "min": "77.65",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "250.17",
            "p50": "244.25",
            "p95": "214.29",
            "p99": "153.49",
            "min": "153.11",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "186.42",
            "p50": "182.52",
            "p95": "166.35",
            "p99": "151.25",
            "min": "148.74",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "195.38",
            "p50": "191.78",
            "p95": "170.58",
            "p99": "150.40",
            "min": "146.48",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "185.69",
            "p50": "178.87",
            "p95": "157.71",
            "p99": "139.05",
            "min": "136.57",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "183.22",
            "p50": "176.35",
            "p95": "154.20",
            "p99": "130.48",
            "min": "129.49",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "209.15",
            "p50": "201.47",
            "p95": "179.24",
            "p99": "167.11",
            "min": "166.35",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "187.08",
            "p50": "180.14",
            "p95": "163.96",
            "p99": "154.46",
            "min": "153.40",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "210.64",
            "p50": "205.66",
            "p95": "182.14",
            "p99": "178.06",
            "min": "178.03",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "154.14",
            "p50": "149.52",
            "p95": "135.12",
            "p99": "130.08",
            "min": "130.06",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "225.80",
            "p50": "222.18",
            "p95": "191.98",
            "p99": "108.86",
            "min": "93.00",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "186.71",
            "p50": "180.22",
            "p95": "158.89",
            "p99": "110.61",
            "min": "104.54",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.81",
            "p50": "66.65",
            "p95": "64.50",
            "p99": "62.12",
            "min": "61.65",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "142.67",
            "p50": "137.47",
            "p95": "125.36",
            "p99": "120.46",
            "min": "108.50",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "450.05",
            "p50": "370.74",
            "p95": "301.84",
            "p99": "275.26",
            "min": "234.26",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "195.35",
            "p50": "153.26",
            "p95": "142.21",
            "p99": "161.07",
            "min": "135.21",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.20",
            "p50": "132.64",
            "p95": "119.82",
            "p99": "122.12",
            "min": "112.26",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1234.61",
            "p50": "1174.11",
            "p95": "649.23",
            "p99": "531.14",
            "min": "514.81",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1063.80",
            "p50": "1035.31",
            "p95": "716.07",
            "p99": "520.05",
            "min": "483.68",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1480.90",
            "p50": "1403.83",
            "p95": "797.03",
            "p99": "606.43",
            "min": "573.89",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1370.53",
            "p50": "1268.05",
            "p95": "780.36",
            "p99": "638.22",
            "min": "619.60",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1338.83",
            "p50": "1261.64",
            "p95": "701.42",
            "p99": "547.78",
            "min": "528.66",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1097.68",
            "p50": "1065.35",
            "p95": "660.47",
            "p99": "510.29",
            "min": "496.17",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "741.25",
            "p50": "625.93",
            "p95": "482.08",
            "p99": "419.30",
            "min": "417.07",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "740.26",
            "p50": "664.90",
            "p95": "482.11",
            "p99": "357.94",
            "min": "337.01",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "753.87",
            "p50": "714.45",
            "p95": "479.61",
            "p99": "381.34",
            "min": "376.18",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "742.88",
            "p50": "695.19",
            "p95": "466.56",
            "p99": "363.32",
            "min": "351.13",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "296.46",
            "p50": "292.40",
            "p95": "257.45",
            "p99": "235.77",
            "min": "235.75",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "662.69",
            "p50": "550.84",
            "p95": "448.13",
            "p99": "401.10",
            "min": "400.69",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "643.13",
            "p50": "553.81",
            "p95": "420.56",
            "p99": "374.98",
            "min": "369.83",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "666.02",
            "p50": "576.53",
            "p95": "409.74",
            "p99": "292.31",
            "min": "291.14",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "678.17",
            "p50": "592.57",
            "p95": "460.53",
            "p99": "378.02",
            "min": "377.11",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "107.15",
            "p50": "105.58",
            "p95": "99.41",
            "p99": "95.06",
            "min": "94.60",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "107.05",
            "p50": "105.56",
            "p95": "99.34",
            "p99": "94.40",
            "min": "93.55",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.80",
            "p50": "98.64",
            "p95": "92.67",
            "p99": "91.40",
            "min": "91.26",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "257.18",
            "p50": "252.97",
            "p95": "217.92",
            "p99": "185.17",
            "min": "182.41",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.75",
            "p50": "98.30",
            "p95": "92.28",
            "p99": "81.19",
            "min": "78.43",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "250.07",
            "p50": "245.58",
            "p95": "209.32",
            "p99": "192.25",
            "min": "190.14",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "210.35",
            "p50": "206.72",
            "p95": "184.18",
            "p99": "172.48",
            "min": "171.41",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "243.28",
            "p50": "237.30",
            "p95": "211.20",
            "p99": "196.87",
            "min": "193.61",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "461.02",
            "p50": "449.73",
            "p95": "368.40",
            "p99": "305.56",
            "min": "303.13",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7886.28",
            "p50": "4530.67",
            "p95": "2171.67",
            "p99": "1813.85",
            "min": "1628.44",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "440.39",
            "p50": "426.91",
            "p95": "339.84",
            "p99": "296.12",
            "min": "293.31",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "17844.84",
            "p50": "7523.68",
            "p95": "2486.06",
            "p99": "2201.96",
            "min": "2177.29",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4410.34",
            "p50": "3506.54",
            "p95": "1784.96",
            "p99": "1285.27",
            "min": "1221.84",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "206.53",
            "p50": "187.59",
            "p95": "171.04",
            "p99": "147.58",
            "min": "146.65",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "266.68",
            "p50": "261.81",
            "p95": "225.08",
            "p99": "180.98",
            "min": "167.26",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "95.37",
            "p50": "94.12",
            "p95": "89.31",
            "p99": "85.06",
            "min": "85.03",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "247.35",
            "p50": "242.42",
            "p95": "210.99",
            "p99": "126.91",
            "min": "89.12",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "183.14",
            "p50": "177.24",
            "p95": "161.12",
            "p99": "132.97",
            "min": "128.94",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "223.65",
            "p50": "217.69",
            "p95": "196.36",
            "p99": "183.90",
            "min": "182.63",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "211.26",
            "p50": "207.84",
            "p95": "184.81",
            "p99": "171.18",
            "min": "169.32",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "208.67",
            "p50": "204.09",
            "p95": "182.17",
            "p99": "157.78",
            "min": "152.93",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1243.42",
            "p50": "1101.69",
            "p95": "811.09",
            "p99": "595.37",
            "min": "575.65",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "183.02",
            "p50": "178.26",
            "p95": "158.72",
            "p99": "153.94",
            "min": "152.99",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.29",
            "p50": "192.24",
            "p95": "180.10",
            "p99": "165.24",
            "min": "165.22",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "193.98",
            "p50": "192.56",
            "p95": "186.75",
            "p99": "173.79",
            "min": "173.29",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.60",
            "p50": "193.33",
            "p95": "182.25",
            "p99": "170.61",
            "min": "168.78",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1191.32",
            "p50": "1167.85",
            "p95": "1038.72",
            "p99": "913.15",
            "min": "901.05",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "701.72",
            "p50": "692.07",
            "p95": "630.44",
            "p99": "504.51",
            "min": "501.29",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "809.26",
            "p50": "799.49",
            "p95": "704.14",
            "p99": "632.64",
            "min": "632.53",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "740.24",
            "p50": "726.48",
            "p95": "687.36",
            "p99": "612.57",
            "min": "609.88",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "752.76",
            "p50": "740.52",
            "p95": "679.90",
            "p99": "552.80",
            "min": "546.80",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "923.24",
            "p50": "903.53",
            "p95": "730.03",
            "p99": "526.67",
            "min": "522.34",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "891.44",
            "p50": "875.47",
            "p95": "797.83",
            "p99": "368.09",
            "min": "283.52",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "889.59",
            "p50": "872.53",
            "p95": "691.25",
            "p99": "510.88",
            "min": "492.91",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "842.75",
            "p50": "830.01",
            "p95": "756.29",
            "p99": "674.91",
            "min": "670.81",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "887.87",
            "p50": "869.68",
            "p95": "644.28",
            "p99": "279.86",
            "min": "197.74",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "885.57",
            "p50": "870.31",
            "p95": "757.92",
            "p99": "552.13",
            "min": "530.39",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "109.58",
            "p50": "105.58",
            "p95": "103.17",
            "p99": "99.37",
            "min": "99.28",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "95.88",
            "p50": "95.20",
            "p95": "92.47",
            "p99": "91.17",
            "min": "88.63",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "604.67",
            "p50": "583.39",
            "p95": "493.09",
            "p99": "467.38",
            "min": "435.18",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "129.56",
            "p50": "103.71",
            "p95": "97.38",
            "p99": "111.13",
            "min": "97.23",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "89.74",
            "p50": "88.04",
            "p95": "85.17",
            "p99": "86.38",
            "min": "83.85",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1939.08",
            "p50": "1883.95",
            "p95": "1259.60",
            "p99": "878.38",
            "min": "848.41",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1642.40",
            "p50": "1602.14",
            "p95": "1135.56",
            "p99": "854.62",
            "min": "836.85",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2484.76",
            "p50": "2401.78",
            "p95": "1667.46",
            "p99": "1148.15",
            "min": "991.51",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2482.73",
            "p50": "2401.45",
            "p95": "1459.53",
            "p99": "903.12",
            "min": "885.56",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2450.05",
            "p50": "2380.68",
            "p95": "1298.35",
            "p99": "755.50",
            "min": "681.15",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1707.99",
            "p50": "1665.68",
            "p95": "1326.82",
            "p99": "798.44",
            "min": "706.50",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "881.16",
            "p50": "845.79",
            "p95": "694.77",
            "p99": "629.38",
            "min": "626.66",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "872.52",
            "p50": "840.69",
            "p95": "690.08",
            "p99": "577.85",
            "min": "567.27",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "887.02",
            "p50": "850.45",
            "p95": "721.92",
            "p99": "600.67",
            "min": "588.03",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "878.10",
            "p50": "857.33",
            "p95": "746.15",
            "p99": "628.73",
            "min": "627.88",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.73",
            "p50": "86.24",
            "p95": "83.24",
            "p99": "82.81",
            "min": "82.73",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "812.77",
            "p50": "783.63",
            "p95": "649.85",
            "p99": "535.53",
            "min": "535.06",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "771.95",
            "p50": "736.43",
            "p95": "631.04",
            "p99": "558.03",
            "min": "556.63",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "761.70",
            "p50": "732.80",
            "p95": "627.25",
            "p99": "555.43",
            "min": "551.52",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "769.46",
            "p50": "741.58",
            "p95": "626.34",
            "p99": "487.80",
            "min": "484.21",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2034.72",
            "p50": "1968.92",
            "p95": "1374.52",
            "p99": "1067.18",
            "min": "1045.08",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2346.52",
            "p50": "2270.48",
            "p95": "1520.49",
            "p99": "994.94",
            "min": "965.88",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.46",
            "p50": "71.98",
            "p95": "71.01",
            "p99": "68.68",
            "min": "68.12",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "10112.26",
            "p50": "8143.62",
            "p95": "2496.75",
            "p99": "2078.73",
            "min": "2034.81",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.50",
            "p50": "72.03",
            "p95": "70.96",
            "p99": "69.35",
            "min": "69.24",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "223.81",
            "p50": "222.00",
            "p95": "212.50",
            "p99": "188.06",
            "min": "187.09",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "891.39",
            "p50": "872.90",
            "p95": "753.72",
            "p99": "625.60",
            "min": "610.73",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "671.84",
            "p50": "662.19",
            "p95": "633.66",
            "p99": "570.06",
            "min": "569.64",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2354.39",
            "p50": "2248.32",
            "p95": "1380.31",
            "p99": "690.43",
            "min": "690.23",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "27240.10",
            "p50": "9294.89",
            "p95": "2582.63",
            "p99": "1870.22",
            "min": "1387.09",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2180.40",
            "p50": "2083.80",
            "p95": "1311.23",
            "p99": "631.69",
            "min": "598.40",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "87058.30",
            "p50": "9487.98",
            "p95": "2590.60",
            "p99": "2130.59",
            "min": "1998.78",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15941.67",
            "p50": "8435.39",
            "p95": "2463.43",
            "p99": "1922.82",
            "min": "1594.61",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "849.65",
            "p50": "725.39",
            "p95": "617.07",
            "p99": "540.99",
            "min": "539.15",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "989.54",
            "p50": "973.45",
            "p95": "873.89",
            "p99": "610.06",
            "min": "604.11",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "839.20",
            "p50": "821.30",
            "p95": "660.85",
            "p99": "473.29",
            "min": "472.84",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1201.01",
            "p50": "1174.48",
            "p95": "941.99",
            "p99": "742.37",
            "min": "723.18",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "752.08",
            "p50": "738.83",
            "p95": "576.20",
            "p99": "479.97",
            "min": "477.11",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1154.60",
            "p50": "1131.56",
            "p95": "914.59",
            "p99": "599.69",
            "min": "598.57",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "871.33",
            "p50": "841.39",
            "p95": "607.58",
            "p99": "481.07",
            "min": "471.93",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "931.02",
            "p50": "913.98",
            "p95": "777.88",
            "p99": "681.83",
            "min": "653.80",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2461.50",
            "p50": "2273.82",
            "p95": "1507.59",
            "p99": "1244.61",
            "min": "1192.56",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "877.10",
            "p50": "862.14",
            "p95": "770.91",
            "p99": "707.57",
            "min": "694.08",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "124.29",
            "p50": "119.42",
            "p95": "104.44",
            "p99": "98.66",
            "min": "98.43",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "125.50",
            "p50": "118.59",
            "p95": "105.50",
            "p99": "100.38",
            "min": "100.21",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "124.97",
            "p50": "119.47",
            "p95": "104.05",
            "p99": "95.06",
            "min": "94.43",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "212.74",
            "p50": "196.99",
            "p95": "160.53",
            "p99": "130.33",
            "min": "118.75",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "104.59",
            "p50": "99.60",
            "p95": "89.09",
            "p99": "86.07",
            "min": "85.70",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "111.30",
            "p50": "106.04",
            "p95": "94.04",
            "p99": "87.04",
            "min": "85.06",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "142.15",
            "p50": "134.70",
            "p95": "112.63",
            "p99": "106.90",
            "min": "106.85",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "143.20",
            "p50": "135.88",
            "p95": "117.06",
            "p99": "110.12",
            "min": "109.57",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "186.34",
            "p50": "174.90",
            "p95": "147.19",
            "p99": "140.08",
            "min": "139.49",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "186.27",
            "p50": "172.51",
            "p95": "145.67",
            "p99": "128.45",
            "min": "126.00",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "185.48",
            "p50": "171.84",
            "p95": "141.46",
            "p99": "131.12",
            "min": "130.65",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.14",
            "p50": "120.93",
            "p95": "108.15",
            "p99": "76.80",
            "min": "70.53",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "205.75",
            "p50": "189.15",
            "p95": "152.30",
            "p99": "122.88",
            "min": "115.53",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "190.29",
            "p50": "175.38",
            "p95": "144.03",
            "p99": "134.47",
            "min": "134.44",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "71.62",
            "p50": "68.14",
            "p95": "62.33",
            "p99": "59.40",
            "min": "59.13",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "133.52",
            "p50": "124.22",
            "p95": "106.88",
            "p99": "109.71",
            "min": "96.89",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "220.27",
            "p50": "196.33",
            "p95": "156.17",
            "p99": "160.69",
            "min": "146.72",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "166.47",
            "p50": "141.00",
            "p95": "133.70",
            "p99": "144.51",
            "min": "127.95",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "128.21",
            "p50": "120.28",
            "p95": "107.15",
            "p99": "112.08",
            "min": "99.92",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1057.84",
            "p50": "793.71",
            "p95": "374.97",
            "p99": "297.12",
            "min": "279.25",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1032.16",
            "p50": "768.08",
            "p95": "406.45",
            "p99": "314.66",
            "min": "292.36",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1155.42",
            "p50": "811.92",
            "p95": "444.02",
            "p99": "355.30",
            "min": "351.11",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1077.53",
            "p50": "815.51",
            "p95": "413.76",
            "p99": "325.12",
            "min": "311.53",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1046.63",
            "p50": "780.58",
            "p95": "396.38",
            "p99": "314.11",
            "min": "311.80",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1039.13",
            "p50": "784.77",
            "p95": "440.66",
            "p99": "307.89",
            "min": "303.24",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "341.81",
            "p50": "302.53",
            "p95": "207.91",
            "p99": "190.36",
            "min": "189.48",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "349.22",
            "p50": "301.37",
            "p95": "244.46",
            "p99": "192.87",
            "min": "191.32",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "347.16",
            "p50": "301.15",
            "p95": "236.29",
            "p99": "202.37",
            "min": "199.88",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "388.11",
            "p50": "327.95",
            "p95": "253.46",
            "p99": "198.00",
            "min": "187.62",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "286.63",
            "p50": "260.25",
            "p95": "200.88",
            "p99": "184.79",
            "min": "182.10",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "303.19",
            "p50": "265.46",
            "p95": "202.27",
            "p99": "174.67",
            "min": "172.76",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "289.70",
            "p50": "258.94",
            "p95": "195.74",
            "p99": "189.74",
            "min": "189.74",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "295.27",
            "p50": "263.79",
            "p95": "211.81",
            "p99": "176.67",
            "min": "175.67",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "301.56",
            "p50": "265.79",
            "p95": "215.49",
            "p99": "174.13",
            "min": "172.17",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.26",
            "p50": "101.05",
            "p95": "92.37",
            "p99": "86.21",
            "min": "84.86",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.62",
            "p50": "101.00",
            "p95": "90.38",
            "p99": "84.66",
            "min": "84.40",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.45",
            "p50": "94.45",
            "p95": "86.53",
            "p99": "82.20",
            "min": "81.92",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "248.78",
            "p50": "227.84",
            "p95": "180.51",
            "p99": "162.90",
            "min": "157.43",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.55",
            "p50": "93.73",
            "p95": "84.49",
            "p99": "78.98",
            "min": "77.80",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "242.96",
            "p50": "221.39",
            "p95": "185.98",
            "p99": "164.33",
            "min": "163.81",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "186.28",
            "p50": "172.70",
            "p95": "143.45",
            "p99": "127.18",
            "min": "126.75",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "153.37",
            "p50": "144.78",
            "p95": "114.27",
            "p99": "85.26",
            "min": "82.12",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "433.40",
            "p50": "372.25",
            "p95": "254.69",
            "p99": "220.71",
            "min": "219.93",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5652.50",
            "p50": "2297.10",
            "p95": "671.91",
            "p99": "486.33",
            "min": "484.29",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "431.87",
            "p50": "371.90",
            "p95": "254.72",
            "p99": "228.52",
            "min": "226.47",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "13409.07",
            "p50": "2772.71",
            "p95": "1044.19",
            "p99": "684.95",
            "min": "678.80",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3274.68",
            "p50": "1747.15",
            "p95": "574.43",
            "p99": "485.65",
            "min": "470.83",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "208.06",
            "p50": "187.91",
            "p95": "164.29",
            "p99": "146.04",
            "min": "138.93",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "233.60",
            "p50": "216.05",
            "p95": "164.91",
            "p99": "142.10",
            "min": "139.60",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "128.55",
            "p50": "121.25",
            "p95": "104.27",
            "p99": "96.27",
            "min": "95.44",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "209.09",
            "p50": "195.25",
            "p95": "149.90",
            "p99": "136.64",
            "min": "136.53",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "143.51",
            "p50": "134.65",
            "p95": "114.17",
            "p99": "107.41",
            "min": "107.15",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "178.00",
            "p50": "164.27",
            "p95": "137.22",
            "p99": "82.41",
            "min": "80.26",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "184.73",
            "p50": "171.24",
            "p95": "144.73",
            "p99": "132.60",
            "min": "131.83",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "185.03",
            "p50": "170.99",
            "p95": "139.60",
            "p99": "128.13",
            "min": "127.91",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "311.11",
            "p50": "247.07",
            "p95": "115.34",
            "p99": "100.17",
            "min": "99.90",
            "n": "102",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "144.99",
            "p50": "137.39",
            "p95": "83.32",
            "p99": "81.08",
            "min": "80.95",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.38",
            "p50": "85.09",
            "p95": "78.08",
            "p99": "75.00",
            "min": "74.93",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "90.59",
            "p50": "86.36",
            "p95": "84.06",
            "p99": "80.89",
            "min": "80.83",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "89.08",
            "p50": "85.90",
            "p95": "80.61",
            "p99": "79.43",
            "min": "79.41",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "187.52",
            "p50": "182.67",
            "p95": "177.56",
            "p99": "173.65",
            "min": "172.80",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "91.10",
            "p50": "89.05",
            "p95": "86.43",
            "p99": "85.43",
            "min": "85.29",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.02",
            "p50": "108.21",
            "p95": "105.32",
            "p99": "99.61",
            "min": "98.96",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "123.45",
            "p50": "121.21",
            "p95": "103.80",
            "p99": "99.62",
            "min": "99.56",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "126.04",
            "p50": "123.07",
            "p95": "120.16",
            "p99": "117.08",
            "min": "117.02",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "95.16",
            "p50": "94.22",
            "p95": "82.72",
            "p99": "79.06",
            "min": "78.36",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "98.18",
            "p50": "95.97",
            "p95": "85.30",
            "p99": "84.32",
            "min": "84.18",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "97.48",
            "p50": "95.95",
            "p95": "85.50",
            "p99": "74.47",
            "min": "71.67",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "125.45",
            "p50": "121.51",
            "p95": "106.59",
            "p99": "105.02",
            "min": "104.74",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "120.01",
            "p50": "117.58",
            "p95": "110.17",
            "p99": "108.15",
            "min": "107.56",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "116.12",
            "p50": "113.29",
            "p95": "83.77",
            "p99": "82.80",
            "min": "82.64",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "86.11",
            "p50": "82.69",
            "p95": "78.05",
            "p99": "71.62",
            "min": "70.53",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "92.93",
            "p50": "91.86",
            "p95": "89.35",
            "p99": "89.71",
            "min": "87.97",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "58.90",
            "p50": "57.70",
            "p95": "55.38",
            "p99": "50.35",
            "min": "48.35",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "150.37",
            "p50": "120.05",
            "p95": "112.64",
            "p99": "127.41",
            "min": "110.09",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "103.50",
            "p50": "101.79",
            "p95": "100.52",
            "p99": "100.49",
            "min": "98.22",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "373.14",
            "p50": "363.42",
            "p95": "354.51",
            "p99": "345.79",
            "min": "342.10",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "488.72",
            "p50": "480.95",
            "p95": "468.54",
            "p99": "438.80",
            "min": "430.31",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "372.39",
            "p50": "358.63",
            "p95": "347.50",
            "p99": "324.70",
            "min": "310.79",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "374.87",
            "p50": "362.01",
            "p95": "345.96",
            "p99": "322.02",
            "min": "318.29",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "377.30",
            "p50": "363.91",
            "p95": "352.01",
            "p99": "282.84",
            "min": "280.63",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "453.71",
            "p50": "446.13",
            "p95": "435.36",
            "p99": "412.82",
            "min": "399.19",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "96.39",
            "p50": "93.93",
            "p95": "90.94",
            "p99": "87.90",
            "min": "87.72",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "96.95",
            "p50": "94.63",
            "p95": "91.50",
            "p99": "88.12",
            "min": "88.08",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "95.67",
            "p50": "93.42",
            "p95": "90.13",
            "p99": "89.41",
            "min": "89.41",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "87.62",
            "p50": "85.75",
            "p95": "83.51",
            "p99": "82.27",
            "min": "82.24",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.98",
            "p50": "86.51",
            "p95": "85.59",
            "p99": "83.44",
            "min": "82.77",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "89.44",
            "p50": "87.00",
            "p95": "83.43",
            "p99": "81.04",
            "min": "81.04",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "84.91",
            "p50": "82.92",
            "p95": "79.88",
            "p99": "78.34",
            "min": "78.30",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "84.61",
            "p50": "82.71",
            "p95": "79.48",
            "p99": "78.34",
            "min": "78.23",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "84.47",
            "p50": "82.81",
            "p95": "79.40",
            "p99": "78.08",
            "min": "77.78",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1426.68",
            "p50": "1286.43",
            "p95": "849.92",
            "p99": "567.35",
            "min": "542.92",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1442.72",
            "p50": "1309.60",
            "p95": "861.78",
            "p99": "663.55",
            "min": "589.44",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "156.44",
            "p50": "153.11",
            "p95": "142.92",
            "p99": "134.44",
            "min": "134.25",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3017.75",
            "p50": "2793.82",
            "p95": "1749.10",
            "p99": "1214.19",
            "min": "1163.30",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "155.79",
            "p50": "152.76",
            "p95": "141.37",
            "p99": "129.65",
            "min": "129.38",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "2987.11",
            "p50": "2773.91",
            "p95": "1143.68",
            "p99": "757.95",
            "min": "557.36",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.71",
            "p50": "96.32",
            "p95": "86.42",
            "p99": "78.03",
            "min": "77.46",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "187.43",
            "p50": "173.21",
            "p95": "169.44",
            "p99": "160.53",
            "min": "154.69",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "391.64",
            "p50": "323.63",
            "p95": "250.84",
            "p99": "203.68",
            "min": "199.01",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9091.37",
            "p50": "1620.72",
            "p95": "970.95",
            "p99": "825.23",
            "min": "800.57",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "419.38",
            "p50": "343.85",
            "p95": "273.06",
            "p99": "244.20",
            "min": "238.81",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "27974.07",
            "p50": "8907.90",
            "p95": "2499.19",
            "p99": "2303.19",
            "min": "2276.79",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6187.83",
            "p50": "3290.31",
            "p95": "1859.99",
            "p99": "1023.27",
            "min": "800.05",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "345.68",
            "p50": "292.59",
            "p95": "230.44",
            "p99": "166.64",
            "min": "165.34",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "154.07",
            "p50": "140.57",
            "p95": "126.02",
            "p99": "112.96",
            "min": "111.68",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "121.75",
            "p50": "105.40",
            "p95": "81.94",
            "p99": "79.03",
            "min": "78.95",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "135.64",
            "p50": "120.21",
            "p95": "115.00",
            "p99": "110.00",
            "min": "108.98",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "124.81",
            "p50": "116.92",
            "p95": "106.38",
            "p99": "102.50",
            "min": "101.93",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "172.44",
            "p50": "147.73",
            "p95": "143.21",
            "p99": "130.28",
            "min": "125.85",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "93.68",
            "p50": "92.18",
            "p95": "82.97",
            "p99": "79.31",
            "min": "78.94",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "116.72",
            "p50": "107.03",
            "p95": "104.52",
            "p99": "102.47",
            "min": "101.61",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1130.21",
            "p50": "1023.36",
            "p95": "352.70",
            "p99": "345.26",
            "min": "344.95",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "123.91",
            "p50": "116.72",
            "p95": "105.26",
            "p99": "100.37",
            "min": "100.29",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}