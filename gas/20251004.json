{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "114.39",
            "p50": "109.97",
            "p95": "95.72",
            "p99": "83.30",
            "min": "82.66",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1069.42",
            "p50": "940.88",
            "p95": "603.54",
            "p99": "572.49",
            "min": "571.14",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "115.43",
            "p50": "110.50",
            "p95": "99.95",
            "p99": "97.69",
            "min": "97.67",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "976.13",
            "p50": "942.00",
            "p95": "633.45",
            "p99": "505.40",
            "min": "498.66",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "456.55",
            "p50": "425.00",
            "p95": "340.09",
            "p99": "303.19",
            "min": "298.63",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "441.77",
            "p50": "414.84",
            "p95": "336.88",
            "p99": "309.92",
            "min": "309.12",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "678.87",
            "p50": "622.76",
            "p95": "284.44",
            "p99": "267.39",
            "min": "267.16",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "626.01",
            "p50": "570.96",
            "p95": "456.68",
            "p99": "389.29",
            "min": "384.99",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "386.58",
            "p50": "362.24",
            "p95": "298.92",
            "p99": "274.39",
            "min": "270.26",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "693.29",
            "p50": "630.25",
            "p95": "454.79",
            "p99": "425.64",
            "min": "424.21",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "661.20",
            "p50": "620.24",
            "p95": "437.98",
            "p99": "388.48",
            "min": "387.53",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "618.01",
            "p50": "580.21",
            "p95": "443.26",
            "p99": "362.85",
            "min": "353.07",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "399.35",
            "p50": "385.48",
            "p95": "331.29",
            "p99": "287.31",
            "min": "280.92",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "396.90",
            "p50": "375.06",
            "p95": "302.84",
            "p99": "275.10",
            "min": "272.25",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8283.38",
            "p50": "4499.61",
            "p95": "1727.20",
            "p99": "1300.84",
            "min": "1274.88",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2752.55",
            "p50": "2073.28",
            "p95": "892.15",
            "p99": "1473.80",
            "min": "785.24",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "314.74",
            "p50": "281.18",
            "p95": "231.35",
            "p99": "239.51",
            "min": "221.86",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1435.95",
            "p50": "796.27",
            "p95": "331.39",
            "p99": "796.51",
            "min": "314.14",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7437.64",
            "p50": "3345.65",
            "p95": "1370.30",
            "p99": "3960.15",
            "min": "1336.78",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "807.10",
            "p50": "707.13",
            "p95": "513.28",
            "p99": "449.45",
            "min": "447.53",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "814.61",
            "p50": "761.39",
            "p95": "532.43",
            "p99": "426.62",
            "min": "416.96",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "929.37",
            "p50": "808.99",
            "p95": "539.81",
            "p99": "461.14",
            "min": "460.22",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2299.00",
            "p50": "1977.08",
            "p95": "1051.27",
            "p99": "787.06",
            "min": "675.73",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2289.62",
            "p50": "2079.73",
            "p95": "972.49",
            "p99": "737.13",
            "min": "728.81",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "803.90",
            "p50": "754.96",
            "p95": "533.12",
            "p99": "493.13",
            "min": "491.55",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "165.36",
            "p50": "152.88",
            "p95": "140.61",
            "p99": "130.65",
            "min": "130.44",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "532.89",
            "p50": "476.50",
            "p95": "378.79",
            "p99": "318.35",
            "min": "317.85",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "164.90",
            "p50": "152.93",
            "p95": "139.68",
            "p99": "135.50",
            "min": "135.34",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "184.93",
            "p50": "169.48",
            "p95": "152.64",
            "p99": "143.07",
            "min": "141.20",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "34521.27",
            "p50": "7875.11",
            "p95": "2275.25",
            "p99": "1544.41",
            "min": "1420.58",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "387.95",
            "p50": "356.78",
            "p95": "304.77",
            "p99": "260.55",
            "min": "257.01",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "377.47",
            "p50": "344.08",
            "p95": "282.76",
            "p99": "236.68",
            "min": "234.52",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "376.04",
            "p50": "335.83",
            "p95": "281.20",
            "p99": "264.05",
            "min": "262.79",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "373.49",
            "p50": "338.23",
            "p95": "271.33",
            "p99": "261.88",
            "min": "260.96",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "16579.90",
            "p50": "6333.91",
            "p95": "2245.25",
            "p99": "1669.27",
            "min": "1429.16",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "16263.38",
            "p50": "6103.58",
            "p95": "2467.39",
            "p99": "1982.77",
            "min": "1632.71",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "15434.06",
            "p50": "5589.57",
            "p95": "2406.56",
            "p99": "1887.61",
            "min": "1714.82",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "15902.47",
            "p50": "6523.86",
            "p95": "2365.19",
            "p99": "2217.87",
            "min": "2167.04",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "15301.83",
            "p50": "4852.16",
            "p95": "2302.16",
            "p99": "1978.97",
            "min": "1938.70",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "16126.33",
            "p50": "5956.26",
            "p95": "2441.14",
            "p99": "2292.01",
            "min": "2273.38",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "698.79",
            "p50": "631.41",
            "p95": "491.77",
            "p99": "426.22",
            "min": "424.14",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "601.99",
            "p50": "429.24",
            "p95": "344.06",
            "p99": "299.24",
            "min": "292.29",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1640.59",
            "p50": "1296.64",
            "p95": "319.15",
            "p99": "251.10",
            "min": "243.18",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "22511.16",
            "p50": "8298.44",
            "p95": "2375.48",
            "p99": "1591.51",
            "min": "1432.84",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1408.53",
            "p50": "1188.84",
            "p95": "712.78",
            "p99": "466.76",
            "min": "339.05",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "52707.88",
            "p50": "9181.55",
            "p95": "2384.03",
            "p99": "1565.83",
            "min": "1472.55",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13488.16",
            "p50": "7263.18",
            "p95": "2326.36",
            "p99": "349.90",
            "min": "267.34",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "582.26",
            "p50": "512.74",
            "p95": "383.00",
            "p99": "357.84",
            "min": "352.68",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "539.10",
            "p50": "501.73",
            "p95": "393.85",
            "p99": "205.03",
            "min": "145.00",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "602.32",
            "p50": "580.39",
            "p95": "452.69",
            "p99": "380.12",
            "min": "367.22",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "611.90",
            "p50": "595.26",
            "p95": "454.45",
            "p99": "392.55",
            "min": "386.44",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "667.40",
            "p50": "619.27",
            "p95": "443.94",
            "p99": "400.76",
            "min": "397.54",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "912.57",
            "p50": "876.01",
            "p95": "581.32",
            "p99": "473.31",
            "min": "465.25",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "654.08",
            "p50": "613.03",
            "p95": "495.60",
            "p99": "384.95",
            "min": "382.66",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "710.04",
            "p50": "639.99",
            "p95": "481.77",
            "p99": "400.33",
            "min": "389.35",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1599.96",
            "p50": "1355.31",
            "p95": "1023.48",
            "p99": "866.27",
            "min": "835.50",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "664.75",
            "p50": "612.69",
            "p95": "450.95",
            "p99": "370.78",
            "min": "361.10",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "142.87",
            "p50": "139.54",
            "p95": "128.88",
            "p99": "119.59",
            "min": "118.93",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "140.70",
            "p50": "137.29",
            "p95": "126.63",
            "p99": "122.05",
            "min": "121.41",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "141.03",
            "p50": "136.43",
            "p95": "128.93",
            "p99": "123.33",
            "min": "122.91",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "236.52",
            "p50": "230.05",
            "p95": "202.34",
            "p99": "129.88",
            "min": "86.90",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "192.63",
            "p50": "189.80",
            "p95": "174.16",
            "p99": "160.97",
            "min": "160.31",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "203.48",
            "p50": "197.48",
            "p95": "177.67",
            "p99": "125.28",
            "min": "111.00",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "190.24",
            "p50": "178.51",
            "p95": "159.60",
            "p99": "80.07",
            "min": "70.65",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "174.37",
            "p50": "164.96",
            "p95": "150.51",
            "p99": "137.91",
            "min": "136.26",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "201.83",
            "p50": "190.65",
            "p95": "170.09",
            "p99": "126.49",
            "min": "120.89",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "184.54",
            "p50": "175.85",
            "p95": "160.25",
            "p99": "150.78",
            "min": "149.87",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "200.18",
            "p50": "191.32",
            "p95": "174.74",
            "p99": "152.86",
            "min": "152.18",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "148.50",
            "p50": "142.45",
            "p95": "131.07",
            "p99": "108.32",
            "min": "106.49",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "227.34",
            "p50": "221.25",
            "p95": "198.65",
            "p99": "187.43",
            "min": "184.08",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "184.01",
            "p50": "173.20",
            "p95": "158.52",
            "p99": "152.35",
            "min": "152.35",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "101.05",
            "p50": "96.61",
            "p95": "91.12",
            "p99": "88.81",
            "min": "88.53",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "141.53",
            "p50": "134.51",
            "p95": "124.79",
            "p99": "128.76",
            "min": "121.88",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "435.26",
            "p50": "314.74",
            "p95": "251.50",
            "p99": "247.81",
            "min": "203.84",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "192.83",
            "p50": "150.81",
            "p95": "140.97",
            "p99": "160.14",
            "min": "135.49",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "133.24",
            "p50": "130.71",
            "p95": "119.69",
            "p99": "125.21",
            "min": "119.15",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1202.98",
            "p50": "1055.40",
            "p95": "747.71",
            "p99": "551.99",
            "min": "496.86",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1044.97",
            "p50": "1001.92",
            "p95": "687.93",
            "p99": "548.20",
            "min": "543.81",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1429.43",
            "p50": "1166.95",
            "p95": "797.75",
            "p99": "592.53",
            "min": "580.34",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1318.74",
            "p50": "1107.48",
            "p95": "729.98",
            "p99": "570.31",
            "min": "529.58",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1296.35",
            "p50": "1044.18",
            "p95": "712.02",
            "p99": "491.98",
            "min": "467.96",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1072.28",
            "p50": "1028.16",
            "p95": "698.81",
            "p99": "560.23",
            "min": "557.42",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "691.09",
            "p50": "519.89",
            "p95": "413.84",
            "p99": "354.76",
            "min": "353.13",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "688.66",
            "p50": "511.65",
            "p95": "427.32",
            "p99": "360.32",
            "min": "350.18",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "677.07",
            "p50": "516.29",
            "p95": "385.67",
            "p99": "357.53",
            "min": "356.44",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "698.16",
            "p50": "542.01",
            "p95": "408.16",
            "p99": "355.73",
            "min": "352.09",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "293.01",
            "p50": "283.78",
            "p95": "248.38",
            "p99": "235.12",
            "min": "234.08",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "579.22",
            "p50": "400.21",
            "p95": "331.96",
            "p99": "297.10",
            "min": "296.91",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "567.70",
            "p50": "442.06",
            "p95": "349.17",
            "p99": "256.55",
            "min": "248.51",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "604.34",
            "p50": "460.03",
            "p95": "381.12",
            "p99": "343.91",
            "min": "340.58",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "611.03",
            "p50": "467.45",
            "p95": "380.93",
            "p99": "302.43",
            "min": "285.09",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "452.34",
            "p50": "431.45",
            "p95": "343.31",
            "p99": "292.75",
            "min": "263.25",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "448.25",
            "p50": "428.52",
            "p95": "354.89",
            "p99": "319.71",
            "min": "295.03",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "167.53",
            "p50": "161.28",
            "p95": "149.62",
            "p99": "138.87",
            "min": "135.74",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "626.27",
            "p50": "597.47",
            "p95": "429.93",
            "p99": "400.19",
            "min": "393.58",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "167.23",
            "p50": "160.54",
            "p95": "149.41",
            "p99": "140.80",
            "min": "138.68",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "320.30",
            "p50": "305.21",
            "p95": "259.58",
            "p99": "236.28",
            "min": "227.84",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "202.77",
            "p50": "192.52",
            "p95": "174.89",
            "p99": "149.95",
            "min": "146.47",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "245.78",
            "p50": "238.71",
            "p95": "214.63",
            "p99": "114.89",
            "min": "43.54",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "518.05",
            "p50": "501.74",
            "p95": "430.52",
            "p99": "371.52",
            "min": "366.43",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7397.02",
            "p50": "2841.19",
            "p95": "1780.07",
            "p99": "1395.30",
            "min": "1386.62",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "484.61",
            "p50": "472.15",
            "p95": "378.70",
            "p99": "319.15",
            "min": "305.88",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "21835.76",
            "p50": "7192.22",
            "p95": "2411.23",
            "p99": "2278.04",
            "min": "2277.53",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4352.78",
            "p50": "2589.72",
            "p95": "1385.72",
            "p99": "1153.06",
            "min": "1091.13",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "249.71",
            "p50": "189.20",
            "p95": "165.52",
            "p99": "138.27",
            "min": "138.16",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "254.34",
            "p50": "250.23",
            "p95": "224.98",
            "p99": "206.61",
            "min": "204.05",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "148.61",
            "p50": "145.80",
            "p95": "135.38",
            "p99": "76.99",
            "min": "55.42",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "234.66",
            "p50": "230.80",
            "p95": "202.26",
            "p99": "146.33",
            "min": "120.88",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "175.86",
            "p50": "170.17",
            "p95": "152.14",
            "p99": "150.02",
            "min": "149.92",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "212.42",
            "p50": "208.42",
            "p95": "179.27",
            "p99": "145.53",
            "min": "129.60",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "201.80",
            "p50": "193.12",
            "p95": "172.67",
            "p99": "169.28",
            "min": "169.09",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "201.78",
            "p50": "195.07",
            "p95": "175.21",
            "p99": "132.20",
            "min": "118.02",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1319.75",
            "p50": "1215.46",
            "p95": "948.75",
            "p99": "825.60",
            "min": "792.51",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "185.78",
            "p50": "179.06",
            "p95": "159.62",
            "p99": "106.36",
            "min": "99.58",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "190.27",
            "p50": "188.59",
            "p95": "172.77",
            "p99": "167.24",
            "min": "166.58",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "190.83",
            "p50": "187.99",
            "p95": "169.98",
            "p99": "161.89",
            "min": "160.87",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "191.70",
            "p50": "189.04",
            "p95": "178.49",
            "p99": "167.81",
            "min": "166.02",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1142.43",
            "p50": "1111.49",
            "p95": "795.63",
            "p99": "682.52",
            "min": "679.86",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "776.92",
            "p50": "764.70",
            "p95": "522.02",
            "p99": "404.68",
            "min": "388.57",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "849.84",
            "p50": "827.57",
            "p95": "610.28",
            "p99": "481.34",
            "min": "478.49",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "792.49",
            "p50": "772.74",
            "p95": "584.52",
            "p99": "471.16",
            "min": "470.71",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "800.74",
            "p50": "781.67",
            "p95": "623.60",
            "p99": "523.63",
            "min": "522.75",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "896.49",
            "p50": "870.94",
            "p95": "688.34",
            "p99": "555.98",
            "min": "537.33",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "910.71",
            "p50": "885.16",
            "p95": "624.05",
            "p99": "520.70",
            "min": "506.73",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "911.56",
            "p50": "884.13",
            "p95": "647.95",
            "p99": "521.11",
            "min": "520.79",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "815.66",
            "p50": "794.91",
            "p95": "594.59",
            "p99": "501.04",
            "min": "500.37",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "841.49",
            "p50": "815.00",
            "p95": "638.99",
            "p99": "481.61",
            "min": "472.53",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "888.59",
            "p50": "866.09",
            "p95": "616.49",
            "p99": "562.58",
            "min": "562.49",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "12082.31",
            "p50": "6305.27",
            "p95": "2484.48",
            "p99": "1962.45",
            "min": "1765.74",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "4143.06",
            "p50": "3136.49",
            "p95": "1404.62",
            "p99": "2345.99",
            "min": "1378.34",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "475.28",
            "p50": "462.38",
            "p95": "347.97",
            "p99": "364.03",
            "min": "337.93",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "7520.53",
            "p50": "3843.17",
            "p95": "532.27",
            "p99": "3499.06",
            "min": "465.32",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7562.72",
            "p50": "3908.31",
            "p95": "1971.64",
            "p99": "4084.08",
            "min": "1459.85",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1522.03",
            "p50": "1355.99",
            "p95": "908.28",
            "p99": "646.85",
            "min": "640.34",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "14604.67",
            "p50": "1280.57",
            "p95": "965.98",
            "p99": "694.70",
            "min": "565.07",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1722.78",
            "p50": "1573.62",
            "p95": "1047.17",
            "p99": "723.83",
            "min": "653.69",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "3507.12",
            "p50": "3219.68",
            "p95": "1458.64",
            "p99": "1207.65",
            "min": "1206.10",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "3485.03",
            "p50": "3179.15",
            "p95": "1385.61",
            "p99": "1117.38",
            "min": "1116.33",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1457.09",
            "p50": "1339.67",
            "p95": "901.14",
            "p99": "755.28",
            "min": "747.94",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "541.25",
            "p50": "512.79",
            "p95": "426.40",
            "p99": "410.89",
            "min": "409.07",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "802.57",
            "p50": "779.13",
            "p95": "570.53",
            "p99": "473.88",
            "min": "468.23",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "534.81",
            "p50": "516.13",
            "p95": "463.24",
            "p99": "380.13",
            "min": "364.57",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "552.98",
            "p50": "521.64",
            "p95": "454.12",
            "p99": "396.51",
            "min": "392.83",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "33554.42",
            "p50": "7661.10",
            "p95": "2294.01",
            "p99": "1561.53",
            "min": "1357.92",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "605.82",
            "p50": "585.79",
            "p95": "459.52",
            "p99": "408.44",
            "min": "403.60",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "576.24",
            "p50": "563.74",
            "p95": "485.83",
            "p99": "387.19",
            "min": "385.00",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "576.14",
            "p50": "564.84",
            "p95": "455.46",
            "p99": "395.97",
            "min": "395.95",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "595.87",
            "p50": "580.89",
            "p95": "456.68",
            "p99": "374.50",
            "min": "367.38",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "24470.74",
            "p50": "7756.55",
            "p95": "2442.02",
            "p99": "1867.63",
            "min": "1395.14",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "24034.41",
            "p50": "8090.99",
            "p95": "2489.91",
            "p99": "1826.11",
            "min": "1403.13",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "23019.94",
            "p50": "7666.71",
            "p95": "1926.25",
            "p99": "1348.54",
            "min": "1282.18",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "24461.46",
            "p50": "7886.71",
            "p95": "2355.47",
            "p99": "1530.78",
            "min": "1393.71",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "22547.53",
            "p50": "7386.79",
            "p95": "2366.21",
            "p99": "1646.76",
            "min": "1379.68",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "24034.15",
            "p50": "7738.57",
            "p95": "2429.99",
            "p99": "2215.92",
            "min": "2178.03",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "900.96",
            "p50": "874.94",
            "p95": "631.21",
            "p99": "459.42",
            "min": "448.32",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "673.19",
            "p50": "660.39",
            "p95": "542.87",
            "p99": "448.03",
            "min": "428.11",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1888.91",
            "p50": "1790.91",
            "p95": "1306.96",
            "p99": "829.47",
            "min": "687.05",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "15913.05",
            "p50": "8599.06",
            "p95": "2322.39",
            "p99": "1348.09",
            "min": "1328.46",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1816.56",
            "p50": "1712.01",
            "p95": "1012.76",
            "p99": "654.37",
            "min": "652.48",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "79743.12",
            "p50": "8796.69",
            "p95": "2354.83",
            "p99": "1608.36",
            "min": "1305.49",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13329.56",
            "p50": "7811.73",
            "p95": "2322.94",
            "p99": "1704.04",
            "min": "1441.93",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "696.89",
            "p50": "563.63",
            "p95": "489.52",
            "p99": "453.75",
            "min": "453.52",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "953.52",
            "p50": "926.15",
            "p95": "603.71",
            "p99": "530.32",
            "min": "528.19",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "816.61",
            "p50": "792.04",
            "p95": "631.10",
            "p99": "529.38",
            "min": "525.93",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1122.72",
            "p50": "1091.94",
            "p95": "727.11",
            "p99": "612.92",
            "min": "588.49",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "810.61",
            "p50": "792.27",
            "p95": "588.30",
            "p99": "496.96",
            "min": "491.66",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1064.55",
            "p50": "1037.70",
            "p95": "746.63",
            "p99": "169.91",
            "min": "169.84",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "862.98",
            "p50": "836.75",
            "p95": "659.21",
            "p99": "448.49",
            "min": "419.62",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "902.18",
            "p50": "874.39",
            "p95": "706.83",
            "p99": "597.74",
            "min": "584.38",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "439.96",
            "p50": "373.13",
            "p95": "350.53",
            "p99": "342.78",
            "min": "342.45",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "884.96",
            "p50": "863.90",
            "p95": "654.87",
            "p99": "575.82",
            "min": "573.05",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "129.97",
            "p50": "122.89",
            "p95": "110.61",
            "p99": "100.40",
            "min": "100.08",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "129.99",
            "p50": "123.51",
            "p95": "110.84",
            "p99": "107.70",
            "min": "107.46",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "130.50",
            "p50": "123.34",
            "p95": "109.16",
            "p99": "98.74",
            "min": "98.59",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "234.74",
            "p50": "212.14",
            "p95": "166.59",
            "p99": "142.92",
            "min": "140.10",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "170.27",
            "p50": "158.53",
            "p95": "136.55",
            "p99": "125.84",
            "min": "124.74",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "171.51",
            "p50": "159.73",
            "p95": "132.73",
            "p99": "100.04",
            "min": "92.98",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "154.46",
            "p50": "146.18",
            "p95": "121.24",
            "p99": "92.19",
            "min": "86.31",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "153.17",
            "p50": "142.94",
            "p95": "119.44",
            "p99": "113.03",
            "min": "112.76",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "200.04",
            "p50": "184.84",
            "p95": "149.44",
            "p99": "134.29",
            "min": "133.07",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "196.50",
            "p50": "179.53",
            "p95": "150.23",
            "p99": "128.29",
            "min": "127.90",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "193.93",
            "p50": "180.18",
            "p95": "143.42",
            "p99": "128.93",
            "min": "127.44",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "131.37",
            "p50": "124.66",
            "p95": "109.18",
            "p99": "86.67",
            "min": "83.34",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "214.10",
            "p50": "196.71",
            "p95": "157.94",
            "p99": "73.26",
            "min": "48.04",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "202.19",
            "p50": "185.01",
            "p95": "143.67",
            "p99": "134.71",
            "min": "134.40",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "113.41",
            "p50": "104.06",
            "p95": "92.60",
            "p99": "86.53",
            "min": "86.26",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "134.08",
            "p50": "123.69",
            "p95": "103.04",
            "p99": "112.20",
            "min": "100.42",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "285.67",
            "p50": "254.27",
            "p95": "201.49",
            "p99": "201.01",
            "min": "181.15",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "163.09",
            "p50": "138.01",
            "p95": "130.60",
            "p99": "144.16",
            "min": "129.88",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "126.01",
            "p50": "118.01",
            "p95": "101.27",
            "p99": "111.18",
            "min": "100.00",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "947.00",
            "p50": "681.42",
            "p95": "383.45",
            "p99": "272.35",
            "min": "265.96",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1004.67",
            "p50": "681.60",
            "p95": "386.46",
            "p99": "311.60",
            "min": "280.06",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "991.99",
            "p50": "719.17",
            "p95": "409.51",
            "p99": "311.35",
            "min": "274.57",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "920.27",
            "p50": "702.71",
            "p95": "362.21",
            "p99": "271.53",
            "min": "269.58",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "917.69",
            "p50": "660.81",
            "p95": "424.02",
            "p99": "296.61",
            "min": "286.43",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "995.08",
            "p50": "724.49",
            "p95": "390.06",
            "p99": "277.89",
            "min": "266.31",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "439.30",
            "p50": "372.00",
            "p95": "249.21",
            "p99": "224.47",
            "min": "223.76",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "427.58",
            "p50": "368.71",
            "p95": "243.52",
            "p99": "210.37",
            "min": "206.06",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "436.44",
            "p50": "371.32",
            "p95": "257.02",
            "p99": "230.78",
            "min": "230.50",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "457.91",
            "p50": "390.86",
            "p95": "243.76",
            "p99": "219.17",
            "min": "217.01",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "281.66",
            "p50": "251.03",
            "p95": "195.01",
            "p99": "161.47",
            "min": "160.07",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "365.83",
            "p50": "310.33",
            "p95": "238.49",
            "p99": "184.09",
            "min": "182.92",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "358.21",
            "p50": "318.20",
            "p95": "223.78",
            "p99": "182.13",
            "min": "180.68",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "367.41",
            "p50": "321.27",
            "p95": "234.99",
            "p99": "203.73",
            "min": "203.38",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "379.37",
            "p50": "329.80",
            "p95": "227.97",
            "p99": "207.03",
            "min": "206.04",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "447.97",
            "p50": "376.46",
            "p95": "266.71",
            "p99": "220.94",
            "min": "218.08",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "438.78",
            "p50": "379.36",
            "p95": "252.45",
            "p99": "212.34",
            "min": "207.36",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "164.39",
            "p50": "153.07",
            "p95": "127.19",
            "p99": "115.82",
            "min": "115.04",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "605.45",
            "p50": "489.75",
            "p95": "303.96",
            "p99": "232.47",
            "min": "230.37",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "163.49",
            "p50": "152.48",
            "p95": "127.98",
            "p99": "118.79",
            "min": "118.57",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "314.64",
            "p50": "277.72",
            "p95": "212.20",
            "p99": "184.23",
            "min": "181.23",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "202.20",
            "p50": "187.17",
            "p95": "151.07",
            "p99": "119.36",
            "min": "115.74",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "180.86",
            "p50": "168.46",
            "p95": "136.11",
            "p99": "123.36",
            "min": "122.96",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "479.55",
            "p50": "401.15",
            "p95": "243.44",
            "p99": "201.29",
            "min": "198.48",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5624.97",
            "p50": "1885.69",
            "p95": "608.23",
            "p99": "555.20",
            "min": "547.96",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "486.00",
            "p50": "403.94",
            "p95": "272.24",
            "p99": "221.69",
            "min": "218.38",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "12222.90",
            "p50": "2639.48",
            "p95": "599.09",
            "p99": "557.62",
            "min": "557.10",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3812.66",
            "p50": "1774.67",
            "p95": "583.66",
            "p99": "417.26",
            "min": "399.29",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "223.53",
            "p50": "203.22",
            "p95": "163.27",
            "p99": "153.30",
            "min": "152.65",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "251.84",
            "p50": "201.28",
            "p95": "143.63",
            "p99": "126.01",
            "min": "124.04",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "130.21",
            "p50": "122.52",
            "p95": "103.09",
            "p99": "87.36",
            "min": "84.74",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "229.58",
            "p50": "206.37",
            "p95": "161.42",
            "p99": "147.09",
            "min": "145.77",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "156.78",
            "p50": "146.94",
            "p95": "122.47",
            "p99": "116.86",
            "min": "116.55",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "196.63",
            "p50": "179.77",
            "p95": "147.52",
            "p99": "123.18",
            "min": "122.93",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "194.36",
            "p50": "179.23",
            "p95": "145.39",
            "p99": "133.99",
            "min": "133.41",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "209.50",
            "p50": "189.53",
            "p95": "147.25",
            "p99": "134.27",
            "min": "129.59",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "398.07",
            "p50": "300.09",
            "p95": "74.35",
            "p99": "68.22",
            "min": "67.92",
            "n": "116",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "162.54",
            "p50": "149.42",
            "p95": "86.40",
            "p99": "81.60",
            "min": "81.42",
            "n": "112",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "86.60",
            "p50": "83.43",
            "p95": "75.15",
            "p99": "71.52",
            "min": "71.14",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "88.16",
            "p50": "84.82",
            "p95": "82.51",
            "p99": "80.89",
            "min": "80.66",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "87.36",
            "p50": "84.37",
            "p95": "81.67",
            "p99": "80.43",
            "min": "80.39",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "188.73",
            "p50": "179.21",
            "p95": "137.25",
            "p99": "130.72",
            "min": "129.80",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "96.25",
            "p50": "93.10",
            "p95": "90.37",
            "p99": "87.24",
            "min": "87.14",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.60",
            "p50": "107.20",
            "p95": "101.64",
            "p99": "95.67",
            "min": "94.22",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "141.65",
            "p50": "137.79",
            "p95": "126.88",
            "p99": "120.65",
            "min": "120.11",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "142.70",
            "p50": "138.03",
            "p95": "134.91",
            "p99": "127.08",
            "min": "126.23",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "103.69",
            "p50": "100.12",
            "p95": "77.72",
            "p99": "76.07",
            "min": "75.45",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "107.75",
            "p50": "105.45",
            "p95": "100.82",
            "p99": "98.72",
            "min": "98.55",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "107.43",
            "p50": "105.76",
            "p95": "102.74",
            "p99": "99.04",
            "min": "98.74",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "141.79",
            "p50": "138.28",
            "p95": "133.51",
            "p99": "122.24",
            "min": "121.06",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "133.69",
            "p50": "129.33",
            "p95": "123.31",
            "p99": "120.92",
            "min": "120.46",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "124.32",
            "p50": "121.50",
            "p95": "114.72",
            "p99": "105.26",
            "min": "105.09",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "102.52",
            "p50": "99.08",
            "p95": "95.17",
            "p99": "91.82",
            "min": "91.55",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "94.70",
            "p50": "93.53",
            "p95": "92.58",
            "p99": "92.74",
            "min": "91.69",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "73.91",
            "p50": "72.56",
            "p95": "68.72",
            "p99": "68.16",
            "min": "66.82",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "146.91",
            "p50": "116.97",
            "p95": "110.05",
            "p99": "124.98",
            "min": "108.44",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "101.57",
            "p50": "99.92",
            "p95": "96.78",
            "p99": "97.52",
            "min": "94.45",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "415.79",
            "p50": "407.31",
            "p95": "375.41",
            "p99": "326.65",
            "min": "303.63",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "475.71",
            "p50": "467.40",
            "p95": "438.74",
            "p99": "393.38",
            "min": "388.16",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "445.94",
            "p50": "431.62",
            "p95": "397.60",
            "p99": "347.80",
            "min": "341.27",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "454.16",
            "p50": "436.42",
            "p95": "404.87",
            "p99": "381.19",
            "min": "374.95",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "459.18",
            "p50": "439.32",
            "p95": "404.13",
            "p99": "336.29",
            "min": "331.91",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "459.11",
            "p50": "450.76",
            "p95": "423.55",
            "p99": "386.00",
            "min": "367.13",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "119.71",
            "p50": "116.01",
            "p95": "111.45",
            "p99": "109.00",
            "min": "108.81",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "120.46",
            "p50": "116.43",
            "p95": "110.81",
            "p99": "105.85",
            "min": "105.60",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "117.88",
            "p50": "114.79",
            "p95": "111.60",
            "p99": "101.96",
            "min": "101.84",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "102.21",
            "p50": "99.40",
            "p95": "96.52",
            "p99": "95.10",
            "min": "94.83",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "85.53",
            "p50": "84.29",
            "p95": "83.39",
            "p99": "79.13",
            "min": "78.56",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "119.08",
            "p50": "113.83",
            "p95": "109.82",
            "p99": "104.32",
            "min": "103.11",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "112.68",
            "p50": "107.64",
            "p95": "102.43",
            "p99": "91.35",
            "min": "90.89",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "112.34",
            "p50": "107.23",
            "p95": "103.57",
            "p99": "99.04",
            "min": "98.41",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "112.63",
            "p50": "107.58",
            "p95": "103.62",
            "p99": "84.28",
            "min": "80.37",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1598.30",
            "p50": "1406.71",
            "p95": "773.26",
            "p99": "533.11",
            "min": "482.47",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1606.99",
            "p50": "1400.26",
            "p95": "716.02",
            "p99": "556.00",
            "min": "547.62",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.14",
            "p50": "150.97",
            "p95": "135.88",
            "p99": "118.98",
            "min": "114.29",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3907.07",
            "p50": "3509.76",
            "p95": "1386.71",
            "p99": "849.50",
            "min": "842.17",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "154.37",
            "p50": "150.78",
            "p95": "138.67",
            "p99": "129.20",
            "min": "129.12",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3919.53",
            "p50": "3404.77",
            "p95": "1618.05",
            "p99": "971.88",
            "min": "843.59",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "107.87",
            "p50": "105.75",
            "p95": "99.35",
            "p99": "90.12",
            "min": "89.14",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "171.41",
            "p50": "162.36",
            "p95": "155.25",
            "p99": "154.67",
            "min": "154.65",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "370.97",
            "p50": "288.52",
            "p95": "198.02",
            "p99": "181.47",
            "min": "180.83",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "10047.63",
            "p50": "1769.75",
            "p95": "840.04",
            "p99": "689.78",
            "min": "658.93",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "420.69",
            "p50": "313.97",
            "p95": "239.83",
            "p99": "211.29",
            "min": "207.24",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "27286.31",
            "p50": "8756.04",
            "p95": "2412.74",
            "p99": "1663.75",
            "min": "1615.43",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6628.48",
            "p50": "3101.54",
            "p95": "1715.78",
            "p99": "913.55",
            "min": "556.97",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "343.90",
            "p50": "268.91",
            "p95": "181.03",
            "p99": "119.56",
            "min": "101.28",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "131.31",
            "p50": "126.88",
            "p95": "113.47",
            "p99": "101.85",
            "min": "100.19",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "139.07",
            "p50": "132.57",
            "p95": "127.97",
            "p99": "118.10",
            "min": "116.79",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "120.24",
            "p50": "111.70",
            "p95": "107.37",
            "p99": "105.48",
            "min": "105.44",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "138.31",
            "p50": "133.52",
            "p95": "126.27",
            "p99": "121.88",
            "min": "121.23",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "150.49",
            "p50": "147.02",
            "p95": "142.65",
            "p99": "135.36",
            "min": "134.76",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "101.93",
            "p50": "99.68",
            "p95": "89.53",
            "p99": "86.23",
            "min": "86.04",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "123.70",
            "p50": "119.83",
            "p95": "117.02",
            "p99": "112.17",
            "min": "111.17",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1187.50",
            "p50": "1105.39",
            "p95": "376.84",
            "p99": "367.86",
            "min": "365.19",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "140.81",
            "p50": "133.24",
            "p95": "127.07",
            "p99": "119.44",
            "min": "118.02",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}