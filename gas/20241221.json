{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "112.30",
            "p50": "109.48",
            "p95": "101.12",
            "p99": "96.25",
            "min": "95.77",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1002.21",
            "p50": "969.52",
            "p95": "937.07",
            "p99": "919.12",
            "min": "918.87",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "112.83",
            "p50": "110.21",
            "p95": "105.94",
            "p99": "104.37",
            "min": "104.25",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "731.56",
            "p50": "717.39",
            "p95": "498.19",
            "p99": "479.16",
            "min": "477.77",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "369.18",
            "p50": "364.97",
            "p95": "356.10",
            "p99": "329.00",
            "min": "323.64",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "397.76",
            "p50": "392.45",
            "p95": "384.48",
            "p99": "352.67",
            "min": "340.81",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "311.18",
            "p50": "304.65",
            "p95": "189.47",
            "p99": "186.18",
            "min": "185.80",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "189.24",
            "p50": "184.82",
            "p95": "178.42",
            "p99": "173.65",
            "min": "172.70",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "245.07",
            "p50": "238.74",
            "p95": "225.66",
            "p99": "222.13",
            "min": "222.13",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "250.07",
            "p50": "239.86",
            "p95": "231.13",
            "p99": "185.55",
            "min": "174.56",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "258.34",
            "p50": "251.83",
            "p95": "242.15",
            "p99": "234.64",
            "min": "234.48",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "204.82",
            "p50": "200.69",
            "p95": "190.75",
            "p99": "116.53",
            "min": "98.99",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "315.39",
            "p50": "309.63",
            "p95": "274.31",
            "p99": "270.15",
            "min": "269.92",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "296.43",
            "p50": "291.62",
            "p95": "255.68",
            "p99": "251.69",
            "min": "251.46",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "6801.91",
            "p50": "5829.36",
            "p95": "2469.70",
            "p99": "2254.71",
            "min": "2239.36",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2593.76",
            "p50": "2189.33",
            "p95": "1851.84",
            "p99": "2089.12",
            "min": "1817.39",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "282.40",
            "p50": "248.85",
            "p95": "232.73",
            "p99": "232.26",
            "min": "220.49",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1444.15",
            "p50": "949.11",
            "p95": "363.21",
            "p99": "805.32",
            "min": "323.38",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7577.79",
            "p50": "4322.35",
            "p95": "2282.31",
            "p99": "4276.70",
            "min": "1786.41",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "806.01",
            "p50": "775.67",
            "p95": "537.27",
            "p99": "523.59",
            "min": "523.16",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "816.66",
            "p50": "800.05",
            "p95": "748.16",
            "p99": "718.78",
            "min": "705.51",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "911.52",
            "p50": "872.94",
            "p95": "743.96",
            "p99": "645.82",
            "min": "644.09",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2224.77",
            "p50": "2018.14",
            "p95": "1743.18",
            "p99": "1614.11",
            "min": "1567.26",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2189.68",
            "p50": "2007.23",
            "p95": "1780.05",
            "p99": "1549.06",
            "min": "1495.23",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "807.22",
            "p50": "789.42",
            "p95": "738.67",
            "p99": "721.82",
            "min": "716.18",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "162.96",
            "p50": "155.08",
            "p95": "133.54",
            "p99": "122.27",
            "min": "120.23",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "505.06",
            "p50": "462.24",
            "p95": "388.19",
            "p99": "366.26",
            "min": "361.94",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "163.78",
            "p50": "149.86",
            "p95": "141.64",
            "p99": "140.87",
            "min": "140.77",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "182.87",
            "p50": "174.83",
            "p95": "152.94",
            "p99": "148.67",
            "min": "148.27",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "35187.41",
            "p50": "8639.06",
            "p95": "2540.60",
            "p99": "2276.90",
            "min": "2266.93",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "377.76",
            "p50": "312.93",
            "p95": "276.46",
            "p99": "227.10",
            "min": "222.99",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "359.71",
            "p50": "296.53",
            "p95": "262.01",
            "p99": "255.92",
            "min": "254.86",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "360.12",
            "p50": "299.99",
            "p95": "266.43",
            "p99": "256.46",
            "min": "255.68",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "353.26",
            "p50": "297.17",
            "p95": "262.12",
            "p99": "258.56",
            "min": "258.19",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "14220.33",
            "p50": "6546.85",
            "p95": "2603.20",
            "p99": "2259.83",
            "min": "2246.07",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "14028.85",
            "p50": "7126.24",
            "p95": "2515.41",
            "p99": "2275.46",
            "min": "2218.81",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "13770.53",
            "p50": "6534.94",
            "p95": "2409.68",
            "p99": "2225.01",
            "min": "2220.13",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "13522.40",
            "p50": "6376.94",
            "p95": "2493.85",
            "p99": "2141.90",
            "min": "2116.68",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "12629.12",
            "p50": "6090.02",
            "p95": "2362.41",
            "p99": "1676.39",
            "min": "1461.28",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "13560.78",
            "p50": "7570.41",
            "p95": "2485.23",
            "p99": "876.00",
            "min": "85.06",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "251.10",
            "p50": "239.31",
            "p95": "233.23",
            "p99": "223.38",
            "min": "222.17",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "525.48",
            "p50": "515.45",
            "p95": "507.14",
            "p99": "348.48",
            "min": "224.94",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1639.29",
            "p50": "1566.71",
            "p95": "375.92",
            "p99": "358.16",
            "min": "348.57",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "21894.25",
            "p50": "6305.21",
            "p95": "201.78",
            "p99": "175.81",
            "min": "174.85",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1428.71",
            "p50": "1377.17",
            "p95": "278.11",
            "p99": "116.55",
            "min": "104.76",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "53538.57",
            "p50": "9537.28",
            "p95": "2537.56",
            "p99": "1167.36",
            "min": "303.73",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15761.86",
            "p50": "7812.56",
            "p95": "192.65",
            "p99": "171.98",
            "min": "169.52",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "573.12",
            "p50": "540.80",
            "p95": "464.36",
            "p99": "416.99",
            "min": "407.37",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "517.35",
            "p50": "509.36",
            "p95": "497.26",
            "p99": "490.64",
            "min": "489.86",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "204.51",
            "p50": "201.42",
            "p95": "196.85",
            "p99": "191.22",
            "min": "189.98",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "385.76",
            "p50": "374.62",
            "p95": "366.74",
            "p99": "356.50",
            "min": "353.00",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "205.76",
            "p50": "202.80",
            "p95": "196.68",
            "p99": "189.90",
            "min": "189.82",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "343.93",
            "p50": "334.66",
            "p95": "322.70",
            "p99": "306.16",
            "min": "297.49",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "263.68",
            "p50": "254.37",
            "p95": "251.15",
            "p99": "231.90",
            "min": "230.97",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "521.17",
            "p50": "511.98",
            "p95": "499.80",
            "p99": "482.08",
            "min": "479.81",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1453.90",
            "p50": "1277.59",
            "p95": "956.64",
            "p99": "899.23",
            "min": "892.40",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "309.00",
            "p50": "303.24",
            "p95": "284.49",
            "p99": "277.66",
            "min": "277.51",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "90.34",
            "p50": "88.94",
            "p95": "84.91",
            "p99": "82.11",
            "min": "81.70",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "82.33",
            "p50": "81.56",
            "p95": "77.71",
            "p99": "75.14",
            "min": "74.98",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "84.08",
            "p50": "83.20",
            "p95": "80.25",
            "p99": "75.92",
            "min": "75.80",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "250.03",
            "p50": "245.62",
            "p95": "216.70",
            "p99": "159.54",
            "min": "156.92",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "186.25",
            "p50": "182.65",
            "p95": "159.10",
            "p99": "144.99",
            "min": "144.57",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "196.07",
            "p50": "192.44",
            "p95": "171.94",
            "p99": "88.89",
            "min": "79.13",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "185.36",
            "p50": "178.27",
            "p95": "159.06",
            "p99": "118.84",
            "min": "116.08",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "182.96",
            "p50": "175.37",
            "p95": "158.93",
            "p99": "106.78",
            "min": "94.00",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "208.86",
            "p50": "202.42",
            "p95": "180.50",
            "p99": "163.91",
            "min": "162.56",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "186.44",
            "p50": "179.96",
            "p95": "161.25",
            "p99": "122.71",
            "min": "113.77",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "209.96",
            "p50": "204.47",
            "p95": "179.39",
            "p99": "142.13",
            "min": "135.30",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "153.78",
            "p50": "148.89",
            "p95": "136.84",
            "p99": "117.88",
            "min": "116.51",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "226.29",
            "p50": "222.44",
            "p95": "199.51",
            "p99": "134.96",
            "min": "115.29",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "186.96",
            "p50": "180.40",
            "p95": "158.75",
            "p99": "110.94",
            "min": "102.98",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.96",
            "p50": "66.61",
            "p95": "64.23",
            "p99": "62.53",
            "min": "62.44",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "142.54",
            "p50": "141.74",
            "p95": "127.02",
            "p99": "131.44",
            "min": "125.46",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "447.01",
            "p50": "373.21",
            "p95": "254.18",
            "p99": "269.68",
            "min": "228.08",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "196.10",
            "p50": "156.33",
            "p95": "142.46",
            "p99": "165.43",
            "min": "142.30",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.34",
            "p50": "133.18",
            "p95": "120.15",
            "p99": "126.03",
            "min": "119.00",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1237.20",
            "p50": "1151.48",
            "p95": "732.49",
            "p99": "513.41",
            "min": "512.23",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1062.89",
            "p50": "1035.24",
            "p95": "622.92",
            "p99": "519.34",
            "min": "496.93",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1479.55",
            "p50": "1401.27",
            "p95": "787.10",
            "p99": "567.61",
            "min": "565.68",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1375.83",
            "p50": "1262.29",
            "p95": "695.61",
            "p99": "560.61",
            "min": "544.22",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1341.53",
            "p50": "1267.24",
            "p95": "814.47",
            "p99": "577.07",
            "min": "552.58",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1103.46",
            "p50": "1064.99",
            "p95": "737.50",
            "p99": "533.31",
            "min": "495.87",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "743.28",
            "p50": "634.42",
            "p95": "433.88",
            "p99": "387.57",
            "min": "386.44",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "740.90",
            "p50": "655.06",
            "p95": "486.64",
            "p99": "410.62",
            "min": "406.64",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "753.21",
            "p50": "663.06",
            "p95": "490.47",
            "p99": "395.73",
            "min": "390.45",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "741.64",
            "p50": "704.18",
            "p95": "463.09",
            "p99": "399.87",
            "min": "395.77",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "296.28",
            "p50": "291.13",
            "p95": "237.63",
            "p99": "220.94",
            "min": "220.08",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "660.27",
            "p50": "543.80",
            "p95": "417.79",
            "p99": "377.66",
            "min": "376.86",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "645.23",
            "p50": "550.20",
            "p95": "459.44",
            "p99": "402.91",
            "min": "401.80",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "661.73",
            "p50": "602.20",
            "p95": "426.56",
            "p99": "372.39",
            "min": "367.70",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "676.39",
            "p50": "593.93",
            "p95": "498.30",
            "p99": "378.04",
            "min": "366.91",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "107.19",
            "p50": "105.83",
            "p95": "98.75",
            "p99": "92.16",
            "min": "87.68",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "107.20",
            "p50": "105.72",
            "p95": "99.74",
            "p99": "92.75",
            "min": "89.57",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.77",
            "p50": "98.64",
            "p95": "92.62",
            "p99": "90.52",
            "min": "90.38",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "257.06",
            "p50": "253.65",
            "p95": "226.84",
            "p99": "198.82",
            "min": "198.77",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.72",
            "p50": "98.48",
            "p95": "91.40",
            "p99": "85.55",
            "min": "85.51",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "249.75",
            "p50": "243.40",
            "p95": "213.53",
            "p99": "190.33",
            "min": "186.37",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "210.17",
            "p50": "204.83",
            "p95": "183.16",
            "p99": "173.69",
            "min": "173.56",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "243.87",
            "p50": "237.34",
            "p95": "205.92",
            "p99": "192.38",
            "min": "191.57",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "460.98",
            "p50": "450.84",
            "p95": "373.82",
            "p99": "317.42",
            "min": "301.92",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7421.08",
            "p50": "4452.77",
            "p95": "2289.61",
            "p99": "2067.61",
            "min": "2062.15",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "440.41",
            "p50": "430.99",
            "p95": "366.46",
            "p99": "311.99",
            "min": "306.72",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "18298.21",
            "p50": "7148.34",
            "p95": "2512.46",
            "p99": "2274.79",
            "min": "2262.44",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4352.36",
            "p50": "3565.94",
            "p95": "1786.52",
            "p99": "1210.40",
            "min": "1143.14",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "213.73",
            "p50": "187.14",
            "p95": "162.72",
            "p99": "151.77",
            "min": "146.90",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "266.17",
            "p50": "260.35",
            "p95": "229.49",
            "p99": "205.62",
            "min": "203.75",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "95.17",
            "p50": "93.58",
            "p95": "86.24",
            "p99": "78.06",
            "min": "75.53",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "247.21",
            "p50": "242.78",
            "p95": "215.20",
            "p99": "204.26",
            "min": "202.89",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "183.37",
            "p50": "180.34",
            "p95": "163.49",
            "p99": "144.06",
            "min": "141.63",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "223.84",
            "p50": "218.90",
            "p95": "187.26",
            "p99": "113.70",
            "min": "83.96",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "211.19",
            "p50": "206.38",
            "p95": "180.55",
            "p99": "150.98",
            "min": "150.64",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "208.18",
            "p50": "204.71",
            "p95": "181.48",
            "p99": "147.04",
            "min": "136.00",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1274.77",
            "p50": "1088.75",
            "p95": "852.42",
            "p99": "676.70",
            "min": "674.83",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "183.21",
            "p50": "179.39",
            "p95": "158.85",
            "p99": "86.18",
            "min": "59.51",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.45",
            "p50": "192.44",
            "p95": "180.03",
            "p99": "167.12",
            "min": "165.41",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.14",
            "p50": "192.65",
            "p95": "186.09",
            "p99": "173.72",
            "min": "173.59",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.25",
            "p50": "193.33",
            "p95": "185.73",
            "p99": "168.10",
            "min": "165.99",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1191.61",
            "p50": "1166.24",
            "p95": "957.13",
            "p99": "620.42",
            "min": "600.69",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "701.43",
            "p50": "692.47",
            "p95": "581.81",
            "p99": "442.13",
            "min": "440.13",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "810.48",
            "p50": "798.77",
            "p95": "717.49",
            "p99": "579.36",
            "min": "542.45",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "740.04",
            "p50": "727.04",
            "p95": "694.50",
            "p99": "492.69",
            "min": "488.73",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "751.69",
            "p50": "739.57",
            "p95": "671.30",
            "p99": "442.65",
            "min": "414.63",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "920.93",
            "p50": "904.36",
            "p95": "730.30",
            "p99": "575.58",
            "min": "560.65",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "890.07",
            "p50": "874.38",
            "p95": "802.65",
            "p99": "528.23",
            "min": "525.46",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "886.10",
            "p50": "873.24",
            "p95": "796.20",
            "p99": "629.07",
            "min": "609.99",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "843.98",
            "p50": "827.56",
            "p95": "717.71",
            "p99": "599.34",
            "min": "593.20",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "885.96",
            "p50": "870.02",
            "p95": "791.86",
            "p99": "620.58",
            "min": "609.44",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "887.25",
            "p50": "871.29",
            "p95": "795.23",
            "p99": "552.97",
            "min": "517.81",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "109.70",
            "p50": "105.66",
            "p95": "103.17",
            "p99": "99.86",
            "min": "99.49",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "95.90",
            "p50": "94.97",
            "p95": "91.41",
            "p99": "92.51",
            "min": "90.69",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "603.93",
            "p50": "584.58",
            "p95": "519.29",
            "p99": "522.47",
            "min": "503.36",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "129.56",
            "p50": "103.32",
            "p95": "96.75",
            "p99": "109.70",
            "min": "94.71",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "89.78",
            "p50": "87.75",
            "p95": "85.12",
            "p99": "86.53",
            "min": "84.08",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1936.75",
            "p50": "1879.77",
            "p95": "1301.48",
            "p99": "853.48",
            "min": "852.37",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1642.75",
            "p50": "1606.97",
            "p95": "1094.90",
            "p99": "827.43",
            "min": "712.94",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2475.19",
            "p50": "2396.01",
            "p95": "1416.72",
            "p99": "1096.51",
            "min": "1096.32",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2487.50",
            "p50": "2401.49",
            "p95": "1527.49",
            "p99": "1023.25",
            "min": "981.04",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2457.33",
            "p50": "2384.18",
            "p95": "1869.91",
            "p99": "1253.37",
            "min": "1096.44",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1708.45",
            "p50": "1665.56",
            "p95": "1161.95",
            "p99": "833.75",
            "min": "772.67",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "877.29",
            "p50": "842.89",
            "p95": "730.64",
            "p99": "606.66",
            "min": "606.14",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "870.88",
            "p50": "840.02",
            "p95": "710.55",
            "p99": "592.46",
            "min": "592.16",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "871.68",
            "p50": "845.95",
            "p95": "714.99",
            "p99": "583.85",
            "min": "556.90",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "875.75",
            "p50": "853.01",
            "p95": "734.94",
            "p99": "619.28",
            "min": "618.64",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.67",
            "p50": "86.08",
            "p95": "82.89",
            "p99": "81.45",
            "min": "80.79",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "817.92",
            "p50": "775.09",
            "p95": "660.22",
            "p99": "502.25",
            "min": "497.24",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "755.82",
            "p50": "732.49",
            "p95": "613.82",
            "p99": "488.46",
            "min": "481.76",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "761.29",
            "p50": "731.71",
            "p95": "646.56",
            "p99": "518.56",
            "min": "510.63",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "763.89",
            "p50": "742.63",
            "p95": "642.29",
            "p99": "530.45",
            "min": "520.56",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2035.98",
            "p50": "1968.56",
            "p95": "1227.48",
            "p99": "845.93",
            "min": "758.61",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2349.85",
            "p50": "2269.15",
            "p95": "1436.66",
            "p99": "938.13",
            "min": "868.37",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.46",
            "p50": "72.02",
            "p95": "71.05",
            "p99": "69.44",
            "min": "69.05",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "10144.15",
            "p50": "8226.63",
            "p95": "2446.69",
            "p99": "2276.42",
            "min": "2219.59",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.49",
            "p50": "72.01",
            "p95": "70.49",
            "p99": "68.96",
            "min": "68.67",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "224.20",
            "p50": "222.10",
            "p95": "211.99",
            "p99": "191.90",
            "min": "187.67",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "889.68",
            "p50": "871.46",
            "p95": "718.37",
            "p99": "546.22",
            "min": "514.87",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "669.56",
            "p50": "662.22",
            "p95": "567.29",
            "p99": "523.96",
            "min": "511.36",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2349.88",
            "p50": "2248.88",
            "p95": "1432.47",
            "p99": "977.07",
            "min": "833.14",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "26050.30",
            "p50": "8998.00",
            "p95": "2489.37",
            "p99": "1486.61",
            "min": "1438.70",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2176.63",
            "p50": "2082.81",
            "p95": "1402.10",
            "p99": "893.63",
            "min": "836.47",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "78892.56",
            "p50": "9401.06",
            "p95": "2562.25",
            "p99": "2238.40",
            "min": "2207.32",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15429.31",
            "p50": "8380.35",
            "p95": "2551.11",
            "p99": "2199.57",
            "min": "2199.05",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "864.23",
            "p50": "720.77",
            "p95": "609.12",
            "p99": "544.91",
            "min": "524.57",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "990.75",
            "p50": "974.50",
            "p95": "791.73",
            "p99": "580.76",
            "min": "549.05",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "844.70",
            "p50": "825.53",
            "p95": "700.98",
            "p99": "497.26",
            "min": "494.67",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1199.02",
            "p50": "1173.90",
            "p95": "874.45",
            "p99": "673.61",
            "min": "649.19",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "750.01",
            "p50": "738.58",
            "p95": "685.31",
            "p99": "504.35",
            "min": "467.58",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1156.58",
            "p50": "1130.63",
            "p95": "954.11",
            "p99": "632.07",
            "min": "595.97",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "873.10",
            "p50": "840.56",
            "p95": "708.52",
            "p99": "557.80",
            "min": "552.45",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "931.50",
            "p50": "914.83",
            "p95": "721.77",
            "p99": "610.88",
            "min": "593.00",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2432.01",
            "p50": "2273.53",
            "p95": "1845.16",
            "p99": "1442.16",
            "min": "1413.33",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "875.01",
            "p50": "859.94",
            "p95": "707.67",
            "p99": "280.19",
            "min": "174.48",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "65.95",
            "p50": "64.20",
            "p95": "60.05",
            "p99": "56.30",
            "min": "56.19",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "58.54",
            "p50": "57.08",
            "p95": "54.36",
            "p99": "52.65",
            "min": "52.57",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "60.25",
            "p50": "58.69",
            "p95": "54.33",
            "p99": "52.61",
            "min": "52.57",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "212.64",
            "p50": "197.20",
            "p95": "167.39",
            "p99": "132.23",
            "min": "127.24",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "104.80",
            "p50": "100.26",
            "p95": "87.92",
            "p99": "82.96",
            "min": "82.89",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.63",
            "p50": "105.41",
            "p95": "92.04",
            "p99": "86.48",
            "min": "86.36",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "143.22",
            "p50": "134.78",
            "p95": "111.12",
            "p99": "94.76",
            "min": "91.87",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "141.65",
            "p50": "134.52",
            "p95": "118.63",
            "p99": "108.28",
            "min": "107.51",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "186.53",
            "p50": "174.77",
            "p95": "145.09",
            "p99": "132.47",
            "min": "132.19",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "183.40",
            "p50": "173.45",
            "p95": "133.14",
            "p99": "105.03",
            "min": "99.37",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "185.62",
            "p50": "173.27",
            "p95": "139.58",
            "p99": "96.04",
            "min": "95.10",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.49",
            "p50": "119.86",
            "p95": "101.74",
            "p99": "96.57",
            "min": "96.24",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "207.32",
            "p50": "190.50",
            "p95": "164.46",
            "p99": "141.16",
            "min": "137.66",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "190.68",
            "p50": "178.40",
            "p95": "141.02",
            "p99": "126.72",
            "min": "126.43",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "70.96",
            "p50": "67.85",
            "p95": "62.48",
            "p99": "61.22",
            "min": "61.01",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "132.99",
            "p50": "125.73",
            "p95": "108.89",
            "p99": "111.77",
            "min": "100.35",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "220.05",
            "p50": "196.47",
            "p95": "158.87",
            "p99": "162.92",
            "min": "149.52",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "165.90",
            "p50": "138.81",
            "p95": "130.37",
            "p99": "145.22",
            "min": "129.62",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "129.09",
            "p50": "119.60",
            "p95": "105.30",
            "p99": "112.86",
            "min": "100.61",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1056.46",
            "p50": "809.40",
            "p95": "445.35",
            "p99": "353.45",
            "min": "337.86",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1011.79",
            "p50": "753.84",
            "p95": "455.98",
            "p99": "365.20",
            "min": "343.26",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1159.68",
            "p50": "819.52",
            "p95": "479.33",
            "p99": "339.25",
            "min": "323.63",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1102.86",
            "p50": "787.46",
            "p95": "448.34",
            "p99": "298.18",
            "min": "290.90",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1046.63",
            "p50": "778.79",
            "p95": "431.17",
            "p99": "336.23",
            "min": "332.57",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1033.28",
            "p50": "770.26",
            "p95": "446.73",
            "p99": "323.03",
            "min": "312.55",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "358.69",
            "p50": "297.89",
            "p95": "239.51",
            "p99": "194.01",
            "min": "190.55",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "351.24",
            "p50": "298.40",
            "p95": "238.43",
            "p99": "206.30",
            "min": "204.76",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "352.72",
            "p50": "305.86",
            "p95": "232.20",
            "p99": "193.34",
            "min": "192.24",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "378.46",
            "p50": "331.54",
            "p95": "258.70",
            "p99": "208.97",
            "min": "207.21",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "291.41",
            "p50": "259.16",
            "p95": "206.86",
            "p99": "172.05",
            "min": "170.81",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "301.77",
            "p50": "265.85",
            "p95": "205.87",
            "p99": "189.66",
            "min": "189.14",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "294.96",
            "p50": "256.10",
            "p95": "199.11",
            "p99": "181.15",
            "min": "179.65",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "299.09",
            "p50": "264.97",
            "p95": "204.95",
            "p99": "183.66",
            "min": "181.17",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "298.96",
            "p50": "266.14",
            "p95": "201.45",
            "p99": "186.34",
            "min": "185.93",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.45",
            "p50": "101.21",
            "p95": "91.65",
            "p99": "84.81",
            "min": "84.52",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.71",
            "p50": "101.15",
            "p95": "92.46",
            "p99": "89.04",
            "min": "88.72",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.55",
            "p50": "94.03",
            "p95": "84.78",
            "p99": "80.11",
            "min": "79.98",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "250.16",
            "p50": "227.23",
            "p95": "180.15",
            "p99": "158.07",
            "min": "156.08",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.45",
            "p50": "93.94",
            "p95": "82.92",
            "p99": "79.62",
            "min": "79.46",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "241.98",
            "p50": "224.87",
            "p95": "182.00",
            "p99": "163.34",
            "min": "162.27",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "187.47",
            "p50": "174.52",
            "p95": "143.12",
            "p99": "131.89",
            "min": "131.46",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "155.49",
            "p50": "145.35",
            "p95": "126.36",
            "p99": "107.25",
            "min": "103.73",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "438.91",
            "p50": "372.74",
            "p95": "273.61",
            "p99": "214.54",
            "min": "214.32",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4993.30",
            "p50": "2296.29",
            "p95": "574.24",
            "p99": "413.84",
            "min": "381.15",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "438.83",
            "p50": "376.46",
            "p95": "255.35",
            "p99": "242.50",
            "min": "241.62",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14129.71",
            "p50": "2797.24",
            "p95": "984.56",
            "p99": "802.34",
            "min": "796.45",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3084.77",
            "p50": "1713.15",
            "p95": "515.54",
            "p99": "413.84",
            "min": "395.98",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "206.79",
            "p50": "187.26",
            "p95": "157.42",
            "p99": "140.52",
            "min": "136.61",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "238.04",
            "p50": "215.72",
            "p95": "168.56",
            "p99": "154.35",
            "min": "153.68",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "126.01",
            "p50": "120.71",
            "p95": "104.19",
            "p99": "86.37",
            "min": "82.53",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "211.39",
            "p50": "194.26",
            "p95": "157.13",
            "p99": "142.20",
            "min": "139.13",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "142.56",
            "p50": "133.95",
            "p95": "109.17",
            "p99": "86.58",
            "min": "82.50",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "178.07",
            "p50": "165.76",
            "p95": "135.18",
            "p99": "98.98",
            "min": "89.20",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "186.68",
            "p50": "174.12",
            "p95": "141.57",
            "p99": "131.54",
            "min": "131.52",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "187.19",
            "p50": "173.69",
            "p95": "142.99",
            "p99": "108.38",
            "min": "96.59",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "296.26",
            "p50": "251.58",
            "p95": "159.29",
            "p99": "162.35",
            "min": "144.09",
            "n": "87",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "144.33",
            "p50": "137.42",
            "p95": "112.58",
            "p99": "115.97",
            "min": "102.01",
            "n": "66",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.47",
            "p50": "86.84",
            "p95": "78.13",
            "p99": "73.36",
            "min": "73.00",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "89.74",
            "p50": "88.08",
            "p95": "85.46",
            "p99": "78.53",
            "min": "77.51",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "89.18",
            "p50": "87.72",
            "p95": "84.14",
            "p99": "81.12",
            "min": "80.82",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "188.37",
            "p50": "183.85",
            "p95": "176.42",
            "p99": "158.53",
            "min": "153.79",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "90.83",
            "p50": "88.96",
            "p95": "85.77",
            "p99": "84.51",
            "min": "84.32",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "112.58",
            "p50": "109.25",
            "p95": "105.53",
            "p99": "100.93",
            "min": "99.68",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "124.38",
            "p50": "121.36",
            "p95": "105.58",
            "p99": "98.09",
            "min": "97.97",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "127.15",
            "p50": "123.39",
            "p95": "121.65",
            "p99": "114.21",
            "min": "112.78",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "96.87",
            "p50": "94.26",
            "p95": "78.76",
            "p99": "77.33",
            "min": "77.32",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "98.83",
            "p50": "96.30",
            "p95": "94.37",
            "p99": "91.74",
            "min": "91.69",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.51",
            "p50": "96.59",
            "p95": "94.78",
            "p99": "92.45",
            "min": "92.25",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.39",
            "p50": "122.22",
            "p95": "119.61",
            "p99": "112.74",
            "min": "111.65",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "119.67",
            "p50": "116.29",
            "p95": "110.39",
            "p99": "108.69",
            "min": "108.60",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "116.73",
            "p50": "114.16",
            "p95": "109.86",
            "p99": "105.35",
            "min": "105.12",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "86.44",
            "p50": "82.96",
            "p95": "79.30",
            "p99": "73.90",
            "min": "71.66",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "93.29",
            "p50": "92.23",
            "p95": "89.22",
            "p99": "88.41",
            "min": "85.77",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "60.72",
            "p50": "58.49",
            "p95": "56.40",
            "p99": "54.90",
            "min": "53.53",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "150.29",
            "p50": "119.91",
            "p95": "111.90",
            "p99": "128.15",
            "min": "111.44",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "103.64",
            "p50": "101.89",
            "p95": "100.01",
            "p99": "99.21",
            "min": "95.86",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "378.04",
            "p50": "367.09",
            "p95": "354.82",
            "p99": "345.96",
            "min": "345.73",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "488.58",
            "p50": "479.70",
            "p95": "464.37",
            "p99": "444.76",
            "min": "441.95",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "380.94",
            "p50": "367.82",
            "p95": "349.83",
            "p99": "337.00",
            "min": "329.71",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "384.76",
            "p50": "369.34",
            "p95": "352.81",
            "p99": "327.79",
            "min": "325.38",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "386.67",
            "p50": "372.26",
            "p95": "343.64",
            "p99": "298.55",
            "min": "274.04",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "455.67",
            "p50": "445.50",
            "p95": "426.19",
            "p99": "375.14",
            "min": "359.49",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "99.37",
            "p50": "95.12",
            "p95": "91.38",
            "p99": "89.47",
            "min": "89.29",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "99.96",
            "p50": "95.45",
            "p95": "92.06",
            "p99": "90.99",
            "min": "90.85",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "98.47",
            "p50": "94.19",
            "p95": "90.95",
            "p99": "89.60",
            "min": "89.53",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "89.49",
            "p50": "86.60",
            "p95": "83.80",
            "p99": "82.42",
            "min": "82.16",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.93",
            "p50": "86.41",
            "p95": "85.65",
            "p99": "84.51",
            "min": "84.28",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "92.91",
            "p50": "88.23",
            "p95": "85.37",
            "p99": "83.95",
            "min": "83.91",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "88.64",
            "p50": "84.10",
            "p95": "81.78",
            "p99": "80.84",
            "min": "80.82",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "88.14",
            "p50": "83.65",
            "p95": "81.02",
            "p99": "80.03",
            "min": "79.92",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "88.13",
            "p50": "83.40",
            "p95": "80.93",
            "p99": "80.05",
            "min": "79.97",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1435.96",
            "p50": "1316.83",
            "p95": "912.27",
            "p99": "538.77",
            "min": "464.15",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1446.73",
            "p50": "1323.07",
            "p95": "846.55",
            "p99": "645.51",
            "min": "574.71",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "156.11",
            "p50": "153.73",
            "p95": "143.12",
            "p99": "127.58",
            "min": "125.20",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3081.38",
            "p50": "2841.54",
            "p95": "1465.87",
            "p99": "946.24",
            "min": "923.15",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "155.99",
            "p50": "153.28",
            "p95": "137.47",
            "p99": "119.02",
            "min": "113.62",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3109.04",
            "p50": "2827.02",
            "p95": "1826.08",
            "p99": "1178.20",
            "min": "1119.63",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.67",
            "p50": "96.90",
            "p95": "92.53",
            "p99": "91.35",
            "min": "91.28",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "187.61",
            "p50": "177.94",
            "p95": "167.80",
            "p99": "166.75",
            "min": "166.32",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "394.62",
            "p50": "331.71",
            "p95": "254.82",
            "p99": "207.08",
            "min": "189.25",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9702.67",
            "p50": "1664.09",
            "p95": "934.92",
            "p99": "703.33",
            "min": "689.31",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "424.18",
            "p50": "339.53",
            "p95": "264.83",
            "p99": "245.89",
            "min": "243.45",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "29167.54",
            "p50": "8760.06",
            "p95": "2516.62",
            "p99": "2013.68",
            "min": "1701.44",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6299.12",
            "p50": "3316.03",
            "p95": "1401.72",
            "p99": "649.06",
            "min": "517.63",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "344.76",
            "p50": "303.58",
            "p95": "219.46",
            "p99": "193.24",
            "min": "191.94",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "154.55",
            "p50": "141.85",
            "p95": "127.98",
            "p99": "116.60",
            "min": "113.52",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "122.76",
            "p50": "109.41",
            "p95": "101.79",
            "p99": "99.49",
            "min": "99.04",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "135.89",
            "p50": "124.34",
            "p95": "119.57",
            "p99": "116.23",
            "min": "115.65",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "123.85",
            "p50": "119.07",
            "p95": "115.20",
            "p99": "108.98",
            "min": "108.72",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "171.72",
            "p50": "152.67",
            "p95": "146.04",
            "p99": "141.76",
            "min": "139.18",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "94.08",
            "p50": "92.95",
            "p95": "89.58",
            "p99": "86.90",
            "min": "86.82",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "117.33",
            "p50": "112.28",
            "p95": "104.75",
            "p99": "102.16",
            "min": "101.17",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1122.51",
            "p50": "1044.91",
            "p95": "355.66",
            "p99": "344.73",
            "min": "344.25",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "126.31",
            "p50": "119.48",
            "p95": "107.53",
            "p99": "104.34",
            "min": "103.80",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}