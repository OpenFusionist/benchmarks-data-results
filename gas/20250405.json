{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "110.15",
            "p50": "105.96",
            "p95": "97.51",
            "p99": "92.56",
            "min": "91.94",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1115.99",
            "p50": "936.70",
            "p95": "602.31",
            "p99": "505.41",
            "min": "504.43",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "110.77",
            "p50": "107.21",
            "p95": "97.64",
            "p99": "91.26",
            "min": "91.04",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "763.41",
            "p50": "709.52",
            "p95": "441.50",
            "p99": "388.30",
            "min": "369.49",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "405.10",
            "p50": "373.87",
            "p95": "317.08",
            "p99": "283.56",
            "min": "283.23",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "431.66",
            "p50": "395.54",
            "p95": "323.12",
            "p99": "294.36",
            "min": "291.96",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "295.12",
            "p50": "274.91",
            "p95": "199.12",
            "p99": "169.60",
            "min": "168.10",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "184.72",
            "p50": "175.15",
            "p95": "159.61",
            "p99": "151.93",
            "min": "150.72",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "256.57",
            "p50": "239.27",
            "p95": "205.36",
            "p99": "197.52",
            "min": "197.30",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "264.01",
            "p50": "246.34",
            "p95": "214.98",
            "p99": "195.68",
            "min": "195.59",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "261.05",
            "p50": "241.86",
            "p95": "211.57",
            "p99": "193.55",
            "min": "192.51",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "202.56",
            "p50": "194.34",
            "p95": "181.61",
            "p99": "169.56",
            "min": "168.96",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "339.68",
            "p50": "316.21",
            "p95": "276.41",
            "p99": "249.63",
            "min": "243.96",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "298.81",
            "p50": "282.62",
            "p95": "237.13",
            "p99": "223.14",
            "min": "221.27",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8721.10",
            "p50": "3752.03",
            "p95": "2008.35",
            "p99": "1579.13",
            "min": "1523.54",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "3081.19",
            "p50": "1644.23",
            "p95": "903.79",
            "p99": "1639.86",
            "min": "863.75",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "328.62",
            "p50": "301.05",
            "p95": "259.50",
            "p99": "267.06",
            "min": "252.62",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1443.02",
            "p50": "788.74",
            "p95": "347.47",
            "p99": "805.08",
            "min": "323.83",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7630.34",
            "p50": "3244.86",
            "p95": "1432.31",
            "p99": "4074.17",
            "min": "1391.45",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "820.89",
            "p50": "720.39",
            "p95": "524.89",
            "p99": "496.01",
            "min": "489.61",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "818.23",
            "p50": "749.31",
            "p95": "525.82",
            "p99": "430.44",
            "min": "416.80",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "946.41",
            "p50": "809.30",
            "p95": "559.08",
            "p99": "507.19",
            "min": "491.57",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2464.47",
            "p50": "1930.53",
            "p95": "933.30",
            "p99": "737.00",
            "min": "722.53",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2450.90",
            "p50": "2045.02",
            "p95": "1097.66",
            "p99": "784.91",
            "min": "741.00",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "808.08",
            "p50": "746.07",
            "p95": "531.82",
            "p99": "455.03",
            "min": "430.85",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "169.37",
            "p50": "157.98",
            "p95": "144.08",
            "p99": "136.04",
            "min": "135.21",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "567.03",
            "p50": "506.45",
            "p95": "400.05",
            "p99": "348.81",
            "min": "342.79",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "168.68",
            "p50": "158.59",
            "p95": "146.99",
            "p99": "137.95",
            "min": "137.36",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "188.98",
            "p50": "176.33",
            "p95": "158.59",
            "p99": "149.70",
            "min": "148.98",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "31780.34",
            "p50": "8662.13",
            "p95": "2356.81",
            "p99": "1290.53",
            "min": "711.42",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "423.65",
            "p50": "383.07",
            "p95": "317.42",
            "p99": "290.60",
            "min": "289.19",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "400.51",
            "p50": "362.47",
            "p95": "301.83",
            "p99": "273.56",
            "min": "273.52",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "407.89",
            "p50": "366.40",
            "p95": "297.23",
            "p99": "273.68",
            "min": "272.56",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "400.67",
            "p50": "371.18",
            "p95": "309.88",
            "p99": "280.77",
            "min": "278.50",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "17135.37",
            "p50": "5336.12",
            "p95": "2463.41",
            "p99": "2318.61",
            "min": "2284.65",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "16744.47",
            "p50": "5726.32",
            "p95": "2471.36",
            "p99": "2144.83",
            "min": "2118.76",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "16775.57",
            "p50": "5187.90",
            "p95": "2506.30",
            "p99": "2127.19",
            "min": "2126.77",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "17092.79",
            "p50": "5430.63",
            "p95": "2526.76",
            "p99": "2186.56",
            "min": "2097.79",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "15689.29",
            "p50": "5047.28",
            "p95": "2451.75",
            "p99": "1643.85",
            "min": "1612.53",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "16940.77",
            "p50": "5513.71",
            "p95": "2520.24",
            "p99": "2015.70",
            "min": "2005.13",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "263.35",
            "p50": "241.57",
            "p95": "214.38",
            "p99": "196.82",
            "min": "194.57",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "524.14",
            "p50": "492.29",
            "p95": "357.89",
            "p99": "334.46",
            "min": "333.44",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1658.56",
            "p50": "1340.63",
            "p95": "381.24",
            "p99": "294.10",
            "min": "293.29",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "17104.74",
            "p50": "4972.95",
            "p95": "193.22",
            "p99": "179.07",
            "min": "178.59",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1421.05",
            "p50": "1240.21",
            "p95": "750.68",
            "p99": "577.06",
            "min": "559.06",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "49499.43",
            "p50": "8833.19",
            "p95": "2367.70",
            "p99": "1141.87",
            "min": "870.02",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15494.85",
            "p50": "6214.68",
            "p95": "194.95",
            "p99": "179.68",
            "min": "176.85",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "572.31",
            "p50": "502.49",
            "p95": "420.94",
            "p99": "339.94",
            "min": "325.21",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "551.77",
            "p50": "507.70",
            "p95": "355.51",
            "p99": "286.72",
            "min": "284.89",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "201.46",
            "p50": "193.21",
            "p95": "176.95",
            "p99": "166.10",
            "min": "165.69",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "387.15",
            "p50": "359.03",
            "p95": "295.88",
            "p99": "270.57",
            "min": "270.19",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "200.96",
            "p50": "191.58",
            "p95": "172.97",
            "p99": "166.96",
            "min": "166.67",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "340.61",
            "p50": "316.27",
            "p95": "261.05",
            "p99": "230.26",
            "min": "224.50",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "263.32",
            "p50": "243.36",
            "p95": "214.78",
            "p99": "199.59",
            "min": "199.48",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "573.27",
            "p50": "524.94",
            "p95": "411.97",
            "p99": "356.84",
            "min": "351.76",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1467.38",
            "p50": "1207.03",
            "p95": "946.63",
            "p99": "751.66",
            "min": "743.19",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "290.07",
            "p50": "278.44",
            "p95": "248.10",
            "p99": "222.37",
            "min": "218.25",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "138.53",
            "p50": "136.39",
            "p95": "126.68",
            "p99": "119.82",
            "min": "118.86",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "138.24",
            "p50": "136.24",
            "p95": "125.24",
            "p99": "118.25",
            "min": "117.27",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "138.12",
            "p50": "135.74",
            "p95": "123.90",
            "p99": "119.25",
            "min": "118.95",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "233.03",
            "p50": "228.50",
            "p95": "198.26",
            "p99": "164.84",
            "min": "161.39",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "193.06",
            "p50": "187.90",
            "p95": "167.25",
            "p99": "156.52",
            "min": "155.65",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "205.24",
            "p50": "199.85",
            "p95": "175.83",
            "p99": "128.31",
            "min": "110.25",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "191.18",
            "p50": "182.61",
            "p95": "163.55",
            "p99": "141.42",
            "min": "137.33",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "187.18",
            "p50": "180.15",
            "p95": "157.47",
            "p99": "139.07",
            "min": "135.49",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "213.60",
            "p50": "205.23",
            "p95": "181.47",
            "p99": "163.49",
            "min": "160.60",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "184.37",
            "p50": "177.63",
            "p95": "161.06",
            "p99": "143.17",
            "min": "140.49",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "211.86",
            "p50": "203.30",
            "p95": "174.91",
            "p99": "157.46",
            "min": "154.87",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "148.20",
            "p50": "144.09",
            "p95": "131.10",
            "p99": "116.65",
            "min": "113.92",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "231.14",
            "p50": "225.81",
            "p95": "201.29",
            "p99": "189.59",
            "min": "189.38",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "183.97",
            "p50": "178.66",
            "p95": "159.65",
            "p99": "149.58",
            "min": "149.22",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "72.79",
            "p50": "70.60",
            "p95": "66.83",
            "p99": "64.35",
            "min": "63.82",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "142.89",
            "p50": "141.39",
            "p95": "129.08",
            "p99": "129.70",
            "min": "122.60",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "479.60",
            "p50": "384.10",
            "p95": "307.02",
            "p99": "286.26",
            "min": "240.91",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "196.17",
            "p50": "153.22",
            "p95": "141.38",
            "p99": "164.18",
            "min": "140.05",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.63",
            "p50": "132.62",
            "p95": "121.85",
            "p99": "127.11",
            "min": "120.69",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1246.53",
            "p50": "1189.62",
            "p95": "713.83",
            "p99": "579.40",
            "min": "534.30",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1064.64",
            "p50": "1036.86",
            "p95": "653.33",
            "p99": "504.69",
            "min": "483.27",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1490.61",
            "p50": "1365.60",
            "p95": "820.10",
            "p99": "567.42",
            "min": "548.01",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1378.48",
            "p50": "1289.84",
            "p95": "696.66",
            "p99": "536.77",
            "min": "514.79",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1354.34",
            "p50": "1251.63",
            "p95": "746.54",
            "p99": "610.57",
            "min": "577.61",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1101.77",
            "p50": "1069.40",
            "p95": "762.51",
            "p99": "658.85",
            "min": "637.99",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "742.88",
            "p50": "655.06",
            "p95": "475.61",
            "p99": "334.04",
            "min": "306.84",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "738.21",
            "p50": "650.48",
            "p95": "507.14",
            "p99": "405.83",
            "min": "398.32",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "744.43",
            "p50": "634.07",
            "p95": "492.64",
            "p99": "430.44",
            "min": "430.02",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "747.08",
            "p50": "661.03",
            "p95": "508.70",
            "p99": "421.72",
            "min": "403.97",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "296.74",
            "p50": "290.99",
            "p95": "244.59",
            "p99": "222.87",
            "min": "222.48",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "659.60",
            "p50": "552.64",
            "p95": "440.73",
            "p99": "349.61",
            "min": "338.85",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "643.04",
            "p50": "569.45",
            "p95": "463.78",
            "p99": "424.75",
            "min": "424.32",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "651.82",
            "p50": "589.04",
            "p95": "438.83",
            "p99": "312.91",
            "min": "293.85",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "669.37",
            "p50": "582.79",
            "p95": "423.37",
            "p99": "353.14",
            "min": "345.54",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "107.48",
            "p50": "106.19",
            "p95": "99.35",
            "p99": "94.07",
            "min": "92.29",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "107.53",
            "p50": "106.20",
            "p95": "99.16",
            "p99": "94.77",
            "min": "94.17",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "100.02",
            "p50": "98.62",
            "p95": "91.91",
            "p99": "90.18",
            "min": "90.13",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "258.12",
            "p50": "253.90",
            "p95": "222.90",
            "p99": "196.03",
            "min": "194.86",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "100.00",
            "p50": "98.39",
            "p95": "91.61",
            "p99": "89.28",
            "min": "89.25",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "250.65",
            "p50": "245.52",
            "p95": "211.69",
            "p99": "188.65",
            "min": "173.22",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "211.90",
            "p50": "207.83",
            "p95": "185.31",
            "p99": "171.02",
            "min": "170.89",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "240.98",
            "p50": "235.61",
            "p95": "207.56",
            "p99": "185.04",
            "min": "182.56",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "575.01",
            "p50": "558.06",
            "p95": "425.33",
            "p99": "353.14",
            "min": "346.57",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7665.68",
            "p50": "4801.26",
            "p95": "2233.83",
            "p99": "1939.29",
            "min": "1846.80",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "534.63",
            "p50": "522.38",
            "p95": "392.17",
            "p99": "326.54",
            "min": "324.64",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "20339.12",
            "p50": "6814.69",
            "p95": "2515.96",
            "p99": "2160.84",
            "min": "2102.01",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4454.09",
            "p50": "3604.67",
            "p95": "1848.08",
            "p99": "1253.00",
            "min": "1231.29",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "253.11",
            "p50": "216.71",
            "p95": "187.44",
            "p99": "176.27",
            "min": "175.56",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "266.31",
            "p50": "262.30",
            "p95": "231.38",
            "p99": "204.05",
            "min": "202.29",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "148.43",
            "p50": "146.23",
            "p95": "133.32",
            "p99": "126.62",
            "min": "126.41",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "243.73",
            "p50": "239.41",
            "p95": "207.82",
            "p99": "191.62",
            "min": "188.54",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "186.81",
            "p50": "182.83",
            "p95": "159.74",
            "p99": "142.63",
            "min": "139.27",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "221.45",
            "p50": "215.74",
            "p95": "188.34",
            "p99": "152.83",
            "min": "132.78",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "210.72",
            "p50": "207.09",
            "p95": "182.28",
            "p99": "165.93",
            "min": "163.38",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "210.43",
            "p50": "206.83",
            "p95": "189.73",
            "p99": "184.14",
            "min": "183.84",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1328.40",
            "p50": "1167.67",
            "p95": "854.04",
            "p99": "689.68",
            "min": "687.44",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "183.92",
            "p50": "180.34",
            "p95": "161.11",
            "p99": "141.60",
            "min": "138.47",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "192.96",
            "p50": "190.93",
            "p95": "182.59",
            "p99": "175.44",
            "min": "174.88",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "193.01",
            "p50": "190.98",
            "p95": "182.29",
            "p99": "164.93",
            "min": "163.38",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "194.00",
            "p50": "191.82",
            "p95": "183.12",
            "p99": "160.36",
            "min": "160.28",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1148.53",
            "p50": "1113.31",
            "p95": "923.99",
            "p99": "699.24",
            "min": "657.15",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "623.95",
            "p50": "613.18",
            "p95": "530.39",
            "p99": "423.21",
            "min": "419.09",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "676.23",
            "p50": "665.00",
            "p95": "581.18",
            "p99": "435.45",
            "min": "420.10",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "678.81",
            "p50": "663.79",
            "p95": "582.83",
            "p99": "425.16",
            "min": "413.05",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "775.06",
            "p50": "761.84",
            "p95": "553.49",
            "p99": "433.14",
            "min": "432.99",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "912.36",
            "p50": "885.73",
            "p95": "709.57",
            "p99": "536.89",
            "min": "534.04",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "861.62",
            "p50": "829.28",
            "p95": "685.61",
            "p99": "505.99",
            "min": "500.10",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "856.92",
            "p50": "832.48",
            "p95": "638.80",
            "p99": "563.12",
            "min": "555.67",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "842.38",
            "p50": "822.65",
            "p95": "668.22",
            "p99": "467.61",
            "min": "457.52",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "744.22",
            "p50": "728.55",
            "p95": "648.73",
            "p99": "468.78",
            "min": "411.95",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "853.88",
            "p50": "834.04",
            "p95": "709.67",
            "p99": "579.20",
            "min": "558.66",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "118.68",
            "p50": "113.75",
            "p95": "110.95",
            "p99": "107.73",
            "min": "106.20",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "95.52",
            "p50": "94.58",
            "p95": "90.23",
            "p99": "89.24",
            "min": "85.86",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "561.09",
            "p50": "541.87",
            "p95": "463.00",
            "p99": "418.51",
            "min": "385.06",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "128.92",
            "p50": "103.52",
            "p95": "96.12",
            "p99": "109.83",
            "min": "95.43",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "89.74",
            "p50": "87.76",
            "p95": "85.58",
            "p99": "85.45",
            "min": "82.21",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1877.43",
            "p50": "1819.38",
            "p95": "1218.60",
            "p99": "797.79",
            "min": "776.31",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1639.24",
            "p50": "1588.00",
            "p95": "1112.25",
            "p99": "802.40",
            "min": "651.42",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2395.55",
            "p50": "2274.75",
            "p95": "1536.72",
            "p99": "996.52",
            "min": "986.42",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2376.31",
            "p50": "2272.03",
            "p95": "1470.94",
            "p99": "869.07",
            "min": "816.85",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2362.09",
            "p50": "2260.81",
            "p95": "1408.93",
            "p99": "772.81",
            "min": "733.81",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1696.45",
            "p50": "1638.75",
            "p95": "1159.00",
            "p99": "764.54",
            "min": "709.67",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "818.12",
            "p50": "793.37",
            "p95": "673.14",
            "p99": "552.97",
            "min": "542.56",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "819.81",
            "p50": "795.30",
            "p95": "643.61",
            "p99": "509.28",
            "min": "496.67",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "824.94",
            "p50": "802.12",
            "p95": "685.42",
            "p99": "466.47",
            "min": "434.04",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "826.30",
            "p50": "802.87",
            "p95": "684.06",
            "p99": "458.60",
            "min": "456.97",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.53",
            "p50": "86.77",
            "p95": "83.34",
            "p99": "81.65",
            "min": "81.21",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "740.69",
            "p50": "716.06",
            "p95": "592.58",
            "p99": "506.92",
            "min": "499.40",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "708.03",
            "p50": "677.73",
            "p95": "583.17",
            "p99": "521.10",
            "min": "512.60",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "700.49",
            "p50": "677.24",
            "p95": "554.42",
            "p99": "352.38",
            "min": "323.82",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "701.45",
            "p50": "678.09",
            "p95": "593.50",
            "p99": "503.27",
            "min": "487.41",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2041.35",
            "p50": "1962.90",
            "p95": "1083.60",
            "p99": "879.35",
            "min": "874.62",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2341.03",
            "p50": "2240.61",
            "p95": "1348.41",
            "p99": "880.99",
            "min": "857.65",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.42",
            "p50": "71.81",
            "p95": "70.86",
            "p99": "67.05",
            "min": "66.43",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9825.02",
            "p50": "7436.23",
            "p95": "2401.25",
            "p99": "1969.57",
            "min": "1942.12",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.47",
            "p50": "71.99",
            "p95": "70.54",
            "p99": "68.63",
            "min": "68.60",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "223.64",
            "p50": "221.18",
            "p95": "211.27",
            "p99": "187.34",
            "min": "182.73",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "853.30",
            "p50": "830.24",
            "p95": "625.34",
            "p99": "457.57",
            "min": "434.48",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "667.75",
            "p50": "653.54",
            "p95": "595.15",
            "p99": "525.58",
            "min": "499.03",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2385.01",
            "p50": "2224.41",
            "p95": "1372.59",
            "p99": "817.73",
            "min": "655.10",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "21237.19",
            "p50": "8552.46",
            "p95": "2471.62",
            "p99": "1717.91",
            "min": "1439.88",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2202.03",
            "p50": "2065.39",
            "p95": "1202.16",
            "p99": "712.32",
            "min": "690.46",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "83268.34",
            "p50": "8816.34",
            "p95": "2406.11",
            "p99": "1978.77",
            "min": "1899.63",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "18046.13",
            "p50": "8485.80",
            "p95": "2512.88",
            "p99": "2079.15",
            "min": "1839.39",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "836.71",
            "p50": "714.04",
            "p95": "566.19",
            "p99": "489.82",
            "min": "478.84",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "931.23",
            "p50": "904.46",
            "p95": "639.13",
            "p99": "565.23",
            "min": "563.49",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "841.81",
            "p50": "817.30",
            "p95": "665.18",
            "p99": "463.37",
            "min": "453.58",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1159.90",
            "p50": "1126.50",
            "p95": "928.45",
            "p99": "650.07",
            "min": "600.86",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "775.04",
            "p50": "757.80",
            "p95": "657.78",
            "p99": "474.81",
            "min": "460.90",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1147.80",
            "p50": "1104.78",
            "p95": "829.08",
            "p99": "609.45",
            "min": "554.22",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "811.39",
            "p50": "787.83",
            "p95": "645.05",
            "p99": "459.80",
            "min": "431.10",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "883.44",
            "p50": "861.84",
            "p95": "704.07",
            "p99": "517.99",
            "min": "494.43",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2216.93",
            "p50": "2042.66",
            "p95": "1662.33",
            "p99": "1314.16",
            "min": "1303.84",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "857.85",
            "p50": "831.09",
            "p95": "704.91",
            "p99": "474.51",
            "min": "471.07",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "124.83",
            "p50": "120.86",
            "p95": "110.78",
            "p99": "99.77",
            "min": "98.74",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "124.70",
            "p50": "120.28",
            "p95": "105.56",
            "p99": "98.61",
            "min": "98.48",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "124.80",
            "p50": "120.83",
            "p95": "106.93",
            "p99": "102.72",
            "min": "102.53",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "210.88",
            "p50": "194.41",
            "p95": "158.67",
            "p99": "106.10",
            "min": "80.47",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "103.70",
            "p50": "99.58",
            "p95": "85.84",
            "p99": "81.85",
            "min": "81.66",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.28",
            "p50": "103.33",
            "p95": "91.35",
            "p99": "80.34",
            "min": "78.04",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "139.63",
            "p50": "131.57",
            "p95": "107.21",
            "p99": "87.60",
            "min": "84.76",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "139.80",
            "p50": "130.03",
            "p95": "111.20",
            "p99": "102.93",
            "min": "102.77",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "183.93",
            "p50": "166.10",
            "p95": "128.43",
            "p99": "119.27",
            "min": "118.92",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "178.37",
            "p50": "164.62",
            "p95": "128.29",
            "p99": "119.02",
            "min": "118.99",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "177.73",
            "p50": "164.89",
            "p95": "134.16",
            "p99": "122.77",
            "min": "121.55",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.63",
            "p50": "121.08",
            "p95": "106.42",
            "p99": "96.53",
            "min": "96.07",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "202.42",
            "p50": "183.96",
            "p95": "147.07",
            "p99": "137.00",
            "min": "136.77",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "184.93",
            "p50": "167.51",
            "p95": "135.29",
            "p99": "126.57",
            "min": "126.52",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "75.43",
            "p50": "71.11",
            "p95": "62.92",
            "p99": "61.06",
            "min": "60.89",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "130.92",
            "p50": "121.42",
            "p95": "100.93",
            "p99": "107.23",
            "min": "94.47",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "213.15",
            "p50": "188.84",
            "p95": "145.32",
            "p99": "154.70",
            "min": "140.99",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "156.54",
            "p50": "135.27",
            "p95": "131.99",
            "p99": "142.31",
            "min": "131.58",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "127.61",
            "p50": "117.47",
            "p95": "99.33",
            "p99": "110.42",
            "min": "97.46",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1036.91",
            "p50": "674.07",
            "p95": "361.45",
            "p99": "266.21",
            "min": "265.83",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1015.15",
            "p50": "667.39",
            "p95": "348.14",
            "p99": "273.65",
            "min": "264.68",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1133.87",
            "p50": "729.78",
            "p95": "347.64",
            "p99": "265.04",
            "min": "262.33",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1073.91",
            "p50": "700.16",
            "p95": "372.17",
            "p99": "260.65",
            "min": "259.42",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1018.66",
            "p50": "665.76",
            "p95": "348.79",
            "p99": "261.00",
            "min": "260.18",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1015.56",
            "p50": "702.99",
            "p95": "339.75",
            "p99": "255.90",
            "min": "252.25",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "336.09",
            "p50": "288.29",
            "p95": "206.53",
            "p99": "179.50",
            "min": "176.58",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "341.80",
            "p50": "289.99",
            "p95": "211.99",
            "p99": "176.97",
            "min": "176.62",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "331.52",
            "p50": "290.76",
            "p95": "203.23",
            "p99": "177.55",
            "min": "176.37",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "373.26",
            "p50": "311.86",
            "p95": "223.62",
            "p99": "201.16",
            "min": "199.49",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "286.02",
            "p50": "250.36",
            "p95": "186.27",
            "p99": "167.36",
            "min": "160.23",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "284.99",
            "p50": "251.27",
            "p95": "174.23",
            "p99": "162.92",
            "min": "161.49",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "287.23",
            "p50": "246.82",
            "p95": "187.15",
            "p99": "161.86",
            "min": "161.54",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "288.96",
            "p50": "251.65",
            "p95": "191.08",
            "p99": "169.39",
            "min": "168.81",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "291.06",
            "p50": "252.97",
            "p95": "174.34",
            "p99": "164.51",
            "min": "164.45",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.32",
            "p50": "100.03",
            "p95": "86.99",
            "p99": "81.55",
            "min": "80.92",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.13",
            "p50": "99.32",
            "p95": "87.03",
            "p99": "80.35",
            "min": "80.00",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.43",
            "p50": "92.68",
            "p95": "80.73",
            "p99": "78.45",
            "min": "78.14",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "248.07",
            "p50": "220.45",
            "p95": "158.92",
            "p99": "150.85",
            "min": "150.54",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "96.34",
            "p50": "92.33",
            "p95": "79.30",
            "p99": "77.76",
            "min": "77.73",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "240.88",
            "p50": "214.29",
            "p95": "168.21",
            "p99": "146.06",
            "min": "145.95",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "182.05",
            "p50": "168.21",
            "p95": "132.87",
            "p99": "120.46",
            "min": "120.43",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "149.42",
            "p50": "138.07",
            "p95": "118.25",
            "p99": "105.58",
            "min": "103.60",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "439.78",
            "p50": "392.72",
            "p95": "241.04",
            "p99": "214.78",
            "min": "214.33",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "6263.73",
            "p50": "2241.84",
            "p95": "690.11",
            "p99": "502.99",
            "min": "449.04",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "442.67",
            "p50": "392.44",
            "p95": "271.82",
            "p99": "226.39",
            "min": "225.31",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14726.01",
            "p50": "3872.06",
            "p95": "1266.04",
            "p99": "917.11",
            "min": "864.88",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3492.18",
            "p50": "2001.75",
            "p95": "599.82",
            "p99": "529.88",
            "min": "506.51",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "210.47",
            "p50": "196.44",
            "p95": "166.10",
            "p99": "154.17",
            "min": "153.83",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "231.43",
            "p50": "218.79",
            "p95": "184.37",
            "p99": "157.77",
            "min": "157.21",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "131.07",
            "p50": "121.76",
            "p95": "103.38",
            "p99": "95.27",
            "min": "94.95",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "212.05",
            "p50": "188.59",
            "p95": "148.72",
            "p99": "121.66",
            "min": "115.30",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "138.12",
            "p50": "129.59",
            "p95": "110.38",
            "p99": "103.12",
            "min": "103.10",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "176.93",
            "p50": "161.19",
            "p95": "128.95",
            "p99": "106.94",
            "min": "102.96",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "175.96",
            "p50": "162.59",
            "p95": "131.32",
            "p99": "118.02",
            "min": "117.89",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "182.55",
            "p50": "166.87",
            "p95": "137.93",
            "p99": "126.35",
            "min": "126.11",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "310.08",
            "p50": "241.37",
            "p95": "54.65",
            "p99": "50.47",
            "min": "50.40",
            "n": "106",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "145.73",
            "p50": "138.95",
            "p95": "59.24",
            "p99": "57.32",
            "min": "57.30",
            "n": "110",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.14",
            "p50": "83.80",
            "p95": "74.80",
            "p99": "71.28",
            "min": "71.13",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "89.26",
            "p50": "84.90",
            "p95": "81.32",
            "p99": "80.23",
            "min": "80.18",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "88.79",
            "p50": "84.33",
            "p95": "80.57",
            "p99": "72.87",
            "min": "71.27",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "190.95",
            "p50": "181.12",
            "p95": "175.02",
            "p99": "140.73",
            "min": "134.32",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "90.66",
            "p50": "89.50",
            "p95": "84.97",
            "p99": "82.59",
            "min": "82.53",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.54",
            "p50": "107.65",
            "p95": "103.61",
            "p99": "101.29",
            "min": "101.16",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "123.43",
            "p50": "119.55",
            "p95": "104.44",
            "p99": "90.05",
            "min": "88.50",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "125.58",
            "p50": "121.47",
            "p95": "118.11",
            "p99": "115.91",
            "min": "115.80",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "97.14",
            "p50": "93.27",
            "p95": "73.47",
            "p99": "72.38",
            "min": "72.21",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.39",
            "p50": "95.85",
            "p95": "87.38",
            "p99": "84.32",
            "min": "84.31",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.44",
            "p50": "95.70",
            "p95": "87.72",
            "p99": "83.99",
            "min": "83.45",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.78",
            "p50": "121.44",
            "p95": "111.05",
            "p99": "108.80",
            "min": "108.53",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "122.17",
            "p50": "112.77",
            "p95": "104.22",
            "p99": "92.02",
            "min": "90.68",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "115.80",
            "p50": "113.23",
            "p95": "96.17",
            "p99": "86.59",
            "min": "84.65",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "89.33",
            "p50": "83.75",
            "p95": "77.33",
            "p99": "71.63",
            "min": "69.57",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "101.07",
            "p50": "99.62",
            "p95": "94.41",
            "p99": "94.56",
            "min": "91.05",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "70.63",
            "p50": "67.61",
            "p95": "65.90",
            "p99": "62.99",
            "min": "61.20",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "159.29",
            "p50": "126.95",
            "p95": "119.14",
            "p99": "136.29",
            "min": "118.94",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "109.34",
            "p50": "107.57",
            "p95": "104.79",
            "p99": "105.93",
            "min": "103.35",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "413.24",
            "p50": "399.89",
            "p95": "358.11",
            "p99": "324.20",
            "min": "322.21",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "486.33",
            "p50": "477.38",
            "p95": "438.48",
            "p99": "398.46",
            "min": "396.28",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "432.89",
            "p50": "417.15",
            "p95": "398.40",
            "p99": "340.97",
            "min": "324.27",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "442.30",
            "p50": "423.55",
            "p95": "398.99",
            "p99": "377.27",
            "min": "375.80",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "440.56",
            "p50": "425.61",
            "p95": "392.90",
            "p99": "383.92",
            "min": "382.58",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "466.19",
            "p50": "455.27",
            "p95": "418.07",
            "p99": "346.91",
            "min": "323.22",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "114.95",
            "p50": "110.03",
            "p95": "105.15",
            "p99": "103.35",
            "min": "103.13",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "116.00",
            "p50": "110.61",
            "p95": "107.07",
            "p99": "104.75",
            "min": "104.71",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "114.27",
            "p50": "108.75",
            "p95": "104.36",
            "p99": "101.70",
            "min": "101.50",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "100.25",
            "p50": "96.23",
            "p95": "93.50",
            "p99": "91.41",
            "min": "91.39",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.37",
            "p50": "85.85",
            "p95": "84.52",
            "p99": "82.52",
            "min": "81.93",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "111.70",
            "p50": "105.50",
            "p95": "102.31",
            "p99": "99.70",
            "min": "99.69",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "106.58",
            "p50": "101.03",
            "p95": "97.82",
            "p99": "95.76",
            "min": "95.59",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "106.42",
            "p50": "100.05",
            "p95": "97.01",
            "p99": "92.27",
            "min": "92.13",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "106.22",
            "p50": "100.05",
            "p95": "97.79",
            "p99": "96.26",
            "min": "96.12",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1517.41",
            "p50": "1368.14",
            "p95": "668.87",
            "p99": "327.82",
            "min": "277.18",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1546.45",
            "p50": "1347.60",
            "p95": "698.92",
            "p99": "594.83",
            "min": "588.96",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "156.15",
            "p50": "153.65",
            "p95": "139.01",
            "p99": "129.22",
            "min": "128.68",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3742.46",
            "p50": "3324.87",
            "p95": "1346.95",
            "p99": "886.99",
            "min": "869.71",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "156.51",
            "p50": "153.55",
            "p95": "142.81",
            "p99": "107.71",
            "min": "95.82",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3703.87",
            "p50": "3260.01",
            "p95": "1212.19",
            "p99": "675.58",
            "min": "645.10",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "99.06",
            "p50": "96.94",
            "p95": "89.51",
            "p99": "86.05",
            "min": "85.71",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "186.86",
            "p50": "180.58",
            "p95": "176.65",
            "p99": "163.17",
            "min": "163.10",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "347.87",
            "p50": "261.19",
            "p95": "214.03",
            "p99": "181.95",
            "min": "177.22",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9238.71",
            "p50": "1553.95",
            "p95": "864.54",
            "p99": "717.80",
            "min": "644.58",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "342.43",
            "p50": "257.25",
            "p95": "217.56",
            "p99": "185.58",
            "min": "184.52",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "23897.78",
            "p50": "8535.96",
            "p95": "2478.33",
            "p99": "2043.37",
            "min": "1880.09",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6018.92",
            "p50": "3261.86",
            "p95": "1583.92",
            "p99": "571.32",
            "min": "485.56",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "290.87",
            "p50": "231.25",
            "p95": "179.34",
            "p99": "140.22",
            "min": "139.53",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "153.46",
            "p50": "133.37",
            "p95": "116.06",
            "p99": "110.40",
            "min": "110.14",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "123.31",
            "p50": "118.99",
            "p95": "95.30",
            "p99": "90.68",
            "min": "90.34",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "131.28",
            "p50": "124.18",
            "p95": "119.18",
            "p99": "115.95",
            "min": "114.94",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "125.35",
            "p50": "119.38",
            "p95": "112.08",
            "p99": "109.82",
            "min": "109.81",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "163.42",
            "p50": "152.24",
            "p95": "147.02",
            "p99": "129.60",
            "min": "118.84",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "96.14",
            "p50": "92.44",
            "p95": "89.29",
            "p99": "87.76",
            "min": "87.72",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "118.21",
            "p50": "112.13",
            "p95": "109.15",
            "p99": "105.94",
            "min": "105.76",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1202.13",
            "p50": "1133.00",
            "p95": "370.92",
            "p99": "357.74",
            "min": "357.28",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "127.79",
            "p50": "121.39",
            "p95": "110.82",
            "p99": "108.57",
            "min": "108.52",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}