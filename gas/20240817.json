{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "169.66",
            "p50": "168.34",
            "p95": "155.95",
            "p99": "150.64",
            "min": "150.60",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "170.12",
            "p50": "168.73",
            "p95": "161.74",
            "p99": "160.90",
            "min": "160.90",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "169.70",
            "p50": "168.19",
            "p95": "162.24",
            "p99": "160.85",
            "min": "160.71",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "760.44",
            "p50": "747.80",
            "p95": "449.14",
            "p99": "433.99",
            "min": "431.90",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "403.48",
            "p50": "396.27",
            "p95": "386.11",
            "p99": "353.53",
            "min": "347.32",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "440.55",
            "p50": "431.02",
            "p95": "420.84",
            "p99": "404.79",
            "min": "404.10",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "325.83",
            "p50": "318.19",
            "p95": "304.38",
            "p99": "289.06",
            "min": "287.07",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "187.92",
            "p50": "184.41",
            "p95": "180.96",
            "p99": "164.47",
            "min": "162.87",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "271.76",
            "p50": "266.56",
            "p95": "247.37",
            "p99": "230.61",
            "min": "228.96",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "264.88",
            "p50": "261.21",
            "p95": "241.74",
            "p99": "232.25",
            "min": "230.23",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "266.10",
            "p50": "263.17",
            "p95": "243.40",
            "p99": "237.89",
            "min": "237.06",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "190.72",
            "p50": "187.91",
            "p95": "184.03",
            "p99": "177.59",
            "min": "177.42",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "320.30",
            "p50": "315.98",
            "p95": "303.35",
            "p99": "294.04",
            "min": "291.45",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "310.57",
            "p50": "303.70",
            "p95": "282.70",
            "p99": "280.73",
            "min": "280.61",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "111.11",
            "p50": "106.77",
            "p95": "104.49",
            "p99": "103.51",
            "min": "103.34",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "170.23",
            "p50": "168.10",
            "p95": "160.59",
            "p99": "162.17",
            "min": "157.84",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "297.07",
            "p50": "248.46",
            "p95": "231.45",
            "p99": "243.18",
            "min": "230.54",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "242.62",
            "p50": "193.89",
            "p95": "182.04",
            "p99": "207.81",
            "min": "181.55",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "167.21",
            "p50": "164.34",
            "p95": "163.20",
            "p99": "164.80",
            "min": "162.99",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "891.89",
            "p50": "826.20",
            "p95": "788.71",
            "p99": "780.55",
            "min": "778.32",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "842.03",
            "p50": "815.76",
            "p95": "788.64",
            "p99": "760.97",
            "min": "757.56",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1048.73",
            "p50": "951.88",
            "p95": "887.70",
            "p99": "843.05",
            "min": "831.82",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1077.08",
            "p50": "971.73",
            "p95": "931.95",
            "p99": "889.69",
            "min": "876.42",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1085.73",
            "p50": "978.83",
            "p95": "933.55",
            "p99": "902.63",
            "min": "900.04",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "850.97",
            "p50": "819.41",
            "p95": "792.44",
            "p99": "765.69",
            "min": "763.73",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "198.12",
            "p50": "186.04",
            "p95": "180.34",
            "p99": "176.49",
            "min": "176.28",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "196.92",
            "p50": "186.36",
            "p95": "179.55",
            "p99": "173.93",
            "min": "173.67",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "197.93",
            "p50": "187.18",
            "p95": "181.05",
            "p99": "174.95",
            "min": "174.59",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "223.21",
            "p50": "212.33",
            "p95": "205.68",
            "p99": "201.78",
            "min": "201.63",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.80",
            "p50": "87.22",
            "p95": "86.52",
            "p99": "85.48",
            "min": "85.48",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "346.41",
            "p50": "309.10",
            "p95": "287.76",
            "p99": "66.79",
            "min": "55.23",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "332.17",
            "p50": "297.81",
            "p95": "288.23",
            "p99": "282.36",
            "min": "281.93",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "333.29",
            "p50": "302.35",
            "p95": "292.13",
            "p99": "190.14",
            "min": "165.00",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "336.04",
            "p50": "301.40",
            "p95": "289.69",
            "p99": "271.48",
            "min": "267.92",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2401.26",
            "p50": "2256.73",
            "p95": "2035.47",
            "p99": "1296.99",
            "min": "1253.12",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2317.42",
            "p50": "2195.49",
            "p95": "1939.33",
            "p99": "136.77",
            "min": "136.15",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "93.97",
            "p50": "93.24",
            "p95": "92.13",
            "p99": "89.94",
            "min": "89.42",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "5630.40",
            "p50": "5101.18",
            "p95": "2587.22",
            "p99": "1390.15",
            "min": "1268.42",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "94.03",
            "p50": "93.29",
            "p95": "92.42",
            "p99": "91.40",
            "min": "91.23",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3209.92",
            "p50": "2991.65",
            "p95": "2249.81",
            "p99": "751.20",
            "min": "50.08",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "264.25",
            "p50": "259.25",
            "p95": "244.29",
            "p99": "238.47",
            "min": "238.00",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "539.83",
            "p50": "530.84",
            "p95": "514.67",
            "p99": "468.42",
            "min": "463.52",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1264.64",
            "p50": "1217.87",
            "p95": "387.79",
            "p99": "375.93",
            "min": "375.35",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "17252.00",
            "p50": "8044.92",
            "p95": "2552.90",
            "p99": "1468.26",
            "min": "1391.14",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1162.80",
            "p50": "1119.87",
            "p95": "347.83",
            "p99": "338.98",
            "min": "334.66",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "49532.99",
            "p50": "9393.80",
            "p95": "2551.48",
            "p99": "1286.08",
            "min": "1022.11",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "16364.17",
            "p50": "7129.90",
            "p95": "2625.55",
            "p99": "1769.42",
            "min": "1606.78",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "538.93",
            "p50": "495.82",
            "p95": "441.90",
            "p99": "397.58",
            "min": "392.44",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "519.57",
            "p50": "509.72",
            "p95": "374.68",
            "p99": "370.10",
            "min": "369.93",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "203.79",
            "p50": "201.14",
            "p95": "197.01",
            "p99": "193.74",
            "min": "193.07",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "440.31",
            "p50": "434.50",
            "p95": "421.85",
            "p99": "417.65",
            "min": "416.68",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "204.74",
            "p50": "202.08",
            "p95": "198.12",
            "p99": "193.93",
            "min": "193.62",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "330.96",
            "p50": "320.68",
            "p95": "307.23",
            "p99": "285.29",
            "min": "274.07",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "270.95",
            "p50": "267.07",
            "p95": "251.42",
            "p99": "244.75",
            "min": "243.81",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "512.42",
            "p50": "505.74",
            "p95": "493.23",
            "p99": "398.80",
            "min": "354.66",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1459.31",
            "p50": "1185.98",
            "p95": "835.73",
            "p99": "754.44",
            "min": "750.43",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "317.40",
            "p50": "311.13",
            "p95": "299.00",
            "p99": "294.64",
            "min": "294.30",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.76",
            "p50": "85.37",
            "p95": "79.17",
            "p99": "76.13",
            "min": "76.04",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "81.07",
            "p50": "77.85",
            "p95": "73.13",
            "p99": "70.63",
            "min": "70.33",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "82.57",
            "p50": "79.46",
            "p95": "74.00",
            "p99": "70.09",
            "min": "69.97",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "225.15",
            "p50": "209.21",
            "p95": "175.41",
            "p99": "155.79",
            "min": "150.45",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "175.40",
            "p50": "163.26",
            "p95": "142.90",
            "p99": "107.48",
            "min": "102.94",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "182.49",
            "p50": "170.27",
            "p95": "145.02",
            "p99": "109.19",
            "min": "97.46",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "167.94",
            "p50": "158.16",
            "p95": "138.65",
            "p99": "127.94",
            "min": "127.20",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "170.65",
            "p50": "157.05",
            "p95": "135.92",
            "p99": "133.01",
            "min": "132.88",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "190.12",
            "p50": "177.59",
            "p95": "149.24",
            "p99": "134.01",
            "min": "130.24",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "170.34",
            "p50": "160.38",
            "p95": "136.76",
            "p99": "121.63",
            "min": "120.97",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "191.35",
            "p50": "179.82",
            "p95": "154.45",
            "p99": "146.01",
            "min": "145.75",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "141.01",
            "p50": "132.11",
            "p95": "119.38",
            "p99": "109.05",
            "min": "107.79",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "216.49",
            "p50": "202.55",
            "p95": "170.10",
            "p99": "112.38",
            "min": "92.43",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "171.84",
            "p50": "160.61",
            "p95": "142.09",
            "p99": "113.80",
            "min": "110.42",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.49",
            "p50": "64.98",
            "p95": "61.18",
            "p99": "58.37",
            "min": "58.28",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "140.61",
            "p50": "129.41",
            "p95": "112.61",
            "p99": "121.43",
            "min": "111.10",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "398.08",
            "p50": "313.94",
            "p95": "228.41",
            "p99": "239.08",
            "min": "201.78",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "174.62",
            "p50": "144.01",
            "p95": "134.52",
            "p99": "151.38",
            "min": "133.85",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "130.72",
            "p50": "122.70",
            "p95": "113.50",
            "p99": "118.96",
            "min": "110.10",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1144.24",
            "p50": "921.07",
            "p95": "585.50",
            "p99": "432.17",
            "min": "419.96",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1031.99",
            "p50": "846.40",
            "p95": "511.05",
            "p99": "416.08",
            "min": "414.80",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1355.06",
            "p50": "979.88",
            "p95": "540.52",
            "p99": "451.80",
            "min": "422.86",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1281.17",
            "p50": "948.40",
            "p95": "499.21",
            "p99": "427.41",
            "min": "403.75",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1246.95",
            "p50": "900.25",
            "p95": "567.53",
            "p99": "446.45",
            "min": "438.47",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1086.95",
            "p50": "835.94",
            "p95": "517.85",
            "p99": "475.66",
            "min": "459.51",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "644.72",
            "p50": "509.64",
            "p95": "357.49",
            "p99": "269.95",
            "min": "263.15",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "660.08",
            "p50": "534.60",
            "p95": "375.24",
            "p99": "320.09",
            "min": "319.42",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "639.68",
            "p50": "522.41",
            "p95": "378.76",
            "p99": "345.92",
            "min": "345.23",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "658.84",
            "p50": "541.34",
            "p95": "383.84",
            "p99": "291.42",
            "min": "281.53",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "292.64",
            "p50": "266.90",
            "p95": "211.56",
            "p99": "191.36",
            "min": "189.76",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "547.86",
            "p50": "433.89",
            "p95": "321.81",
            "p99": "272.45",
            "min": "263.83",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "547.17",
            "p50": "443.50",
            "p95": "328.71",
            "p99": "298.00",
            "min": "296.80",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "560.44",
            "p50": "448.99",
            "p95": "343.19",
            "p99": "294.96",
            "min": "290.70",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "566.66",
            "p50": "474.41",
            "p95": "332.73",
            "p99": "301.54",
            "min": "297.69",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.63",
            "p50": "102.44",
            "p95": "93.46",
            "p99": "88.10",
            "min": "85.86",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.26",
            "p50": "102.27",
            "p95": "93.47",
            "p99": "88.57",
            "min": "86.99",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.11",
            "p50": "95.22",
            "p95": "86.11",
            "p99": "78.75",
            "min": "76.65",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "253.37",
            "p50": "233.65",
            "p95": "183.94",
            "p99": "171.95",
            "min": "167.80",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.65",
            "p50": "95.07",
            "p95": "85.92",
            "p99": "79.91",
            "min": "79.68",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "247.82",
            "p50": "226.83",
            "p95": "190.48",
            "p99": "171.93",
            "min": "171.90",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "195.79",
            "p50": "181.97",
            "p95": "149.21",
            "p99": "141.82",
            "min": "140.85",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "199.23",
            "p50": "186.35",
            "p95": "165.05",
            "p99": "151.27",
            "min": "146.83",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "358.25",
            "p50": "314.04",
            "p95": "257.67",
            "p99": "206.25",
            "min": "189.75",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5627.37",
            "p50": "2351.19",
            "p95": "975.46",
            "p99": "743.18",
            "min": "660.00",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "341.42",
            "p50": "308.26",
            "p95": "248.88",
            "p99": "204.11",
            "min": "185.58",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14482.13",
            "p50": "3902.68",
            "p95": "1414.86",
            "p99": "678.77",
            "min": "577.26",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3206.47",
            "p50": "1778.27",
            "p95": "800.17",
            "p99": "569.47",
            "min": "543.52",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "177.81",
            "p50": "165.65",
            "p95": "147.17",
            "p99": "127.42",
            "min": "127.05",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "247.04",
            "p50": "227.96",
            "p95": "195.32",
            "p99": "172.49",
            "min": "170.73",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "91.77",
            "p50": "87.75",
            "p95": "81.13",
            "p99": "64.95",
            "min": "59.38",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "223.74",
            "p50": "207.43",
            "p95": "172.36",
            "p99": "159.32",
            "min": "158.69",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "170.00",
            "p50": "159.98",
            "p95": "142.82",
            "p99": "137.08",
            "min": "136.97",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "201.99",
            "p50": "188.46",
            "p95": "166.21",
            "p99": "146.16",
            "min": "143.46",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "193.54",
            "p50": "181.07",
            "p95": "149.56",
            "p99": "143.26",
            "min": "142.41",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "195.96",
            "p50": "182.75",
            "p95": "153.44",
            "p99": "128.23",
            "min": "120.57",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1129.59",
            "p50": "877.06",
            "p95": "574.10",
            "p99": "475.47",
            "min": "471.96",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "176.53",
            "p50": "164.50",
            "p95": "122.90",
            "p99": "110.65",
            "min": "109.62",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.66",
            "p50": "190.54",
            "p95": "174.57",
            "p99": "168.42",
            "min": "168.25",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.11",
            "p50": "188.96",
            "p95": "172.59",
            "p99": "163.15",
            "min": "163.11",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "194.95",
            "p50": "187.99",
            "p95": "168.65",
            "p99": "161.79",
            "min": "161.65",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1186.71",
            "p50": "1136.57",
            "p95": "694.43",
            "p99": "529.73",
            "min": "524.57",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "701.22",
            "p50": "636.59",
            "p95": "455.68",
            "p99": "402.82",
            "min": "400.62",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "807.92",
            "p50": "738.84",
            "p95": "520.49",
            "p99": "327.51",
            "min": "281.98",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "722.12",
            "p50": "642.80",
            "p95": "492.03",
            "p99": "408.36",
            "min": "408.24",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "729.26",
            "p50": "666.61",
            "p95": "490.04",
            "p99": "413.30",
            "min": "412.57",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "861.47",
            "p50": "788.87",
            "p95": "534.25",
            "p99": "463.70",
            "min": "452.16",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "864.67",
            "p50": "777.13",
            "p95": "560.80",
            "p99": "451.92",
            "min": "450.99",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "863.08",
            "p50": "828.12",
            "p95": "525.77",
            "p99": "452.80",
            "min": "451.04",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "822.30",
            "p50": "724.55",
            "p95": "503.38",
            "p99": "437.81",
            "min": "426.46",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "842.24",
            "p50": "790.86",
            "p95": "582.79",
            "p99": "501.30",
            "min": "499.01",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "861.02",
            "p50": "791.42",
            "p95": "492.67",
            "p99": "433.92",
            "min": "430.32",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "64.50",
            "p50": "62.59",
            "p95": "60.29",
            "p99": "58.92",
            "min": "58.75",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "90.32",
            "p50": "89.57",
            "p95": "85.71",
            "p99": "85.34",
            "min": "82.66",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "502.97",
            "p50": "460.95",
            "p95": "359.70",
            "p99": "379.81",
            "min": "350.92",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "123.29",
            "p50": "97.08",
            "p95": "90.05",
            "p99": "103.92",
            "min": "89.31",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "84.45",
            "p50": "81.13",
            "p95": "79.10",
            "p99": "80.50",
            "min": "77.51",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1808.27",
            "p50": "1623.64",
            "p95": "874.31",
            "p99": "738.73",
            "min": "729.75",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1640.32",
            "p50": "1459.07",
            "p95": "845.89",
            "p99": "632.06",
            "min": "614.67",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2255.66",
            "p50": "1956.97",
            "p95": "956.15",
            "p99": "735.62",
            "min": "723.60",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2243.60",
            "p50": "1869.80",
            "p95": "946.88",
            "p99": "691.37",
            "min": "687.09",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2218.51",
            "p50": "1679.42",
            "p95": "820.08",
            "p99": "684.70",
            "min": "681.96",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1678.98",
            "p50": "1543.99",
            "p95": "854.60",
            "p99": "615.92",
            "min": "605.06",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "724.39",
            "p50": "636.34",
            "p95": "490.56",
            "p99": "414.75",
            "min": "413.31",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "739.67",
            "p50": "653.51",
            "p95": "504.40",
            "p99": "417.39",
            "min": "416.76",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "729.84",
            "p50": "638.22",
            "p95": "480.14",
            "p99": "415.35",
            "min": "415.27",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "746.04",
            "p50": "663.38",
            "p95": "484.01",
            "p99": "429.79",
            "min": "423.26",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.68",
            "p50": "85.73",
            "p95": "81.66",
            "p99": "80.67",
            "min": "80.63",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "652.26",
            "p50": "581.41",
            "p95": "456.53",
            "p99": "388.26",
            "min": "387.39",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "617.32",
            "p50": "553.63",
            "p95": "440.73",
            "p99": "395.46",
            "min": "392.02",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "607.45",
            "p50": "549.74",
            "p95": "428.23",
            "p99": "371.51",
            "min": "367.75",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "624.35",
            "p50": "557.52",
            "p95": "415.83",
            "p99": "395.93",
            "min": "395.84",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1934.67",
            "p50": "1625.30",
            "p95": "791.35",
            "p99": "617.15",
            "min": "603.87",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2224.33",
            "p50": "1854.99",
            "p95": "1042.57",
            "p99": "707.86",
            "min": "676.39",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.83",
            "p50": "72.10",
            "p95": "69.13",
            "p99": "67.64",
            "min": "67.55",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9364.06",
            "p50": "4463.16",
            "p95": "2502.93",
            "p99": "1768.60",
            "min": "1732.52",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.89",
            "p50": "71.95",
            "p95": "68.96",
            "p99": "67.26",
            "min": "67.08",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "221.65",
            "p50": "218.06",
            "p95": "191.78",
            "p99": "183.32",
            "min": "181.76",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "864.68",
            "p50": "756.23",
            "p95": "566.75",
            "p99": "436.63",
            "min": "430.49",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.57",
            "p50": "625.00",
            "p95": "452.17",
            "p99": "409.00",
            "min": "393.90",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1065.80",
            "p50": "1003.02",
            "p95": "660.55",
            "p99": "574.78",
            "min": "569.60",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "27368.94",
            "p50": "9081.05",
            "p95": "2683.27",
            "p99": "1679.18",
            "min": "1600.87",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1059.54",
            "p50": "977.04",
            "p95": "701.58",
            "p99": "643.67",
            "min": "633.24",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "53361.31",
            "p50": "9932.54",
            "p95": "2662.46",
            "p99": "2036.34",
            "min": "1802.82",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15269.80",
            "p50": "5862.52",
            "p95": "1434.57",
            "p99": "969.37",
            "min": "956.61",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "547.96",
            "p50": "476.16",
            "p95": "382.77",
            "p99": "344.80",
            "min": "326.38",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "975.79",
            "p50": "900.84",
            "p95": "626.21",
            "p99": "551.69",
            "min": "548.00",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "804.54",
            "p50": "737.62",
            "p95": "548.51",
            "p99": "446.05",
            "min": "444.63",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1199.62",
            "p50": "1061.54",
            "p95": "693.16",
            "p99": "571.51",
            "min": "551.68",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "731.70",
            "p50": "675.52",
            "p95": "462.39",
            "p99": "420.81",
            "min": "419.22",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1155.79",
            "p50": "1073.90",
            "p95": "736.47",
            "p99": "531.48",
            "min": "524.42",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "874.36",
            "p50": "817.24",
            "p95": "533.97",
            "p99": "519.90",
            "min": "519.30",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "906.75",
            "p50": "849.75",
            "p95": "571.29",
            "p99": "481.79",
            "min": "459.81",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2362.28",
            "p50": "1963.88",
            "p95": "1070.85",
            "p99": "968.35",
            "min": "968.14",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "831.43",
            "p50": "757.89",
            "p95": "516.55",
            "p99": "251.13",
            "min": "175.50",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "81.55",
            "p50": "78.85",
            "p95": "72.03",
            "p99": "69.14",
            "min": "69.06",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "75.18",
            "p50": "72.94",
            "p95": "67.46",
            "p99": "64.69",
            "min": "64.48",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "76.55",
            "p50": "74.18",
            "p95": "69.06",
            "p99": "64.07",
            "min": "63.41",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "212.71",
            "p50": "197.50",
            "p95": "157.45",
            "p99": "142.06",
            "min": "142.03",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "103.67",
            "p50": "100.07",
            "p95": "87.94",
            "p99": "83.09",
            "min": "82.76",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.22",
            "p50": "105.66",
            "p95": "89.64",
            "p99": "81.09",
            "min": "79.87",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "142.10",
            "p50": "133.89",
            "p95": "112.45",
            "p99": "82.38",
            "min": "80.98",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "141.96",
            "p50": "135.31",
            "p95": "114.35",
            "p99": "107.78",
            "min": "107.50",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "189.26",
            "p50": "173.71",
            "p95": "144.37",
            "p99": "122.01",
            "min": "117.44",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "186.40",
            "p50": "174.13",
            "p95": "141.17",
            "p99": "131.55",
            "min": "131.52",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "186.28",
            "p50": "176.00",
            "p95": "150.86",
            "p99": "135.85",
            "min": "135.85",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.74",
            "p50": "121.91",
            "p95": "104.95",
            "p99": "98.80",
            "min": "98.39",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "204.56",
            "p50": "190.38",
            "p95": "156.90",
            "p99": "143.20",
            "min": "140.91",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "190.62",
            "p50": "177.98",
            "p95": "144.99",
            "p99": "110.48",
            "min": "104.00",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "72.46",
            "p50": "69.17",
            "p95": "64.89",
            "p99": "61.89",
            "min": "61.86",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "134.24",
            "p50": "124.62",
            "p95": "110.23",
            "p99": "114.62",
            "min": "104.06",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "219.31",
            "p50": "192.82",
            "p95": "163.38",
            "p99": "160.80",
            "min": "147.07",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "170.56",
            "p50": "140.35",
            "p95": "133.32",
            "p99": "147.23",
            "min": "129.63",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "128.65",
            "p50": "121.41",
            "p95": "106.87",
            "p99": "113.89",
            "min": "102.76",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1059.16",
            "p50": "783.67",
            "p95": "424.58",
            "p99": "331.35",
            "min": "306.64",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1026.80",
            "p50": "768.41",
            "p95": "436.84",
            "p99": "303.92",
            "min": "300.86",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1162.95",
            "p50": "804.27",
            "p95": "469.30",
            "p99": "368.46",
            "min": "351.24",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1090.77",
            "p50": "821.85",
            "p95": "401.60",
            "p99": "329.77",
            "min": "329.65",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1051.43",
            "p50": "757.80",
            "p95": "414.97",
            "p99": "314.52",
            "min": "310.81",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1041.82",
            "p50": "760.88",
            "p95": "424.85",
            "p99": "323.80",
            "min": "295.78",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "343.49",
            "p50": "298.42",
            "p95": "225.86",
            "p99": "190.70",
            "min": "183.92",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "338.62",
            "p50": "297.76",
            "p95": "211.84",
            "p99": "181.98",
            "min": "179.38",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "345.15",
            "p50": "298.84",
            "p95": "231.85",
            "p99": "195.10",
            "min": "190.50",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "369.81",
            "p50": "323.08",
            "p95": "242.21",
            "p99": "210.47",
            "min": "208.88",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "288.35",
            "p50": "258.39",
            "p95": "193.40",
            "p99": "177.43",
            "min": "176.21",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "295.80",
            "p50": "264.38",
            "p95": "215.31",
            "p99": "174.08",
            "min": "167.36",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "292.35",
            "p50": "261.49",
            "p95": "203.52",
            "p99": "178.72",
            "min": "175.98",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "294.92",
            "p50": "261.56",
            "p95": "204.51",
            "p99": "173.83",
            "min": "173.46",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "303.24",
            "p50": "264.66",
            "p95": "193.13",
            "p99": "184.25",
            "min": "183.90",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.08",
            "p50": "101.23",
            "p95": "90.21",
            "p99": "83.15",
            "min": "80.81",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.78",
            "p50": "101.41",
            "p95": "90.66",
            "p99": "85.04",
            "min": "84.91",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.03",
            "p50": "94.34",
            "p95": "87.01",
            "p99": "81.96",
            "min": "81.53",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "251.69",
            "p50": "228.17",
            "p95": "170.07",
            "p99": "153.85",
            "min": "153.28",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.11",
            "p50": "94.47",
            "p95": "84.32",
            "p99": "79.58",
            "min": "79.21",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "243.90",
            "p50": "222.73",
            "p95": "176.19",
            "p99": "157.00",
            "min": "149.60",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "187.77",
            "p50": "174.86",
            "p95": "141.84",
            "p99": "128.66",
            "min": "128.53",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "155.18",
            "p50": "146.96",
            "p95": "128.34",
            "p99": "117.74",
            "min": "117.57",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "447.10",
            "p50": "380.50",
            "p95": "245.55",
            "p99": "211.20",
            "min": "208.11",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4797.72",
            "p50": "1857.31",
            "p95": "497.70",
            "p99": "442.46",
            "min": "423.91",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "439.54",
            "p50": "379.55",
            "p95": "273.16",
            "p99": "211.50",
            "min": "210.17",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14016.23",
            "p50": "2746.05",
            "p95": "1051.64",
            "p99": "620.29",
            "min": "578.59",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3313.08",
            "p50": "1439.15",
            "p95": "476.96",
            "p99": "425.91",
            "min": "405.09",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "210.27",
            "p50": "189.79",
            "p95": "158.32",
            "p99": "138.95",
            "min": "137.41",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "237.39",
            "p50": "217.90",
            "p95": "183.24",
            "p99": "153.25",
            "min": "147.14",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "129.18",
            "p50": "122.43",
            "p95": "105.53",
            "p99": "99.42",
            "min": "98.09",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "211.00",
            "p50": "194.64",
            "p95": "154.16",
            "p99": "136.59",
            "min": "133.13",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "142.76",
            "p50": "135.20",
            "p95": "120.51",
            "p99": "111.43",
            "min": "109.69",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "175.17",
            "p50": "162.44",
            "p95": "136.12",
            "p99": "120.30",
            "min": "116.04",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "187.43",
            "p50": "174.52",
            "p95": "137.15",
            "p99": "90.92",
            "min": "80.85",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "186.26",
            "p50": "172.11",
            "p95": "144.05",
            "p99": "132.43",
            "min": "130.96",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "298.99",
            "p50": "239.22",
            "p95": "150.03",
            "p99": "154.03",
            "min": "144.78",
            "n": "93",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "143.32",
            "p50": "134.75",
            "p95": "115.49",
            "p99": "115.08",
            "min": "106.17",
            "n": "75",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "89.45",
            "p50": "85.14",
            "p95": "78.95",
            "p99": "71.05",
            "min": "70.29",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "90.79",
            "p50": "86.54",
            "p95": "83.65",
            "p99": "74.27",
            "min": "73.77",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "90.27",
            "p50": "85.83",
            "p95": "80.19",
            "p99": "72.70",
            "min": "72.16",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "188.98",
            "p50": "181.65",
            "p95": "177.43",
            "p99": "159.39",
            "min": "156.36",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "91.95",
            "p50": "89.71",
            "p95": "86.43",
            "p99": "83.90",
            "min": "83.64",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "113.00",
            "p50": "109.45",
            "p95": "106.42",
            "p99": "102.48",
            "min": "101.69",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "127.17",
            "p50": "123.07",
            "p95": "110.61",
            "p99": "105.50",
            "min": "105.46",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "126.56",
            "p50": "123.82",
            "p95": "120.63",
            "p99": "118.13",
            "min": "118.00",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "98.54",
            "p50": "94.89",
            "p95": "76.36",
            "p99": "75.75",
            "min": "75.75",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "98.46",
            "p50": "96.54",
            "p95": "94.12",
            "p99": "88.54",
            "min": "87.75",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.58",
            "p50": "96.64",
            "p95": "93.76",
            "p99": "91.24",
            "min": "91.14",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.96",
            "p50": "123.52",
            "p95": "120.46",
            "p99": "115.82",
            "min": "115.17",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "118.78",
            "p50": "114.26",
            "p95": "110.01",
            "p99": "102.55",
            "min": "100.64",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "116.45",
            "p50": "114.28",
            "p95": "111.43",
            "p99": "102.33",
            "min": "100.95",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "76.41",
            "p50": "73.49",
            "p95": "70.89",
            "p99": "70.10",
            "min": "70.03",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "99.50",
            "p50": "98.59",
            "p95": "92.70",
            "p99": "94.35",
            "min": "91.57",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "62.95",
            "p50": "61.59",
            "p95": "59.22",
            "p99": "57.84",
            "min": "56.64",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "159.53",
            "p50": "127.86",
            "p95": "119.83",
            "p99": "136.60",
            "min": "119.31",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "109.96",
            "p50": "108.20",
            "p95": "106.80",
            "p99": "106.68",
            "min": "104.20",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "386.15",
            "p50": "378.30",
            "p95": "363.14",
            "p99": "312.70",
            "min": "291.09",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "510.00",
            "p50": "482.60",
            "p95": "465.32",
            "p99": "386.96",
            "min": "330.48",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "390.70",
            "p50": "381.77",
            "p95": "369.29",
            "p99": "332.45",
            "min": "320.92",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "396.73",
            "p50": "384.57",
            "p95": "363.35",
            "p99": "334.23",
            "min": "321.07",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "396.46",
            "p50": "387.34",
            "p95": "347.65",
            "p99": "321.35",
            "min": "312.66",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "470.68",
            "p50": "451.11",
            "p95": "403.90",
            "p99": "350.23",
            "min": "322.15",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "101.78",
            "p50": "99.26",
            "p95": "96.41",
            "p99": "91.02",
            "min": "90.32",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "102.47",
            "p50": "99.70",
            "p95": "97.05",
            "p99": "92.53",
            "min": "91.76",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "100.94",
            "p50": "98.50",
            "p95": "96.08",
            "p99": "93.93",
            "min": "93.80",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "91.82",
            "p50": "89.79",
            "p95": "87.68",
            "p99": "84.54",
            "min": "84.33",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.90",
            "p50": "86.40",
            "p95": "85.05",
            "p99": "82.95",
            "min": "82.33",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "95.31",
            "p50": "92.86",
            "p95": "90.65",
            "p99": "87.91",
            "min": "87.89",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "91.19",
            "p50": "88.56",
            "p95": "86.67",
            "p99": "86.27",
            "min": "86.25",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "90.70",
            "p50": "88.42",
            "p95": "86.34",
            "p99": "83.21",
            "min": "82.59",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "90.64",
            "p50": "88.16",
            "p95": "86.63",
            "p99": "86.46",
            "min": "86.44",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "372.50",
            "p50": "361.94",
            "p95": "313.93",
            "p99": "233.84",
            "min": "224.72",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "371.26",
            "p50": "361.06",
            "p95": "307.36",
            "p99": "242.93",
            "min": "224.07",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "154.89",
            "p50": "152.45",
            "p95": "139.72",
            "p99": "127.42",
            "min": "126.13",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "479.33",
            "p50": "461.80",
            "p95": "380.43",
            "p99": "248.88",
            "min": "220.29",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "154.79",
            "p50": "152.76",
            "p95": "144.01",
            "p99": "133.15",
            "min": "132.26",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "275.07",
            "p50": "268.41",
            "p95": "243.22",
            "p99": "218.12",
            "min": "202.04",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "99.04",
            "p50": "96.83",
            "p95": "91.35",
            "p99": "86.04",
            "min": "85.01",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "187.00",
            "p50": "174.89",
            "p95": "171.32",
            "p99": "156.03",
            "min": "149.32",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "406.73",
            "p50": "351.51",
            "p95": "260.37",
            "p99": "243.71",
            "min": "242.62",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7066.63",
            "p50": "2297.93",
            "p95": "1028.68",
            "p99": "487.31",
            "min": "457.43",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "438.90",
            "p50": "380.45",
            "p95": "291.48",
            "p99": "259.06",
            "min": "248.52",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "30684.08",
            "p50": "9352.52",
            "p95": "2444.15",
            "p99": "1667.19",
            "min": "1494.03",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4597.87",
            "p50": "3038.83",
            "p95": "1219.70",
            "p99": "517.87",
            "min": "402.50",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "359.85",
            "p50": "323.92",
            "p95": "240.64",
            "p99": "216.14",
            "min": "210.24",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "153.99",
            "p50": "139.16",
            "p95": "127.09",
            "p99": "101.51",
            "min": "93.82",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "126.03",
            "p50": "108.48",
            "p95": "99.51",
            "p99": "96.54",
            "min": "96.04",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "138.64",
            "p50": "122.65",
            "p95": "116.95",
            "p99": "105.54",
            "min": "102.14",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "127.43",
            "p50": "119.03",
            "p95": "114.66",
            "p99": "112.02",
            "min": "111.81",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "175.78",
            "p50": "147.92",
            "p95": "141.94",
            "p99": "128.61",
            "min": "121.17",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "94.71",
            "p50": "92.76",
            "p95": "89.04",
            "p99": "85.34",
            "min": "85.15",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "118.36",
            "p50": "109.24",
            "p95": "105.24",
            "p99": "101.29",
            "min": "99.94",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "995.12",
            "p50": "901.19",
            "p95": "323.28",
            "p99": "314.44",
            "min": "314.42",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "126.03",
            "p50": "117.32",
            "p95": "107.75",
            "p99": "101.89",
            "min": "100.56",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}