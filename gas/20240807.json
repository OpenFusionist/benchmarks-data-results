{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "170.11",
            "p50": "168.48",
            "p95": "154.14",
            "p99": "150.29",
            "min": "150.17",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "170.50",
            "p50": "168.93",
            "p95": "166.85",
            "p99": "164.19",
            "min": "163.61",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "170.06",
            "p50": "168.24",
            "p95": "164.28",
            "p99": "162.98",
            "min": "162.96",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "760.34",
            "p50": "748.42",
            "p95": "476.15",
            "p99": "470.13",
            "min": "469.05",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "404.65",
            "p50": "394.96",
            "p95": "387.20",
            "p99": "380.84",
            "min": "380.07",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "438.88",
            "p50": "430.69",
            "p95": "418.94",
            "p99": "408.39",
            "min": "408.24",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "325.20",
            "p50": "319.33",
            "p95": "306.65",
            "p99": "292.15",
            "min": "291.21",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "188.02",
            "p50": "185.53",
            "p95": "182.80",
            "p99": "177.87",
            "min": "177.08",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "271.70",
            "p50": "264.91",
            "p95": "246.41",
            "p99": "228.72",
            "min": "227.16",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "264.82",
            "p50": "262.49",
            "p95": "254.30",
            "p99": "250.84",
            "min": "250.02",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "266.50",
            "p50": "263.61",
            "p95": "257.32",
            "p99": "255.92",
            "min": "255.86",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "190.65",
            "p50": "188.46",
            "p95": "185.26",
            "p99": "164.26",
            "min": "159.74",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "319.19",
            "p50": "315.87",
            "p95": "303.13",
            "p99": "295.64",
            "min": "293.71",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "309.38",
            "p50": "305.48",
            "p95": "298.48",
            "p99": "295.35",
            "min": "295.30",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "111.21",
            "p50": "107.04",
            "p95": "104.99",
            "p99": "104.49",
            "min": "104.44",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "170.40",
            "p50": "167.99",
            "p95": "164.40",
            "p99": "164.81",
            "min": "161.80",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "297.49",
            "p50": "247.40",
            "p95": "230.13",
            "p99": "232.19",
            "min": "216.88",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "241.81",
            "p50": "193.27",
            "p95": "181.60",
            "p99": "206.85",
            "min": "180.48",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "167.27",
            "p50": "164.12",
            "p95": "163.05",
            "p99": "164.74",
            "min": "162.83",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "885.39",
            "p50": "818.58",
            "p95": "786.91",
            "p99": "774.49",
            "min": "770.94",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "843.82",
            "p50": "815.84",
            "p95": "792.79",
            "p99": "765.97",
            "min": "750.35",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1033.79",
            "p50": "940.60",
            "p95": "886.40",
            "p99": "875.01",
            "min": "872.99",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1087.32",
            "p50": "966.86",
            "p95": "925.31",
            "p99": "893.40",
            "min": "890.07",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1080.41",
            "p50": "973.91",
            "p95": "923.00",
            "p99": "878.03",
            "min": "862.71",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "852.78",
            "p50": "815.59",
            "p95": "772.59",
            "p99": "746.70",
            "min": "737.58",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "197.62",
            "p50": "184.28",
            "p95": "178.78",
            "p99": "174.58",
            "min": "174.28",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "198.63",
            "p50": "184.22",
            "p95": "179.22",
            "p99": "174.79",
            "min": "173.92",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "199.14",
            "p50": "185.03",
            "p95": "179.03",
            "p99": "175.86",
            "min": "175.76",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "223.93",
            "p50": "210.64",
            "p95": "205.01",
            "p99": "202.53",
            "min": "202.30",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.86",
            "p50": "87.25",
            "p95": "86.60",
            "p99": "85.84",
            "min": "85.52",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "342.95",
            "p50": "311.15",
            "p95": "291.67",
            "p99": "280.21",
            "min": "278.34",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "334.45",
            "p50": "299.67",
            "p95": "287.85",
            "p99": "277.80",
            "min": "277.05",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "331.51",
            "p50": "301.48",
            "p95": "289.38",
            "p99": "287.17",
            "min": "287.17",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "332.56",
            "p50": "302.34",
            "p95": "291.40",
            "p99": "162.03",
            "min": "132.27",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2382.36",
            "p50": "2261.63",
            "p95": "2058.85",
            "p99": "634.52",
            "min": "113.52",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2312.60",
            "p50": "2197.66",
            "p95": "2006.96",
            "p99": "965.80",
            "min": "117.27",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "94.01",
            "p50": "93.00",
            "p95": "91.75",
            "p99": "87.39",
            "min": "85.25",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "5790.91",
            "p50": "5142.81",
            "p95": "2607.31",
            "p99": "1380.83",
            "min": "1130.17",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "94.04",
            "p50": "93.20",
            "p95": "92.16",
            "p99": "91.07",
            "min": "90.82",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3179.38",
            "p50": "2988.83",
            "p95": "2262.55",
            "p99": "962.02",
            "min": "313.45",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "261.41",
            "p50": "258.91",
            "p95": "249.81",
            "p99": "232.71",
            "min": "230.71",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "538.16",
            "p50": "531.25",
            "p95": "517.52",
            "p99": "491.59",
            "min": "473.65",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1266.56",
            "p50": "1221.94",
            "p95": "388.51",
            "p99": "377.20",
            "min": "376.45",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "17898.66",
            "p50": "8098.94",
            "p95": "2412.05",
            "p99": "1635.63",
            "min": "1573.84",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1162.76",
            "p50": "1125.03",
            "p95": "346.03",
            "p99": "340.65",
            "min": "340.62",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "48356.70",
            "p50": "9119.09",
            "p95": "2117.34",
            "p99": "1001.62",
            "min": "485.31",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "16245.97",
            "p50": "7413.24",
            "p95": "2615.71",
            "p99": "1754.18",
            "min": "1615.97",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "535.68",
            "p50": "491.97",
            "p95": "437.97",
            "p99": "385.55",
            "min": "381.30",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "516.51",
            "p50": "508.51",
            "p95": "494.62",
            "p99": "482.30",
            "min": "480.62",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "204.62",
            "p50": "202.75",
            "p95": "197.63",
            "p99": "191.35",
            "min": "189.57",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "441.09",
            "p50": "431.74",
            "p95": "422.53",
            "p99": "417.90",
            "min": "417.58",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "204.58",
            "p50": "202.02",
            "p95": "198.49",
            "p99": "196.49",
            "min": "196.49",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "328.45",
            "p50": "323.19",
            "p95": "311.35",
            "p99": "202.99",
            "min": "135.02",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "271.82",
            "p50": "266.55",
            "p95": "260.64",
            "p99": "258.48",
            "min": "258.23",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "517.42",
            "p50": "501.03",
            "p95": "490.50",
            "p99": "481.33",
            "min": "481.00",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1479.47",
            "p50": "1162.98",
            "p95": "839.69",
            "p99": "802.08",
            "min": "798.24",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "315.65",
            "p50": "310.75",
            "p95": "301.87",
            "p99": "292.43",
            "min": "290.81",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.54",
            "p50": "85.22",
            "p95": "79.82",
            "p99": "74.19",
            "min": "73.69",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "80.97",
            "p50": "78.05",
            "p95": "71.55",
            "p99": "70.14",
            "min": "70.13",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "82.54",
            "p50": "79.71",
            "p95": "73.28",
            "p99": "70.85",
            "min": "70.68",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "225.58",
            "p50": "209.78",
            "p95": "175.43",
            "p99": "162.52",
            "min": "161.43",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "174.14",
            "p50": "162.88",
            "p95": "141.10",
            "p99": "135.67",
            "min": "135.67",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "183.49",
            "p50": "169.90",
            "p95": "141.80",
            "p99": "132.31",
            "min": "130.07",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "169.50",
            "p50": "157.43",
            "p95": "139.82",
            "p99": "128.50",
            "min": "126.22",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "170.09",
            "p50": "157.23",
            "p95": "136.80",
            "p99": "123.61",
            "min": "121.13",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "195.78",
            "p50": "179.22",
            "p95": "153.46",
            "p99": "140.06",
            "min": "139.53",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "172.10",
            "p50": "159.82",
            "p95": "142.15",
            "p99": "134.15",
            "min": "134.07",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "193.79",
            "p50": "178.10",
            "p95": "150.41",
            "p99": "141.76",
            "min": "141.25",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "142.09",
            "p50": "132.51",
            "p95": "118.08",
            "p99": "105.81",
            "min": "105.27",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "218.31",
            "p50": "204.60",
            "p95": "173.75",
            "p99": "162.33",
            "min": "160.84",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "173.26",
            "p50": "160.51",
            "p95": "136.92",
            "p99": "126.48",
            "min": "125.84",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.44",
            "p50": "64.91",
            "p95": "60.72",
            "p99": "55.67",
            "min": "55.41",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "140.37",
            "p50": "130.32",
            "p95": "117.15",
            "p99": "123.98",
            "min": "115.15",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "399.32",
            "p50": "308.57",
            "p95": "234.17",
            "p99": "255.23",
            "min": "221.44",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "161.99",
            "p50": "142.51",
            "p95": "134.19",
            "p99": "145.98",
            "min": "133.90",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "129.83",
            "p50": "122.11",
            "p95": "114.15",
            "p99": "114.37",
            "min": "102.71",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1173.39",
            "p50": "903.84",
            "p95": "586.06",
            "p99": "439.42",
            "min": "438.76",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1029.73",
            "p50": "840.31",
            "p95": "499.74",
            "p99": "420.39",
            "min": "419.89",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1370.53",
            "p50": "1038.94",
            "p95": "546.99",
            "p99": "416.86",
            "min": "404.56",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1255.31",
            "p50": "958.34",
            "p95": "511.94",
            "p99": "450.49",
            "min": "441.81",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1242.14",
            "p50": "891.26",
            "p95": "533.42",
            "p99": "438.86",
            "min": "438.84",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1048.28",
            "p50": "825.04",
            "p95": "546.20",
            "p99": "421.21",
            "min": "417.46",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "657.37",
            "p50": "516.10",
            "p95": "375.71",
            "p99": "245.87",
            "min": "239.17",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "655.08",
            "p50": "525.84",
            "p95": "374.66",
            "p99": "313.73",
            "min": "305.15",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "655.76",
            "p50": "506.55",
            "p95": "367.73",
            "p99": "314.31",
            "min": "306.96",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "664.87",
            "p50": "543.20",
            "p95": "361.01",
            "p99": "347.65",
            "min": "347.27",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "290.91",
            "p50": "265.28",
            "p95": "210.73",
            "p99": "193.60",
            "min": "192.00",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "551.76",
            "p50": "437.54",
            "p95": "290.26",
            "p99": "273.96",
            "min": "273.55",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "547.00",
            "p50": "448.99",
            "p95": "333.03",
            "p99": "237.65",
            "min": "231.84",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "555.69",
            "p50": "448.84",
            "p95": "324.29",
            "p99": "229.22",
            "min": "219.40",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "575.71",
            "p50": "472.80",
            "p95": "346.14",
            "p99": "325.71",
            "min": "325.60",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.51",
            "p50": "102.33",
            "p95": "91.70",
            "p99": "88.17",
            "min": "86.63",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.73",
            "p50": "102.15",
            "p95": "93.98",
            "p99": "89.06",
            "min": "88.30",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.53",
            "p50": "95.05",
            "p95": "86.22",
            "p99": "83.12",
            "min": "82.33",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "253.00",
            "p50": "231.47",
            "p95": "189.32",
            "p99": "176.64",
            "min": "176.52",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.28",
            "p50": "94.78",
            "p95": "85.16",
            "p99": "81.00",
            "min": "80.47",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "246.57",
            "p50": "227.23",
            "p95": "185.12",
            "p99": "174.69",
            "min": "171.36",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "197.15",
            "p50": "181.10",
            "p95": "149.05",
            "p99": "140.26",
            "min": "138.47",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "200.05",
            "p50": "186.55",
            "p95": "156.96",
            "p99": "120.64",
            "min": "101.58",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "359.09",
            "p50": "317.79",
            "p95": "237.62",
            "p99": "181.68",
            "min": "181.57",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5155.88",
            "p50": "2303.79",
            "p95": "923.13",
            "p99": "660.76",
            "min": "647.96",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "344.97",
            "p50": "308.99",
            "p95": "241.62",
            "p99": "215.47",
            "min": "209.85",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14687.38",
            "p50": "3670.16",
            "p95": "1389.62",
            "p99": "884.42",
            "min": "736.91",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3200.49",
            "p50": "1778.99",
            "p95": "745.66",
            "p99": "662.70",
            "min": "658.18",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "186.30",
            "p50": "167.07",
            "p95": "142.02",
            "p99": "129.84",
            "min": "129.02",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "246.23",
            "p50": "228.39",
            "p95": "199.90",
            "p99": "175.68",
            "min": "175.11",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "91.75",
            "p50": "88.13",
            "p95": "79.43",
            "p99": "73.68",
            "min": "73.33",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "225.73",
            "p50": "206.74",
            "p95": "170.06",
            "p99": "161.77",
            "min": "161.60",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "172.05",
            "p50": "159.55",
            "p95": "140.80",
            "p99": "72.74",
            "min": "72.03",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "201.91",
            "p50": "187.74",
            "p95": "153.76",
            "p99": "144.93",
            "min": "142.87",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "193.81",
            "p50": "180.93",
            "p95": "157.28",
            "p99": "150.95",
            "min": "150.07",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "196.83",
            "p50": "182.41",
            "p95": "152.36",
            "p99": "133.24",
            "min": "131.68",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1100.38",
            "p50": "853.40",
            "p95": "598.75",
            "p99": "481.41",
            "min": "479.54",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "175.65",
            "p50": "164.74",
            "p95": "119.64",
            "p99": "115.07",
            "min": "114.66",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.59",
            "p50": "189.39",
            "p95": "172.00",
            "p99": "160.48",
            "min": "160.30",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.82",
            "p50": "188.99",
            "p95": "170.17",
            "p99": "161.93",
            "min": "161.79",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.34",
            "p50": "190.59",
            "p95": "174.50",
            "p99": "163.34",
            "min": "161.58",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1190.22",
            "p50": "1060.34",
            "p95": "726.66",
            "p99": "526.24",
            "min": "510.30",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "701.44",
            "p50": "638.54",
            "p95": "450.57",
            "p99": "407.73",
            "min": "407.51",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "813.30",
            "p50": "748.80",
            "p95": "566.90",
            "p99": "456.80",
            "min": "444.57",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "719.33",
            "p50": "651.64",
            "p95": "500.27",
            "p99": "422.12",
            "min": "412.32",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "725.69",
            "p50": "654.94",
            "p95": "492.04",
            "p99": "421.14",
            "min": "420.82",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "896.88",
            "p50": "797.26",
            "p95": "547.35",
            "p99": "460.67",
            "min": "456.00",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "861.47",
            "p50": "764.35",
            "p95": "561.13",
            "p99": "437.93",
            "min": "436.14",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "862.02",
            "p50": "783.25",
            "p95": "522.96",
            "p99": "447.47",
            "min": "444.41",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "826.12",
            "p50": "738.26",
            "p95": "489.52",
            "p99": "432.11",
            "min": "429.80",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "648.06",
            "p50": "594.33",
            "p95": "460.44",
            "p99": "403.94",
            "min": "391.77",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "860.87",
            "p50": "752.55",
            "p95": "519.81",
            "p99": "454.03",
            "min": "453.96",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "64.50",
            "p50": "62.63",
            "p95": "60.38",
            "p99": "59.12",
            "min": "59.05",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "97.07",
            "p50": "94.32",
            "p95": "88.96",
            "p99": "91.33",
            "min": "88.23",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "488.57",
            "p50": "465.13",
            "p95": "363.67",
            "p99": "351.77",
            "min": "319.68",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "129.71",
            "p50": "102.84",
            "p95": "96.51",
            "p99": "110.02",
            "min": "95.16",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "91.00",
            "p50": "87.30",
            "p95": "84.19",
            "p99": "86.79",
            "min": "83.61",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1786.51",
            "p50": "1565.37",
            "p95": "920.19",
            "p99": "732.20",
            "min": "720.63",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1639.58",
            "p50": "1358.84",
            "p95": "813.31",
            "p99": "676.71",
            "min": "675.23",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2220.44",
            "p50": "1895.29",
            "p95": "837.74",
            "p99": "687.06",
            "min": "680.44",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2189.56",
            "p50": "1683.07",
            "p95": "970.52",
            "p99": "772.04",
            "min": "725.75",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2219.42",
            "p50": "1646.41",
            "p95": "819.18",
            "p99": "734.07",
            "min": "687.58",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1674.75",
            "p50": "1408.56",
            "p95": "798.62",
            "p99": "677.77",
            "min": "624.77",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "718.39",
            "p50": "635.14",
            "p95": "502.61",
            "p99": "405.04",
            "min": "403.51",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "710.31",
            "p50": "616.18",
            "p95": "474.74",
            "p99": "404.89",
            "min": "403.05",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "722.85",
            "p50": "632.63",
            "p95": "483.89",
            "p99": "433.75",
            "min": "431.96",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "733.21",
            "p50": "646.62",
            "p95": "466.99",
            "p99": "418.42",
            "min": "418.02",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.66",
            "p50": "85.36",
            "p95": "81.53",
            "p99": "80.06",
            "min": "79.63",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "631.42",
            "p50": "560.70",
            "p95": "435.20",
            "p99": "385.72",
            "min": "385.44",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "597.45",
            "p50": "526.09",
            "p95": "413.24",
            "p99": "354.20",
            "min": "353.62",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "596.42",
            "p50": "523.04",
            "p95": "406.96",
            "p99": "317.24",
            "min": "305.32",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "599.59",
            "p50": "522.49",
            "p95": "400.53",
            "p99": "327.15",
            "min": "314.80",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1376.93",
            "p50": "1267.73",
            "p95": "819.07",
            "p99": "659.00",
            "min": "653.73",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1678.66",
            "p50": "1430.26",
            "p95": "817.33",
            "p99": "727.51",
            "min": "726.36",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.19",
            "p50": "71.34",
            "p95": "68.82",
            "p99": "67.33",
            "min": "66.92",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9383.79",
            "p50": "4083.05",
            "p95": "2345.54",
            "p99": "1632.10",
            "min": "1623.76",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.24",
            "p50": "71.18",
            "p95": "68.38",
            "p99": "67.19",
            "min": "67.16",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "222.00",
            "p50": "217.08",
            "p95": "195.27",
            "p99": "179.10",
            "min": "177.23",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "862.71",
            "p50": "777.97",
            "p95": "533.18",
            "p99": "238.29",
            "min": "180.43",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "668.03",
            "p50": "608.76",
            "p95": "435.32",
            "p99": "390.99",
            "min": "383.65",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1066.49",
            "p50": "969.13",
            "p95": "671.57",
            "p99": "557.24",
            "min": "536.41",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "24880.39",
            "p50": "9195.37",
            "p95": "2657.91",
            "p99": "1599.82",
            "min": "1588.84",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1065.20",
            "p50": "986.81",
            "p95": "689.75",
            "p99": "537.62",
            "min": "509.04",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "53323.52",
            "p50": "10106.21",
            "p95": "2760.71",
            "p99": "1777.56",
            "min": "1769.14",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14256.60",
            "p50": "5827.83",
            "p95": "1502.81",
            "p99": "978.46",
            "min": "969.60",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "540.79",
            "p50": "480.62",
            "p95": "400.02",
            "p99": "330.66",
            "min": "328.60",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "976.77",
            "p50": "904.56",
            "p95": "577.37",
            "p99": "219.31",
            "min": "112.73",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "807.48",
            "p50": "733.48",
            "p95": "547.81",
            "p99": "458.23",
            "min": "456.86",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1199.84",
            "p50": "1058.75",
            "p95": "635.34",
            "p99": "309.35",
            "min": "177.76",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "726.10",
            "p50": "660.52",
            "p95": "493.66",
            "p99": "387.08",
            "min": "378.79",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1155.82",
            "p50": "1059.75",
            "p95": "709.25",
            "p99": "516.78",
            "min": "505.11",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "872.23",
            "p50": "776.05",
            "p95": "574.21",
            "p99": "484.55",
            "min": "473.86",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "901.79",
            "p50": "833.74",
            "p95": "567.95",
            "p99": "470.34",
            "min": "443.79",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2344.94",
            "p50": "1972.83",
            "p95": "1084.11",
            "p99": "965.63",
            "min": "958.46",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "849.53",
            "p50": "780.36",
            "p95": "563.23",
            "p99": "446.57",
            "min": "440.15",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "82.83",
            "p50": "80.08",
            "p95": "74.20",
            "p99": "70.15",
            "min": "70.10",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "75.93",
            "p50": "73.63",
            "p95": "68.25",
            "p99": "64.29",
            "min": "63.91",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "77.56",
            "p50": "74.91",
            "p95": "69.58",
            "p99": "65.28",
            "min": "64.97",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "211.70",
            "p50": "196.05",
            "p95": "156.33",
            "p99": "135.36",
            "min": "129.40",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "103.43",
            "p50": "100.08",
            "p95": "89.43",
            "p99": "80.94",
            "min": "80.04",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.52",
            "p50": "105.53",
            "p95": "94.99",
            "p99": "84.47",
            "min": "83.10",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "143.93",
            "p50": "136.51",
            "p95": "119.18",
            "p99": "108.22",
            "min": "107.17",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "142.96",
            "p50": "135.49",
            "p95": "115.23",
            "p99": "89.54",
            "min": "83.84",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "187.59",
            "p50": "173.23",
            "p95": "147.55",
            "p99": "116.71",
            "min": "108.31",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "184.78",
            "p50": "173.19",
            "p95": "148.09",
            "p99": "132.33",
            "min": "131.42",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "185.74",
            "p50": "173.77",
            "p95": "146.25",
            "p99": "131.01",
            "min": "130.33",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.89",
            "p50": "122.20",
            "p95": "105.21",
            "p99": "101.15",
            "min": "101.10",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "206.97",
            "p50": "191.42",
            "p95": "153.72",
            "p99": "143.34",
            "min": "143.05",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "190.67",
            "p50": "177.30",
            "p95": "144.00",
            "p99": "131.66",
            "min": "131.14",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "73.23",
            "p50": "69.06",
            "p95": "64.23",
            "p99": "62.72",
            "min": "62.31",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "133.93",
            "p50": "123.65",
            "p95": "107.55",
            "p99": "112.21",
            "min": "100.52",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "215.54",
            "p50": "192.31",
            "p95": "162.12",
            "p99": "147.49",
            "min": "131.53",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "172.96",
            "p50": "141.54",
            "p95": "133.87",
            "p99": "150.17",
            "min": "132.98",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "128.77",
            "p50": "119.99",
            "p95": "102.12",
            "p99": "111.47",
            "min": "98.42",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1055.04",
            "p50": "761.08",
            "p95": "437.91",
            "p99": "343.72",
            "min": "316.66",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1026.98",
            "p50": "744.15",
            "p95": "449.85",
            "p99": "343.80",
            "min": "341.11",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1158.82",
            "p50": "832.65",
            "p95": "444.70",
            "p99": "353.35",
            "min": "352.41",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1081.39",
            "p50": "759.24",
            "p95": "468.80",
            "p99": "353.21",
            "min": "348.43",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1035.78",
            "p50": "761.46",
            "p95": "428.16",
            "p99": "345.30",
            "min": "342.70",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1040.85",
            "p50": "739.05",
            "p95": "417.54",
            "p99": "306.24",
            "min": "300.10",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "338.40",
            "p50": "297.70",
            "p95": "224.22",
            "p99": "200.39",
            "min": "197.93",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "332.37",
            "p50": "299.64",
            "p95": "220.09",
            "p99": "193.40",
            "min": "193.40",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "337.00",
            "p50": "302.16",
            "p95": "223.14",
            "p99": "195.79",
            "min": "193.22",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "367.73",
            "p50": "318.36",
            "p95": "239.04",
            "p99": "199.43",
            "min": "195.96",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "288.45",
            "p50": "258.12",
            "p95": "200.18",
            "p99": "177.41",
            "min": "173.83",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "293.44",
            "p50": "263.98",
            "p95": "208.80",
            "p99": "180.90",
            "min": "178.79",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "293.33",
            "p50": "260.73",
            "p95": "197.94",
            "p99": "177.05",
            "min": "176.56",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "300.97",
            "p50": "261.17",
            "p95": "203.32",
            "p99": "175.39",
            "min": "175.01",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "297.01",
            "p50": "262.27",
            "p95": "198.34",
            "p99": "174.45",
            "min": "171.35",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.97",
            "p50": "101.36",
            "p95": "90.47",
            "p99": "84.15",
            "min": "83.45",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.41",
            "p50": "101.47",
            "p95": "92.03",
            "p99": "83.58",
            "min": "82.35",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.92",
            "p50": "94.02",
            "p95": "83.29",
            "p99": "79.62",
            "min": "79.49",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "250.81",
            "p50": "227.35",
            "p95": "189.00",
            "p99": "159.29",
            "min": "155.47",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.24",
            "p50": "93.88",
            "p95": "83.32",
            "p99": "80.48",
            "min": "80.34",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "243.31",
            "p50": "221.96",
            "p95": "172.68",
            "p99": "153.90",
            "min": "151.69",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "186.09",
            "p50": "173.30",
            "p95": "138.49",
            "p99": "120.69",
            "min": "118.35",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "151.04",
            "p50": "142.09",
            "p95": "121.80",
            "p99": "109.23",
            "min": "108.22",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "443.77",
            "p50": "379.20",
            "p95": "244.80",
            "p99": "217.91",
            "min": "205.15",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4321.21",
            "p50": "1738.33",
            "p95": "512.30",
            "p99": "449.52",
            "min": "445.23",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "442.01",
            "p50": "375.95",
            "p95": "271.32",
            "p99": "232.96",
            "min": "225.20",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "13215.56",
            "p50": "2679.65",
            "p95": "1127.09",
            "p99": "948.02",
            "min": "921.40",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3360.38",
            "p50": "1427.48",
            "p95": "493.91",
            "p99": "419.26",
            "min": "395.29",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "207.62",
            "p50": "191.20",
            "p95": "155.55",
            "p99": "137.97",
            "min": "137.01",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "235.69",
            "p50": "212.61",
            "p95": "175.06",
            "p99": "153.33",
            "min": "151.23",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "129.22",
            "p50": "122.00",
            "p95": "108.37",
            "p99": "84.28",
            "min": "77.29",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "210.91",
            "p50": "192.74",
            "p95": "155.55",
            "p99": "138.44",
            "min": "137.22",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "142.71",
            "p50": "134.21",
            "p95": "115.70",
            "p99": "93.63",
            "min": "90.09",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "175.36",
            "p50": "163.26",
            "p95": "137.11",
            "p99": "123.29",
            "min": "123.26",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "184.29",
            "p50": "171.24",
            "p95": "143.55",
            "p99": "127.06",
            "min": "126.26",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "185.85",
            "p50": "172.72",
            "p95": "140.72",
            "p99": "126.24",
            "min": "125.46",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "290.73",
            "p50": "244.78",
            "p95": "158.38",
            "p99": "141.27",
            "min": "136.64",
            "n": "96",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "144.03",
            "p50": "135.72",
            "p95": "117.24",
            "p99": "117.23",
            "min": "110.53",
            "n": "79",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.82",
            "p50": "87.59",
            "p95": "81.46",
            "p99": "76.29",
            "min": "75.99",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "91.69",
            "p50": "88.74",
            "p95": "84.83",
            "p99": "83.26",
            "min": "83.25",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "89.58",
            "p50": "88.00",
            "p95": "83.74",
            "p99": "80.18",
            "min": "79.75",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "188.95",
            "p50": "180.05",
            "p95": "176.55",
            "p99": "156.13",
            "min": "153.13",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "97.37",
            "p50": "89.67",
            "p95": "86.40",
            "p99": "74.77",
            "min": "72.31",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "112.38",
            "p50": "109.54",
            "p95": "105.22",
            "p99": "102.38",
            "min": "102.36",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "125.36",
            "p50": "122.94",
            "p95": "107.12",
            "p99": "102.45",
            "min": "102.14",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "125.64",
            "p50": "123.00",
            "p95": "118.33",
            "p99": "110.48",
            "min": "110.30",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "97.91",
            "p50": "94.77",
            "p95": "92.82",
            "p99": "86.50",
            "min": "86.14",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "98.19",
            "p50": "96.07",
            "p95": "94.09",
            "p99": "92.29",
            "min": "91.95",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.84",
            "p50": "96.15",
            "p95": "94.33",
            "p99": "91.69",
            "min": "91.66",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.08",
            "p50": "122.90",
            "p95": "120.25",
            "p99": "117.42",
            "min": "117.11",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "120.07",
            "p50": "117.86",
            "p95": "110.67",
            "p99": "74.98",
            "min": "62.74",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "115.96",
            "p50": "113.91",
            "p95": "111.96",
            "p99": "109.87",
            "min": "109.79",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "76.20",
            "p50": "73.53",
            "p95": "70.15",
            "p99": "65.93",
            "min": "65.90",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "99.18",
            "p50": "98.37",
            "p95": "94.10",
            "p99": "94.93",
            "min": "92.64",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "62.19",
            "p50": "60.39",
            "p95": "59.03",
            "p99": "59.26",
            "min": "58.57",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "159.15",
            "p50": "127.84",
            "p95": "120.04",
            "p99": "136.54",
            "min": "119.48",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "109.86",
            "p50": "108.22",
            "p95": "105.76",
            "p99": "106.16",
            "min": "103.37",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "389.44",
            "p50": "375.36",
            "p95": "339.43",
            "p99": "281.64",
            "min": "274.03",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "511.36",
            "p50": "483.80",
            "p95": "468.63",
            "p99": "435.65",
            "min": "430.79",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "392.46",
            "p50": "377.86",
            "p95": "359.46",
            "p99": "322.76",
            "min": "313.01",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "394.92",
            "p50": "380.67",
            "p95": "359.46",
            "p99": "302.97",
            "min": "294.86",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "397.56",
            "p50": "382.08",
            "p95": "363.61",
            "p99": "313.39",
            "min": "309.14",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "474.83",
            "p50": "451.55",
            "p95": "439.13",
            "p99": "414.63",
            "min": "409.92",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "100.35",
            "p50": "98.71",
            "p95": "96.11",
            "p99": "89.00",
            "min": "88.56",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "100.96",
            "p50": "99.35",
            "p95": "96.53",
            "p99": "93.65",
            "min": "93.54",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "100.01",
            "p50": "98.11",
            "p95": "95.84",
            "p99": "94.50",
            "min": "94.48",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "90.89",
            "p50": "89.48",
            "p95": "87.45",
            "p99": "83.88",
            "min": "83.83",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.99",
            "p50": "86.38",
            "p95": "85.91",
            "p99": "85.14",
            "min": "84.99",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "94.14",
            "p50": "92.26",
            "p95": "89.69",
            "p99": "85.38",
            "min": "84.84",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "89.85",
            "p50": "88.15",
            "p95": "84.98",
            "p99": "82.11",
            "min": "82.10",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "89.34",
            "p50": "87.87",
            "p95": "84.65",
            "p99": "80.75",
            "min": "80.52",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "89.31",
            "p50": "88.10",
            "p95": "85.34",
            "p99": "83.42",
            "min": "83.15",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "370.89",
            "p50": "359.69",
            "p95": "306.97",
            "p99": "268.74",
            "min": "268.02",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "371.24",
            "p50": "359.60",
            "p95": "306.83",
            "p99": "264.79",
            "min": "260.92",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "154.65",
            "p50": "152.12",
            "p95": "133.31",
            "p99": "123.57",
            "min": "123.13",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "480.08",
            "p50": "458.39",
            "p95": "381.01",
            "p99": "322.17",
            "min": "313.37",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "154.65",
            "p50": "152.21",
            "p95": "141.61",
            "p99": "128.00",
            "min": "124.36",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "274.32",
            "p50": "266.83",
            "p95": "229.61",
            "p99": "195.43",
            "min": "187.72",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.62",
            "p50": "96.47",
            "p95": "90.63",
            "p99": "84.24",
            "min": "83.87",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "187.67",
            "p50": "173.50",
            "p95": "169.34",
            "p99": "161.47",
            "min": "159.58",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "405.78",
            "p50": "345.11",
            "p95": "267.73",
            "p99": "241.20",
            "min": "237.80",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "6930.96",
            "p50": "2293.83",
            "p95": "1004.65",
            "p99": "662.75",
            "min": "573.90",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "433.21",
            "p50": "375.34",
            "p95": "296.72",
            "p99": "273.37",
            "min": "270.47",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "30395.61",
            "p50": "9085.23",
            "p95": "2643.66",
            "p99": "1979.24",
            "min": "1810.20",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "5422.55",
            "p50": "3103.43",
            "p95": "1290.81",
            "p99": "583.19",
            "min": "421.86",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "358.14",
            "p50": "316.63",
            "p95": "248.24",
            "p99": "213.80",
            "min": "200.52",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "154.15",
            "p50": "138.06",
            "p95": "122.97",
            "p99": "103.47",
            "min": "101.73",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "122.97",
            "p50": "107.76",
            "p95": "98.85",
            "p99": "94.80",
            "min": "94.78",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "137.34",
            "p50": "119.61",
            "p95": "116.13",
            "p99": "108.19",
            "min": "105.29",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "123.21",
            "p50": "117.57",
            "p95": "114.57",
            "p99": "111.25",
            "min": "111.14",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "172.59",
            "p50": "143.40",
            "p95": "140.71",
            "p99": "139.02",
            "min": "138.77",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "93.94",
            "p50": "92.57",
            "p95": "89.01",
            "p99": "85.62",
            "min": "85.43",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "117.76",
            "p50": "107.93",
            "p95": "105.60",
            "p99": "103.89",
            "min": "103.51",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1036.48",
            "p50": "907.49",
            "p95": "331.09",
            "p99": "313.33",
            "min": "312.12",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "123.88",
            "p50": "117.16",
            "p95": "104.67",
            "p99": "101.06",
            "min": "100.49",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}