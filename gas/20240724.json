{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "170.09",
            "p50": "168.42",
            "p95": "158.97",
            "p99": "150.86",
            "min": "150.22",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "170.56",
            "p50": "168.82",
            "p95": "166.51",
            "p99": "163.91",
            "min": "163.81",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "169.97",
            "p50": "168.37",
            "p95": "163.41",
            "p99": "156.06",
            "min": "155.50",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "759.19",
            "p50": "748.19",
            "p95": "475.14",
            "p99": "432.38",
            "min": "430.56",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "403.83",
            "p50": "395.78",
            "p95": "387.52",
            "p99": "369.61",
            "min": "368.28",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "441.73",
            "p50": "431.83",
            "p95": "415.96",
            "p99": "405.04",
            "min": "404.60",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "323.68",
            "p50": "317.57",
            "p95": "309.50",
            "p99": "304.72",
            "min": "304.48",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "187.92",
            "p50": "184.95",
            "p95": "180.09",
            "p99": "140.19",
            "min": "131.13",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "265.31",
            "p50": "259.29",
            "p95": "242.50",
            "p99": "238.63",
            "min": "238.56",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "257.25",
            "p50": "254.10",
            "p95": "250.96",
            "p99": "246.35",
            "min": "246.02",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "258.90",
            "p50": "256.38",
            "p95": "251.02",
            "p99": "231.51",
            "min": "227.50",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "192.76",
            "p50": "188.19",
            "p95": "184.79",
            "p99": "179.01",
            "min": "178.73",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "320.27",
            "p50": "315.73",
            "p95": "303.30",
            "p99": "301.00",
            "min": "300.76",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "310.79",
            "p50": "304.79",
            "p95": "295.08",
            "p99": "281.99",
            "min": "281.20",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "111.00",
            "p50": "106.92",
            "p95": "104.51",
            "p99": "103.44",
            "min": "103.22",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "170.22",
            "p50": "167.45",
            "p95": "161.72",
            "p99": "160.95",
            "min": "155.96",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "294.85",
            "p50": "246.13",
            "p95": "230.26",
            "p99": "238.66",
            "min": "225.48",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "241.20",
            "p50": "193.48",
            "p95": "181.83",
            "p99": "207.10",
            "min": "181.38",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "167.19",
            "p50": "164.03",
            "p95": "163.02",
            "p99": "164.51",
            "min": "162.49",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "894.41",
            "p50": "821.22",
            "p95": "776.91",
            "p99": "733.27",
            "min": "709.03",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "845.52",
            "p50": "817.84",
            "p95": "788.56",
            "p99": "747.22",
            "min": "744.51",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1030.07",
            "p50": "942.49",
            "p95": "882.00",
            "p99": "124.05",
            "min": "108.64",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1085.27",
            "p50": "965.72",
            "p95": "899.92",
            "p99": "756.58",
            "min": "615.28",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1082.85",
            "p50": "974.08",
            "p95": "935.21",
            "p99": "885.31",
            "min": "884.45",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "851.13",
            "p50": "817.76",
            "p95": "790.93",
            "p99": "753.82",
            "min": "732.95",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "199.24",
            "p50": "185.16",
            "p95": "179.86",
            "p99": "174.87",
            "min": "174.20",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "194.03",
            "p50": "184.68",
            "p95": "179.46",
            "p99": "177.46",
            "min": "177.34",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "197.22",
            "p50": "185.59",
            "p95": "180.54",
            "p99": "179.47",
            "min": "179.43",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "220.10",
            "p50": "211.04",
            "p95": "204.55",
            "p99": "202.38",
            "min": "202.08",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.78",
            "p50": "87.22",
            "p95": "86.65",
            "p99": "85.96",
            "min": "85.73",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "348.82",
            "p50": "304.38",
            "p95": "287.09",
            "p99": "104.94",
            "min": "101.17",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "335.19",
            "p50": "295.37",
            "p95": "281.55",
            "p99": "274.78",
            "min": "273.57",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "332.46",
            "p50": "298.48",
            "p95": "284.63",
            "p99": "275.10",
            "min": "273.97",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "329.57",
            "p50": "299.22",
            "p95": "284.80",
            "p99": "281.82",
            "min": "281.65",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2393.67",
            "p50": "2253.14",
            "p95": "2063.93",
            "p99": "702.26",
            "min": "95.60",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2298.67",
            "p50": "2183.62",
            "p95": "1890.35",
            "p99": "123.59",
            "min": "119.86",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "93.96",
            "p50": "93.16",
            "p95": "92.56",
            "p99": "89.22",
            "min": "88.37",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "5644.70",
            "p50": "5044.22",
            "p95": "2500.14",
            "p99": "907.84",
            "min": "36.67",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "94.00",
            "p50": "93.21",
            "p95": "92.45",
            "p99": "90.41",
            "min": "89.92",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3187.50",
            "p50": "2982.39",
            "p95": "2096.48",
            "p99": "1672.10",
            "min": "1661.69",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "255.74",
            "p50": "252.16",
            "p95": "248.41",
            "p99": "244.04",
            "min": "243.76",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "539.00",
            "p50": "531.27",
            "p95": "516.63",
            "p99": "491.63",
            "min": "481.61",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1270.77",
            "p50": "1200.79",
            "p95": "387.49",
            "p99": "381.06",
            "min": "379.75",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "17233.84",
            "p50": "8128.52",
            "p95": "2581.55",
            "p99": "1644.90",
            "min": "1530.86",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1153.54",
            "p50": "1113.21",
            "p95": "348.79",
            "p99": "334.33",
            "min": "326.87",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "49189.86",
            "p50": "9167.66",
            "p95": "2276.70",
            "p99": "597.60",
            "min": "139.65",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "16453.35",
            "p50": "6727.89",
            "p95": "2672.23",
            "p99": "1658.63",
            "min": "1552.37",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "536.28",
            "p50": "493.88",
            "p95": "446.37",
            "p99": "370.91",
            "min": "358.55",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "516.81",
            "p50": "506.34",
            "p95": "498.27",
            "p99": "490.48",
            "min": "490.15",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "204.06",
            "p50": "201.63",
            "p95": "199.41",
            "p99": "197.72",
            "min": "197.56",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "434.40",
            "p50": "424.86",
            "p95": "417.69",
            "p99": "407.57",
            "min": "405.62",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "204.06",
            "p50": "201.60",
            "p95": "197.12",
            "p99": "107.92",
            "min": "85.27",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "329.98",
            "p50": "323.07",
            "p95": "316.25",
            "p99": "310.36",
            "min": "309.00",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "271.13",
            "p50": "265.69",
            "p95": "252.69",
            "p99": "229.49",
            "min": "224.01",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "511.77",
            "p50": "502.47",
            "p95": "469.52",
            "p99": "457.71",
            "min": "454.72",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1471.84",
            "p50": "1164.99",
            "p95": "871.67",
            "p99": "782.69",
            "min": "774.33",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "314.65",
            "p50": "310.68",
            "p95": "296.15",
            "p99": "285.41",
            "min": "282.55",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.40",
            "p50": "85.18",
            "p95": "79.30",
            "p99": "76.30",
            "min": "76.29",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "80.39",
            "p50": "77.89",
            "p95": "72.14",
            "p99": "70.19",
            "min": "70.05",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "82.03",
            "p50": "79.81",
            "p95": "73.41",
            "p99": "70.85",
            "min": "70.74",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "225.94",
            "p50": "210.21",
            "p95": "174.15",
            "p99": "150.24",
            "min": "141.10",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "172.67",
            "p50": "162.17",
            "p95": "139.85",
            "p99": "132.32",
            "min": "131.67",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "180.26",
            "p50": "168.96",
            "p95": "143.77",
            "p99": "131.11",
            "min": "129.85",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "172.96",
            "p50": "162.23",
            "p95": "137.94",
            "p99": "118.79",
            "min": "117.68",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "174.27",
            "p50": "161.34",
            "p95": "143.71",
            "p99": "135.60",
            "min": "135.37",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "195.36",
            "p50": "181.48",
            "p95": "152.33",
            "p99": "108.94",
            "min": "95.44",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "175.33",
            "p50": "163.74",
            "p95": "141.24",
            "p99": "125.02",
            "min": "122.10",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "196.31",
            "p50": "180.13",
            "p95": "151.55",
            "p99": "132.49",
            "min": "128.57",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "146.60",
            "p50": "137.00",
            "p95": "119.89",
            "p99": "116.85",
            "min": "116.73",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "217.85",
            "p50": "201.12",
            "p95": "173.01",
            "p99": "133.06",
            "min": "123.97",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "175.70",
            "p50": "163.52",
            "p95": "145.26",
            "p99": "133.47",
            "min": "133.36",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.48",
            "p50": "64.98",
            "p95": "60.96",
            "p99": "56.93",
            "min": "56.24",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "138.67",
            "p50": "131.02",
            "p95": "115.14",
            "p99": "122.21",
            "min": "113.35",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "421.06",
            "p50": "328.39",
            "p95": "247.25",
            "p99": "244.66",
            "min": "203.28",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "175.13",
            "p50": "143.85",
            "p95": "135.01",
            "p99": "151.53",
            "min": "133.73",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "129.55",
            "p50": "124.12",
            "p95": "112.32",
            "p99": "117.67",
            "min": "108.72",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1174.56",
            "p50": "926.05",
            "p95": "517.21",
            "p99": "441.48",
            "min": "435.34",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1032.46",
            "p50": "829.81",
            "p95": "557.45",
            "p99": "427.05",
            "min": "425.86",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1398.82",
            "p50": "1061.74",
            "p95": "604.21",
            "p99": "500.23",
            "min": "482.45",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1277.60",
            "p50": "1000.27",
            "p95": "552.27",
            "p99": "426.11",
            "min": "398.03",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1247.78",
            "p50": "998.54",
            "p95": "591.24",
            "p99": "451.80",
            "min": "451.39",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1067.29",
            "p50": "853.90",
            "p95": "504.98",
            "p99": "430.44",
            "min": "419.52",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "679.69",
            "p50": "533.11",
            "p95": "385.63",
            "p99": "358.78",
            "min": "357.96",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "693.81",
            "p50": "567.88",
            "p95": "372.13",
            "p99": "308.25",
            "min": "296.14",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "685.60",
            "p50": "555.84",
            "p95": "382.23",
            "p99": "295.24",
            "min": "286.99",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "718.86",
            "p50": "576.58",
            "p95": "378.60",
            "p99": "319.22",
            "min": "316.94",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "293.12",
            "p50": "266.76",
            "p95": "221.00",
            "p99": "194.75",
            "min": "193.98",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "604.46",
            "p50": "474.71",
            "p95": "374.91",
            "p99": "281.96",
            "min": "266.20",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "588.55",
            "p50": "473.96",
            "p95": "335.85",
            "p99": "312.53",
            "min": "308.86",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "601.68",
            "p50": "495.52",
            "p95": "356.92",
            "p99": "313.47",
            "min": "308.31",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "620.08",
            "p50": "502.84",
            "p95": "343.59",
            "p99": "308.47",
            "min": "304.66",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.63",
            "p50": "102.60",
            "p95": "91.57",
            "p99": "85.21",
            "min": "82.43",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.65",
            "p50": "101.88",
            "p95": "92.26",
            "p99": "86.69",
            "min": "86.07",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.11",
            "p50": "94.87",
            "p95": "85.78",
            "p99": "82.64",
            "min": "82.00",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "253.25",
            "p50": "233.83",
            "p95": "188.06",
            "p99": "173.60",
            "min": "170.38",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.78",
            "p50": "95.20",
            "p95": "84.26",
            "p99": "78.25",
            "min": "76.44",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "247.52",
            "p50": "230.91",
            "p95": "187.60",
            "p99": "174.52",
            "min": "174.04",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "193.82",
            "p50": "180.97",
            "p95": "150.98",
            "p99": "139.66",
            "min": "139.41",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "199.15",
            "p50": "186.33",
            "p95": "163.15",
            "p99": "76.64",
            "min": "42.14",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "468.25",
            "p50": "411.54",
            "p95": "295.71",
            "p99": "280.27",
            "min": "277.20",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5894.11",
            "p50": "2281.73",
            "p95": "972.50",
            "p99": "773.38",
            "min": "704.38",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "448.70",
            "p50": "397.33",
            "p95": "300.72",
            "p99": "269.90",
            "min": "269.59",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "15968.03",
            "p50": "3971.51",
            "p95": "1329.79",
            "p99": "806.61",
            "min": "654.43",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3069.89",
            "p50": "1779.51",
            "p95": "824.58",
            "p99": "628.55",
            "min": "606.15",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "233.77",
            "p50": "209.66",
            "p95": "181.96",
            "p99": "168.89",
            "min": "168.61",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "249.14",
            "p50": "228.66",
            "p95": "189.67",
            "p99": "176.67",
            "min": "173.45",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "92.18",
            "p50": "88.31",
            "p95": "80.98",
            "p99": "76.54",
            "min": "76.40",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "224.04",
            "p50": "209.02",
            "p95": "168.05",
            "p99": "104.14",
            "min": "86.85",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "173.79",
            "p50": "161.95",
            "p95": "135.77",
            "p99": "91.16",
            "min": "87.31",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "200.60",
            "p50": "189.00",
            "p95": "160.22",
            "p99": "124.53",
            "min": "106.27",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "195.51",
            "p50": "182.96",
            "p95": "158.35",
            "p99": "131.85",
            "min": "129.25",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "197.43",
            "p50": "183.93",
            "p95": "163.73",
            "p99": "150.78",
            "min": "149.71",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1177.38",
            "p50": "924.63",
            "p95": "599.19",
            "p99": "503.11",
            "min": "485.17",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "177.96",
            "p50": "167.03",
            "p95": "130.40",
            "p99": "116.22",
            "min": "114.77",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.81",
            "p50": "190.39",
            "p95": "173.77",
            "p99": "159.58",
            "min": "159.17",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.43",
            "p50": "189.60",
            "p95": "169.13",
            "p99": "159.27",
            "min": "158.79",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "194.96",
            "p50": "189.01",
            "p95": "169.63",
            "p99": "163.74",
            "min": "163.12",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1187.53",
            "p50": "1041.67",
            "p95": "673.72",
            "p99": "532.87",
            "min": "529.98",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "703.79",
            "p50": "645.70",
            "p95": "461.41",
            "p99": "357.62",
            "min": "342.08",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "812.90",
            "p50": "772.08",
            "p95": "525.06",
            "p99": "451.92",
            "min": "439.91",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "750.00",
            "p50": "689.12",
            "p95": "499.63",
            "p99": "468.30",
            "min": "467.33",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "264.90",
            "p50": "252.81",
            "p95": "215.33",
            "p99": "204.54",
            "min": "203.86",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "906.84",
            "p50": "797.51",
            "p95": "575.61",
            "p99": "477.10",
            "min": "473.44",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "869.62",
            "p50": "781.16",
            "p95": "538.56",
            "p99": "466.84",
            "min": "458.42",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "871.68",
            "p50": "777.44",
            "p95": "559.77",
            "p99": "461.65",
            "min": "461.13",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "286.89",
            "p50": "278.05",
            "p95": "240.26",
            "p99": "219.25",
            "min": "218.94",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "652.98",
            "p50": "605.99",
            "p95": "455.56",
            "p99": "413.13",
            "min": "406.43",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "834.97",
            "p50": "752.51",
            "p95": "532.46",
            "p99": "437.45",
            "min": "434.68",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "111.69",
            "p50": "106.76",
            "p95": "100.88",
            "p99": "97.57",
            "min": "96.69",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "96.52",
            "p50": "95.15",
            "p95": "89.34",
            "p99": "90.58",
            "min": "87.39",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "415.52",
            "p50": "385.12",
            "p95": "330.83",
            "p99": "315.27",
            "min": "291.76",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "130.96",
            "p50": "104.05",
            "p95": "96.68",
            "p99": "110.85",
            "min": "95.68",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "91.50",
            "p50": "87.81",
            "p95": "83.31",
            "p99": "86.46",
            "min": "82.66",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1695.94",
            "p50": "1467.70",
            "p95": "796.16",
            "p99": "604.34",
            "min": "604.31",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1636.84",
            "p50": "1495.38",
            "p95": "843.00",
            "p99": "704.32",
            "min": "701.38",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2039.87",
            "p50": "1747.73",
            "p95": "915.51",
            "p99": "745.27",
            "min": "712.60",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2016.81",
            "p50": "1556.26",
            "p95": "779.20",
            "p99": "628.64",
            "min": "621.33",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1999.70",
            "p50": "1682.85",
            "p95": "856.45",
            "p99": "633.42",
            "min": "627.74",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1655.26",
            "p50": "1421.78",
            "p95": "802.61",
            "p99": "628.19",
            "min": "599.99",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "634.67",
            "p50": "563.40",
            "p95": "455.11",
            "p99": "393.36",
            "min": "386.45",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "625.67",
            "p50": "561.15",
            "p95": "444.18",
            "p99": "370.73",
            "min": "368.52",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "630.32",
            "p50": "553.15",
            "p95": "453.73",
            "p99": "396.26",
            "min": "389.76",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "652.58",
            "p50": "576.11",
            "p95": "443.18",
            "p99": "383.32",
            "min": "380.18",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.05",
            "p50": "85.87",
            "p95": "81.85",
            "p99": "81.34",
            "min": "81.25",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "569.63",
            "p50": "505.81",
            "p95": "400.31",
            "p99": "359.60",
            "min": "358.59",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "541.71",
            "p50": "493.98",
            "p95": "395.18",
            "p99": "345.48",
            "min": "345.21",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "538.02",
            "p50": "487.77",
            "p95": "386.51",
            "p99": "353.08",
            "min": "351.93",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "542.78",
            "p50": "488.76",
            "p95": "387.43",
            "p99": "364.21",
            "min": "362.68",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1356.73",
            "p50": "1244.81",
            "p95": "735.83",
            "p99": "575.34",
            "min": "572.98",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1662.42",
            "p50": "1434.13",
            "p95": "797.63",
            "p99": "620.70",
            "min": "617.21",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.11",
            "p50": "71.35",
            "p95": "69.05",
            "p99": "67.26",
            "min": "67.24",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "8753.99",
            "p50": "3942.15",
            "p95": "2332.18",
            "p99": "1728.98",
            "min": "1371.49",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.11",
            "p50": "71.42",
            "p95": "68.53",
            "p99": "67.25",
            "min": "67.21",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "221.32",
            "p50": "216.32",
            "p95": "194.09",
            "p99": "179.07",
            "min": "176.69",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "871.30",
            "p50": "791.01",
            "p95": "563.25",
            "p99": "472.15",
            "min": "458.95",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.31",
            "p50": "613.55",
            "p95": "472.03",
            "p99": "405.73",
            "min": "404.18",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1135.22",
            "p50": "1073.33",
            "p95": "668.60",
            "p99": "586.03",
            "min": "584.25",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "27507.31",
            "p50": "8805.28",
            "p95": "2844.78",
            "p99": "1661.21",
            "min": "1643.70",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1134.58",
            "p50": "1039.30",
            "p95": "700.61",
            "p99": "535.74",
            "min": "528.54",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "54258.49",
            "p50": "9143.65",
            "p95": "2434.76",
            "p99": "1533.43",
            "min": "1447.46",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14592.69",
            "p50": "5777.97",
            "p95": "1329.36",
            "p99": "808.74",
            "min": "793.43",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "563.13",
            "p50": "496.46",
            "p95": "405.26",
            "p99": "345.65",
            "min": "341.30",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "991.02",
            "p50": "900.19",
            "p95": "602.56",
            "p99": "550.32",
            "min": "549.71",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "287.25",
            "p50": "278.63",
            "p95": "245.03",
            "p99": "221.54",
            "min": "218.56",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1207.99",
            "p50": "1146.89",
            "p95": "753.64",
            "p99": "614.87",
            "min": "611.66",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "265.77",
            "p50": "253.55",
            "p95": "218.95",
            "p99": "207.91",
            "min": "207.31",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "537.98",
            "p50": "519.67",
            "p95": "395.43",
            "p99": "333.23",
            "min": "322.84",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "861.24",
            "p50": "741.18",
            "p95": "513.21",
            "p99": "450.47",
            "min": "449.39",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "913.06",
            "p50": "805.66",
            "p95": "592.56",
            "p99": "507.72",
            "min": "488.45",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2306.31",
            "p50": "1927.75",
            "p95": "1020.45",
            "p99": "927.84",
            "min": "924.53",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "893.30",
            "p50": "805.19",
            "p95": "598.20",
            "p99": "478.21",
            "min": "460.52",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "81.93",
            "p50": "78.58",
            "p95": "71.67",
            "p99": "66.80",
            "min": "66.27",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "75.20",
            "p50": "72.21",
            "p95": "66.97",
            "p99": "63.07",
            "min": "62.46",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "76.70",
            "p50": "74.21",
            "p95": "69.39",
            "p99": "64.35",
            "min": "64.18",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "210.49",
            "p50": "190.89",
            "p95": "156.30",
            "p99": "134.18",
            "min": "132.21",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.80",
            "p50": "97.64",
            "p95": "86.71",
            "p99": "77.09",
            "min": "76.53",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.72",
            "p50": "103.21",
            "p95": "92.27",
            "p99": "86.93",
            "min": "85.51",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "139.85",
            "p50": "132.52",
            "p95": "114.47",
            "p99": "101.72",
            "min": "101.51",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "141.26",
            "p50": "132.38",
            "p95": "111.81",
            "p99": "74.46",
            "min": "67.61",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "186.97",
            "p50": "171.05",
            "p95": "135.74",
            "p99": "128.55",
            "min": "128.34",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "182.95",
            "p50": "170.27",
            "p95": "141.06",
            "p99": "123.50",
            "min": "122.91",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "181.94",
            "p50": "171.81",
            "p95": "134.88",
            "p99": "111.31",
            "min": "109.29",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.59",
            "p50": "120.87",
            "p95": "105.18",
            "p99": "90.00",
            "min": "89.00",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "204.34",
            "p50": "186.44",
            "p95": "152.44",
            "p99": "128.18",
            "min": "124.22",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "188.37",
            "p50": "173.39",
            "p95": "143.28",
            "p99": "119.22",
            "min": "116.97",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "70.87",
            "p50": "67.11",
            "p95": "60.72",
            "p99": "54.53",
            "min": "53.99",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "129.33",
            "p50": "121.68",
            "p95": "107.72",
            "p99": "109.90",
            "min": "99.43",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "209.07",
            "p50": "189.27",
            "p95": "148.79",
            "p99": "150.01",
            "min": "136.16",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "152.21",
            "p50": "135.46",
            "p95": "128.93",
            "p99": "134.86",
            "min": "121.78",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "124.83",
            "p50": "116.74",
            "p95": "100.50",
            "p99": "108.76",
            "min": "96.63",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1031.14",
            "p50": "732.11",
            "p95": "403.81",
            "p99": "332.09",
            "min": "322.13",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1008.15",
            "p50": "713.29",
            "p95": "379.44",
            "p99": "251.77",
            "min": "249.98",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1148.53",
            "p50": "772.29",
            "p95": "395.94",
            "p99": "283.10",
            "min": "278.90",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1082.00",
            "p50": "717.88",
            "p95": "380.96",
            "p99": "276.23",
            "min": "273.51",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1015.40",
            "p50": "702.67",
            "p95": "367.26",
            "p99": "271.69",
            "min": "248.93",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1021.08",
            "p50": "702.90",
            "p95": "393.89",
            "p99": "254.06",
            "min": "254.04",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "337.31",
            "p50": "293.57",
            "p95": "228.91",
            "p99": "191.71",
            "min": "191.64",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "330.84",
            "p50": "291.78",
            "p95": "225.30",
            "p99": "181.06",
            "min": "176.17",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "340.16",
            "p50": "291.63",
            "p95": "197.42",
            "p99": "172.58",
            "min": "171.30",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "361.53",
            "p50": "323.96",
            "p95": "216.27",
            "p99": "148.23",
            "min": "137.77",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "284.39",
            "p50": "248.41",
            "p95": "195.90",
            "p99": "163.47",
            "min": "160.43",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "286.41",
            "p50": "256.67",
            "p95": "193.46",
            "p99": "155.54",
            "min": "148.58",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "289.73",
            "p50": "251.82",
            "p95": "200.65",
            "p99": "194.05",
            "min": "193.93",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "291.06",
            "p50": "258.57",
            "p95": "207.43",
            "p99": "163.04",
            "min": "160.22",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "291.07",
            "p50": "256.75",
            "p95": "199.57",
            "p99": "187.94",
            "min": "186.66",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.04",
            "p50": "100.00",
            "p95": "86.68",
            "p99": "77.51",
            "min": "77.43",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.14",
            "p50": "100.00",
            "p95": "87.41",
            "p99": "81.13",
            "min": "80.42",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.31",
            "p50": "93.05",
            "p95": "83.77",
            "p99": "78.96",
            "min": "77.04",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "249.57",
            "p50": "223.20",
            "p95": "172.74",
            "p99": "153.16",
            "min": "152.87",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "96.84",
            "p50": "92.73",
            "p95": "81.42",
            "p99": "72.17",
            "min": "70.08",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "242.45",
            "p50": "216.58",
            "p95": "176.46",
            "p99": "153.30",
            "min": "145.36",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "185.17",
            "p50": "171.02",
            "p95": "134.86",
            "p99": "116.65",
            "min": "115.62",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "153.95",
            "p50": "143.24",
            "p95": "119.21",
            "p99": "108.74",
            "min": "108.11",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "438.80",
            "p50": "363.58",
            "p95": "243.59",
            "p99": "182.10",
            "min": "178.97",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4160.12",
            "p50": "1433.08",
            "p95": "377.36",
            "p99": "279.23",
            "min": "252.25",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "438.97",
            "p50": "362.97",
            "p95": "256.52",
            "p99": "196.00",
            "min": "186.53",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "10678.87",
            "p50": "2062.00",
            "p95": "605.12",
            "p99": "468.69",
            "min": "465.33",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2720.72",
            "p50": "1178.64",
            "p95": "427.62",
            "p99": "291.65",
            "min": "275.98",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "207.44",
            "p50": "184.74",
            "p95": "147.03",
            "p99": "119.76",
            "min": "117.96",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "229.90",
            "p50": "209.22",
            "p95": "161.29",
            "p99": "149.33",
            "min": "146.00",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "127.83",
            "p50": "120.30",
            "p95": "105.10",
            "p99": "98.48",
            "min": "98.47",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "207.71",
            "p50": "189.40",
            "p95": "152.24",
            "p99": "131.71",
            "min": "127.69",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "139.58",
            "p50": "132.29",
            "p95": "114.03",
            "p99": "93.16",
            "min": "91.55",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "174.02",
            "p50": "159.87",
            "p95": "131.76",
            "p99": "113.55",
            "min": "111.50",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "183.73",
            "p50": "169.57",
            "p95": "136.84",
            "p99": "119.76",
            "min": "119.60",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "185.11",
            "p50": "170.74",
            "p95": "142.53",
            "p99": "119.26",
            "min": "117.97",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "292.86",
            "p50": "216.26",
            "p95": "134.17",
            "p99": "138.40",
            "min": "126.78",
            "n": "92",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "141.64",
            "p50": "134.63",
            "p95": "109.43",
            "p99": "101.70",
            "min": "87.66",
            "n": "73",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.86",
            "p50": "84.72",
            "p95": "78.29",
            "p99": "74.77",
            "min": "74.75",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "89.94",
            "p50": "85.80",
            "p95": "81.89",
            "p99": "78.87",
            "min": "78.54",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "89.25",
            "p50": "85.55",
            "p95": "81.83",
            "p99": "79.07",
            "min": "78.88",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "189.58",
            "p50": "180.19",
            "p95": "173.77",
            "p99": "165.32",
            "min": "163.11",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "93.97",
            "p50": "89.74",
            "p95": "86.37",
            "p99": "85.02",
            "min": "84.83",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "113.54",
            "p50": "110.20",
            "p95": "104.28",
            "p99": "88.00",
            "min": "83.53",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "125.25",
            "p50": "121.22",
            "p95": "109.74",
            "p99": "102.15",
            "min": "102.08",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "127.00",
            "p50": "124.46",
            "p95": "121.77",
            "p99": "114.48",
            "min": "113.41",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "96.93",
            "p50": "94.47",
            "p95": "91.37",
            "p99": "87.56",
            "min": "87.50",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.59",
            "p50": "96.27",
            "p95": "94.37",
            "p99": "90.51",
            "min": "90.02",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.30",
            "p50": "96.19",
            "p95": "94.37",
            "p99": "89.64",
            "min": "88.59",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "125.59",
            "p50": "122.69",
            "p95": "120.55",
            "p99": "118.88",
            "min": "118.66",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "120.11",
            "p50": "117.92",
            "p95": "114.72",
            "p99": "100.87",
            "min": "96.66",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "115.82",
            "p50": "113.89",
            "p95": "111.28",
            "p99": "106.13",
            "min": "106.05",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "76.00",
            "p50": "73.18",
            "p95": "67.37",
            "p99": "64.08",
            "min": "62.94",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "98.92",
            "p50": "98.07",
            "p95": "92.71",
            "p99": "93.97",
            "min": "91.30",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "60.57",
            "p50": "59.43",
            "p95": "56.70",
            "p99": "56.38",
            "min": "55.39",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "159.30",
            "p50": "127.70",
            "p95": "119.39",
            "p99": "136.03",
            "min": "118.47",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "110.07",
            "p50": "108.28",
            "p95": "105.86",
            "p99": "107.12",
            "min": "104.90",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "374.10",
            "p50": "365.73",
            "p95": "344.60",
            "p99": "303.84",
            "min": "299.34",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "489.70",
            "p50": "483.02",
            "p95": "459.39",
            "p99": "347.52",
            "min": "321.74",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "373.27",
            "p50": "362.54",
            "p95": "343.82",
            "p99": "307.47",
            "min": "305.85",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "377.88",
            "p50": "365.58",
            "p95": "345.49",
            "p99": "311.45",
            "min": "303.89",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "380.55",
            "p50": "367.11",
            "p95": "343.12",
            "p99": "312.95",
            "min": "304.74",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "452.73",
            "p50": "446.76",
            "p95": "418.17",
            "p99": "370.30",
            "min": "345.87",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "96.66",
            "p50": "94.44",
            "p95": "92.04",
            "p99": "89.99",
            "min": "89.79",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "97.22",
            "p50": "94.74",
            "p95": "92.64",
            "p99": "89.07",
            "min": "88.83",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "95.99",
            "p50": "93.70",
            "p95": "91.68",
            "p99": "89.39",
            "min": "89.00",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "87.87",
            "p50": "86.66",
            "p95": "84.91",
            "p99": "81.81",
            "min": "81.51",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.94",
            "p50": "86.39",
            "p95": "84.29",
            "p99": "83.84",
            "min": "83.76",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "88.49",
            "p50": "87.20",
            "p95": "85.23",
            "p99": "84.18",
            "min": "83.99",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "85.20",
            "p50": "82.92",
            "p95": "80.92",
            "p99": "79.43",
            "min": "79.31",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "84.79",
            "p50": "82.91",
            "p95": "80.97",
            "p99": "73.00",
            "min": "71.20",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "85.10",
            "p50": "82.98",
            "p95": "81.11",
            "p99": "78.50",
            "min": "78.09",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1352.55",
            "p50": "1238.74",
            "p95": "761.54",
            "p99": "446.67",
            "min": "262.70",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1318.68",
            "p50": "1213.92",
            "p95": "696.01",
            "p99": "412.03",
            "min": "313.36",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "90.25",
            "p50": "89.34",
            "p95": "83.82",
            "p99": "73.26",
            "min": "72.46",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "2040.69",
            "p50": "1799.74",
            "p95": "1150.25",
            "p99": "348.96",
            "min": "264.95",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "90.32",
            "p50": "89.27",
            "p95": "82.47",
            "p99": "76.19",
            "min": "75.81",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "1638.95",
            "p50": "1483.90",
            "p95": "915.02",
            "p99": "628.20",
            "min": "555.66",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "97.50",
            "p50": "96.31",
            "p95": "91.71",
            "p99": "87.96",
            "min": "87.34",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "185.09",
            "p50": "174.66",
            "p95": "170.73",
            "p99": "160.58",
            "min": "155.22",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "408.83",
            "p50": "363.68",
            "p95": "272.93",
            "p99": "245.84",
            "min": "241.45",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "6673.41",
            "p50": "2319.14",
            "p95": "1000.49",
            "p99": "580.90",
            "min": "455.75",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "441.88",
            "p50": "394.95",
            "p95": "297.12",
            "p99": "273.86",
            "min": "270.00",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "30044.95",
            "p50": "9328.03",
            "p95": "2621.35",
            "p99": "1837.70",
            "min": "1784.11",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4608.51",
            "p50": "3146.50",
            "p95": "1665.52",
            "p99": "559.02",
            "min": "383.97",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "354.18",
            "p50": "314.54",
            "p95": "243.69",
            "p99": "189.87",
            "min": "164.66",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "154.23",
            "p50": "141.59",
            "p95": "115.82",
            "p99": "100.36",
            "min": "99.09",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "125.07",
            "p50": "111.89",
            "p95": "103.78",
            "p99": "100.80",
            "min": "100.18",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "138.66",
            "p50": "125.40",
            "p95": "113.79",
            "p99": "108.87",
            "min": "108.45",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "126.07",
            "p50": "117.48",
            "p95": "113.92",
            "p99": "106.78",
            "min": "105.69",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "177.39",
            "p50": "149.76",
            "p95": "142.71",
            "p99": "142.17",
            "min": "142.09",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "93.90",
            "p50": "92.63",
            "p95": "90.57",
            "p99": "89.57",
            "min": "89.46",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "117.81",
            "p50": "109.23",
            "p95": "106.49",
            "p99": "105.60",
            "min": "105.42",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "906.19",
            "p50": "838.46",
            "p95": "316.24",
            "p99": "313.40",
            "min": "313.03",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "126.40",
            "p50": "117.86",
            "p95": "114.53",
            "p99": "106.65",
            "min": "105.89",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}