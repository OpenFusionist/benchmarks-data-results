{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.33",
            "p50": "84.54",
            "p95": "78.94",
            "p99": "75.63",
            "min": "75.60",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "80.28",
            "p50": "77.54",
            "p95": "72.88",
            "p99": "69.42",
            "min": "69.32",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "81.88",
            "p50": "79.43",
            "p95": "72.75",
            "p99": "66.25",
            "min": "64.89",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "227.68",
            "p50": "209.89",
            "p95": "180.84",
            "p99": "166.21",
            "min": "163.14",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "171.36",
            "p50": "160.36",
            "p95": "137.09",
            "p99": "130.47",
            "min": "129.70",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "181.44",
            "p50": "166.86",
            "p95": "142.63",
            "p99": "124.31",
            "min": "119.83",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "170.58",
            "p50": "158.72",
            "p95": "135.22",
            "p99": "95.31",
            "min": "86.51",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "170.87",
            "p50": "158.00",
            "p95": "133.30",
            "p99": "120.80",
            "min": "118.44",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "194.54",
            "p50": "178.15",
            "p95": "153.06",
            "p99": "143.75",
            "min": "143.13",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "173.00",
            "p50": "160.10",
            "p95": "137.23",
            "p99": "118.61",
            "min": "117.23",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "194.70",
            "p50": "180.50",
            "p95": "150.37",
            "p99": "137.46",
            "min": "136.09",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "147.32",
            "p50": "136.26",
            "p95": "119.33",
            "p99": "88.00",
            "min": "84.52",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "218.45",
            "p50": "202.32",
            "p95": "162.17",
            "p99": "152.39",
            "min": "150.86",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "172.81",
            "p50": "161.13",
            "p95": "129.62",
            "p99": "91.67",
            "min": "87.10",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.42",
            "p50": "64.81",
            "p95": "59.76",
            "p99": "58.92",
            "min": "58.89",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "137.15",
            "p50": "128.78",
            "p95": "114.02",
            "p99": "119.03",
            "min": "109.28",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "379.38",
            "p50": "303.84",
            "p95": "210.29",
            "p99": "226.35",
            "min": "190.46",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "181.16",
            "p50": "141.51",
            "p95": "133.75",
            "p99": "153.82",
            "min": "133.19",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "131.19",
            "p50": "121.81",
            "p95": "109.87",
            "p99": "117.99",
            "min": "108.04",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1139.64",
            "p50": "881.01",
            "p95": "534.57",
            "p99": "448.01",
            "min": "442.65",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1041.81",
            "p50": "819.61",
            "p95": "491.79",
            "p99": "414.02",
            "min": "408.06",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1319.68",
            "p50": "974.93",
            "p95": "527.83",
            "p99": "413.22",
            "min": "359.35",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1258.22",
            "p50": "940.18",
            "p95": "520.57",
            "p99": "379.73",
            "min": "340.12",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1202.72",
            "p50": "918.42",
            "p95": "580.09",
            "p99": "414.32",
            "min": "413.11",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1049.93",
            "p50": "825.35",
            "p95": "497.94",
            "p99": "408.00",
            "min": "397.34",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "616.08",
            "p50": "492.25",
            "p95": "346.31",
            "p99": "326.50",
            "min": "326.49",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "612.51",
            "p50": "500.25",
            "p95": "381.52",
            "p99": "326.44",
            "min": "325.54",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "634.70",
            "p50": "517.73",
            "p95": "378.33",
            "p99": "321.55",
            "min": "320.12",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "635.77",
            "p50": "539.18",
            "p95": "401.45",
            "p99": "287.34",
            "min": "281.60",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "290.62",
            "p50": "262.36",
            "p95": "199.92",
            "p99": "192.02",
            "min": "191.96",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "547.97",
            "p50": "428.10",
            "p95": "302.02",
            "p99": "229.85",
            "min": "217.60",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "544.11",
            "p50": "446.94",
            "p95": "350.38",
            "p99": "287.65",
            "min": "283.31",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "557.03",
            "p50": "447.32",
            "p95": "348.02",
            "p99": "305.89",
            "min": "303.67",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "570.61",
            "p50": "453.10",
            "p95": "314.55",
            "p99": "296.26",
            "min": "295.95",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.40",
            "p50": "102.04",
            "p95": "89.40",
            "p99": "81.92",
            "min": "81.86",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.55",
            "p50": "101.98",
            "p95": "92.23",
            "p99": "85.61",
            "min": "83.75",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.97",
            "p50": "95.21",
            "p95": "85.92",
            "p99": "78.62",
            "min": "76.90",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "254.35",
            "p50": "230.66",
            "p95": "190.42",
            "p99": "173.90",
            "min": "173.14",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.85",
            "p50": "94.74",
            "p95": "86.95",
            "p99": "83.80",
            "min": "83.65",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "246.75",
            "p50": "228.46",
            "p95": "186.71",
            "p99": "172.66",
            "min": "171.88",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "197.43",
            "p50": "180.90",
            "p95": "150.52",
            "p99": "145.98",
            "min": "145.81",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "201.46",
            "p50": "186.23",
            "p95": "157.60",
            "p99": "141.59",
            "min": "136.17",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "354.08",
            "p50": "316.59",
            "p95": "233.79",
            "p99": "208.22",
            "min": "205.51",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5178.74",
            "p50": "2352.71",
            "p95": "944.82",
            "p99": "682.26",
            "min": "584.97",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "340.39",
            "p50": "308.49",
            "p95": "252.14",
            "p99": "196.21",
            "min": "170.44",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "13478.53",
            "p50": "3457.06",
            "p95": "1340.24",
            "p99": "1007.27",
            "min": "885.47",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3427.28",
            "p50": "2091.59",
            "p95": "929.44",
            "p99": "742.49",
            "min": "738.16",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "167.62",
            "p50": "145.10",
            "p95": "126.99",
            "p99": "115.32",
            "min": "114.53",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "242.98",
            "p50": "227.78",
            "p95": "178.35",
            "p99": "168.90",
            "min": "167.30",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "91.31",
            "p50": "87.67",
            "p95": "79.66",
            "p99": "73.44",
            "min": "73.41",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "224.36",
            "p50": "206.40",
            "p95": "175.39",
            "p99": "159.34",
            "min": "158.29",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "169.22",
            "p50": "160.50",
            "p95": "132.27",
            "p99": "85.74",
            "min": "78.57",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "202.49",
            "p50": "188.22",
            "p95": "163.73",
            "p99": "148.96",
            "min": "147.27",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "197.14",
            "p50": "181.64",
            "p95": "155.75",
            "p99": "146.33",
            "min": "144.80",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "195.39",
            "p50": "180.39",
            "p95": "151.91",
            "p99": "144.97",
            "min": "144.67",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1127.95",
            "p50": "936.80",
            "p95": "661.21",
            "p99": "479.34",
            "min": "464.13",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "171.08",
            "p50": "160.71",
            "p95": "140.71",
            "p99": "104.38",
            "min": "92.06",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.20",
            "p50": "192.39",
            "p95": "180.28",
            "p99": "157.49",
            "min": "156.18",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.75",
            "p50": "193.12",
            "p95": "177.47",
            "p99": "169.06",
            "min": "168.11",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.53",
            "p50": "193.43",
            "p95": "184.46",
            "p99": "166.57",
            "min": "163.74",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1190.69",
            "p50": "1160.71",
            "p95": "857.14",
            "p99": "611.84",
            "min": "600.70",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "700.47",
            "p50": "692.76",
            "p95": "528.12",
            "p99": "439.21",
            "min": "438.62",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "811.35",
            "p50": "797.44",
            "p95": "704.32",
            "p99": "564.69",
            "min": "540.20",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "735.41",
            "p50": "721.69",
            "p95": "604.29",
            "p99": "172.93",
            "min": "91.84",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "744.72",
            "p50": "731.87",
            "p95": "625.77",
            "p99": "571.79",
            "min": "570.85",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "912.42",
            "p50": "836.79",
            "p95": "739.64",
            "p99": "539.96",
            "min": "515.61",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "853.00",
            "p50": "836.00",
            "p95": "663.55",
            "p99": "507.58",
            "min": "506.98",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "854.25",
            "p50": "833.30",
            "p95": "683.32",
            "p99": "474.68",
            "min": "459.69",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "838.75",
            "p50": "821.29",
            "p95": "689.53",
            "p99": "550.56",
            "min": "536.86",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "886.49",
            "p50": "866.13",
            "p95": "750.65",
            "p99": "679.16",
            "min": "677.25",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "865.43",
            "p50": "834.31",
            "p95": "633.75",
            "p99": "505.28",
            "min": "504.71",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "64.34",
            "p50": "62.86",
            "p95": "62.05",
            "p99": "59.60",
            "min": "59.50",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "98.15",
            "p50": "97.12",
            "p95": "93.59",
            "p99": "92.96",
            "min": "90.17",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "597.80",
            "p50": "578.88",
            "p95": "459.30",
            "p99": "450.80",
            "min": "416.31",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "136.83",
            "p50": "106.86",
            "p95": "98.14",
            "p99": "113.80",
            "min": "96.42",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "92.43",
            "p50": "90.52",
            "p95": "87.45",
            "p99": "88.06",
            "min": "84.77",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1929.29",
            "p50": "1859.60",
            "p95": "1073.39",
            "p99": "941.78",
            "min": "866.32",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1643.36",
            "p50": "1590.15",
            "p95": "1066.16",
            "p99": "759.28",
            "min": "715.42",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2520.97",
            "p50": "2399.61",
            "p95": "1111.26",
            "p99": "927.52",
            "min": "907.87",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2498.46",
            "p50": "2409.00",
            "p95": "1205.28",
            "p99": "914.28",
            "min": "903.35",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2486.85",
            "p50": "2371.82",
            "p95": "1346.41",
            "p99": "818.31",
            "min": "737.24",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1708.16",
            "p50": "1651.74",
            "p95": "1123.29",
            "p99": "748.16",
            "min": "697.08",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "860.99",
            "p50": "833.75",
            "p95": "696.38",
            "p99": "605.02",
            "min": "596.87",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "859.04",
            "p50": "829.25",
            "p95": "644.63",
            "p99": "496.92",
            "min": "493.12",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "860.89",
            "p50": "837.89",
            "p95": "709.28",
            "p99": "504.23",
            "min": "504.15",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "870.92",
            "p50": "856.62",
            "p95": "721.91",
            "p99": "549.14",
            "min": "544.38",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.73",
            "p50": "86.16",
            "p95": "82.85",
            "p99": "81.09",
            "min": "80.98",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "785.39",
            "p50": "753.04",
            "p95": "601.22",
            "p99": "537.05",
            "min": "529.86",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "741.10",
            "p50": "710.89",
            "p95": "564.99",
            "p99": "469.08",
            "min": "454.86",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "738.19",
            "p50": "712.50",
            "p95": "629.78",
            "p99": "518.04",
            "min": "506.76",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "746.74",
            "p50": "722.42",
            "p95": "634.53",
            "p99": "468.87",
            "min": "457.28",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1964.75",
            "p50": "1877.59",
            "p95": "1185.34",
            "p99": "830.98",
            "min": "765.56",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2260.14",
            "p50": "2183.54",
            "p95": "1531.57",
            "p99": "1330.69",
            "min": "1330.57",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.97",
            "p50": "72.50",
            "p95": "70.17",
            "p99": "68.49",
            "min": "68.45",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "10072.07",
            "p50": "6991.60",
            "p95": "2554.21",
            "p99": "1607.93",
            "min": "1543.27",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "73.01",
            "p50": "72.54",
            "p95": "71.14",
            "p99": "69.55",
            "min": "69.46",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "222.13",
            "p50": "220.36",
            "p95": "210.69",
            "p99": "205.79",
            "min": "205.78",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "868.65",
            "p50": "831.68",
            "p95": "650.85",
            "p99": "168.31",
            "min": "93.61",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.98",
            "p50": "662.12",
            "p95": "626.14",
            "p99": "504.96",
            "min": "430.46",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2348.51",
            "p50": "2191.36",
            "p95": "1133.79",
            "p99": "666.64",
            "min": "650.08",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "27172.72",
            "p50": "8680.09",
            "p95": "2191.49",
            "p99": "1632.17",
            "min": "1629.97",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2154.35",
            "p50": "2049.02",
            "p95": "1240.42",
            "p99": "921.69",
            "min": "792.39",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "82422.15",
            "p50": "8528.16",
            "p95": "2183.13",
            "p99": "1572.83",
            "min": "1568.69",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "16086.08",
            "p50": "7781.57",
            "p95": "2524.08",
            "p99": "1668.32",
            "min": "1651.48",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "866.81",
            "p50": "752.71",
            "p95": "641.51",
            "p99": "589.05",
            "min": "584.16",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "987.37",
            "p50": "970.33",
            "p95": "805.79",
            "p99": "668.09",
            "min": "665.97",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "835.26",
            "p50": "815.81",
            "p95": "712.57",
            "p99": "515.25",
            "min": "475.13",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1199.44",
            "p50": "1172.26",
            "p95": "942.03",
            "p99": "591.59",
            "min": "587.01",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "745.78",
            "p50": "729.07",
            "p95": "573.02",
            "p99": "477.19",
            "min": "467.68",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1155.91",
            "p50": "1123.19",
            "p95": "849.90",
            "p99": "661.93",
            "min": "611.49",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "891.09",
            "p50": "874.68",
            "p95": "625.41",
            "p99": "482.81",
            "min": "462.93",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "928.70",
            "p50": "907.85",
            "p95": "767.31",
            "p99": "611.98",
            "min": "580.97",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2485.54",
            "p50": "2226.20",
            "p95": "1640.53",
            "p99": "1215.18",
            "min": "1211.24",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "849.62",
            "p50": "833.12",
            "p95": "716.26",
            "p99": "598.76",
            "min": "597.60",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "81.36",
            "p50": "78.16",
            "p95": "72.99",
            "p99": "64.29",
            "min": "63.80",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "75.11",
            "p50": "72.03",
            "p95": "63.00",
            "p99": "57.57",
            "min": "56.88",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "76.11",
            "p50": "73.50",
            "p95": "65.83",
            "p99": "60.07",
            "min": "60.06",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "211.39",
            "p50": "191.06",
            "p95": "152.02",
            "p99": "135.24",
            "min": "134.48",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "103.84",
            "p50": "98.88",
            "p95": "87.73",
            "p99": "83.91",
            "min": "83.71",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.57",
            "p50": "104.13",
            "p95": "93.55",
            "p99": "78.77",
            "min": "76.45",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "141.01",
            "p50": "132.96",
            "p95": "112.70",
            "p99": "97.91",
            "min": "97.46",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "140.78",
            "p50": "132.40",
            "p95": "114.00",
            "p99": "102.77",
            "min": "102.55",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "185.60",
            "p50": "171.41",
            "p95": "136.60",
            "p99": "114.79",
            "min": "113.68",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "181.95",
            "p50": "170.69",
            "p95": "134.29",
            "p99": "122.68",
            "min": "122.16",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "183.82",
            "p50": "168.81",
            "p95": "139.11",
            "p99": "111.11",
            "min": "105.80",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "130.20",
            "p50": "124.61",
            "p95": "108.25",
            "p99": "95.50",
            "min": "95.03",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "201.47",
            "p50": "183.13",
            "p95": "149.93",
            "p99": "119.08",
            "min": "118.46",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "186.84",
            "p50": "174.79",
            "p95": "138.96",
            "p99": "116.08",
            "min": "114.38",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "70.93",
            "p50": "66.95",
            "p95": "61.73",
            "p99": "59.63",
            "min": "59.36",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "130.34",
            "p50": "120.89",
            "p95": "96.41",
            "p99": "102.93",
            "min": "88.17",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "209.09",
            "p50": "188.01",
            "p95": "149.01",
            "p99": "143.74",
            "min": "128.41",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "153.06",
            "p50": "137.62",
            "p95": "128.33",
            "p99": "135.81",
            "min": "122.79",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "124.42",
            "p50": "118.55",
            "p95": "98.63",
            "p99": "107.13",
            "min": "94.08",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1038.66",
            "p50": "721.27",
            "p95": "390.15",
            "p99": "292.17",
            "min": "241.52",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1003.93",
            "p50": "705.85",
            "p95": "398.48",
            "p99": "308.62",
            "min": "294.41",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1146.60",
            "p50": "769.08",
            "p95": "375.83",
            "p99": "286.25",
            "min": "280.85",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1087.68",
            "p50": "735.95",
            "p95": "365.89",
            "p99": "265.63",
            "min": "255.06",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "994.24",
            "p50": "703.99",
            "p95": "406.61",
            "p99": "297.35",
            "min": "254.01",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1019.69",
            "p50": "710.52",
            "p95": "355.63",
            "p99": "307.23",
            "min": "290.64",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "332.25",
            "p50": "292.59",
            "p95": "221.48",
            "p99": "180.32",
            "min": "175.82",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "333.49",
            "p50": "293.17",
            "p95": "215.82",
            "p99": "159.53",
            "min": "156.01",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "329.73",
            "p50": "293.51",
            "p95": "225.41",
            "p99": "181.63",
            "min": "177.86",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "359.96",
            "p50": "308.70",
            "p95": "244.22",
            "p99": "180.27",
            "min": "177.03",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "285.29",
            "p50": "251.89",
            "p95": "193.44",
            "p99": "165.10",
            "min": "159.82",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "289.50",
            "p50": "255.37",
            "p95": "195.23",
            "p99": "176.34",
            "min": "173.69",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "281.70",
            "p50": "246.39",
            "p95": "208.07",
            "p99": "174.92",
            "min": "174.03",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "288.88",
            "p50": "261.73",
            "p95": "197.05",
            "p99": "135.90",
            "min": "132.19",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "290.84",
            "p50": "256.53",
            "p95": "196.23",
            "p99": "159.76",
            "min": "155.25",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.57",
            "p50": "100.06",
            "p95": "84.53",
            "p99": "77.20",
            "min": "76.95",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.29",
            "p50": "99.99",
            "p95": "87.66",
            "p99": "81.21",
            "min": "81.19",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.46",
            "p50": "93.32",
            "p95": "80.76",
            "p99": "70.55",
            "min": "69.33",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "250.24",
            "p50": "223.91",
            "p95": "175.94",
            "p99": "146.80",
            "min": "146.15",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "96.93",
            "p50": "92.95",
            "p95": "81.78",
            "p99": "71.61",
            "min": "70.28",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "242.73",
            "p50": "216.92",
            "p95": "171.18",
            "p99": "141.39",
            "min": "135.05",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "183.85",
            "p50": "171.14",
            "p95": "134.27",
            "p99": "118.10",
            "min": "117.51",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "154.40",
            "p50": "143.03",
            "p95": "116.02",
            "p99": "87.99",
            "min": "78.40",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "438.47",
            "p50": "363.85",
            "p95": "256.75",
            "p99": "192.14",
            "min": "187.31",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4930.22",
            "p50": "1575.77",
            "p95": "504.53",
            "p99": "322.29",
            "min": "285.37",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "440.76",
            "p50": "361.27",
            "p95": "248.43",
            "p99": "192.72",
            "min": "183.63",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "10583.32",
            "p50": "1958.46",
            "p95": "609.07",
            "p99": "464.37",
            "min": "422.57",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3061.06",
            "p50": "1212.92",
            "p95": "370.29",
            "p99": "284.22",
            "min": "251.91",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "206.37",
            "p50": "185.89",
            "p95": "148.67",
            "p99": "136.78",
            "min": "135.97",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "230.94",
            "p50": "210.67",
            "p95": "164.07",
            "p99": "144.33",
            "min": "143.38",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "132.12",
            "p50": "124.34",
            "p95": "108.01",
            "p99": "92.31",
            "min": "91.49",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "210.11",
            "p50": "188.73",
            "p95": "150.93",
            "p99": "130.57",
            "min": "125.30",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "141.84",
            "p50": "131.34",
            "p95": "113.28",
            "p99": "98.27",
            "min": "97.97",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "177.89",
            "p50": "164.32",
            "p95": "134.93",
            "p99": "122.71",
            "min": "117.18",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "183.28",
            "p50": "169.28",
            "p95": "135.82",
            "p99": "128.81",
            "min": "128.66",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "185.17",
            "p50": "168.99",
            "p95": "135.80",
            "p99": "121.59",
            "min": "121.44",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "289.38",
            "p50": "233.20",
            "p95": "146.41",
            "p99": "139.65",
            "min": "121.14",
            "n": "88",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "144.59",
            "p50": "135.91",
            "p95": "115.53",
            "p99": "119.04",
            "min": "107.57",
            "n": "68",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.29",
            "p50": "84.40",
            "p95": "75.59",
            "p99": "72.93",
            "min": "72.87",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "89.20",
            "p50": "85.30",
            "p95": "82.48",
            "p99": "80.16",
            "min": "79.68",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "88.71",
            "p50": "84.99",
            "p95": "81.48",
            "p99": "77.46",
            "min": "77.33",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "193.27",
            "p50": "183.04",
            "p95": "168.40",
            "p99": "140.56",
            "min": "130.22",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "91.56",
            "p50": "89.46",
            "p95": "86.17",
            "p99": "84.78",
            "min": "84.58",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "111.99",
            "p50": "108.25",
            "p95": "106.29",
            "p99": "103.79",
            "min": "103.73",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "124.89",
            "p50": "120.37",
            "p95": "109.52",
            "p99": "99.26",
            "min": "98.02",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "125.46",
            "p50": "120.95",
            "p95": "116.60",
            "p99": "114.84",
            "min": "114.83",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "98.94",
            "p50": "97.22",
            "p95": "94.46",
            "p99": "89.92",
            "min": "89.42",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "98.84",
            "p50": "96.41",
            "p95": "93.54",
            "p99": "91.66",
            "min": "91.65",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "99.24",
            "p50": "96.36",
            "p95": "92.87",
            "p99": "90.94",
            "min": "90.61",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.35",
            "p50": "122.93",
            "p95": "117.68",
            "p99": "112.52",
            "min": "112.10",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "121.67",
            "p50": "114.69",
            "p95": "107.96",
            "p99": "99.84",
            "min": "98.90",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "116.19",
            "p50": "113.53",
            "p95": "111.10",
            "p99": "103.54",
            "min": "103.51",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "85.26",
            "p50": "80.58",
            "p95": "75.49",
            "p99": "67.76",
            "min": "67.50",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "93.03",
            "p50": "91.75",
            "p95": "86.39",
            "p99": "87.72",
            "min": "84.85",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "60.18",
            "p50": "58.04",
            "p95": "56.37",
            "p99": "55.17",
            "min": "54.00",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "150.22",
            "p50": "119.14",
            "p95": "111.99",
            "p99": "127.83",
            "min": "110.94",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "103.77",
            "p50": "101.57",
            "p95": "98.78",
            "p99": "100.43",
            "min": "97.91",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "378.77",
            "p50": "367.06",
            "p95": "350.98",
            "p99": "317.46",
            "min": "297.59",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "510.36",
            "p50": "480.63",
            "p95": "453.00",
            "p99": "413.65",
            "min": "406.04",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "373.13",
            "p50": "364.88",
            "p95": "334.55",
            "p99": "287.99",
            "min": "283.36",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "377.23",
            "p50": "368.15",
            "p95": "347.45",
            "p99": "332.26",
            "min": "330.30",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "377.60",
            "p50": "369.47",
            "p95": "346.77",
            "p99": "287.81",
            "min": "262.94",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "469.81",
            "p50": "447.19",
            "p95": "429.37",
            "p99": "352.47",
            "min": "340.62",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "97.29",
            "p50": "94.85",
            "p95": "91.65",
            "p99": "88.42",
            "min": "87.90",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "98.06",
            "p50": "95.45",
            "p95": "92.59",
            "p99": "88.16",
            "min": "87.21",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "96.70",
            "p50": "94.11",
            "p95": "90.47",
            "p99": "89.44",
            "min": "89.34",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "88.37",
            "p50": "86.54",
            "p95": "84.70",
            "p99": "81.73",
            "min": "81.28",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.60",
            "p50": "85.93",
            "p95": "85.05",
            "p99": "81.44",
            "min": "81.23",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "88.77",
            "p50": "87.49",
            "p95": "83.97",
            "p99": "83.55",
            "min": "83.52",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "84.57",
            "p50": "83.21",
            "p95": "80.08",
            "p99": "77.97",
            "min": "77.94",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "84.73",
            "p50": "83.23",
            "p95": "79.36",
            "p99": "74.50",
            "min": "73.80",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "84.35",
            "p50": "83.11",
            "p95": "79.58",
            "p99": "78.20",
            "min": "78.09",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1401.41",
            "p50": "1254.84",
            "p95": "619.21",
            "p99": "323.01",
            "min": "306.49",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1407.46",
            "p50": "1285.28",
            "p95": "691.40",
            "p99": "492.90",
            "min": "461.01",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.51",
            "p50": "152.99",
            "p95": "138.08",
            "p99": "130.54",
            "min": "128.86",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3017.52",
            "p50": "2731.03",
            "p95": "1194.31",
            "p99": "842.78",
            "min": "758.83",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "155.56",
            "p50": "152.50",
            "p95": "140.84",
            "p99": "111.53",
            "min": "110.71",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "2997.29",
            "p50": "2750.73",
            "p95": "1365.89",
            "p99": "814.19",
            "min": "706.60",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "99.46",
            "p50": "97.00",
            "p95": "92.82",
            "p99": "86.13",
            "min": "85.41",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "187.64",
            "p50": "183.38",
            "p95": "178.86",
            "p99": "167.67",
            "min": "165.81",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "391.42",
            "p50": "291.97",
            "p95": "223.35",
            "p99": "203.38",
            "min": "198.49",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "8633.39",
            "p50": "1839.02",
            "p95": "840.07",
            "p99": "406.43",
            "min": "336.98",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "368.08",
            "p50": "285.52",
            "p95": "230.91",
            "p99": "187.91",
            "min": "170.96",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "28183.58",
            "p50": "9441.80",
            "p95": "2679.73",
            "p99": "2032.33",
            "min": "2016.85",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "5218.93",
            "p50": "3279.95",
            "p95": "1603.23",
            "p99": "1114.99",
            "min": "1018.62",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "309.46",
            "p50": "251.50",
            "p95": "181.90",
            "p99": "160.15",
            "min": "159.79",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "151.45",
            "p50": "134.50",
            "p95": "117.87",
            "p99": "113.67",
            "min": "112.87",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "122.61",
            "p50": "117.69",
            "p95": "99.38",
            "p99": "91.84",
            "min": "91.74",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "129.59",
            "p50": "123.67",
            "p95": "119.48",
            "p99": "116.07",
            "min": "115.23",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "123.81",
            "p50": "119.22",
            "p95": "116.73",
            "p99": "110.25",
            "min": "109.95",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "158.01",
            "p50": "151.74",
            "p95": "145.87",
            "p99": "139.36",
            "min": "138.65",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "97.58",
            "p50": "93.18",
            "p95": "88.86",
            "p99": "85.99",
            "min": "85.99",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "117.33",
            "p50": "112.45",
            "p95": "109.99",
            "p99": "107.40",
            "min": "106.24",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "967.98",
            "p50": "899.32",
            "p95": "672.38",
            "p99": "628.86",
            "min": "624.52",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "123.66",
            "p50": "119.15",
            "p95": "101.37",
            "p99": "96.29",
            "min": "96.23",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}