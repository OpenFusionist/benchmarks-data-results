{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "111.59",
            "p50": "109.35",
            "p95": "101.85",
            "p99": "97.97",
            "min": "97.95",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1000.75",
            "p50": "972.44",
            "p95": "944.85",
            "p99": "894.87",
            "min": "892.47",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "112.81",
            "p50": "109.90",
            "p95": "105.60",
            "p99": "95.79",
            "min": "93.72",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "732.17",
            "p50": "720.17",
            "p95": "501.07",
            "p99": "486.22",
            "min": "483.04",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "369.53",
            "p50": "365.07",
            "p95": "358.06",
            "p99": "341.46",
            "min": "339.24",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "397.19",
            "p50": "392.54",
            "p95": "383.01",
            "p99": "314.75",
            "min": "304.28",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "311.66",
            "p50": "305.63",
            "p95": "189.02",
            "p99": "145.01",
            "min": "133.45",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "187.20",
            "p50": "180.72",
            "p95": "174.47",
            "p99": "82.92",
            "min": "82.20",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "247.06",
            "p50": "238.31",
            "p95": "223.14",
            "p99": "217.22",
            "min": "215.85",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "251.51",
            "p50": "238.41",
            "p95": "230.72",
            "p99": "227.80",
            "min": "227.78",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "256.98",
            "p50": "252.12",
            "p95": "245.70",
            "p99": "244.08",
            "min": "244.06",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "202.96",
            "p50": "197.43",
            "p95": "191.48",
            "p99": "175.53",
            "min": "173.93",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "312.86",
            "p50": "310.53",
            "p95": "272.85",
            "p99": "271.69",
            "min": "271.56",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "297.16",
            "p50": "291.89",
            "p95": "255.90",
            "p99": "252.96",
            "min": "252.64",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "7294.48",
            "p50": "5937.97",
            "p95": "2556.83",
            "p99": "2093.47",
            "min": "1990.83",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2602.58",
            "p50": "2234.75",
            "p95": "1919.01",
            "p99": "2152.23",
            "min": "1909.73",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "286.55",
            "p50": "255.46",
            "p95": "236.88",
            "p99": "240.80",
            "min": "230.07",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1439.41",
            "p50": "946.72",
            "p95": "395.04",
            "p99": "819.86",
            "min": "352.48",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7399.00",
            "p50": "4393.43",
            "p95": "2388.79",
            "p99": "4530.33",
            "min": "2366.24",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "804.66",
            "p50": "776.80",
            "p95": "534.85",
            "p99": "525.85",
            "min": "524.79",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "817.49",
            "p50": "799.17",
            "p95": "750.45",
            "p99": "730.63",
            "min": "726.71",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "909.29",
            "p50": "874.67",
            "p95": "737.30",
            "p99": "643.01",
            "min": "640.72",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2201.34",
            "p50": "2046.55",
            "p95": "1812.14",
            "p99": "1703.47",
            "min": "1688.30",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2206.83",
            "p50": "2056.57",
            "p95": "1825.96",
            "p99": "1723.51",
            "min": "1701.66",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "804.33",
            "p50": "789.83",
            "p95": "744.97",
            "p99": "725.16",
            "min": "720.31",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "163.97",
            "p50": "156.48",
            "p95": "139.58",
            "p99": "133.94",
            "min": "133.92",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "509.33",
            "p50": "444.18",
            "p95": "393.90",
            "p99": "233.13",
            "min": "230.95",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "163.19",
            "p50": "150.21",
            "p95": "142.92",
            "p99": "139.58",
            "min": "139.50",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "183.34",
            "p50": "175.46",
            "p95": "151.39",
            "p99": "149.42",
            "min": "149.18",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "35426.90",
            "p50": "8671.46",
            "p95": "2462.94",
            "p99": "2053.39",
            "min": "2015.98",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "385.07",
            "p50": "317.51",
            "p95": "301.21",
            "p99": "297.82",
            "min": "297.35",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "366.27",
            "p50": "302.49",
            "p95": "284.61",
            "p99": "282.15",
            "min": "281.90",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "363.99",
            "p50": "309.92",
            "p95": "289.83",
            "p99": "277.90",
            "min": "276.76",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "366.36",
            "p50": "302.57",
            "p95": "285.65",
            "p99": "280.93",
            "min": "280.57",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "13936.45",
            "p50": "7588.21",
            "p95": "2593.05",
            "p99": "2340.77",
            "min": "2250.92",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "14009.97",
            "p50": "7419.77",
            "p95": "2620.65",
            "p99": "1939.95",
            "min": "1578.37",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "13255.18",
            "p50": "6492.41",
            "p95": "2384.59",
            "p99": "1739.84",
            "min": "1596.65",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "13839.69",
            "p50": "6419.25",
            "p95": "2537.67",
            "p99": "1982.87",
            "min": "1727.59",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "12555.09",
            "p50": "5378.94",
            "p95": "2513.53",
            "p99": "2226.96",
            "min": "2213.55",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "13948.42",
            "p50": "7697.78",
            "p95": "2568.18",
            "p99": "1786.26",
            "min": "1681.29",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "251.29",
            "p50": "238.49",
            "p95": "234.42",
            "p99": "225.90",
            "min": "224.25",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "524.43",
            "p50": "516.58",
            "p95": "500.20",
            "p99": "145.53",
            "min": "48.31",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1624.77",
            "p50": "1568.36",
            "p95": "377.36",
            "p99": "367.10",
            "min": "366.25",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "22960.85",
            "p50": "6240.74",
            "p95": "295.11",
            "p99": "226.72",
            "min": "224.15",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1426.74",
            "p50": "1377.09",
            "p95": "278.08",
            "p99": "156.54",
            "min": "76.06",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "53754.61",
            "p50": "9567.79",
            "p95": "2469.02",
            "p99": "1055.82",
            "min": "193.72",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15550.85",
            "p50": "7575.69",
            "p95": "285.78",
            "p99": "160.01",
            "min": "65.12",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "574.93",
            "p50": "542.36",
            "p95": "448.43",
            "p99": "414.10",
            "min": "402.37",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "515.97",
            "p50": "505.62",
            "p95": "480.03",
            "p99": "471.51",
            "min": "471.43",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "204.41",
            "p50": "198.45",
            "p95": "192.51",
            "p99": "187.91",
            "min": "186.53",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "386.04",
            "p50": "374.39",
            "p95": "368.77",
            "p99": "365.99",
            "min": "365.44",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "206.00",
            "p50": "198.67",
            "p95": "191.88",
            "p99": "108.08",
            "min": "87.31",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "343.24",
            "p50": "333.80",
            "p95": "321.84",
            "p99": "210.79",
            "min": "178.77",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "263.00",
            "p50": "252.36",
            "p95": "242.71",
            "p99": "237.46",
            "min": "236.69",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "522.67",
            "p50": "506.51",
            "p95": "485.67",
            "p99": "405.33",
            "min": "362.28",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1418.24",
            "p50": "1245.64",
            "p95": "969.22",
            "p99": "943.39",
            "min": "943.05",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "310.89",
            "p50": "304.04",
            "p95": "286.02",
            "p99": "274.78",
            "min": "272.45",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "90.36",
            "p50": "89.01",
            "p95": "84.00",
            "p99": "82.21",
            "min": "81.87",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "82.31",
            "p50": "81.41",
            "p95": "76.72",
            "p99": "67.05",
            "min": "64.87",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "84.10",
            "p50": "83.02",
            "p95": "78.69",
            "p99": "71.84",
            "min": "70.76",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "250.30",
            "p50": "245.78",
            "p95": "211.73",
            "p99": "87.19",
            "min": "86.15",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "186.08",
            "p50": "182.23",
            "p95": "163.91",
            "p99": "103.71",
            "min": "100.08",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "195.72",
            "p50": "192.86",
            "p95": "172.82",
            "p99": "153.38",
            "min": "147.81",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "185.89",
            "p50": "179.44",
            "p95": "159.28",
            "p99": "152.03",
            "min": "151.89",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "182.90",
            "p50": "176.55",
            "p95": "162.08",
            "p99": "147.59",
            "min": "146.77",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "209.12",
            "p50": "199.78",
            "p95": "179.68",
            "p99": "142.32",
            "min": "131.91",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "186.77",
            "p50": "179.72",
            "p95": "158.41",
            "p99": "140.59",
            "min": "140.28",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "210.16",
            "p50": "204.67",
            "p95": "174.47",
            "p99": "102.46",
            "min": "87.93",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "153.66",
            "p50": "151.14",
            "p95": "139.35",
            "p99": "133.45",
            "min": "132.98",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "226.90",
            "p50": "221.99",
            "p95": "199.64",
            "p99": "181.08",
            "min": "178.57",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "186.72",
            "p50": "180.51",
            "p95": "161.72",
            "p99": "123.04",
            "min": "120.55",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "69.00",
            "p50": "66.45",
            "p95": "63.53",
            "p99": "61.14",
            "min": "60.47",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "142.53",
            "p50": "138.59",
            "p95": "126.03",
            "p99": "129.87",
            "min": "123.05",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "445.71",
            "p50": "366.08",
            "p95": "281.25",
            "p99": "279.86",
            "min": "240.96",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "196.30",
            "p50": "153.00",
            "p95": "142.47",
            "p99": "164.51",
            "min": "140.52",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.40",
            "p50": "132.09",
            "p95": "121.00",
            "p99": "125.29",
            "min": "117.66",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1234.07",
            "p50": "1178.70",
            "p95": "749.68",
            "p99": "594.09",
            "min": "528.01",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1065.27",
            "p50": "1024.40",
            "p95": "725.77",
            "p99": "509.60",
            "min": "392.53",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1485.43",
            "p50": "1385.58",
            "p95": "753.20",
            "p99": "621.52",
            "min": "573.94",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1373.31",
            "p50": "1301.91",
            "p95": "756.36",
            "p99": "591.85",
            "min": "583.71",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1342.87",
            "p50": "1281.61",
            "p95": "664.62",
            "p99": "516.74",
            "min": "511.19",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1102.40",
            "p50": "1070.92",
            "p95": "656.12",
            "p99": "505.53",
            "min": "493.00",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "743.26",
            "p50": "632.13",
            "p95": "475.13",
            "p99": "418.05",
            "min": "416.73",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "745.67",
            "p50": "656.68",
            "p95": "471.43",
            "p99": "408.04",
            "min": "405.77",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "754.71",
            "p50": "656.06",
            "p95": "457.33",
            "p99": "393.46",
            "min": "389.42",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "740.55",
            "p50": "668.20",
            "p95": "506.73",
            "p99": "435.24",
            "min": "434.59",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "295.84",
            "p50": "291.92",
            "p95": "252.04",
            "p99": "222.44",
            "min": "220.70",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "670.56",
            "p50": "560.97",
            "p95": "447.84",
            "p99": "360.99",
            "min": "352.83",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "644.62",
            "p50": "575.57",
            "p95": "429.33",
            "p99": "305.75",
            "min": "290.47",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "664.16",
            "p50": "575.92",
            "p95": "424.08",
            "p99": "381.98",
            "min": "381.13",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "676.85",
            "p50": "615.30",
            "p95": "432.53",
            "p99": "406.33",
            "min": "404.63",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "107.22",
            "p50": "105.77",
            "p95": "98.21",
            "p99": "96.34",
            "min": "95.55",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "107.15",
            "p50": "105.95",
            "p95": "100.13",
            "p99": "96.48",
            "min": "95.74",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.73",
            "p50": "98.70",
            "p95": "94.08",
            "p99": "90.72",
            "min": "90.58",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "257.29",
            "p50": "253.61",
            "p95": "226.50",
            "p99": "210.51",
            "min": "209.50",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.72",
            "p50": "98.57",
            "p95": "91.64",
            "p99": "83.75",
            "min": "83.58",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "250.07",
            "p50": "245.86",
            "p95": "212.92",
            "p99": "196.70",
            "min": "195.45",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "210.49",
            "p50": "207.42",
            "p95": "184.51",
            "p99": "177.27",
            "min": "176.48",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "243.31",
            "p50": "237.56",
            "p95": "209.20",
            "p99": "199.34",
            "min": "198.90",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "462.57",
            "p50": "451.07",
            "p95": "381.23",
            "p99": "344.68",
            "min": "332.45",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7589.68",
            "p50": "4640.27",
            "p95": "2012.75",
            "p99": "1696.03",
            "min": "1651.28",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "440.25",
            "p50": "430.80",
            "p95": "368.16",
            "p99": "330.07",
            "min": "315.13",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "18450.80",
            "p50": "7078.46",
            "p95": "2502.25",
            "p99": "2189.09",
            "min": "2181.36",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4345.57",
            "p50": "3565.72",
            "p95": "1885.57",
            "p99": "1266.49",
            "min": "1239.29",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "216.29",
            "p50": "187.76",
            "p95": "165.88",
            "p99": "144.32",
            "min": "141.16",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "266.16",
            "p50": "261.75",
            "p95": "228.30",
            "p99": "205.87",
            "min": "203.33",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "95.21",
            "p50": "94.03",
            "p95": "88.38",
            "p99": "77.33",
            "min": "75.01",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "246.73",
            "p50": "242.78",
            "p95": "210.81",
            "p99": "175.38",
            "min": "164.23",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "183.00",
            "p50": "179.93",
            "p95": "161.36",
            "p99": "157.77",
            "min": "157.46",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "223.64",
            "p50": "218.77",
            "p95": "193.15",
            "p99": "176.51",
            "min": "174.80",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "211.32",
            "p50": "205.34",
            "p95": "182.06",
            "p99": "108.24",
            "min": "91.80",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "208.04",
            "p50": "204.66",
            "p95": "182.24",
            "p99": "162.49",
            "min": "159.32",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1219.14",
            "p50": "1105.53",
            "p95": "838.81",
            "p99": "726.24",
            "min": "721.85",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "183.43",
            "p50": "180.75",
            "p95": "162.48",
            "p99": "131.90",
            "min": "124.16",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.67",
            "p50": "192.41",
            "p95": "187.45",
            "p99": "174.30",
            "min": "172.06",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "195.63",
            "p50": "193.26",
            "p95": "184.86",
            "p99": "167.59",
            "min": "167.29",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.62",
            "p50": "193.52",
            "p95": "185.46",
            "p99": "171.75",
            "min": "171.31",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1191.44",
            "p50": "1165.89",
            "p95": "992.22",
            "p99": "653.80",
            "min": "512.83",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "703.57",
            "p50": "693.50",
            "p95": "621.52",
            "p99": "555.63",
            "min": "544.42",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "812.14",
            "p50": "800.13",
            "p95": "733.40",
            "p99": "658.42",
            "min": "647.10",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "738.14",
            "p50": "723.20",
            "p95": "585.60",
            "p99": "485.57",
            "min": "481.72",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "749.07",
            "p50": "735.00",
            "p95": "634.41",
            "p99": "469.32",
            "min": "458.08",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "919.67",
            "p50": "902.01",
            "p95": "826.96",
            "p99": "567.40",
            "min": "555.42",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "865.48",
            "p50": "840.24",
            "p95": "690.67",
            "p99": "545.13",
            "min": "528.72",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "850.19",
            "p50": "835.60",
            "p95": "664.10",
            "p99": "191.61",
            "min": "92.30",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "842.50",
            "p50": "824.15",
            "p95": "694.10",
            "p99": "485.35",
            "min": "482.06",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "888.14",
            "p50": "868.03",
            "p95": "741.63",
            "p99": "600.00",
            "min": "571.31",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "861.84",
            "p50": "836.86",
            "p95": "595.22",
            "p99": "245.58",
            "min": "174.88",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "109.79",
            "p50": "105.84",
            "p95": "103.87",
            "p99": "98.12",
            "min": "97.05",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "96.10",
            "p50": "95.29",
            "p95": "94.19",
            "p99": "91.57",
            "min": "89.12",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "580.14",
            "p50": "559.68",
            "p95": "501.65",
            "p99": "448.46",
            "min": "417.57",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "129.80",
            "p50": "103.94",
            "p95": "96.30",
            "p99": "109.94",
            "min": "94.97",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "89.94",
            "p50": "88.15",
            "p95": "85.08",
            "p99": "86.57",
            "min": "84.03",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1891.73",
            "p50": "1846.06",
            "p95": "1460.63",
            "p99": "836.76",
            "min": "828.78",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1640.83",
            "p50": "1607.16",
            "p95": "1326.16",
            "p99": "968.53",
            "min": "853.57",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2392.65",
            "p50": "2312.19",
            "p95": "1919.39",
            "p99": "1451.28",
            "min": "1402.43",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2374.39",
            "p50": "2309.93",
            "p95": "1889.39",
            "p99": "1243.21",
            "min": "1198.87",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2362.03",
            "p50": "2294.34",
            "p95": "1525.08",
            "p99": "830.70",
            "min": "721.39",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1697.63",
            "p50": "1662.08",
            "p95": "1311.46",
            "p99": "1049.44",
            "min": "968.79",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "828.19",
            "p50": "797.70",
            "p95": "669.76",
            "p99": "552.79",
            "min": "549.30",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "815.34",
            "p50": "794.85",
            "p95": "690.21",
            "p99": "548.70",
            "min": "533.79",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "822.58",
            "p50": "800.94",
            "p95": "767.60",
            "p99": "610.98",
            "min": "592.37",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "834.98",
            "p50": "812.63",
            "p95": "697.36",
            "p99": "562.15",
            "min": "549.21",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.66",
            "p50": "86.12",
            "p95": "83.23",
            "p99": "82.74",
            "min": "82.72",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "770.24",
            "p50": "739.23",
            "p95": "634.55",
            "p99": "500.36",
            "min": "485.37",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "722.58",
            "p50": "699.90",
            "p95": "617.55",
            "p99": "535.87",
            "min": "525.89",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "728.42",
            "p50": "700.10",
            "p95": "619.05",
            "p99": "509.47",
            "min": "497.32",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "731.90",
            "p50": "711.23",
            "p95": "630.06",
            "p99": "512.57",
            "min": "506.22",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2031.78",
            "p50": "1963.57",
            "p95": "1184.52",
            "p99": "925.72",
            "min": "917.57",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2336.78",
            "p50": "2253.65",
            "p95": "1645.17",
            "p99": "969.58",
            "min": "859.62",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.46",
            "p50": "71.99",
            "p95": "70.81",
            "p99": "69.04",
            "min": "68.47",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9974.39",
            "p50": "7956.68",
            "p95": "2512.09",
            "p99": "1494.26",
            "min": "1465.13",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.46",
            "p50": "72.00",
            "p95": "70.96",
            "p99": "69.69",
            "min": "69.47",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "223.85",
            "p50": "221.93",
            "p95": "208.63",
            "p99": "189.57",
            "min": "189.23",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "870.88",
            "p50": "835.69",
            "p95": "743.79",
            "p99": "612.51",
            "min": "599.30",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.96",
            "p50": "661.21",
            "p95": "584.71",
            "p99": "491.97",
            "min": "484.90",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2343.43",
            "p50": "2233.04",
            "p95": "1107.93",
            "p99": "709.95",
            "min": "695.20",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "30768.87",
            "p50": "9740.29",
            "p95": "2557.89",
            "p99": "2024.71",
            "min": "1812.19",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2180.47",
            "p50": "2077.57",
            "p95": "1269.59",
            "p99": "757.44",
            "min": "678.24",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "84564.42",
            "p50": "9410.37",
            "p95": "2533.32",
            "p99": "1954.00",
            "min": "1521.38",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "17343.63",
            "p50": "8638.20",
            "p95": "2452.96",
            "p99": "1704.71",
            "min": "1502.64",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "861.34",
            "p50": "751.63",
            "p95": "613.00",
            "p99": "559.70",
            "min": "555.44",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "991.04",
            "p50": "971.00",
            "p95": "778.24",
            "p99": "607.02",
            "min": "604.32",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "840.22",
            "p50": "822.93",
            "p95": "700.11",
            "p99": "507.49",
            "min": "465.63",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1202.57",
            "p50": "1173.61",
            "p95": "1042.83",
            "p99": "873.17",
            "min": "852.31",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "746.38",
            "p50": "735.49",
            "p95": "653.06",
            "p99": "565.19",
            "min": "560.76",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1155.15",
            "p50": "1133.31",
            "p95": "1051.31",
            "p99": "818.82",
            "min": "804.87",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "881.14",
            "p50": "833.67",
            "p95": "725.66",
            "p99": "606.19",
            "min": "587.44",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "931.93",
            "p50": "911.60",
            "p95": "728.37",
            "p99": "553.35",
            "min": "526.38",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2546.65",
            "p50": "2402.77",
            "p95": "1917.18",
            "p99": "1285.72",
            "min": "1245.88",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "868.01",
            "p50": "834.94",
            "p95": "702.64",
            "p99": "507.14",
            "min": "490.70",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.18",
            "p50": "84.31",
            "p95": "74.71",
            "p99": "73.32",
            "min": "73.28",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "89.45",
            "p50": "85.65",
            "p95": "82.07",
            "p99": "79.45",
            "min": "79.14",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "88.99",
            "p50": "85.05",
            "p95": "80.06",
            "p99": "78.04",
            "min": "77.97",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "184.73",
            "p50": "181.54",
            "p95": "176.67",
            "p99": "136.57",
            "min": "124.01",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "91.98",
            "p50": "89.89",
            "p95": "87.27",
            "p99": "84.85",
            "min": "84.62",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "113.35",
            "p50": "108.83",
            "p95": "105.02",
            "p99": "100.89",
            "min": "99.62",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "124.81",
            "p50": "120.86",
            "p95": "107.02",
            "p99": "94.09",
            "min": "91.51",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "124.87",
            "p50": "122.28",
            "p95": "117.88",
            "p99": "103.85",
            "min": "100.92",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "99.39",
            "p50": "95.99",
            "p95": "75.78",
            "p99": "74.98",
            "min": "74.75",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.71",
            "p50": "95.97",
            "p95": "93.42",
            "p99": "91.53",
            "min": "91.21",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "97.89",
            "p50": "96.17",
            "p95": "94.35",
            "p99": "90.58",
            "min": "89.99",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.82",
            "p50": "123.02",
            "p95": "119.55",
            "p99": "113.10",
            "min": "112.01",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "122.46",
            "p50": "115.11",
            "p95": "107.91",
            "p99": "104.62",
            "min": "104.29",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "117.64",
            "p50": "115.11",
            "p95": "111.11",
            "p99": "107.89",
            "min": "107.58",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "85.76",
            "p50": "81.52",
            "p95": "76.14",
            "p99": "69.13",
            "min": "66.97",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "95.66",
            "p50": "94.64",
            "p95": "89.87",
            "p99": "90.60",
            "min": "87.88",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "72.83",
            "p50": "70.43",
            "p95": "65.11",
            "p99": "63.72",
            "min": "61.58",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "149.20",
            "p50": "118.55",
            "p95": "111.77",
            "p99": "127.83",
            "min": "111.70",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "103.59",
            "p50": "101.47",
            "p95": "99.55",
            "p99": "100.41",
            "min": "98.02",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "422.55",
            "p50": "407.63",
            "p95": "388.69",
            "p99": "346.09",
            "min": "337.14",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "488.13",
            "p50": "479.55",
            "p95": "437.42",
            "p99": "352.31",
            "min": "344.44",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "445.09",
            "p50": "429.88",
            "p95": "401.00",
            "p99": "353.50",
            "min": "344.78",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "454.18",
            "p50": "433.61",
            "p95": "402.57",
            "p99": "368.46",
            "min": "351.14",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "455.43",
            "p50": "435.95",
            "p95": "398.77",
            "p99": "353.03",
            "min": "339.24",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "468.04",
            "p50": "460.21",
            "p95": "443.10",
            "p99": "352.52",
            "min": "343.27",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "119.40",
            "p50": "114.56",
            "p95": "106.95",
            "p99": "106.08",
            "min": "105.97",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "120.08",
            "p50": "115.16",
            "p95": "108.11",
            "p99": "105.44",
            "min": "104.89",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "118.11",
            "p50": "113.59",
            "p95": "106.46",
            "p99": "100.42",
            "min": "99.57",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "102.75",
            "p50": "99.31",
            "p95": "94.42",
            "p99": "87.25",
            "min": "85.95",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.95",
            "p50": "86.06",
            "p95": "85.29",
            "p99": "83.09",
            "min": "82.73",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "116.55",
            "p50": "110.52",
            "p95": "101.81",
            "p99": "99.05",
            "min": "98.70",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "111.12",
            "p50": "106.13",
            "p95": "97.77",
            "p99": "93.85",
            "min": "93.30",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "111.06",
            "p50": "105.04",
            "p95": "97.10",
            "p99": "95.83",
            "min": "95.65",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "110.55",
            "p50": "105.27",
            "p95": "96.99",
            "p99": "96.14",
            "min": "96.12",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1404.38",
            "p50": "1279.34",
            "p95": "862.39",
            "p99": "536.98",
            "min": "532.36",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1404.49",
            "p50": "1271.10",
            "p95": "716.14",
            "p99": "549.27",
            "min": "524.80",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.42",
            "p50": "152.07",
            "p95": "137.32",
            "p99": "108.34",
            "min": "108.21",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3830.63",
            "p50": "3397.04",
            "p95": "1490.85",
            "p99": "717.00",
            "min": "543.27",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "154.40",
            "p50": "152.23",
            "p95": "134.26",
            "p99": "98.10",
            "min": "96.55",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3783.65",
            "p50": "3417.13",
            "p95": "1528.66",
            "p99": "838.06",
            "min": "767.32",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "97.94",
            "p50": "96.57",
            "p95": "92.81",
            "p99": "91.29",
            "min": "91.08",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "187.04",
            "p50": "183.85",
            "p95": "179.43",
            "p99": "165.57",
            "min": "160.88",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "388.97",
            "p50": "294.47",
            "p95": "233.28",
            "p99": "197.03",
            "min": "188.96",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9866.87",
            "p50": "1889.16",
            "p95": "954.10",
            "p99": "485.94",
            "min": "469.26",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "371.94",
            "p50": "282.40",
            "p95": "235.61",
            "p99": "163.77",
            "min": "163.31",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "27477.76",
            "p50": "9595.69",
            "p95": "2637.35",
            "p99": "2376.70",
            "min": "2373.77",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6258.23",
            "p50": "3300.58",
            "p95": "1657.20",
            "p99": "1138.66",
            "min": "1078.84",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "309.72",
            "p50": "246.93",
            "p95": "169.32",
            "p99": "148.33",
            "min": "147.47",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "152.58",
            "p50": "131.67",
            "p95": "117.66",
            "p99": "111.86",
            "min": "111.62",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "123.60",
            "p50": "118.73",
            "p95": "97.43",
            "p99": "89.79",
            "min": "88.62",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "130.35",
            "p50": "121.16",
            "p95": "106.72",
            "p99": "103.58",
            "min": "102.27",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "124.46",
            "p50": "120.92",
            "p95": "116.94",
            "p99": "114.67",
            "min": "114.43",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "164.49",
            "p50": "150.08",
            "p95": "147.47",
            "p99": "143.75",
            "min": "143.00",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "96.34",
            "p50": "93.26",
            "p95": "75.76",
            "p99": "75.22",
            "min": "75.20",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "121.15",
            "p50": "115.02",
            "p95": "109.34",
            "p99": "108.42",
            "min": "108.23",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1093.69",
            "p50": "1007.23",
            "p95": "698.58",
            "p99": "627.20",
            "min": "622.88",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "125.89",
            "p50": "121.57",
            "p95": "104.93",
            "p99": "99.22",
            "min": "99.02",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}