{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "170.00",
            "p50": "167.78",
            "p95": "157.61",
            "p99": "152.08",
            "min": "151.71",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "170.09",
            "p50": "168.13",
            "p95": "165.83",
            "p99": "163.50",
            "min": "163.45",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "169.57",
            "p50": "167.70",
            "p95": "163.11",
            "p99": "155.74",
            "min": "154.74",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "754.74",
            "p50": "744.14",
            "p95": "508.63",
            "p99": "457.65",
            "min": "432.97",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "400.26",
            "p50": "393.66",
            "p95": "382.81",
            "p99": "353.18",
            "min": "347.39",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "437.26",
            "p50": "428.32",
            "p95": "411.85",
            "p99": "254.07",
            "min": "194.42",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "324.10",
            "p50": "318.44",
            "p95": "305.34",
            "p99": "289.13",
            "min": "286.76",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "188.00",
            "p50": "184.68",
            "p95": "181.36",
            "p99": "172.51",
            "min": "172.27",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "266.11",
            "p50": "260.94",
            "p95": "242.54",
            "p99": "237.96",
            "min": "237.93",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "257.87",
            "p50": "255.21",
            "p95": "251.05",
            "p99": "245.51",
            "min": "245.09",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "259.91",
            "p50": "257.19",
            "p95": "251.23",
            "p99": "243.08",
            "min": "242.42",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "191.08",
            "p50": "188.08",
            "p95": "183.57",
            "p99": "176.31",
            "min": "175.32",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "320.11",
            "p50": "316.10",
            "p95": "303.53",
            "p99": "295.35",
            "min": "293.58",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "310.06",
            "p50": "304.51",
            "p95": "293.24",
            "p99": "286.57",
            "min": "286.29",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "7731.98",
            "p50": "5258.92",
            "p95": "2591.50",
            "p99": "1699.70",
            "min": "1653.46",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2475.50",
            "p50": "2141.18",
            "p95": "990.49",
            "p99": "1460.04",
            "min": "913.25",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "292.11",
            "p50": "244.90",
            "p95": "228.13",
            "p99": "227.76",
            "min": "212.67",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "8179.56",
            "p50": "3867.10",
            "p95": "1101.41",
            "p99": "4132.70",
            "min": "1079.80",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "8510.93",
            "p50": "4459.98",
            "p95": "2537.21",
            "p99": "4585.09",
            "min": "1623.49",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1837.94",
            "p50": "1635.18",
            "p95": "571.24",
            "p99": "372.01",
            "min": "166.41",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "20679.19",
            "p50": "4486.21",
            "p95": "788.07",
            "p99": "758.40",
            "min": "757.60",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1307.38",
            "p50": "1176.49",
            "p95": "492.24",
            "p99": "441.44",
            "min": "422.04",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2138.19",
            "p50": "1959.70",
            "p95": "1615.60",
            "p99": "906.13",
            "min": "898.12",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2143.07",
            "p50": "1989.11",
            "p95": "1621.07",
            "p99": "376.56",
            "min": "372.93",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "6171.50",
            "p50": "5288.58",
            "p95": "762.62",
            "p99": "725.30",
            "min": "725.28",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "299.85",
            "p50": "257.84",
            "p95": "144.69",
            "p99": "140.82",
            "min": "140.41",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "494.54",
            "p50": "430.84",
            "p95": "389.83",
            "p99": "167.98",
            "min": "114.80",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "344.23",
            "p50": "291.29",
            "p95": "58.53",
            "p99": "56.26",
            "min": "56.17",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "414.96",
            "p50": "378.86",
            "p95": "154.83",
            "p99": "83.00",
            "min": "82.90",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "36386.21",
            "p50": "8268.30",
            "p95": "2577.53",
            "p99": "691.09",
            "min": "99.26",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "369.46",
            "p50": "350.65",
            "p95": "299.91",
            "p99": "205.38",
            "min": "181.82",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "354.31",
            "p50": "338.40",
            "p95": "285.94",
            "p99": "275.78",
            "min": "274.79",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "356.28",
            "p50": "340.59",
            "p95": "287.33",
            "p99": "282.24",
            "min": "281.89",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "357.81",
            "p50": "332.98",
            "p95": "288.20",
            "p99": "127.27",
            "min": "123.99",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "15281.19",
            "p50": "7365.13",
            "p95": "2589.96",
            "p99": "199.77",
            "min": "173.39",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "14779.51",
            "p50": "7482.44",
            "p95": "2740.17",
            "p99": "1664.11",
            "min": "1642.78",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "14152.59",
            "p50": "6411.42",
            "p95": "2618.97",
            "p99": "1502.94",
            "min": "1039.59",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "14668.00",
            "p50": "6525.65",
            "p95": "2626.95",
            "p99": "1685.46",
            "min": "1551.19",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "14628.07",
            "p50": "6124.45",
            "p95": "2694.12",
            "p99": "1751.31",
            "min": "1611.81",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "14903.15",
            "p50": "7309.85",
            "p95": "2588.93",
            "p99": "1584.33",
            "min": "1511.52",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "257.92",
            "p50": "253.77",
            "p95": "248.41",
            "p99": "223.64",
            "min": "219.83",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "539.23",
            "p50": "532.69",
            "p95": "516.16",
            "p99": "498.19",
            "min": "494.68",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1189.31",
            "p50": "1142.77",
            "p95": "377.76",
            "p99": "361.32",
            "min": "354.94",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "20717.88",
            "p50": "8802.32",
            "p95": "2500.21",
            "p99": "1171.01",
            "min": "939.84",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1099.46",
            "p50": "1063.92",
            "p95": "345.90",
            "p99": "304.55",
            "min": "276.64",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "48833.00",
            "p50": "9111.84",
            "p95": "2618.09",
            "p99": "1729.22",
            "min": "1712.95",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "16081.86",
            "p50": "7098.54",
            "p95": "2691.01",
            "p99": "1930.27",
            "min": "1764.78",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "526.77",
            "p50": "503.97",
            "p95": "436.19",
            "p99": "374.17",
            "min": "370.85",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "519.13",
            "p50": "509.24",
            "p95": "497.34",
            "p99": "454.72",
            "min": "444.87",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "204.86",
            "p50": "202.89",
            "p95": "198.09",
            "p99": "190.51",
            "min": "188.61",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "436.85",
            "p50": "426.26",
            "p95": "407.26",
            "p99": "320.66",
            "min": "273.26",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "205.25",
            "p50": "202.91",
            "p95": "197.24",
            "p99": "173.41",
            "min": "169.01",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "330.13",
            "p50": "321.65",
            "p95": "313.20",
            "p99": "287.97",
            "min": "273.34",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "271.64",
            "p50": "267.05",
            "p95": "253.32",
            "p99": "247.15",
            "min": "247.08",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "515.09",
            "p50": "502.42",
            "p95": "478.08",
            "p99": "469.86",
            "min": "468.11",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1445.18",
            "p50": "1188.50",
            "p95": "865.92",
            "p99": "323.48",
            "min": "128.41",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "318.65",
            "p50": "313.31",
            "p95": "301.09",
            "p99": "240.84",
            "min": "221.64",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.49",
            "p50": "84.68",
            "p95": "77.50",
            "p99": "73.14",
            "min": "73.11",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "80.96",
            "p50": "77.53",
            "p95": "71.40",
            "p99": "68.83",
            "min": "68.81",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "81.85",
            "p50": "78.70",
            "p95": "72.70",
            "p99": "65.40",
            "min": "65.14",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "229.73",
            "p50": "212.16",
            "p95": "176.13",
            "p99": "155.67",
            "min": "149.57",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "174.11",
            "p50": "161.52",
            "p95": "143.42",
            "p99": "131.91",
            "min": "131.00",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "180.96",
            "p50": "167.67",
            "p95": "142.14",
            "p99": "103.97",
            "min": "100.01",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "173.18",
            "p50": "158.65",
            "p95": "138.47",
            "p99": "71.49",
            "min": "58.75",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "170.71",
            "p50": "157.22",
            "p95": "134.81",
            "p99": "125.16",
            "min": "124.05",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "194.48",
            "p50": "177.92",
            "p95": "150.98",
            "p99": "132.92",
            "min": "128.98",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "169.70",
            "p50": "156.99",
            "p95": "133.63",
            "p99": "119.38",
            "min": "116.65",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "192.64",
            "p50": "177.93",
            "p95": "153.45",
            "p99": "141.36",
            "min": "140.02",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "143.52",
            "p50": "134.77",
            "p95": "119.23",
            "p99": "78.10",
            "min": "73.54",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "220.11",
            "p50": "201.62",
            "p95": "172.30",
            "p99": "159.26",
            "min": "159.00",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "174.05",
            "p50": "159.38",
            "p95": "144.39",
            "p99": "136.85",
            "min": "136.04",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.52",
            "p50": "64.89",
            "p95": "59.34",
            "p99": "57.53",
            "min": "57.25",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "138.92",
            "p50": "129.31",
            "p95": "116.36",
            "p99": "122.79",
            "min": "114.11",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "403.32",
            "p50": "304.40",
            "p95": "238.08",
            "p99": "239.34",
            "min": "200.87",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "171.56",
            "p50": "141.83",
            "p95": "132.73",
            "p99": "142.06",
            "min": "119.81",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "130.47",
            "p50": "120.96",
            "p95": "110.52",
            "p99": "114.72",
            "min": "102.84",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1171.61",
            "p50": "886.46",
            "p95": "498.60",
            "p99": "394.34",
            "min": "375.39",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1035.18",
            "p50": "805.93",
            "p95": "480.07",
            "p99": "394.66",
            "min": "391.85",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1361.36",
            "p50": "989.79",
            "p95": "584.00",
            "p99": "393.94",
            "min": "347.06",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1231.64",
            "p50": "938.18",
            "p95": "624.02",
            "p99": "423.55",
            "min": "420.40",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1189.65",
            "p50": "915.89",
            "p95": "526.75",
            "p99": "442.65",
            "min": "434.00",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1049.33",
            "p50": "824.67",
            "p95": "496.61",
            "p99": "390.45",
            "min": "375.10",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "637.33",
            "p50": "523.12",
            "p95": "351.92",
            "p99": "280.06",
            "min": "279.23",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "646.08",
            "p50": "514.34",
            "p95": "352.94",
            "p99": "307.35",
            "min": "306.42",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "650.38",
            "p50": "517.46",
            "p95": "373.15",
            "p99": "323.54",
            "min": "321.97",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "658.61",
            "p50": "545.74",
            "p95": "386.45",
            "p99": "305.27",
            "min": "300.86",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "291.50",
            "p50": "263.77",
            "p95": "216.85",
            "p99": "194.46",
            "min": "193.92",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "547.60",
            "p50": "426.46",
            "p95": "294.12",
            "p99": "254.51",
            "min": "246.54",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "556.60",
            "p50": "436.81",
            "p95": "316.36",
            "p99": "203.95",
            "min": "199.33",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "568.43",
            "p50": "454.06",
            "p95": "346.16",
            "p99": "294.78",
            "min": "292.80",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "576.63",
            "p50": "465.13",
            "p95": "342.93",
            "p99": "243.72",
            "min": "225.81",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.22",
            "p50": "102.06",
            "p95": "90.78",
            "p99": "88.28",
            "min": "88.28",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.22",
            "p50": "102.32",
            "p95": "91.77",
            "p99": "84.68",
            "min": "84.28",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.07",
            "p50": "94.58",
            "p95": "85.25",
            "p99": "81.37",
            "min": "80.13",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "253.08",
            "p50": "231.29",
            "p95": "189.15",
            "p99": "171.54",
            "min": "170.56",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.03",
            "p50": "94.16",
            "p95": "86.51",
            "p99": "80.70",
            "min": "80.34",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "245.31",
            "p50": "226.22",
            "p95": "188.65",
            "p99": "162.15",
            "min": "147.79",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "195.72",
            "p50": "179.58",
            "p95": "156.04",
            "p99": "146.58",
            "min": "146.08",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "200.04",
            "p50": "185.41",
            "p95": "157.73",
            "p99": "149.03",
            "min": "148.10",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "355.03",
            "p50": "316.69",
            "p95": "235.48",
            "p99": "220.74",
            "min": "213.91",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5130.62",
            "p50": "2076.44",
            "p95": "921.65",
            "p99": "603.77",
            "min": "541.68",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "343.49",
            "p50": "304.92",
            "p95": "243.64",
            "p99": "203.43",
            "min": "190.34",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "13395.41",
            "p50": "3374.05",
            "p95": "1191.83",
            "p99": "765.89",
            "min": "726.02",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3302.79",
            "p50": "1696.60",
            "p95": "763.54",
            "p99": "631.15",
            "min": "626.61",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "165.01",
            "p50": "143.60",
            "p95": "124.07",
            "p99": "116.06",
            "min": "115.58",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "244.45",
            "p50": "159.01",
            "p95": "137.74",
            "p99": "123.66",
            "min": "119.82",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "91.34",
            "p50": "87.36",
            "p95": "79.75",
            "p99": "73.78",
            "min": "73.39",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "226.71",
            "p50": "211.03",
            "p95": "161.90",
            "p99": "80.79",
            "min": "79.85",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "170.73",
            "p50": "159.17",
            "p95": "134.88",
            "p99": "131.45",
            "min": "131.18",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "198.98",
            "p50": "185.90",
            "p95": "150.57",
            "p99": "103.64",
            "min": "83.41",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "195.01",
            "p50": "180.06",
            "p95": "159.99",
            "p99": "147.25",
            "min": "147.03",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "198.18",
            "p50": "180.83",
            "p95": "154.67",
            "p99": "117.89",
            "min": "106.30",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1128.44",
            "p50": "892.79",
            "p95": "561.56",
            "p99": "445.88",
            "min": "441.02",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "170.95",
            "p50": "159.95",
            "p95": "117.72",
            "p99": "81.27",
            "min": "80.45",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "191.05",
            "p50": "187.04",
            "p95": "169.89",
            "p99": "158.64",
            "min": "158.24",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "190.29",
            "p50": "185.70",
            "p95": "169.54",
            "p99": "158.23",
            "min": "158.12",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.11",
            "p50": "189.64",
            "p95": "172.39",
            "p99": "162.23",
            "min": "161.99",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1186.92",
            "p50": "1095.56",
            "p95": "698.92",
            "p99": "539.30",
            "min": "537.93",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "700.11",
            "p50": "637.01",
            "p95": "476.58",
            "p99": "404.75",
            "min": "393.92",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "812.01",
            "p50": "722.37",
            "p95": "521.08",
            "p99": "452.75",
            "min": "438.65",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "726.95",
            "p50": "648.78",
            "p95": "482.46",
            "p99": "407.16",
            "min": "405.69",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "730.20",
            "p50": "650.77",
            "p95": "470.34",
            "p99": "412.06",
            "min": "408.61",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "893.69",
            "p50": "812.55",
            "p95": "528.24",
            "p99": "453.42",
            "min": "452.65",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "866.55",
            "p50": "787.58",
            "p95": "546.54",
            "p99": "481.52",
            "min": "479.48",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "829.39",
            "p50": "731.88",
            "p95": "503.90",
            "p99": "432.81",
            "min": "430.30",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "818.20",
            "p50": "739.74",
            "p95": "537.09",
            "p99": "452.40",
            "min": "451.97",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "884.86",
            "p50": "792.03",
            "p95": "566.13",
            "p99": "486.71",
            "min": "475.64",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "832.09",
            "p50": "752.26",
            "p95": "607.42",
            "p99": "434.08",
            "min": "431.18",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "64.39",
            "p50": "62.49",
            "p95": "60.22",
            "p99": "59.34",
            "min": "59.02",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "97.65",
            "p50": "95.85",
            "p95": "90.13",
            "p99": "91.27",
            "min": "87.83",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "492.83",
            "p50": "450.82",
            "p95": "375.06",
            "p99": "352.45",
            "min": "319.53",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "131.84",
            "p50": "103.37",
            "p95": "96.88",
            "p99": "111.27",
            "min": "95.76",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "91.95",
            "p50": "88.82",
            "p95": "85.47",
            "p99": "87.51",
            "min": "84.16",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1807.55",
            "p50": "1528.17",
            "p95": "867.14",
            "p99": "641.96",
            "min": "617.02",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1637.30",
            "p50": "1377.98",
            "p95": "818.98",
            "p99": "621.44",
            "min": "602.66",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2243.86",
            "p50": "1802.97",
            "p95": "854.26",
            "p99": "756.44",
            "min": "681.74",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2210.19",
            "p50": "1786.37",
            "p95": "885.96",
            "p99": "709.68",
            "min": "690.35",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2219.42",
            "p50": "1696.03",
            "p95": "870.56",
            "p99": "713.08",
            "min": "690.94",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1678.68",
            "p50": "1437.16",
            "p95": "724.26",
            "p99": "601.67",
            "min": "590.53",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "711.73",
            "p50": "619.81",
            "p95": "468.20",
            "p99": "409.74",
            "min": "406.77",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "713.54",
            "p50": "612.01",
            "p95": "495.03",
            "p99": "430.69",
            "min": "421.40",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "732.31",
            "p50": "639.57",
            "p95": "516.68",
            "p99": "424.64",
            "min": "414.39",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "737.51",
            "p50": "649.26",
            "p95": "474.03",
            "p99": "411.54",
            "min": "408.82",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.68",
            "p50": "85.63",
            "p95": "80.93",
            "p99": "79.46",
            "min": "79.35",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "631.05",
            "p50": "560.11",
            "p95": "423.86",
            "p99": "381.91",
            "min": "380.88",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "602.44",
            "p50": "530.78",
            "p95": "423.06",
            "p99": "380.02",
            "min": "373.68",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "598.14",
            "p50": "536.98",
            "p95": "437.13",
            "p99": "377.22",
            "min": "368.00",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "606.12",
            "p50": "544.77",
            "p95": "417.20",
            "p99": "364.94",
            "min": "364.03",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1932.32",
            "p50": "1639.52",
            "p95": "863.02",
            "p99": "647.66",
            "min": "625.29",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2216.15",
            "p50": "1764.43",
            "p95": "964.58",
            "p99": "684.51",
            "min": "682.52",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.80",
            "p50": "71.92",
            "p95": "69.47",
            "p99": "67.90",
            "min": "67.48",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9398.34",
            "p50": "3899.73",
            "p95": "2366.61",
            "p99": "1715.03",
            "min": "1682.99",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.83",
            "p50": "71.93",
            "p95": "69.35",
            "p99": "67.07",
            "min": "66.95",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "222.05",
            "p50": "218.81",
            "p95": "197.27",
            "p99": "185.03",
            "min": "180.07",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "854.38",
            "p50": "771.60",
            "p95": "538.07",
            "p99": "226.39",
            "min": "171.29",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.96",
            "p50": "640.73",
            "p95": "469.48",
            "p99": "398.62",
            "min": "395.06",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1089.20",
            "p50": "990.58",
            "p95": "687.58",
            "p99": "604.96",
            "min": "566.03",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "29951.32",
            "p50": "8882.65",
            "p95": "2636.27",
            "p99": "2175.89",
            "min": "2137.57",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1091.28",
            "p50": "1009.01",
            "p95": "717.26",
            "p99": "539.27",
            "min": "535.17",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "54763.15",
            "p50": "8934.16",
            "p95": "2702.48",
            "p99": "2013.74",
            "min": "1767.33",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15836.88",
            "p50": "6067.37",
            "p95": "1434.37",
            "p99": "999.51",
            "min": "990.61",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "543.09",
            "p50": "467.69",
            "p95": "387.57",
            "p99": "335.16",
            "min": "329.64",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "981.88",
            "p50": "881.29",
            "p95": "637.41",
            "p99": "519.35",
            "min": "505.52",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "818.61",
            "p50": "751.36",
            "p95": "544.39",
            "p99": "445.72",
            "min": "444.44",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1203.28",
            "p50": "1079.40",
            "p95": "690.51",
            "p99": "310.44",
            "min": "178.27",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "734.82",
            "p50": "666.32",
            "p95": "483.73",
            "p99": "431.93",
            "min": "422.86",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1154.24",
            "p50": "1069.48",
            "p95": "716.66",
            "p99": "332.85",
            "min": "164.60",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "871.89",
            "p50": "788.70",
            "p95": "589.28",
            "p99": "440.58",
            "min": "436.98",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "907.79",
            "p50": "829.83",
            "p95": "563.00",
            "p99": "475.71",
            "min": "470.59",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2349.61",
            "p50": "2056.42",
            "p95": "1102.89",
            "p99": "964.00",
            "min": "954.02",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "827.55",
            "p50": "758.73",
            "p95": "515.15",
            "p99": "439.77",
            "min": "438.28",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "81.27",
            "p50": "77.97",
            "p95": "72.06",
            "p99": "69.42",
            "min": "69.34",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "74.68",
            "p50": "72.08",
            "p95": "66.42",
            "p99": "60.52",
            "min": "59.18",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "76.12",
            "p50": "73.71",
            "p95": "67.54",
            "p99": "60.34",
            "min": "60.17",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "210.59",
            "p50": "191.08",
            "p95": "152.20",
            "p99": "101.72",
            "min": "82.92",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.91",
            "p50": "98.47",
            "p95": "85.33",
            "p99": "74.21",
            "min": "73.50",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.43",
            "p50": "104.34",
            "p95": "92.01",
            "p99": "81.77",
            "min": "79.22",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "140.91",
            "p50": "132.48",
            "p95": "111.93",
            "p99": "98.28",
            "min": "97.94",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "141.39",
            "p50": "132.89",
            "p95": "110.90",
            "p99": "101.94",
            "min": "101.59",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "185.57",
            "p50": "171.78",
            "p95": "142.44",
            "p99": "115.53",
            "min": "112.83",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "182.47",
            "p50": "168.62",
            "p95": "133.39",
            "p99": "111.63",
            "min": "109.81",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "182.56",
            "p50": "171.84",
            "p95": "135.46",
            "p99": "113.43",
            "min": "111.50",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "130.87",
            "p50": "124.81",
            "p95": "107.09",
            "p99": "97.10",
            "min": "97.06",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "201.04",
            "p50": "184.53",
            "p95": "144.11",
            "p99": "125.39",
            "min": "123.52",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "187.60",
            "p50": "173.21",
            "p95": "144.10",
            "p99": "99.34",
            "min": "94.30",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "71.02",
            "p50": "66.93",
            "p95": "60.46",
            "p99": "57.99",
            "min": "57.09",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "130.63",
            "p50": "120.89",
            "p95": "108.58",
            "p99": "114.32",
            "min": "105.54",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "210.78",
            "p50": "188.50",
            "p95": "157.46",
            "p99": "159.10",
            "min": "146.97",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "153.08",
            "p50": "136.85",
            "p95": "128.24",
            "p99": "137.07",
            "min": "125.00",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "123.44",
            "p50": "117.45",
            "p95": "100.74",
            "p99": "109.37",
            "min": "98.75",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1031.26",
            "p50": "693.60",
            "p95": "406.17",
            "p99": "255.70",
            "min": "208.74",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1000.15",
            "p50": "698.03",
            "p95": "340.94",
            "p99": "271.70",
            "min": "270.30",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1149.29",
            "p50": "768.83",
            "p95": "403.63",
            "p99": "264.69",
            "min": "252.52",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1080.10",
            "p50": "732.24",
            "p95": "373.89",
            "p99": "253.97",
            "min": "223.31",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1007.61",
            "p50": "690.67",
            "p95": "375.24",
            "p99": "314.16",
            "min": "303.31",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1016.78",
            "p50": "691.74",
            "p95": "356.29",
            "p99": "279.64",
            "min": "264.74",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "338.10",
            "p50": "290.77",
            "p95": "221.05",
            "p99": "157.95",
            "min": "151.16",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "334.81",
            "p50": "291.37",
            "p95": "228.77",
            "p99": "204.37",
            "min": "200.77",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "328.78",
            "p50": "293.59",
            "p95": "228.66",
            "p99": "201.18",
            "min": "196.64",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "364.38",
            "p50": "317.91",
            "p95": "238.70",
            "p99": "215.41",
            "min": "213.17",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "286.81",
            "p50": "248.00",
            "p95": "185.39",
            "p99": "155.01",
            "min": "152.76",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "286.21",
            "p50": "255.96",
            "p95": "195.23",
            "p99": "169.61",
            "min": "167.54",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "285.98",
            "p50": "251.06",
            "p95": "196.88",
            "p99": "170.23",
            "min": "169.66",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "287.39",
            "p50": "259.86",
            "p95": "201.74",
            "p99": "162.16",
            "min": "156.31",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "291.14",
            "p50": "256.30",
            "p95": "189.26",
            "p99": "165.17",
            "min": "162.38",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "104.90",
            "p50": "99.85",
            "p95": "86.30",
            "p99": "77.35",
            "min": "75.98",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.19",
            "p50": "100.00",
            "p95": "88.90",
            "p99": "79.35",
            "min": "77.98",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.15",
            "p50": "92.60",
            "p95": "83.42",
            "p99": "75.90",
            "min": "75.46",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "249.23",
            "p50": "223.21",
            "p95": "177.15",
            "p99": "153.22",
            "min": "142.84",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "96.79",
            "p50": "92.81",
            "p95": "83.76",
            "p99": "74.19",
            "min": "73.71",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "242.49",
            "p50": "216.42",
            "p95": "168.51",
            "p99": "141.73",
            "min": "136.65",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "184.00",
            "p50": "170.53",
            "p95": "135.97",
            "p99": "116.51",
            "min": "114.30",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "154.38",
            "p50": "143.49",
            "p95": "120.32",
            "p99": "103.53",
            "min": "103.20",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "440.35",
            "p50": "361.56",
            "p95": "252.85",
            "p99": "206.44",
            "min": "191.08",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4367.65",
            "p50": "1454.16",
            "p95": "432.10",
            "p99": "291.30",
            "min": "261.84",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "437.84",
            "p50": "364.76",
            "p95": "267.88",
            "p99": "182.22",
            "min": "177.25",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "10449.32",
            "p50": "1908.69",
            "p95": "568.52",
            "p99": "385.72",
            "min": "333.85",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3015.56",
            "p50": "1267.74",
            "p95": "376.65",
            "p99": "324.53",
            "min": "319.42",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "206.59",
            "p50": "188.90",
            "p95": "147.14",
            "p99": "131.60",
            "min": "129.11",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "232.07",
            "p50": "209.99",
            "p95": "166.10",
            "p99": "137.20",
            "min": "136.96",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "131.87",
            "p50": "124.05",
            "p95": "101.87",
            "p99": "74.18",
            "min": "65.58",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "209.17",
            "p50": "192.02",
            "p95": "150.73",
            "p99": "126.26",
            "min": "126.11",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "139.18",
            "p50": "131.89",
            "p95": "114.57",
            "p99": "100.93",
            "min": "98.80",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "178.63",
            "p50": "162.83",
            "p95": "135.66",
            "p99": "120.88",
            "min": "120.11",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "181.13",
            "p50": "167.82",
            "p95": "137.31",
            "p99": "121.68",
            "min": "119.65",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "184.75",
            "p50": "170.18",
            "p95": "138.60",
            "p99": "120.62",
            "min": "120.44",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "287.51",
            "p50": "220.68",
            "p95": "136.22",
            "p99": "130.31",
            "min": "120.28",
            "n": "93",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "144.73",
            "p50": "135.48",
            "p95": "110.14",
            "p99": "116.75",
            "min": "106.41",
            "n": "72",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "87.99",
            "p50": "84.60",
            "p95": "77.85",
            "p99": "74.09",
            "min": "73.66",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "88.95",
            "p50": "85.55",
            "p95": "80.69",
            "p99": "73.60",
            "min": "73.06",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "88.80",
            "p50": "85.12",
            "p95": "80.46",
            "p99": "74.78",
            "min": "74.77",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "185.45",
            "p50": "182.06",
            "p95": "175.87",
            "p99": "158.00",
            "min": "158.00",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "93.77",
            "p50": "89.73",
            "p95": "86.20",
            "p99": "83.35",
            "min": "83.33",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "112.93",
            "p50": "107.60",
            "p95": "104.39",
            "p99": "96.38",
            "min": "95.51",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "124.02",
            "p50": "121.06",
            "p95": "107.42",
            "p99": "105.74",
            "min": "105.53",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "124.11",
            "p50": "121.26",
            "p95": "116.98",
            "p99": "111.39",
            "min": "110.91",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "98.91",
            "p50": "96.78",
            "p95": "74.62",
            "p99": "73.53",
            "min": "73.29",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.99",
            "p50": "95.85",
            "p95": "91.70",
            "p99": "88.94",
            "min": "88.90",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "97.81",
            "p50": "95.76",
            "p95": "92.68",
            "p99": "89.74",
            "min": "89.70",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "125.17",
            "p50": "122.68",
            "p95": "119.47",
            "p99": "115.79",
            "min": "115.41",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "121.60",
            "p50": "113.70",
            "p95": "105.61",
            "p99": "99.62",
            "min": "98.78",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "114.93",
            "p50": "113.04",
            "p95": "109.27",
            "p99": "103.36",
            "min": "103.29",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "75.20",
            "p50": "71.16",
            "p95": "68.08",
            "p99": "63.53",
            "min": "62.63",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "92.98",
            "p50": "91.86",
            "p95": "85.75",
            "p99": "86.66",
            "min": "83.25",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "59.83",
            "p50": "58.18",
            "p95": "55.84",
            "p99": "53.90",
            "min": "52.51",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "150.49",
            "p50": "119.23",
            "p95": "112.14",
            "p99": "128.45",
            "min": "111.82",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "103.60",
            "p50": "101.34",
            "p95": "98.59",
            "p99": "99.59",
            "min": "96.57",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "381.02",
            "p50": "365.18",
            "p95": "347.19",
            "p99": "293.01",
            "min": "283.01",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "511.63",
            "p50": "479.35",
            "p95": "441.70",
            "p99": "401.30",
            "min": "383.91",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "378.73",
            "p50": "364.85",
            "p95": "327.28",
            "p99": "307.29",
            "min": "304.13",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "382.78",
            "p50": "368.86",
            "p95": "336.18",
            "p99": "296.33",
            "min": "289.08",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "383.81",
            "p50": "371.71",
            "p95": "349.33",
            "p99": "332.45",
            "min": "332.15",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "470.81",
            "p50": "445.37",
            "p95": "419.45",
            "p99": "367.97",
            "min": "364.55",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "98.49",
            "p50": "95.50",
            "p95": "91.58",
            "p99": "89.84",
            "min": "89.53",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "99.75",
            "p50": "95.99",
            "p95": "91.78",
            "p99": "88.00",
            "min": "87.59",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "98.26",
            "p50": "94.59",
            "p95": "91.07",
            "p99": "89.33",
            "min": "89.20",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "89.21",
            "p50": "87.00",
            "p95": "84.42",
            "p99": "82.75",
            "min": "82.63",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.95",
            "p50": "86.02",
            "p95": "85.29",
            "p99": "84.22",
            "min": "84.21",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "91.23",
            "p50": "88.18",
            "p95": "84.20",
            "p99": "79.60",
            "min": "79.22",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "87.25",
            "p50": "84.45",
            "p95": "80.17",
            "p99": "78.66",
            "min": "78.44",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "86.67",
            "p50": "83.80",
            "p95": "80.42",
            "p99": "77.71",
            "min": "77.17",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "86.90",
            "p50": "83.77",
            "p95": "79.83",
            "p99": "77.00",
            "min": "76.66",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1269.71",
            "p50": "1159.44",
            "p95": "746.24",
            "p99": "480.80",
            "min": "463.28",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1276.72",
            "p50": "1142.73",
            "p95": "766.35",
            "p99": "449.10",
            "min": "404.40",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.32",
            "p50": "151.38",
            "p95": "138.13",
            "p99": "119.40",
            "min": "118.23",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3061.09",
            "p50": "2763.57",
            "p95": "1252.44",
            "p99": "931.82",
            "min": "837.32",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "154.44",
            "p50": "151.47",
            "p95": "129.74",
            "p99": "100.67",
            "min": "95.68",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3036.87",
            "p50": "2820.54",
            "p95": "1165.83",
            "p99": "618.73",
            "min": "578.53",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.00",
            "p50": "96.19",
            "p95": "82.83",
            "p99": "76.70",
            "min": "75.45",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "186.62",
            "p50": "183.26",
            "p95": "178.74",
            "p99": "173.82",
            "min": "171.33",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "395.09",
            "p50": "298.57",
            "p95": "223.82",
            "p99": "195.59",
            "min": "188.81",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7101.43",
            "p50": "1892.47",
            "p95": "878.86",
            "p99": "470.31",
            "min": "430.42",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "364.14",
            "p50": "289.86",
            "p95": "235.46",
            "p99": "186.62",
            "min": "176.18",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "27719.74",
            "p50": "9301.32",
            "p95": "2685.74",
            "p99": "1917.80",
            "min": "1883.45",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4460.03",
            "p50": "3147.50",
            "p95": "1735.31",
            "p99": "1228.89",
            "min": "1226.66",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "311.96",
            "p50": "248.57",
            "p95": "182.53",
            "p99": "162.13",
            "min": "161.08",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "152.50",
            "p50": "134.09",
            "p95": "119.63",
            "p99": "111.73",
            "min": "109.64",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "122.81",
            "p50": "119.73",
            "p95": "96.32",
            "p99": "89.00",
            "min": "88.52",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "129.89",
            "p50": "121.04",
            "p95": "116.27",
            "p99": "112.10",
            "min": "111.48",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "123.16",
            "p50": "119.58",
            "p95": "114.59",
            "p99": "109.73",
            "min": "109.72",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "158.96",
            "p50": "149.48",
            "p95": "144.70",
            "p99": "140.11",
            "min": "139.13",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "97.17",
            "p50": "93.67",
            "p95": "89.73",
            "p99": "85.64",
            "min": "84.85",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "118.04",
            "p50": "113.62",
            "p95": "109.09",
            "p99": "103.44",
            "min": "102.72",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "957.64",
            "p50": "880.20",
            "p95": "637.22",
            "p99": "548.48",
            "min": "545.86",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "123.46",
            "p50": "119.73",
            "p95": "102.63",
            "p99": "97.29",
            "min": "96.70",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}