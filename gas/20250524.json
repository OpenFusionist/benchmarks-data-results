{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "111.59",
            "p50": "107.76",
            "p95": "98.98",
            "p99": "96.57",
            "min": "96.38",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1106.19",
            "p50": "944.61",
            "p95": "619.21",
            "p99": "568.60",
            "min": "561.09",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "112.82",
            "p50": "108.61",
            "p95": "99.26",
            "p99": "96.93",
            "min": "96.67",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "752.42",
            "p50": "695.44",
            "p95": "464.17",
            "p99": "404.99",
            "min": "395.19",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "397.56",
            "p50": "369.23",
            "p95": "301.73",
            "p99": "280.41",
            "min": "277.51",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "425.02",
            "p50": "394.57",
            "p95": "331.54",
            "p99": "292.75",
            "min": "289.61",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "292.38",
            "p50": "272.89",
            "p95": "192.82",
            "p99": "177.52",
            "min": "176.98",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "181.37",
            "p50": "173.60",
            "p95": "158.87",
            "p99": "153.39",
            "min": "152.91",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "250.84",
            "p50": "235.55",
            "p95": "208.75",
            "p99": "195.01",
            "min": "191.23",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "260.87",
            "p50": "240.53",
            "p95": "210.31",
            "p99": "202.49",
            "min": "202.19",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "257.07",
            "p50": "239.05",
            "p95": "213.04",
            "p99": "203.75",
            "min": "202.95",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "201.24",
            "p50": "190.47",
            "p95": "172.77",
            "p99": "163.61",
            "min": "162.73",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "334.33",
            "p50": "313.41",
            "p95": "273.37",
            "p99": "246.98",
            "min": "246.06",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "296.89",
            "p50": "279.07",
            "p95": "233.09",
            "p99": "222.38",
            "min": "221.88",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8732.64",
            "p50": "3726.33",
            "p95": "2230.47",
            "p99": "1488.17",
            "min": "1364.01",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2930.76",
            "p50": "1756.14",
            "p95": "1004.58",
            "p99": "1640.33",
            "min": "945.48",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "325.88",
            "p50": "292.52",
            "p95": "256.22",
            "p99": "253.33",
            "min": "236.31",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1434.25",
            "p50": "782.42",
            "p95": "355.53",
            "p99": "798.20",
            "min": "318.37",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7531.80",
            "p50": "3332.68",
            "p95": "1430.89",
            "p99": "4010.65",
            "min": "1354.34",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "820.65",
            "p50": "691.35",
            "p95": "504.64",
            "p99": "422.14",
            "min": "418.67",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "806.61",
            "p50": "734.38",
            "p95": "547.88",
            "p99": "442.96",
            "min": "439.06",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "943.89",
            "p50": "789.73",
            "p95": "552.37",
            "p99": "470.58",
            "min": "461.93",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2396.97",
            "p50": "1781.25",
            "p95": "843.15",
            "p99": "747.46",
            "min": "746.62",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2389.46",
            "p50": "1876.15",
            "p95": "935.11",
            "p99": "730.82",
            "min": "725.87",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "804.18",
            "p50": "721.02",
            "p95": "555.24",
            "p99": "484.96",
            "min": "479.25",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "168.59",
            "p50": "156.62",
            "p95": "142.50",
            "p99": "136.39",
            "min": "136.06",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "553.91",
            "p50": "487.86",
            "p95": "408.39",
            "p99": "223.72",
            "min": "192.88",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "169.34",
            "p50": "156.81",
            "p95": "145.20",
            "p99": "140.35",
            "min": "140.29",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "187.55",
            "p50": "173.15",
            "p95": "155.69",
            "p99": "148.61",
            "min": "148.54",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "32704.61",
            "p50": "7451.15",
            "p95": "2250.55",
            "p99": "803.84",
            "min": "446.66",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "417.45",
            "p50": "368.03",
            "p95": "314.31",
            "p99": "295.90",
            "min": "293.52",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "393.15",
            "p50": "347.94",
            "p95": "295.56",
            "p99": "266.04",
            "min": "263.76",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "397.32",
            "p50": "352.60",
            "p95": "297.63",
            "p99": "277.86",
            "min": "276.85",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "395.76",
            "p50": "346.60",
            "p95": "299.98",
            "p99": "269.26",
            "min": "268.07",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "16666.07",
            "p50": "5981.99",
            "p95": "2538.69",
            "p99": "1968.95",
            "min": "1747.74",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "17008.83",
            "p50": "5541.60",
            "p95": "2382.72",
            "p99": "1684.39",
            "min": "1496.59",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "16509.36",
            "p50": "5085.52",
            "p95": "2353.42",
            "p99": "1454.06",
            "min": "1397.07",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "16772.87",
            "p50": "5628.89",
            "p95": "2324.74",
            "p99": "2091.17",
            "min": "2043.80",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "16592.92",
            "p50": "4810.05",
            "p95": "2393.64",
            "p99": "1694.14",
            "min": "1604.62",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "17057.15",
            "p50": "5569.86",
            "p95": "2418.09",
            "p99": "1683.08",
            "min": "1393.15",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "260.92",
            "p50": "241.28",
            "p95": "218.92",
            "p99": "199.53",
            "min": "199.12",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "515.85",
            "p50": "478.04",
            "p95": "384.06",
            "p99": "340.11",
            "min": "338.22",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1606.22",
            "p50": "1328.48",
            "p95": "344.16",
            "p99": "298.44",
            "min": "293.82",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "23643.63",
            "p50": "4773.33",
            "p95": "190.07",
            "p99": "169.49",
            "min": "163.99",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1391.77",
            "p50": "1175.79",
            "p95": "759.71",
            "p99": "640.13",
            "min": "607.32",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "55390.34",
            "p50": "8719.52",
            "p95": "2341.58",
            "p99": "639.95",
            "min": "438.53",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "12621.47",
            "p50": "6092.33",
            "p95": "187.18",
            "p99": "174.34",
            "min": "174.14",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "570.53",
            "p50": "478.55",
            "p95": "369.98",
            "p99": "351.43",
            "min": "348.42",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "544.89",
            "p50": "502.07",
            "p95": "383.21",
            "p99": "346.21",
            "min": "342.50",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "199.69",
            "p50": "192.37",
            "p95": "168.91",
            "p99": "136.23",
            "min": "125.53",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "383.51",
            "p50": "361.17",
            "p95": "290.40",
            "p99": "267.91",
            "min": "264.62",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "199.70",
            "p50": "189.93",
            "p95": "166.63",
            "p99": "122.72",
            "min": "122.46",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "336.06",
            "p50": "312.21",
            "p95": "257.75",
            "p99": "164.21",
            "min": "159.08",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "256.17",
            "p50": "244.09",
            "p95": "214.11",
            "p99": "198.80",
            "min": "198.76",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "571.17",
            "p50": "517.15",
            "p95": "406.67",
            "p99": "351.05",
            "min": "344.43",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1466.41",
            "p50": "1240.82",
            "p95": "941.04",
            "p99": "762.94",
            "min": "752.05",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "288.14",
            "p50": "268.82",
            "p95": "236.39",
            "p99": "219.27",
            "min": "215.51",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "137.98",
            "p50": "131.68",
            "p95": "114.18",
            "p99": "109.48",
            "min": "108.87",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "137.87",
            "p50": "130.73",
            "p95": "119.62",
            "p99": "113.13",
            "min": "112.71",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "139.31",
            "p50": "130.97",
            "p95": "118.67",
            "p99": "109.34",
            "min": "109.18",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "248.27",
            "p50": "226.51",
            "p95": "187.25",
            "p99": "122.77",
            "min": "82.49",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "189.83",
            "p50": "175.97",
            "p95": "150.49",
            "p99": "139.29",
            "min": "137.96",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "202.44",
            "p50": "185.95",
            "p95": "157.54",
            "p99": "139.19",
            "min": "138.46",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "184.01",
            "p50": "171.30",
            "p95": "146.86",
            "p99": "139.42",
            "min": "138.59",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "182.13",
            "p50": "168.22",
            "p95": "143.73",
            "p99": "109.91",
            "min": "106.40",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "206.92",
            "p50": "190.13",
            "p95": "158.02",
            "p99": "135.89",
            "min": "133.44",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "179.62",
            "p50": "168.19",
            "p95": "147.64",
            "p99": "137.48",
            "min": "136.65",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "206.41",
            "p50": "188.44",
            "p95": "157.31",
            "p99": "138.88",
            "min": "134.91",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "150.58",
            "p50": "141.15",
            "p95": "121.91",
            "p99": "115.98",
            "min": "115.94",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "227.53",
            "p50": "207.99",
            "p95": "176.66",
            "p99": "145.77",
            "min": "137.63",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "181.09",
            "p50": "168.20",
            "p95": "147.14",
            "p99": "101.76",
            "min": "96.80",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "102.47",
            "p50": "94.87",
            "p95": "86.63",
            "p99": "83.91",
            "min": "83.56",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "137.55",
            "p50": "128.50",
            "p95": "114.74",
            "p99": "121.08",
            "min": "112.21",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "427.24",
            "p50": "341.53",
            "p95": "283.01",
            "p99": "288.57",
            "min": "256.04",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "170.05",
            "p50": "139.62",
            "p95": "131.57",
            "p99": "146.63",
            "min": "128.97",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "130.49",
            "p50": "121.10",
            "p95": "111.55",
            "p99": "118.34",
            "min": "109.18",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1195.97",
            "p50": "915.22",
            "p95": "569.37",
            "p99": "427.38",
            "min": "405.35",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1019.48",
            "p50": "775.40",
            "p95": "503.78",
            "p99": "427.89",
            "min": "427.36",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1402.78",
            "p50": "1049.63",
            "p95": "606.62",
            "p99": "444.56",
            "min": "424.30",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1327.63",
            "p50": "966.03",
            "p95": "591.94",
            "p99": "452.17",
            "min": "451.25",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1238.46",
            "p50": "959.77",
            "p95": "523.59",
            "p99": "404.47",
            "min": "379.44",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1069.74",
            "p50": "831.28",
            "p95": "529.48",
            "p99": "399.62",
            "min": "396.60",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "675.13",
            "p50": "546.85",
            "p95": "392.97",
            "p99": "350.52",
            "min": "344.72",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "679.71",
            "p50": "543.44",
            "p95": "348.40",
            "p99": "292.69",
            "min": "284.71",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "704.81",
            "p50": "534.51",
            "p95": "406.92",
            "p99": "359.00",
            "min": "358.74",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "699.66",
            "p50": "556.00",
            "p95": "392.51",
            "p99": "336.53",
            "min": "332.51",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "293.35",
            "p50": "262.95",
            "p95": "211.34",
            "p99": "191.95",
            "min": "191.92",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "626.42",
            "p50": "470.63",
            "p95": "367.76",
            "p99": "293.34",
            "min": "289.73",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "594.34",
            "p50": "478.91",
            "p95": "366.53",
            "p99": "316.54",
            "min": "313.10",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "601.56",
            "p50": "488.32",
            "p95": "347.41",
            "p99": "294.69",
            "min": "290.39",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "625.23",
            "p50": "513.79",
            "p95": "337.78",
            "p99": "288.80",
            "min": "288.63",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.33",
            "p50": "100.35",
            "p95": "89.69",
            "p99": "83.89",
            "min": "81.84",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.04",
            "p50": "101.01",
            "p95": "90.01",
            "p99": "88.03",
            "min": "87.92",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.08",
            "p50": "93.27",
            "p95": "85.46",
            "p99": "80.56",
            "min": "79.16",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "252.83",
            "p50": "231.81",
            "p95": "190.97",
            "p99": "175.38",
            "min": "174.96",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.75",
            "p50": "92.66",
            "p95": "85.21",
            "p99": "80.41",
            "min": "79.19",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "243.96",
            "p50": "225.67",
            "p95": "193.50",
            "p99": "171.28",
            "min": "169.19",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "209.06",
            "p50": "189.91",
            "p95": "162.75",
            "p99": "152.55",
            "min": "152.53",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "236.17",
            "p50": "217.23",
            "p95": "188.31",
            "p99": "171.48",
            "min": "171.47",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "573.63",
            "p50": "493.31",
            "p95": "355.69",
            "p99": "314.46",
            "min": "311.59",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5809.71",
            "p50": "2610.63",
            "p95": "1123.74",
            "p99": "949.14",
            "min": "915.20",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "527.73",
            "p50": "458.20",
            "p95": "330.03",
            "p99": "291.73",
            "min": "291.06",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "17697.29",
            "p50": "4065.18",
            "p95": "1325.05",
            "p99": "965.03",
            "min": "919.58",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3564.30",
            "p50": "2099.04",
            "p95": "970.20",
            "p99": "673.99",
            "min": "645.85",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "226.16",
            "p50": "198.54",
            "p95": "170.77",
            "p99": "147.84",
            "min": "146.36",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "261.31",
            "p50": "235.76",
            "p95": "191.18",
            "p99": "170.58",
            "min": "169.61",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "151.14",
            "p50": "142.73",
            "p95": "125.09",
            "p99": "110.34",
            "min": "106.86",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "242.74",
            "p50": "223.75",
            "p95": "185.02",
            "p99": "155.11",
            "min": "144.87",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "180.33",
            "p50": "168.06",
            "p95": "146.54",
            "p99": "136.80",
            "min": "136.04",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "219.89",
            "p50": "202.39",
            "p95": "159.92",
            "p99": "92.42",
            "min": "80.20",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "206.93",
            "p50": "192.13",
            "p95": "169.83",
            "p99": "157.00",
            "min": "155.89",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "208.24",
            "p50": "189.77",
            "p95": "164.79",
            "p99": "145.07",
            "min": "138.36",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1278.12",
            "p50": "1063.54",
            "p95": "739.82",
            "p99": "535.33",
            "min": "487.88",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "176.45",
            "p50": "167.94",
            "p95": "147.56",
            "p99": "137.22",
            "min": "136.44",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "189.65",
            "p50": "186.43",
            "p95": "168.44",
            "p99": "163.50",
            "min": "163.35",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "188.59",
            "p50": "185.96",
            "p95": "175.35",
            "p99": "162.88",
            "min": "162.07",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "189.50",
            "p50": "187.09",
            "p95": "173.56",
            "p99": "152.39",
            "min": "149.48",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1144.45",
            "p50": "1052.69",
            "p95": "794.37",
            "p99": "590.28",
            "min": "565.21",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "614.29",
            "p50": "602.68",
            "p95": "494.61",
            "p99": "363.99",
            "min": "348.00",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "664.53",
            "p50": "650.34",
            "p95": "514.58",
            "p99": "478.52",
            "min": "473.45",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "739.99",
            "p50": "722.26",
            "p95": "543.19",
            "p99": "464.51",
            "min": "462.69",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "821.67",
            "p50": "758.52",
            "p95": "563.94",
            "p99": "474.83",
            "min": "474.18",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "912.33",
            "p50": "766.06",
            "p95": "590.52",
            "p99": "473.99",
            "min": "470.93",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "865.07",
            "p50": "761.13",
            "p95": "609.20",
            "p99": "529.62",
            "min": "526.56",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "866.05",
            "p50": "763.51",
            "p95": "630.14",
            "p99": "562.67",
            "min": "561.33",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "825.17",
            "p50": "762.47",
            "p95": "590.57",
            "p99": "500.92",
            "min": "498.03",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "765.36",
            "p50": "749.06",
            "p95": "581.42",
            "p99": "465.13",
            "min": "463.08",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "870.24",
            "p50": "820.34",
            "p95": "585.94",
            "p99": "494.69",
            "min": "493.52",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "116.34",
            "p50": "111.60",
            "p95": "105.53",
            "p99": "102.30",
            "min": "101.97",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "87.90",
            "p50": "87.25",
            "p95": "82.55",
            "p99": "82.96",
            "min": "80.30",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "617.88",
            "p50": "601.49",
            "p95": "472.01",
            "p99": "451.43",
            "min": "412.39",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "119.00",
            "p50": "94.98",
            "p95": "88.65",
            "p99": "101.15",
            "min": "87.69",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "83.05",
            "p50": "80.40",
            "p95": "77.70",
            "p99": "79.63",
            "min": "77.05",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1902.37",
            "p50": "1827.55",
            "p95": "1172.35",
            "p99": "776.23",
            "min": "702.75",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1641.90",
            "p50": "1569.91",
            "p95": "1035.06",
            "p99": "751.69",
            "min": "698.43",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2491.93",
            "p50": "2342.59",
            "p95": "1124.31",
            "p99": "931.56",
            "min": "837.50",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2467.16",
            "p50": "2342.34",
            "p95": "1411.41",
            "p99": "957.31",
            "min": "917.70",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2447.41",
            "p50": "2299.21",
            "p95": "1262.37",
            "p99": "844.65",
            "min": "826.45",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1704.64",
            "p50": "1627.67",
            "p95": "957.50",
            "p99": "675.52",
            "min": "640.35",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "686.99",
            "p50": "671.79",
            "p95": "564.64",
            "p99": "459.71",
            "min": "452.35",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "690.89",
            "p50": "672.79",
            "p95": "521.43",
            "p99": "412.13",
            "min": "410.83",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "697.23",
            "p50": "679.48",
            "p95": "524.74",
            "p99": "439.92",
            "min": "435.85",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "525.27",
            "p50": "514.30",
            "p95": "445.46",
            "p99": "376.68",
            "min": "370.53",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.32",
            "p50": "84.95",
            "p95": "38.09",
            "p99": "37.68",
            "min": "37.59",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "818.65",
            "p50": "793.85",
            "p95": "615.52",
            "p99": "444.26",
            "min": "425.74",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "763.82",
            "p50": "747.60",
            "p95": "638.39",
            "p99": "573.02",
            "min": "571.35",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "766.87",
            "p50": "749.74",
            "p95": "569.48",
            "p99": "474.60",
            "min": "470.13",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "765.00",
            "p50": "750.28",
            "p95": "549.13",
            "p99": "484.05",
            "min": "474.94",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2392.92",
            "p50": "2274.96",
            "p95": "1248.65",
            "p99": "815.48",
            "min": "744.88",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2756.90",
            "p50": "2590.58",
            "p95": "1328.88",
            "p99": "939.24",
            "min": "911.99",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "105.85",
            "p50": "104.24",
            "p95": "99.98",
            "p99": "95.74",
            "min": "95.70",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "15038.97",
            "p50": "7638.14",
            "p95": "2503.03",
            "p99": "2255.84",
            "min": "2207.30",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "105.66",
            "p50": "104.08",
            "p95": "98.60",
            "p99": "94.72",
            "min": "94.06",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "6237.72",
            "p50": "5502.10",
            "p95": "2185.89",
            "p99": "1910.25",
            "min": "1898.41",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "865.37",
            "p50": "763.85",
            "p95": "604.90",
            "p99": "498.74",
            "min": "479.63",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "654.30",
            "p50": "628.37",
            "p95": "531.78",
            "p99": "440.56",
            "min": "425.74",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2352.47",
            "p50": "2203.25",
            "p95": "1199.85",
            "p99": "756.22",
            "min": "743.13",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "15986.88",
            "p50": "8923.41",
            "p95": "2303.05",
            "p99": "2050.05",
            "min": "1919.89",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2179.94",
            "p50": "2073.79",
            "p95": "1118.59",
            "p99": "993.81",
            "min": "990.33",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "75254.29",
            "p50": "8480.65",
            "p95": "2467.17",
            "p99": "1741.60",
            "min": "1504.72",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13954.75",
            "p50": "7627.62",
            "p95": "2380.26",
            "p99": "1694.75",
            "min": "1592.25",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "744.59",
            "p50": "598.63",
            "p95": "501.93",
            "p99": "390.56",
            "min": "349.27",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "930.00",
            "p50": "912.21",
            "p95": "692.57",
            "p99": "537.34",
            "min": "524.50",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "809.41",
            "p50": "762.38",
            "p95": "617.80",
            "p99": "491.62",
            "min": "476.49",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1177.87",
            "p50": "1060.90",
            "p95": "745.12",
            "p99": "666.09",
            "min": "651.40",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "803.49",
            "p50": "759.44",
            "p95": "638.80",
            "p99": "563.03",
            "min": "560.94",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1156.44",
            "p50": "1049.95",
            "p95": "723.47",
            "p99": "563.09",
            "min": "555.95",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "820.01",
            "p50": "755.04",
            "p95": "588.87",
            "p99": "518.26",
            "min": "514.10",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "880.68",
            "p50": "818.18",
            "p95": "577.75",
            "p99": "498.37",
            "min": "491.49",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2039.98",
            "p50": "1766.72",
            "p95": "1439.90",
            "p99": "1169.65",
            "min": "1158.74",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "864.00",
            "p50": "762.52",
            "p95": "576.44",
            "p99": "492.72",
            "min": "476.84",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "122.62",
            "p50": "117.06",
            "p95": "104.60",
            "p99": "97.43",
            "min": "96.73",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "121.37",
            "p50": "116.84",
            "p95": "102.13",
            "p99": "93.68",
            "min": "92.84",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "121.86",
            "p50": "116.82",
            "p95": "100.59",
            "p99": "93.86",
            "min": "93.09",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "208.39",
            "p50": "190.08",
            "p95": "155.46",
            "p99": "114.63",
            "min": "83.89",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.34",
            "p50": "96.61",
            "p95": "83.25",
            "p99": "80.42",
            "min": "80.15",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "107.68",
            "p50": "101.47",
            "p95": "86.73",
            "p99": "80.82",
            "min": "80.37",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "135.28",
            "p50": "126.10",
            "p95": "104.71",
            "p99": "99.05",
            "min": "98.46",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "137.42",
            "p50": "128.24",
            "p95": "106.18",
            "p99": "100.88",
            "min": "100.54",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "178.51",
            "p50": "162.79",
            "p95": "129.00",
            "p99": "119.71",
            "min": "119.60",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "179.10",
            "p50": "163.74",
            "p95": "128.53",
            "p99": "117.48",
            "min": "117.45",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "178.48",
            "p50": "161.90",
            "p95": "128.96",
            "p99": "119.95",
            "min": "119.03",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.49",
            "p50": "119.39",
            "p95": "97.76",
            "p99": "76.95",
            "min": "71.94",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "200.83",
            "p50": "179.94",
            "p95": "142.03",
            "p99": "128.04",
            "min": "127.72",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "181.05",
            "p50": "165.65",
            "p95": "132.31",
            "p99": "121.29",
            "min": "121.20",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "74.75",
            "p50": "69.75",
            "p95": "64.46",
            "p99": "60.98",
            "min": "60.81",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "130.13",
            "p50": "118.73",
            "p95": "99.62",
            "p99": "109.08",
            "min": "97.74",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "208.52",
            "p50": "184.18",
            "p95": "144.08",
            "p99": "150.32",
            "min": "136.66",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "154.97",
            "p50": "133.28",
            "p95": "130.23",
            "p99": "139.92",
            "min": "128.56",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "122.75",
            "p50": "114.33",
            "p95": "97.86",
            "p99": "107.60",
            "min": "96.16",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1025.43",
            "p50": "678.42",
            "p95": "297.71",
            "p99": "255.76",
            "min": "255.73",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "990.62",
            "p50": "647.41",
            "p95": "319.98",
            "p99": "255.33",
            "min": "254.77",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1110.76",
            "p50": "696.92",
            "p95": "355.14",
            "p99": "262.39",
            "min": "260.34",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1045.54",
            "p50": "696.82",
            "p95": "345.35",
            "p99": "268.79",
            "min": "258.06",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "973.80",
            "p50": "662.80",
            "p95": "338.51",
            "p99": "267.76",
            "min": "266.24",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "995.87",
            "p50": "665.27",
            "p95": "352.25",
            "p99": "274.74",
            "min": "268.12",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "321.28",
            "p50": "279.83",
            "p95": "201.72",
            "p99": "176.75",
            "min": "174.03",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "326.34",
            "p50": "278.76",
            "p95": "185.45",
            "p99": "174.01",
            "min": "173.76",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "325.05",
            "p50": "285.51",
            "p95": "206.66",
            "p99": "178.14",
            "min": "177.27",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "352.07",
            "p50": "305.92",
            "p95": "221.07",
            "p99": "187.26",
            "min": "186.75",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "280.13",
            "p50": "245.33",
            "p95": "163.11",
            "p99": "154.07",
            "min": "153.32",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "290.60",
            "p50": "243.36",
            "p95": "179.68",
            "p99": "168.20",
            "min": "168.01",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "275.82",
            "p50": "242.63",
            "p95": "177.00",
            "p99": "167.24",
            "min": "166.85",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "279.65",
            "p50": "244.88",
            "p95": "176.74",
            "p99": "160.33",
            "min": "159.42",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "281.26",
            "p50": "243.74",
            "p95": "180.90",
            "p99": "157.64",
            "min": "157.49",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "104.02",
            "p50": "98.04",
            "p95": "85.95",
            "p99": "79.91",
            "min": "79.84",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "104.17",
            "p50": "98.30",
            "p95": "85.60",
            "p99": "81.00",
            "min": "81.00",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "95.76",
            "p50": "90.94",
            "p95": "80.61",
            "p99": "77.01",
            "min": "76.81",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "245.63",
            "p50": "217.19",
            "p95": "168.52",
            "p99": "151.27",
            "min": "150.29",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "95.26",
            "p50": "91.11",
            "p95": "80.65",
            "p99": "76.13",
            "min": "75.68",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "238.22",
            "p50": "211.67",
            "p95": "165.73",
            "p99": "149.20",
            "min": "147.73",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "179.74",
            "p50": "166.98",
            "p95": "129.44",
            "p99": "121.02",
            "min": "120.44",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "151.57",
            "p50": "139.83",
            "p95": "113.72",
            "p99": "107.09",
            "min": "105.95",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "437.83",
            "p50": "381.90",
            "p95": "235.39",
            "p99": "219.99",
            "min": "218.11",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5395.30",
            "p50": "2102.60",
            "p95": "614.89",
            "p99": "524.73",
            "min": "523.04",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "441.73",
            "p50": "382.96",
            "p95": "263.68",
            "p99": "228.17",
            "min": "221.42",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14317.23",
            "p50": "2978.33",
            "p95": "1122.36",
            "p99": "861.55",
            "min": "762.66",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3378.74",
            "p50": "1824.50",
            "p95": "651.54",
            "p99": "560.67",
            "min": "557.53",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "207.06",
            "p50": "187.33",
            "p95": "163.73",
            "p99": "139.79",
            "min": "134.13",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "229.17",
            "p50": "213.00",
            "p95": "168.59",
            "p99": "153.94",
            "min": "151.77",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "129.55",
            "p50": "120.20",
            "p95": "102.90",
            "p99": "80.83",
            "min": "76.14",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "207.72",
            "p50": "184.81",
            "p95": "141.21",
            "p99": "128.74",
            "min": "128.55",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "136.39",
            "p50": "127.35",
            "p95": "102.86",
            "p99": "63.62",
            "min": "61.79",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "173.62",
            "p50": "157.76",
            "p95": "125.61",
            "p99": "116.93",
            "min": "116.35",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "176.05",
            "p50": "163.63",
            "p95": "125.03",
            "p99": "119.61",
            "min": "119.25",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "178.48",
            "p50": "164.99",
            "p95": "130.36",
            "p99": "116.15",
            "min": "115.03",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "301.03",
            "p50": "250.83",
            "p95": "55.14",
            "p99": "49.92",
            "min": "49.68",
            "n": "107",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "143.26",
            "p50": "137.00",
            "p95": "117.89",
            "p99": "55.48",
            "min": "55.33",
            "n": "106",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "86.97",
            "p50": "83.67",
            "p95": "75.88",
            "p99": "73.59",
            "min": "73.56",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "88.54",
            "p50": "84.91",
            "p95": "82.36",
            "p99": "78.46",
            "min": "77.83",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "87.40",
            "p50": "84.42",
            "p95": "80.99",
            "p99": "74.69",
            "min": "73.90",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "237.44",
            "p50": "176.52",
            "p95": "173.25",
            "p99": "153.27",
            "min": "141.78",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "96.33",
            "p50": "93.88",
            "p95": "88.28",
            "p99": "86.30",
            "min": "85.94",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "111.43",
            "p50": "109.35",
            "p95": "106.48",
            "p99": "105.08",
            "min": "104.91",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "121.22",
            "p50": "119.21",
            "p95": "110.85",
            "p99": "104.10",
            "min": "103.79",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "124.18",
            "p50": "120.63",
            "p95": "117.63",
            "p99": "111.03",
            "min": "110.89",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "93.32",
            "p50": "92.16",
            "p95": "87.92",
            "p99": "86.19",
            "min": "85.93",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "99.87",
            "p50": "98.39",
            "p95": "94.88",
            "p99": "90.18",
            "min": "90.12",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "100.33",
            "p50": "98.71",
            "p95": "95.09",
            "p99": "89.43",
            "min": "88.48",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "123.55",
            "p50": "120.39",
            "p95": "117.95",
            "p99": "113.17",
            "min": "112.25",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "133.96",
            "p50": "130.97",
            "p95": "120.84",
            "p99": "115.97",
            "min": "115.96",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "113.78",
            "p50": "111.62",
            "p95": "98.35",
            "p99": "92.82",
            "min": "92.33",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "88.86",
            "p50": "83.68",
            "p95": "75.82",
            "p99": "71.88",
            "min": "71.83",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "100.78",
            "p50": "99.49",
            "p95": "93.72",
            "p99": "95.77",
            "min": "93.08",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "74.94",
            "p50": "73.09",
            "p95": "71.17",
            "p99": "69.97",
            "min": "68.80",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "156.23",
            "p50": "125.11",
            "p95": "116.80",
            "p99": "133.14",
            "min": "115.72",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "108.04",
            "p50": "105.98",
            "p95": "101.63",
            "p99": "104.10",
            "min": "101.13",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "426.93",
            "p50": "412.20",
            "p95": "377.27",
            "p99": "293.45",
            "min": "291.21",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "479.08",
            "p50": "470.34",
            "p95": "440.38",
            "p99": "359.64",
            "min": "329.63",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "459.56",
            "p50": "439.79",
            "p95": "422.95",
            "p99": "362.37",
            "min": "353.56",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "468.88",
            "p50": "445.91",
            "p95": "411.36",
            "p99": "332.63",
            "min": "314.52",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "472.34",
            "p50": "448.57",
            "p95": "431.74",
            "p99": "378.95",
            "min": "361.53",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "463.99",
            "p50": "455.34",
            "p95": "446.47",
            "p99": "432.75",
            "min": "423.60",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "120.48",
            "p50": "118.24",
            "p95": "115.63",
            "p99": "109.27",
            "min": "108.66",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "120.96",
            "p50": "118.82",
            "p95": "113.23",
            "p99": "108.53",
            "min": "107.94",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "119.90",
            "p50": "116.92",
            "p95": "111.80",
            "p99": "100.64",
            "min": "98.43",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "102.87",
            "p50": "101.31",
            "p95": "97.27",
            "p99": "94.57",
            "min": "94.06",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "85.37",
            "p50": "84.33",
            "p95": "83.31",
            "p99": "79.27",
            "min": "78.87",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "121.27",
            "p50": "117.30",
            "p95": "114.35",
            "p99": "109.03",
            "min": "108.13",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "115.18",
            "p50": "111.49",
            "p95": "106.39",
            "p99": "100.06",
            "min": "99.47",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "114.48",
            "p50": "111.02",
            "p95": "109.00",
            "p99": "106.76",
            "min": "106.50",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "114.71",
            "p50": "111.11",
            "p95": "106.69",
            "p99": "101.27",
            "min": "101.06",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1573.46",
            "p50": "1422.12",
            "p95": "792.11",
            "p99": "594.76",
            "min": "552.18",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1567.25",
            "p50": "1390.16",
            "p95": "742.14",
            "p99": "440.00",
            "min": "237.65",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.29",
            "p50": "151.89",
            "p95": "136.17",
            "p99": "126.87",
            "min": "125.43",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3969.84",
            "p50": "3629.52",
            "p95": "1363.79",
            "p99": "728.63",
            "min": "709.67",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "153.88",
            "p50": "150.94",
            "p95": "133.61",
            "p99": "106.07",
            "min": "98.70",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3938.89",
            "p50": "3592.02",
            "p95": "1589.07",
            "p99": "1099.65",
            "min": "1066.71",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "100.92",
            "p50": "98.83",
            "p95": "93.26",
            "p99": "83.64",
            "min": "82.05",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "175.22",
            "p50": "166.85",
            "p95": "162.28",
            "p99": "157.43",
            "min": "157.24",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "345.45",
            "p50": "249.73",
            "p95": "204.38",
            "p99": "179.12",
            "min": "177.99",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9482.39",
            "p50": "1585.07",
            "p95": "898.07",
            "p99": "691.53",
            "min": "632.11",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "337.98",
            "p50": "253.54",
            "p95": "207.88",
            "p99": "162.59",
            "min": "157.53",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "23678.58",
            "p50": "8449.56",
            "p95": "2332.27",
            "p99": "1761.64",
            "min": "1743.06",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "5920.31",
            "p50": "3132.75",
            "p95": "1569.88",
            "p99": "943.37",
            "min": "942.89",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "289.61",
            "p50": "230.45",
            "p95": "160.56",
            "p99": "141.50",
            "min": "137.02",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "159.73",
            "p50": "137.92",
            "p95": "115.78",
            "p99": "99.88",
            "min": "98.91",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "121.20",
            "p50": "117.61",
            "p95": "93.83",
            "p99": "88.01",
            "min": "87.89",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "127.54",
            "p50": "120.24",
            "p95": "103.42",
            "p99": "101.90",
            "min": "101.49",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "122.13",
            "p50": "118.43",
            "p95": "115.67",
            "p99": "105.54",
            "min": "103.34",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "157.70",
            "p50": "146.68",
            "p95": "140.12",
            "p99": "117.02",
            "min": "104.51",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "96.01",
            "p50": "94.01",
            "p95": "76.08",
            "p99": "73.86",
            "min": "73.73",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "131.73",
            "p50": "119.31",
            "p95": "112.26",
            "p99": "111.77",
            "min": "111.74",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1191.32",
            "p50": "1114.07",
            "p95": "383.57",
            "p99": "374.38",
            "min": "373.91",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "122.98",
            "p50": "119.84",
            "p95": "105.87",
            "p99": "102.36",
            "min": "102.26",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}