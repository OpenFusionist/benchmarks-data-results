{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "114.85",
            "p50": "109.04",
            "p95": "91.48",
            "p99": "83.83",
            "min": "83.23",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1096.84",
            "p50": "923.36",
            "p95": "664.88",
            "p99": "530.38",
            "min": "518.66",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "115.56",
            "p50": "109.27",
            "p95": "100.24",
            "p99": "96.65",
            "min": "96.48",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "986.92",
            "p50": "857.75",
            "p95": "592.96",
            "p99": "490.21",
            "min": "481.05",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "478.85",
            "p50": "429.93",
            "p95": "342.72",
            "p99": "310.04",
            "min": "309.41",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "460.78",
            "p50": "422.00",
            "p95": "352.56",
            "p99": "325.59",
            "min": "323.97",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "415.91",
            "p50": "384.32",
            "p95": "240.10",
            "p99": "229.23",
            "min": "227.58",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "428.20",
            "p50": "391.51",
            "p95": "341.71",
            "p99": "287.66",
            "min": "286.68",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "409.51",
            "p50": "377.14",
            "p95": "308.02",
            "p99": "289.36",
            "min": "285.64",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "707.63",
            "p50": "604.18",
            "p95": "468.55",
            "p99": "406.62",
            "min": "401.24",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "707.77",
            "p50": "609.09",
            "p95": "447.19",
            "p99": "392.75",
            "min": "388.32",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "659.00",
            "p50": "567.42",
            "p95": "428.64",
            "p99": "384.31",
            "min": "382.31",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "390.97",
            "p50": "362.46",
            "p95": "301.61",
            "p99": "282.84",
            "min": "282.36",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "422.35",
            "p50": "384.47",
            "p95": "328.90",
            "p99": "307.54",
            "min": "305.32",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8571.83",
            "p50": "3909.71",
            "p95": "2132.27",
            "p99": "1535.45",
            "min": "1478.88",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2875.16",
            "p50": "1440.76",
            "p95": "889.42",
            "p99": "1531.42",
            "min": "807.87",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "314.75",
            "p50": "283.49",
            "p95": "246.34",
            "p99": "243.99",
            "min": "227.39",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1420.81",
            "p50": "770.39",
            "p95": "322.82",
            "p99": "790.96",
            "min": "315.81",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7429.34",
            "p50": "3282.71",
            "p95": "1443.96",
            "p99": "3979.26",
            "min": "1376.57",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "817.17",
            "p50": "698.91",
            "p95": "509.34",
            "p99": "449.06",
            "min": "419.13",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "807.74",
            "p50": "713.32",
            "p95": "543.13",
            "p99": "440.21",
            "min": "429.37",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "941.85",
            "p50": "771.98",
            "p95": "513.79",
            "p99": "439.83",
            "min": "426.92",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2360.09",
            "p50": "1868.42",
            "p95": "941.30",
            "p99": "767.47",
            "min": "764.48",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2321.34",
            "p50": "1762.84",
            "p95": "867.14",
            "p99": "702.01",
            "min": "698.33",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "800.31",
            "p50": "711.95",
            "p95": "501.69",
            "p99": "449.19",
            "min": "439.50",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "167.42",
            "p50": "153.26",
            "p95": "141.34",
            "p99": "130.25",
            "min": "129.59",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "533.68",
            "p50": "472.38",
            "p95": "369.99",
            "p99": "331.81",
            "min": "330.70",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "167.29",
            "p50": "154.26",
            "p95": "142.24",
            "p99": "139.03",
            "min": "138.92",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "186.92",
            "p50": "170.94",
            "p95": "155.23",
            "p99": "148.53",
            "min": "147.69",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "31951.80",
            "p50": "7367.21",
            "p95": "2443.10",
            "p99": "1836.42",
            "min": "1788.14",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "401.41",
            "p50": "359.89",
            "p95": "293.04",
            "p99": "243.72",
            "min": "236.25",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "383.01",
            "p50": "347.20",
            "p95": "290.06",
            "p99": "276.33",
            "min": "276.07",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "379.43",
            "p50": "344.01",
            "p95": "276.42",
            "p99": "191.20",
            "min": "175.77",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "378.45",
            "p50": "344.42",
            "p95": "290.59",
            "p99": "262.91",
            "min": "260.35",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "15707.85",
            "p50": "4855.29",
            "p95": "2369.88",
            "p99": "1581.69",
            "min": "1460.36",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "16212.71",
            "p50": "5405.89",
            "p95": "2422.54",
            "p99": "1761.52",
            "min": "1591.41",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "15610.88",
            "p50": "4753.08",
            "p95": "2446.00",
            "p99": "1421.02",
            "min": "1419.23",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "15796.19",
            "p50": "4913.61",
            "p95": "2492.98",
            "p99": "1853.64",
            "min": "1501.89",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "15669.45",
            "p50": "4884.97",
            "p95": "2332.58",
            "p99": "1883.77",
            "min": "1850.01",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "16684.64",
            "p50": "5137.72",
            "p95": "2441.73",
            "p99": "2082.06",
            "min": "1916.25",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "702.63",
            "p50": "604.06",
            "p95": "446.20",
            "p99": "399.24",
            "min": "398.05",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "555.50",
            "p50": "471.36",
            "p95": "366.50",
            "p99": "345.94",
            "min": "345.80",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1389.26",
            "p50": "1146.33",
            "p95": "315.40",
            "p99": "256.11",
            "min": "255.15",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "18795.67",
            "p50": "8052.69",
            "p95": "2386.84",
            "p99": "852.30",
            "min": "227.36",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1351.18",
            "p50": "1179.24",
            "p95": "729.81",
            "p99": "637.58",
            "min": "623.16",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "54689.47",
            "p50": "9363.10",
            "p95": "2387.19",
            "p99": "1876.35",
            "min": "1805.71",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "11704.66",
            "p50": "6273.17",
            "p95": "2308.86",
            "p99": "1872.00",
            "min": "1816.30",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "591.21",
            "p50": "490.70",
            "p95": "387.40",
            "p99": "360.14",
            "min": "348.78",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "560.64",
            "p50": "499.08",
            "p95": "386.78",
            "p99": "353.57",
            "min": "346.95",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "645.48",
            "p50": "567.78",
            "p95": "418.56",
            "p99": "374.75",
            "min": "373.52",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "641.85",
            "p50": "577.84",
            "p95": "436.35",
            "p99": "394.66",
            "min": "384.68",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "646.41",
            "p50": "571.81",
            "p95": "456.15",
            "p99": "382.31",
            "min": "370.45",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "939.39",
            "p50": "812.95",
            "p95": "611.24",
            "p99": "456.99",
            "min": "443.95",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "702.80",
            "p50": "610.95",
            "p95": "448.91",
            "p99": "418.86",
            "min": "418.23",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "742.45",
            "p50": "637.66",
            "p95": "486.85",
            "p99": "434.09",
            "min": "422.36",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1589.62",
            "p50": "1385.49",
            "p95": "1027.43",
            "p99": "824.14",
            "min": "798.19",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "691.97",
            "p50": "589.92",
            "p95": "458.38",
            "p99": "400.63",
            "min": "392.34",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "140.67",
            "p50": "138.14",
            "p95": "125.41",
            "p99": "114.14",
            "min": "113.63",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "140.59",
            "p50": "138.14",
            "p95": "130.27",
            "p99": "122.56",
            "min": "121.86",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "140.53",
            "p50": "136.38",
            "p95": "128.42",
            "p99": "124.02",
            "min": "123.71",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "240.21",
            "p50": "233.95",
            "p95": "212.32",
            "p99": "185.51",
            "min": "176.85",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "190.02",
            "p50": "185.96",
            "p95": "167.75",
            "p99": "161.05",
            "min": "160.52",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "202.45",
            "p50": "197.05",
            "p95": "179.71",
            "p99": "172.03",
            "min": "171.71",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "184.27",
            "p50": "174.93",
            "p95": "160.52",
            "p99": "129.10",
            "min": "124.27",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "193.51",
            "p50": "182.10",
            "p95": "160.03",
            "p99": "116.99",
            "min": "111.07",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "214.04",
            "p50": "202.57",
            "p95": "176.84",
            "p99": "163.71",
            "min": "162.87",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "183.74",
            "p50": "174.46",
            "p95": "160.17",
            "p99": "103.67",
            "min": "99.72",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "210.24",
            "p50": "197.90",
            "p95": "180.22",
            "p99": "170.28",
            "min": "168.65",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "150.33",
            "p50": "143.70",
            "p95": "128.16",
            "p99": "121.80",
            "min": "121.20",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "231.99",
            "p50": "225.19",
            "p95": "201.63",
            "p99": "173.91",
            "min": "172.55",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "182.68",
            "p50": "174.64",
            "p95": "158.68",
            "p99": "151.34",
            "min": "151.13",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "101.51",
            "p50": "96.86",
            "p95": "91.70",
            "p99": "85.57",
            "min": "83.94",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "141.19",
            "p50": "136.30",
            "p95": "124.77",
            "p99": "126.98",
            "min": "119.33",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "449.43",
            "p50": "324.41",
            "p95": "260.48",
            "p99": "273.08",
            "min": "231.71",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "192.58",
            "p50": "150.35",
            "p95": "141.17",
            "p99": "162.89",
            "min": "140.49",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "132.87",
            "p50": "129.83",
            "p95": "116.38",
            "p99": "121.12",
            "min": "112.27",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1214.66",
            "p50": "1036.63",
            "p95": "735.69",
            "p99": "571.42",
            "min": "542.15",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1037.86",
            "p50": "1001.67",
            "p95": "744.27",
            "p99": "609.44",
            "min": "604.69",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1459.70",
            "p50": "1169.02",
            "p95": "782.48",
            "p99": "647.96",
            "min": "622.49",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1362.89",
            "p50": "1129.65",
            "p95": "712.62",
            "p99": "605.09",
            "min": "579.78",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1343.61",
            "p50": "1069.94",
            "p95": "752.55",
            "p99": "522.45",
            "min": "497.29",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1084.30",
            "p50": "1010.24",
            "p95": "692.84",
            "p99": "614.96",
            "min": "581.99",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "722.64",
            "p50": "522.38",
            "p95": "405.04",
            "p99": "315.56",
            "min": "314.13",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "717.12",
            "p50": "535.82",
            "p95": "436.15",
            "p99": "373.54",
            "min": "373.10",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "716.65",
            "p50": "540.75",
            "p95": "443.25",
            "p99": "345.50",
            "min": "327.42",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "714.48",
            "p50": "558.42",
            "p95": "453.20",
            "p99": "361.33",
            "min": "350.18",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "290.82",
            "p50": "281.10",
            "p95": "254.14",
            "p99": "229.67",
            "min": "229.13",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "631.40",
            "p50": "424.38",
            "p95": "342.03",
            "p99": "307.70",
            "min": "306.80",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "614.32",
            "p50": "446.16",
            "p95": "354.78",
            "p99": "283.61",
            "min": "276.53",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "631.47",
            "p50": "477.74",
            "p95": "375.35",
            "p99": "342.59",
            "min": "338.68",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "633.62",
            "p50": "485.28",
            "p95": "398.41",
            "p99": "347.35",
            "min": "346.21",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.12",
            "p50": "101.62",
            "p95": "95.03",
            "p99": "86.30",
            "min": "82.65",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "104.91",
            "p50": "102.21",
            "p95": "97.07",
            "p99": "90.84",
            "min": "89.61",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.37",
            "p50": "94.61",
            "p95": "87.69",
            "p99": "84.29",
            "min": "83.56",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "253.72",
            "p50": "238.98",
            "p95": "212.48",
            "p99": "182.51",
            "min": "173.51",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.37",
            "p50": "94.69",
            "p95": "88.71",
            "p99": "83.26",
            "min": "82.94",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "244.15",
            "p50": "231.89",
            "p95": "203.93",
            "p99": "181.72",
            "min": "180.89",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "210.55",
            "p50": "201.45",
            "p95": "184.14",
            "p99": "175.96",
            "min": "175.79",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "237.97",
            "p50": "233.87",
            "p95": "210.22",
            "p99": "186.20",
            "min": "179.05",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "553.60",
            "p50": "535.92",
            "p95": "427.85",
            "p99": "395.88",
            "min": "390.89",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7531.03",
            "p50": "2797.23",
            "p95": "1755.39",
            "p99": "1391.51",
            "min": "1304.23",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "522.01",
            "p50": "503.73",
            "p95": "387.49",
            "p99": "340.91",
            "min": "336.54",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "20431.45",
            "p50": "7305.97",
            "p95": "2327.27",
            "p99": "1485.02",
            "min": "1384.67",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4260.59",
            "p50": "2483.30",
            "p95": "1461.83",
            "p99": "1159.37",
            "min": "1123.28",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "223.68",
            "p50": "177.82",
            "p95": "154.88",
            "p99": "133.76",
            "min": "130.65",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "267.00",
            "p50": "260.82",
            "p95": "228.75",
            "p99": "198.33",
            "min": "194.09",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "148.95",
            "p50": "145.76",
            "p95": "135.33",
            "p99": "125.92",
            "min": "123.40",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "244.08",
            "p50": "238.62",
            "p95": "214.27",
            "p99": "192.26",
            "min": "190.11",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "192.35",
            "p50": "184.55",
            "p95": "161.64",
            "p99": "101.00",
            "min": "86.74",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "217.01",
            "p50": "210.44",
            "p95": "189.74",
            "p99": "181.70",
            "min": "181.36",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "211.54",
            "p50": "203.83",
            "p95": "179.92",
            "p99": "169.30",
            "min": "166.89",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "211.07",
            "p50": "205.42",
            "p95": "183.36",
            "p99": "97.67",
            "min": "88.50",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1240.20",
            "p50": "1108.52",
            "p95": "905.87",
            "p99": "664.98",
            "min": "664.96",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "184.19",
            "p50": "178.22",
            "p95": "159.79",
            "p99": "146.80",
            "min": "144.63",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "190.55",
            "p50": "187.39",
            "p95": "174.30",
            "p99": "168.00",
            "min": "167.85",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "191.06",
            "p50": "187.59",
            "p95": "173.54",
            "p99": "163.52",
            "min": "163.36",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "191.34",
            "p50": "187.94",
            "p95": "178.21",
            "p99": "167.06",
            "min": "165.39",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1129.48",
            "p50": "1089.94",
            "p95": "788.68",
            "p99": "687.24",
            "min": "658.45",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "635.44",
            "p50": "622.25",
            "p95": "491.41",
            "p99": "282.65",
            "min": "246.01",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "608.51",
            "p50": "596.91",
            "p95": "521.59",
            "p99": "332.24",
            "min": "268.13",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "649.12",
            "p50": "636.87",
            "p95": "541.75",
            "p99": "373.27",
            "min": "348.58",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "765.51",
            "p50": "746.66",
            "p95": "554.24",
            "p99": "450.63",
            "min": "430.29",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "901.64",
            "p50": "840.32",
            "p95": "681.17",
            "p99": "513.19",
            "min": "507.54",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "886.89",
            "p50": "860.28",
            "p95": "630.33",
            "p99": "476.40",
            "min": "458.48",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "884.88",
            "p50": "860.49",
            "p95": "534.96",
            "p99": "90.13",
            "min": "89.96",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "809.51",
            "p50": "790.40",
            "p95": "592.20",
            "p99": "539.28",
            "min": "535.71",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "687.68",
            "p50": "673.68",
            "p95": "582.40",
            "p99": "452.85",
            "min": "446.68",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "854.91",
            "p50": "825.69",
            "p95": "609.03",
            "p99": "516.00",
            "min": "513.05",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "11375.12",
            "p50": "6057.11",
            "p95": "2323.75",
            "p99": "1573.45",
            "min": "1405.11",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "3944.30",
            "p50": "3581.97",
            "p95": "1477.85",
            "p99": "2194.93",
            "min": "1252.97",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "437.68",
            "p50": "431.67",
            "p95": "373.43",
            "p99": "342.92",
            "min": "320.69",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "7326.80",
            "p50": "3725.98",
            "p95": "541.89",
            "p99": "3422.32",
            "min": "476.84",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7560.04",
            "p50": "4244.77",
            "p95": "2301.26",
            "p99": "4474.19",
            "min": "2146.26",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1514.08",
            "p50": "1378.85",
            "p95": "888.06",
            "p99": "593.63",
            "min": "550.32",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "14627.76",
            "p50": "1290.12",
            "p95": "1012.76",
            "p99": "708.25",
            "min": "645.08",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1688.27",
            "p50": "1561.95",
            "p95": "971.56",
            "p99": "718.55",
            "min": "582.63",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "3250.17",
            "p50": "3037.79",
            "p95": "1504.56",
            "p99": "1207.62",
            "min": "1044.80",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "3236.91",
            "p50": "3035.94",
            "p95": "1609.01",
            "p99": "979.41",
            "min": "974.18",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1471.67",
            "p50": "1365.77",
            "p95": "1076.33",
            "p99": "860.98",
            "min": "852.08",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "526.65",
            "p50": "498.86",
            "p95": "446.30",
            "p99": "385.52",
            "min": "376.03",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "731.26",
            "p50": "719.20",
            "p95": "600.71",
            "p99": "520.38",
            "min": "513.73",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "521.03",
            "p50": "502.68",
            "p95": "450.30",
            "p99": "375.66",
            "min": "365.52",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "545.51",
            "p50": "515.06",
            "p95": "432.40",
            "p99": "373.61",
            "min": "373.59",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "34899.99",
            "p50": "8369.81",
            "p95": "2458.47",
            "p99": "2281.17",
            "min": "2260.27",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "545.35",
            "p50": "538.14",
            "p95": "459.81",
            "p99": "388.04",
            "min": "385.78",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "529.63",
            "p50": "517.49",
            "p95": "464.61",
            "p99": "354.31",
            "min": "349.56",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "532.92",
            "p50": "520.56",
            "p95": "455.64",
            "p99": "419.63",
            "min": "419.37",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "539.69",
            "p50": "529.68",
            "p95": "465.78",
            "p99": "432.73",
            "min": "427.22",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "22292.62",
            "p50": "7767.27",
            "p95": "2394.66",
            "p99": "1654.43",
            "min": "1390.02",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "22228.71",
            "p50": "8101.43",
            "p95": "2369.00",
            "p99": "1837.21",
            "min": "1668.88",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "21152.74",
            "p50": "7106.88",
            "p95": "2355.13",
            "p99": "1601.67",
            "min": "1443.50",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "22230.28",
            "p50": "7715.37",
            "p95": "2386.66",
            "p99": "1966.78",
            "min": "1908.04",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "19967.55",
            "p50": "7225.24",
            "p95": "2371.34",
            "p99": "2250.96",
            "min": "2242.94",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "22539.57",
            "p50": "7735.29",
            "p95": "2480.89",
            "p99": "1409.39",
            "min": "1353.32",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "868.17",
            "p50": "827.67",
            "p95": "653.92",
            "p99": "201.06",
            "min": "90.87",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "632.95",
            "p50": "619.25",
            "p95": "513.74",
            "p99": "480.43",
            "min": "473.47",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1942.56",
            "p50": "1849.70",
            "p95": "1185.68",
            "p99": "785.07",
            "min": "675.99",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "15303.08",
            "p50": "8766.89",
            "p95": "2377.56",
            "p99": "2255.06",
            "min": "2235.08",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1855.22",
            "p50": "1777.26",
            "p95": "1130.10",
            "p99": "862.48",
            "min": "729.38",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "77742.44",
            "p50": "8897.70",
            "p95": "2358.01",
            "p99": "2224.41",
            "min": "2209.76",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13843.50",
            "p50": "8054.81",
            "p95": "2475.19",
            "p99": "2102.02",
            "min": "1876.62",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "689.61",
            "p50": "564.99",
            "p95": "504.21",
            "p99": "462.62",
            "min": "449.68",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "918.20",
            "p50": "894.68",
            "p95": "695.87",
            "p99": "613.62",
            "min": "613.51",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "806.28",
            "p50": "788.29",
            "p95": "630.54",
            "p99": "571.23",
            "min": "569.03",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1143.58",
            "p50": "1093.29",
            "p95": "810.57",
            "p99": "666.88",
            "min": "663.19",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "758.29",
            "p50": "745.72",
            "p95": "571.03",
            "p99": "483.05",
            "min": "473.46",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1077.93",
            "p50": "1040.97",
            "p95": "784.34",
            "p99": "590.42",
            "min": "577.86",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "836.28",
            "p50": "820.82",
            "p95": "625.81",
            "p99": "565.30",
            "min": "556.20",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "891.13",
            "p50": "872.11",
            "p95": "653.58",
            "p99": "516.97",
            "min": "512.01",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2039.78",
            "p50": "1842.93",
            "p95": "1549.24",
            "p99": "1352.70",
            "min": "1310.84",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "863.51",
            "p50": "815.18",
            "p95": "634.37",
            "p99": "486.52",
            "min": "460.72",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "120.58",
            "p50": "115.44",
            "p95": "99.15",
            "p99": "94.61",
            "min": "94.56",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "120.02",
            "p50": "116.37",
            "p95": "102.34",
            "p99": "96.21",
            "min": "95.43",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "120.94",
            "p50": "115.80",
            "p95": "100.02",
            "p99": "95.72",
            "min": "95.59",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "203.93",
            "p50": "188.77",
            "p95": "152.57",
            "p99": "141.22",
            "min": "140.16",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.68",
            "p50": "97.13",
            "p95": "84.00",
            "p99": "73.35",
            "min": "72.26",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "108.69",
            "p50": "102.17",
            "p95": "87.30",
            "p99": "83.33",
            "min": "83.10",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "140.62",
            "p50": "130.16",
            "p95": "105.63",
            "p99": "90.05",
            "min": "86.88",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "138.81",
            "p50": "129.85",
            "p95": "106.58",
            "p99": "100.54",
            "min": "100.35",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "179.40",
            "p50": "162.44",
            "p95": "128.05",
            "p99": "112.87",
            "min": "109.21",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "180.28",
            "p50": "163.91",
            "p95": "127.41",
            "p99": "104.86",
            "min": "101.16",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "178.08",
            "p50": "163.62",
            "p95": "126.35",
            "p99": "118.24",
            "min": "116.72",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "123.57",
            "p50": "116.13",
            "p95": "96.64",
            "p99": "92.85",
            "min": "92.75",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "200.05",
            "p50": "180.90",
            "p95": "140.81",
            "p99": "130.90",
            "min": "130.89",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "183.85",
            "p50": "168.47",
            "p95": "135.82",
            "p99": "122.00",
            "min": "121.93",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "74.79",
            "p50": "69.78",
            "p95": "63.26",
            "p99": "61.03",
            "min": "60.69",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "129.06",
            "p50": "119.39",
            "p95": "100.10",
            "p99": "107.46",
            "min": "95.83",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "199.97",
            "p50": "180.18",
            "p95": "145.22",
            "p99": "146.84",
            "min": "134.37",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "156.65",
            "p50": "133.01",
            "p95": "127.75",
            "p99": "139.87",
            "min": "127.22",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "125.25",
            "p50": "114.47",
            "p95": "96.49",
            "p99": "108.26",
            "min": "95.45",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1018.31",
            "p50": "668.42",
            "p95": "370.54",
            "p99": "280.25",
            "min": "273.53",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "997.15",
            "p50": "647.88",
            "p95": "340.19",
            "p99": "268.66",
            "min": "255.20",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1100.59",
            "p50": "697.87",
            "p95": "309.24",
            "p99": "273.91",
            "min": "266.68",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1044.31",
            "p50": "669.37",
            "p95": "321.02",
            "p99": "260.55",
            "min": "253.10",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "983.20",
            "p50": "682.26",
            "p95": "348.42",
            "p99": "258.03",
            "min": "257.35",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "991.51",
            "p50": "667.95",
            "p95": "334.04",
            "p99": "279.01",
            "min": "278.87",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "326.36",
            "p50": "283.52",
            "p95": "186.53",
            "p99": "168.09",
            "min": "166.31",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "319.42",
            "p50": "276.74",
            "p95": "201.97",
            "p99": "176.29",
            "min": "174.16",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "322.72",
            "p50": "280.78",
            "p95": "191.56",
            "p99": "175.94",
            "min": "175.20",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "351.43",
            "p50": "308.67",
            "p95": "199.68",
            "p99": "184.93",
            "min": "184.68",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "278.36",
            "p50": "242.50",
            "p95": "182.26",
            "p99": "156.66",
            "min": "156.16",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "272.62",
            "p50": "239.75",
            "p95": "173.78",
            "p99": "158.24",
            "min": "156.23",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "272.00",
            "p50": "237.79",
            "p95": "174.51",
            "p99": "161.56",
            "min": "161.07",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "281.12",
            "p50": "239.99",
            "p95": "179.19",
            "p99": "161.81",
            "min": "161.05",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "273.83",
            "p50": "244.54",
            "p95": "175.00",
            "p99": "158.85",
            "min": "156.62",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "103.93",
            "p50": "97.29",
            "p95": "85.62",
            "p99": "79.77",
            "min": "79.69",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "104.04",
            "p50": "98.01",
            "p95": "84.65",
            "p99": "79.20",
            "min": "79.05",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "95.73",
            "p50": "90.57",
            "p95": "78.73",
            "p99": "76.26",
            "min": "75.67",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "245.97",
            "p50": "216.34",
            "p95": "162.92",
            "p99": "149.26",
            "min": "149.05",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "95.67",
            "p50": "90.47",
            "p95": "78.75",
            "p99": "75.38",
            "min": "75.00",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "237.27",
            "p50": "211.53",
            "p95": "161.25",
            "p99": "142.88",
            "min": "140.20",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "176.28",
            "p50": "161.32",
            "p95": "126.31",
            "p99": "92.56",
            "min": "87.06",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "147.91",
            "p50": "135.49",
            "p95": "109.84",
            "p99": "102.78",
            "min": "102.71",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "430.77",
            "p50": "384.75",
            "p95": "245.39",
            "p99": "217.07",
            "min": "216.09",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4849.81",
            "p50": "2104.71",
            "p95": "637.53",
            "p99": "518.02",
            "min": "513.37",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "434.36",
            "p50": "376.29",
            "p95": "255.60",
            "p99": "204.04",
            "min": "185.44",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "13602.24",
            "p50": "2940.10",
            "p95": "1033.77",
            "p99": "783.84",
            "min": "770.10",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3166.23",
            "p50": "1785.27",
            "p95": "582.03",
            "p99": "540.49",
            "min": "539.67",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "204.82",
            "p50": "188.01",
            "p95": "157.70",
            "p99": "143.81",
            "min": "142.53",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "228.02",
            "p50": "210.88",
            "p95": "162.67",
            "p99": "143.01",
            "min": "142.29",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "125.23",
            "p50": "118.06",
            "p95": "101.05",
            "p99": "97.62",
            "min": "97.44",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "202.86",
            "p50": "181.71",
            "p95": "137.57",
            "p99": "98.14",
            "min": "79.05",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "138.46",
            "p50": "129.71",
            "p95": "108.46",
            "p99": "102.08",
            "min": "101.68",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "173.40",
            "p50": "158.56",
            "p95": "125.54",
            "p99": "115.06",
            "min": "112.00",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "174.39",
            "p50": "160.51",
            "p95": "124.78",
            "p99": "118.27",
            "min": "118.27",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "181.28",
            "p50": "165.02",
            "p95": "129.94",
            "p99": "123.33",
            "min": "122.85",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "304.78",
            "p50": "251.94",
            "p95": "56.62",
            "p99": "50.90",
            "min": "50.81",
            "n": "104",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "144.07",
            "p50": "135.40",
            "p95": "111.44",
            "p99": "95.20",
            "min": "95.12",
            "n": "104",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "86.66",
            "p50": "82.44",
            "p95": "75.08",
            "p99": "72.11",
            "min": "71.74",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "88.02",
            "p50": "83.61",
            "p95": "80.97",
            "p99": "79.03",
            "min": "78.98",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "87.08",
            "p50": "83.24",
            "p95": "81.62",
            "p99": "72.57",
            "min": "71.56",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "239.85",
            "p50": "178.55",
            "p95": "172.46",
            "p99": "163.37",
            "min": "161.39",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "96.54",
            "p50": "94.23",
            "p95": "87.96",
            "p99": "83.44",
            "min": "83.14",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.91",
            "p50": "109.25",
            "p95": "105.30",
            "p99": "103.65",
            "min": "103.57",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "121.81",
            "p50": "118.00",
            "p95": "108.28",
            "p99": "97.06",
            "min": "96.66",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "123.00",
            "p50": "118.88",
            "p95": "114.74",
            "p99": "112.97",
            "min": "112.97",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "93.63",
            "p50": "91.65",
            "p95": "70.81",
            "p99": "69.39",
            "min": "69.12",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "99.25",
            "p50": "98.04",
            "p95": "94.02",
            "p99": "87.55",
            "min": "87.02",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "99.71",
            "p50": "98.17",
            "p95": "95.80",
            "p99": "87.33",
            "min": "85.88",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "123.08",
            "p50": "119.06",
            "p95": "116.17",
            "p99": "110.05",
            "min": "109.82",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "134.69",
            "p50": "128.92",
            "p95": "120.10",
            "p99": "116.52",
            "min": "116.43",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "111.97",
            "p50": "110.59",
            "p95": "98.55",
            "p99": "93.49",
            "min": "92.94",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "88.36",
            "p50": "83.08",
            "p95": "77.87",
            "p99": "71.39",
            "min": "70.82",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "100.05",
            "p50": "99.42",
            "p95": "93.71",
            "p99": "94.40",
            "min": "91.37",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "74.79",
            "p50": "73.53",
            "p95": "71.41",
            "p99": "70.90",
            "min": "69.99",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "155.91",
            "p50": "124.80",
            "p95": "117.02",
            "p99": "133.22",
            "min": "116.10",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "107.50",
            "p50": "105.78",
            "p95": "103.65",
            "p99": "104.32",
            "min": "101.92",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "418.95",
            "p50": "411.22",
            "p95": "380.24",
            "p99": "326.61",
            "min": "324.34",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "476.40",
            "p50": "468.54",
            "p95": "446.04",
            "p99": "405.34",
            "min": "399.68",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "448.53",
            "p50": "438.26",
            "p95": "415.16",
            "p99": "379.59",
            "min": "370.91",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "456.74",
            "p50": "443.80",
            "p95": "423.92",
            "p99": "340.00",
            "min": "338.37",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "458.71",
            "p50": "446.00",
            "p95": "428.56",
            "p99": "378.46",
            "min": "367.67",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "459.98",
            "p50": "454.17",
            "p95": "424.91",
            "p99": "373.16",
            "min": "358.95",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "120.04",
            "p50": "117.90",
            "p95": "114.98",
            "p99": "107.10",
            "min": "106.67",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "121.23",
            "p50": "118.59",
            "p95": "114.86",
            "p99": "110.85",
            "min": "110.73",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "119.69",
            "p50": "116.61",
            "p95": "113.25",
            "p99": "108.28",
            "min": "107.85",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "102.95",
            "p50": "100.99",
            "p95": "98.55",
            "p99": "94.00",
            "min": "93.48",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "85.49",
            "p50": "84.20",
            "p95": "82.90",
            "p99": "81.78",
            "min": "81.65",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "118.73",
            "p50": "116.29",
            "p95": "112.66",
            "p99": "107.68",
            "min": "107.17",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "113.07",
            "p50": "110.35",
            "p95": "105.20",
            "p99": "99.09",
            "min": "98.51",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "112.42",
            "p50": "109.69",
            "p95": "106.79",
            "p99": "96.32",
            "min": "95.73",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "112.42",
            "p50": "109.48",
            "p95": "107.83",
            "p99": "106.89",
            "min": "106.73",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1588.87",
            "p50": "1425.01",
            "p95": "847.61",
            "p99": "537.76",
            "min": "509.21",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1629.80",
            "p50": "1437.24",
            "p95": "688.54",
            "p99": "344.77",
            "min": "262.85",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.52",
            "p50": "151.89",
            "p95": "136.09",
            "p99": "115.74",
            "min": "109.17",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3911.01",
            "p50": "3513.54",
            "p95": "1249.58",
            "p99": "842.81",
            "min": "838.08",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "154.06",
            "p50": "151.24",
            "p95": "134.75",
            "p99": "100.27",
            "min": "93.95",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3904.13",
            "p50": "3535.87",
            "p95": "1677.86",
            "p99": "1139.45",
            "min": "879.26",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "100.18",
            "p50": "98.33",
            "p95": "90.96",
            "p99": "88.59",
            "min": "88.38",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "172.52",
            "p50": "169.43",
            "p95": "160.68",
            "p99": "154.95",
            "min": "154.85",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "348.74",
            "p50": "249.49",
            "p95": "203.79",
            "p99": "186.76",
            "min": "183.13",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "10415.22",
            "p50": "1502.51",
            "p95": "848.68",
            "p99": "516.28",
            "min": "448.66",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "339.67",
            "p50": "253.78",
            "p95": "200.33",
            "p99": "171.94",
            "min": "159.56",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "24249.85",
            "p50": "8515.65",
            "p95": "2414.31",
            "p99": "1986.12",
            "min": "1736.39",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6766.97",
            "p50": "3160.23",
            "p95": "1757.82",
            "p99": "897.91",
            "min": "876.98",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "297.36",
            "p50": "223.58",
            "p95": "167.12",
            "p99": "135.74",
            "min": "132.80",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "153.47",
            "p50": "130.91",
            "p95": "109.83",
            "p99": "92.68",
            "min": "87.57",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "121.25",
            "p50": "116.87",
            "p95": "89.47",
            "p99": "79.86",
            "min": "78.75",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "128.13",
            "p50": "119.27",
            "p95": "101.72",
            "p99": "99.65",
            "min": "99.09",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "122.71",
            "p50": "117.24",
            "p95": "114.99",
            "p99": "114.34",
            "min": "114.33",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "159.83",
            "p50": "146.41",
            "p95": "142.20",
            "p99": "135.91",
            "min": "135.17",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "94.56",
            "p50": "92.90",
            "p95": "73.04",
            "p99": "71.41",
            "min": "71.40",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "124.67",
            "p50": "116.81",
            "p95": "108.61",
            "p99": "104.02",
            "min": "103.13",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1190.07",
            "p50": "1079.75",
            "p95": "381.88",
            "p99": "363.50",
            "min": "360.26",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "122.78",
            "p50": "119.17",
            "p95": "104.44",
            "p99": "99.04",
            "min": "98.68",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}