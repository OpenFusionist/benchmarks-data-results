{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "111.84",
            "p50": "108.21",
            "p95": "98.12",
            "p99": "92.12",
            "min": "91.49",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1085.28",
            "p50": "924.16",
            "p95": "628.80",
            "p99": "557.27",
            "min": "551.76",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "113.70",
            "p50": "107.74",
            "p95": "99.40",
            "p99": "95.77",
            "min": "95.63",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "753.44",
            "p50": "665.05",
            "p95": "407.67",
            "p99": "253.13",
            "min": "253.00",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "399.01",
            "p50": "366.52",
            "p95": "288.91",
            "p99": "218.03",
            "min": "212.20",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "426.62",
            "p50": "398.69",
            "p95": "316.50",
            "p99": "273.67",
            "min": "269.22",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "292.67",
            "p50": "273.89",
            "p95": "192.15",
            "p99": "188.34",
            "min": "187.75",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "182.15",
            "p50": "172.25",
            "p95": "154.10",
            "p99": "150.84",
            "min": "150.71",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "253.12",
            "p50": "235.48",
            "p95": "208.24",
            "p99": "193.17",
            "min": "192.70",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "261.35",
            "p50": "243.08",
            "p95": "218.97",
            "p99": "199.11",
            "min": "198.18",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "259.29",
            "p50": "238.85",
            "p95": "216.80",
            "p99": "196.05",
            "min": "195.20",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "200.19",
            "p50": "191.33",
            "p95": "175.97",
            "p99": "163.97",
            "min": "163.04",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "335.29",
            "p50": "310.34",
            "p95": "258.96",
            "p99": "222.81",
            "min": "214.32",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "297.24",
            "p50": "276.42",
            "p95": "234.22",
            "p99": "223.39",
            "min": "223.19",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8523.38",
            "p50": "3598.05",
            "p95": "2115.37",
            "p99": "1563.92",
            "min": "1563.68",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2868.19",
            "p50": "1730.51",
            "p95": "861.99",
            "p99": "1523.93",
            "min": "800.10",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "321.02",
            "p50": "286.49",
            "p95": "255.66",
            "p99": "251.09",
            "min": "234.68",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1442.14",
            "p50": "771.83",
            "p95": "326.25",
            "p99": "800.29",
            "min": "316.08",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7466.60",
            "p50": "3737.02",
            "p95": "1400.52",
            "p99": "3997.66",
            "min": "1380.74",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "812.53",
            "p50": "698.67",
            "p95": "500.04",
            "p99": "438.74",
            "min": "431.83",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "811.04",
            "p50": "710.72",
            "p95": "541.27",
            "p99": "462.82",
            "min": "440.36",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "935.93",
            "p50": "793.86",
            "p95": "550.92",
            "p99": "458.77",
            "min": "452.02",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2346.15",
            "p50": "1831.05",
            "p95": "933.66",
            "p99": "782.43",
            "min": "782.29",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2420.87",
            "p50": "1820.69",
            "p95": "910.58",
            "p99": "776.10",
            "min": "773.66",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "797.13",
            "p50": "722.95",
            "p95": "499.37",
            "p99": "427.81",
            "min": "427.52",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "166.48",
            "p50": "154.60",
            "p95": "146.11",
            "p99": "138.79",
            "min": "138.70",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "546.15",
            "p50": "486.24",
            "p95": "366.48",
            "p99": "161.53",
            "min": "113.29",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "168.57",
            "p50": "155.26",
            "p95": "143.56",
            "p99": "133.98",
            "min": "133.26",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "186.27",
            "p50": "172.92",
            "p95": "154.69",
            "p99": "146.45",
            "min": "145.55",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "32612.08",
            "p50": "7945.97",
            "p95": "2305.07",
            "p99": "908.55",
            "min": "565.16",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "420.33",
            "p50": "371.99",
            "p95": "300.77",
            "p99": "285.63",
            "min": "283.58",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "396.77",
            "p50": "349.79",
            "p95": "294.56",
            "p99": "202.44",
            "min": "186.42",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "397.94",
            "p50": "351.67",
            "p95": "302.77",
            "p99": "292.87",
            "min": "292.09",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "405.43",
            "p50": "348.78",
            "p95": "293.11",
            "p99": "268.99",
            "min": "267.66",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "16595.09",
            "p50": "5401.11",
            "p95": "2383.64",
            "p99": "1779.42",
            "min": "1468.45",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "16569.09",
            "p50": "6013.84",
            "p95": "2403.37",
            "p99": "1796.95",
            "min": "1425.88",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "16279.21",
            "p50": "5130.54",
            "p95": "2303.78",
            "p99": "1615.65",
            "min": "1540.23",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "16688.20",
            "p50": "5464.32",
            "p95": "2458.66",
            "p99": "1400.55",
            "min": "1382.51",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "15922.62",
            "p50": "5148.38",
            "p95": "2302.66",
            "p99": "1931.04",
            "min": "1922.75",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "17080.81",
            "p50": "5225.43",
            "p95": "2429.25",
            "p99": "2134.82",
            "min": "2018.27",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "261.31",
            "p50": "242.09",
            "p95": "214.83",
            "p99": "199.47",
            "min": "199.21",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "515.56",
            "p50": "476.82",
            "p95": "365.85",
            "p99": "332.85",
            "min": "325.26",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1615.08",
            "p50": "1323.91",
            "p95": "349.59",
            "p99": "282.32",
            "min": "281.17",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "20723.15",
            "p50": "4712.55",
            "p95": "187.85",
            "p99": "161.89",
            "min": "161.34",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1391.53",
            "p50": "1197.48",
            "p95": "748.96",
            "p99": "556.79",
            "min": "531.55",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "54433.74",
            "p50": "9122.04",
            "p95": "2332.41",
            "p99": "600.52",
            "min": "418.96",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13549.96",
            "p50": "5956.38",
            "p95": "180.47",
            "p99": "165.20",
            "min": "163.07",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "555.56",
            "p50": "492.08",
            "p95": "385.57",
            "p99": "353.92",
            "min": "347.23",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "542.18",
            "p50": "494.50",
            "p95": "395.96",
            "p99": "340.82",
            "min": "340.44",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "198.64",
            "p50": "189.71",
            "p95": "170.46",
            "p99": "163.91",
            "min": "163.18",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "382.39",
            "p50": "359.05",
            "p95": "292.82",
            "p99": "244.72",
            "min": "234.49",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "199.83",
            "p50": "189.29",
            "p95": "171.01",
            "p99": "161.36",
            "min": "160.40",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "336.94",
            "p50": "313.31",
            "p95": "270.05",
            "p99": "245.36",
            "min": "244.55",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "258.03",
            "p50": "243.59",
            "p95": "218.52",
            "p99": "201.46",
            "min": "200.30",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "566.05",
            "p50": "512.84",
            "p95": "402.51",
            "p99": "358.36",
            "min": "345.37",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1453.04",
            "p50": "1236.78",
            "p95": "927.99",
            "p99": "790.56",
            "min": "763.80",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "287.36",
            "p50": "268.42",
            "p95": "230.03",
            "p99": "216.35",
            "min": "215.36",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "140.51",
            "p50": "137.79",
            "p95": "127.72",
            "p99": "117.12",
            "min": "115.33",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "140.61",
            "p50": "136.44",
            "p95": "129.59",
            "p99": "124.55",
            "min": "124.32",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "140.41",
            "p50": "136.02",
            "p95": "128.00",
            "p99": "124.80",
            "min": "124.58",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "240.89",
            "p50": "233.00",
            "p95": "205.31",
            "p99": "186.93",
            "min": "185.69",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "191.27",
            "p50": "186.61",
            "p95": "171.81",
            "p99": "156.94",
            "min": "156.19",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "203.77",
            "p50": "198.01",
            "p95": "175.30",
            "p99": "165.28",
            "min": "165.17",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "183.32",
            "p50": "174.94",
            "p95": "159.65",
            "p99": "99.96",
            "min": "92.96",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "194.14",
            "p50": "181.63",
            "p95": "161.01",
            "p99": "72.48",
            "min": "64.08",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "211.97",
            "p50": "201.15",
            "p95": "178.93",
            "p99": "151.47",
            "min": "144.62",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "182.21",
            "p50": "175.35",
            "p95": "160.31",
            "p99": "145.49",
            "min": "144.14",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "208.86",
            "p50": "197.02",
            "p95": "179.09",
            "p99": "116.56",
            "min": "105.93",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "148.77",
            "p50": "142.72",
            "p95": "135.10",
            "p99": "132.63",
            "min": "132.28",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "231.09",
            "p50": "223.55",
            "p95": "198.61",
            "p99": "129.58",
            "min": "104.65",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "183.80",
            "p50": "173.75",
            "p95": "159.19",
            "p99": "145.58",
            "min": "144.32",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "101.48",
            "p50": "96.82",
            "p95": "90.32",
            "p99": "87.89",
            "min": "87.86",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "140.48",
            "p50": "135.23",
            "p95": "129.06",
            "p99": "131.90",
            "min": "127.28",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "452.23",
            "p50": "321.43",
            "p95": "247.93",
            "p99": "247.84",
            "min": "199.89",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "192.94",
            "p50": "150.78",
            "p95": "136.91",
            "p99": "153.82",
            "min": "124.30",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "134.48",
            "p50": "129.69",
            "p95": "119.10",
            "p99": "121.71",
            "min": "112.08",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1208.16",
            "p50": "1045.58",
            "p95": "736.54",
            "p99": "596.43",
            "min": "588.54",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1036.56",
            "p50": "1002.99",
            "p95": "723.45",
            "p99": "572.55",
            "min": "570.67",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1461.63",
            "p50": "1227.56",
            "p95": "845.39",
            "p99": "685.81",
            "min": "661.14",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1361.91",
            "p50": "1130.98",
            "p95": "784.72",
            "p99": "523.21",
            "min": "437.81",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1333.81",
            "p50": "1095.14",
            "p95": "751.32",
            "p99": "590.09",
            "min": "503.95",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1078.86",
            "p50": "1031.58",
            "p95": "712.30",
            "p99": "554.30",
            "min": "539.40",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "711.18",
            "p50": "540.21",
            "p95": "427.09",
            "p99": "396.54",
            "min": "394.62",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "714.77",
            "p50": "536.50",
            "p95": "418.43",
            "p99": "338.86",
            "min": "325.98",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "741.09",
            "p50": "552.30",
            "p95": "428.77",
            "p99": "345.04",
            "min": "335.25",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "737.70",
            "p50": "560.54",
            "p95": "451.32",
            "p99": "355.54",
            "min": "350.83",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "293.21",
            "p50": "281.91",
            "p95": "248.32",
            "p99": "234.55",
            "min": "233.22",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "604.38",
            "p50": "421.19",
            "p95": "317.54",
            "p99": "293.41",
            "min": "290.84",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "610.19",
            "p50": "455.79",
            "p95": "367.52",
            "p99": "333.79",
            "min": "331.62",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "636.25",
            "p50": "483.18",
            "p95": "387.26",
            "p99": "362.18",
            "min": "361.86",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "641.64",
            "p50": "502.95",
            "p95": "394.10",
            "p99": "347.75",
            "min": "346.53",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.57",
            "p50": "101.93",
            "p95": "96.02",
            "p99": "92.49",
            "min": "91.48",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.81",
            "p50": "101.92",
            "p95": "96.32",
            "p99": "90.24",
            "min": "86.56",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.87",
            "p50": "94.48",
            "p95": "89.08",
            "p99": "84.60",
            "min": "83.94",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "251.44",
            "p50": "241.23",
            "p95": "214.68",
            "p99": "193.21",
            "min": "187.34",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.46",
            "p50": "94.57",
            "p95": "89.17",
            "p99": "85.00",
            "min": "84.54",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "244.64",
            "p50": "231.33",
            "p95": "207.05",
            "p99": "195.52",
            "min": "194.62",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "212.99",
            "p50": "201.45",
            "p95": "180.04",
            "p99": "142.11",
            "min": "134.81",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "237.70",
            "p50": "232.10",
            "p95": "211.48",
            "p99": "199.38",
            "min": "195.76",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "557.36",
            "p50": "540.92",
            "p95": "457.60",
            "p99": "379.31",
            "min": "352.12",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7189.36",
            "p50": "2753.11",
            "p95": "1700.20",
            "p99": "1387.57",
            "min": "1370.36",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "523.98",
            "p50": "502.33",
            "p95": "389.41",
            "p99": "302.92",
            "min": "287.66",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "21285.23",
            "p50": "6847.37",
            "p95": "2396.61",
            "p99": "1990.00",
            "min": "1809.71",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4188.71",
            "p50": "2605.31",
            "p95": "1474.83",
            "p99": "1248.11",
            "min": "1235.61",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "239.30",
            "p50": "183.24",
            "p95": "157.34",
            "p99": "144.53",
            "min": "140.18",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "268.55",
            "p50": "263.51",
            "p95": "233.34",
            "p99": "206.20",
            "min": "200.72",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "149.91",
            "p50": "145.13",
            "p95": "134.26",
            "p99": "113.98",
            "min": "109.12",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "244.60",
            "p50": "236.92",
            "p95": "215.61",
            "p99": "201.84",
            "min": "200.09",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "194.08",
            "p50": "184.98",
            "p95": "157.47",
            "p99": "97.81",
            "min": "88.22",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "216.16",
            "p50": "210.36",
            "p95": "193.32",
            "p99": "179.87",
            "min": "177.90",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "211.56",
            "p50": "203.38",
            "p95": "182.25",
            "p99": "173.56",
            "min": "173.25",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "210.95",
            "p50": "203.17",
            "p95": "187.04",
            "p99": "168.60",
            "min": "164.11",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1227.66",
            "p50": "1112.09",
            "p95": "958.84",
            "p99": "772.87",
            "min": "747.44",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "185.14",
            "p50": "179.31",
            "p95": "163.11",
            "p99": "87.99",
            "min": "59.82",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "189.96",
            "p50": "186.77",
            "p95": "176.37",
            "p99": "156.36",
            "min": "155.41",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "188.10",
            "p50": "185.77",
            "p95": "176.12",
            "p99": "168.75",
            "min": "168.18",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "190.04",
            "p50": "186.59",
            "p95": "175.99",
            "p99": "168.53",
            "min": "167.95",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1117.63",
            "p50": "1087.87",
            "p95": "678.67",
            "p99": "572.99",
            "min": "567.75",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "633.57",
            "p50": "619.98",
            "p95": "460.19",
            "p99": "431.11",
            "min": "427.12",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "609.84",
            "p50": "599.34",
            "p95": "516.28",
            "p99": "415.72",
            "min": "404.16",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "648.02",
            "p50": "636.74",
            "p95": "556.14",
            "p99": "434.09",
            "min": "425.34",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "764.94",
            "p50": "749.79",
            "p95": "533.31",
            "p99": "436.53",
            "min": "427.28",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "913.85",
            "p50": "888.06",
            "p95": "667.02",
            "p99": "539.68",
            "min": "525.22",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "884.53",
            "p50": "864.18",
            "p95": "566.05",
            "p99": "493.46",
            "min": "493.21",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "885.18",
            "p50": "841.59",
            "p95": "673.26",
            "p99": "555.48",
            "min": "542.88",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "807.70",
            "p50": "792.93",
            "p95": "557.02",
            "p99": "484.65",
            "min": "484.02",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "688.53",
            "p50": "677.39",
            "p95": "531.04",
            "p99": "434.09",
            "min": "428.02",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "850.55",
            "p50": "834.15",
            "p95": "637.88",
            "p99": "541.03",
            "min": "538.19",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "11728.49",
            "p50": "5412.52",
            "p95": "2385.59",
            "p99": "2219.02",
            "min": "2206.90",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "4056.94",
            "p50": "3677.01",
            "p95": "1698.47",
            "p99": "2359.89",
            "min": "1446.09",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "456.85",
            "p50": "447.86",
            "p95": "384.41",
            "p99": "355.13",
            "min": "331.27",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "7318.74",
            "p50": "3915.26",
            "p95": "547.98",
            "p99": "3412.74",
            "min": "466.11",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7237.60",
            "p50": "4307.67",
            "p95": "2273.69",
            "p99": "3951.86",
            "min": "1473.14",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1537.79",
            "p50": "1402.25",
            "p95": "916.92",
            "p99": "732.24",
            "min": "658.68",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "14519.39",
            "p50": "1296.40",
            "p95": "951.87",
            "p99": "850.59",
            "min": "837.85",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1723.79",
            "p50": "1598.46",
            "p95": "1083.22",
            "p99": "772.01",
            "min": "706.76",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "3355.37",
            "p50": "3178.75",
            "p95": "1448.92",
            "p99": "1125.11",
            "min": "1072.48",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "3349.90",
            "p50": "3152.65",
            "p95": "1701.51",
            "p99": "1055.70",
            "min": "1050.43",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1474.58",
            "p50": "1371.50",
            "p95": "1065.21",
            "p99": "831.33",
            "min": "778.00",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "459.35",
            "p50": "442.39",
            "p95": "381.49",
            "p99": "343.67",
            "min": "342.24",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "760.08",
            "p50": "746.48",
            "p95": "601.16",
            "p99": "516.62",
            "min": "516.00",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "462.37",
            "p50": "444.26",
            "p95": "377.58",
            "p99": "349.03",
            "min": "347.35",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "392.38",
            "p50": "375.16",
            "p95": "330.51",
            "p99": "313.91",
            "min": "313.74",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "32407.45",
            "p50": "8475.00",
            "p95": "2426.70",
            "p99": "1702.60",
            "min": "1392.03",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "566.98",
            "p50": "557.58",
            "p95": "491.20",
            "p99": "447.90",
            "min": "447.57",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "547.13",
            "p50": "537.62",
            "p95": "478.27",
            "p99": "413.91",
            "min": "404.75",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "548.43",
            "p50": "538.79",
            "p95": "469.21",
            "p99": "430.99",
            "min": "430.85",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "559.66",
            "p50": "549.59",
            "p95": "491.63",
            "p99": "441.63",
            "min": "437.12",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "23416.32",
            "p50": "7676.75",
            "p95": "2501.12",
            "p99": "2375.86",
            "min": "2339.49",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "23344.69",
            "p50": "8214.78",
            "p95": "2324.60",
            "p99": "2182.40",
            "min": "2179.16",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "22362.85",
            "p50": "7568.48",
            "p95": "2322.96",
            "p99": "1907.15",
            "min": "1783.96",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "23033.73",
            "p50": "8684.92",
            "p95": "2447.39",
            "p99": "2264.56",
            "min": "2221.88",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "21468.20",
            "p50": "7480.06",
            "p95": "2374.46",
            "p99": "2251.20",
            "min": "2249.38",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "23501.60",
            "p50": "8004.85",
            "p95": "2345.20",
            "p99": "2061.22",
            "min": "1893.69",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "896.69",
            "p50": "867.57",
            "p95": "590.02",
            "p99": "475.62",
            "min": "466.95",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "634.67",
            "p50": "623.83",
            "p95": "531.64",
            "p99": "453.59",
            "min": "452.28",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1668.85",
            "p50": "1607.13",
            "p95": "989.88",
            "p99": "628.35",
            "min": "574.15",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "14389.99",
            "p50": "9063.08",
            "p95": "2428.58",
            "p99": "1896.55",
            "min": "1490.14",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1639.17",
            "p50": "1551.98",
            "p95": "952.93",
            "p99": "636.79",
            "min": "565.32",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "74182.16",
            "p50": "9184.42",
            "p95": "2435.18",
            "p99": "2257.08",
            "min": "2250.64",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14733.09",
            "p50": "8176.06",
            "p95": "2376.82",
            "p99": "2092.73",
            "min": "1933.38",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "668.59",
            "p50": "557.89",
            "p95": "480.23",
            "p99": "459.01",
            "min": "456.06",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "924.31",
            "p50": "905.34",
            "p95": "724.20",
            "p99": "582.28",
            "min": "557.92",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "809.54",
            "p50": "790.55",
            "p95": "579.98",
            "p99": "428.61",
            "min": "423.65",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1142.96",
            "p50": "1114.26",
            "p95": "822.34",
            "p99": "631.15",
            "min": "617.90",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "763.17",
            "p50": "748.06",
            "p95": "608.76",
            "p99": "470.51",
            "min": "460.22",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1079.63",
            "p50": "1054.52",
            "p95": "721.88",
            "p99": "597.87",
            "min": "597.61",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "839.68",
            "p50": "818.35",
            "p95": "593.57",
            "p99": "502.00",
            "min": "496.28",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "921.28",
            "p50": "898.02",
            "p95": "590.36",
            "p99": "484.04",
            "min": "467.90",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2043.94",
            "p50": "1806.53",
            "p95": "1540.00",
            "p99": "1178.56",
            "min": "1164.50",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "846.23",
            "p50": "821.37",
            "p95": "653.78",
            "p99": "566.13",
            "min": "556.38",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "122.20",
            "p50": "116.18",
            "p95": "101.80",
            "p99": "94.91",
            "min": "94.75",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "122.11",
            "p50": "117.02",
            "p95": "100.42",
            "p99": "95.97",
            "min": "95.83",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "121.57",
            "p50": "116.48",
            "p95": "101.24",
            "p99": "95.52",
            "min": "95.49",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "207.73",
            "p50": "190.34",
            "p95": "155.93",
            "p99": "146.95",
            "min": "144.50",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.25",
            "p50": "97.63",
            "p95": "85.74",
            "p99": "79.82",
            "min": "79.23",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "107.82",
            "p50": "100.91",
            "p95": "89.58",
            "p99": "80.37",
            "min": "78.53",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "135.09",
            "p50": "125.73",
            "p95": "102.50",
            "p99": "72.01",
            "min": "71.19",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "137.08",
            "p50": "126.86",
            "p95": "106.65",
            "p99": "101.06",
            "min": "100.86",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "181.80",
            "p50": "163.13",
            "p95": "130.98",
            "p99": "103.61",
            "min": "103.36",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "176.56",
            "p50": "162.27",
            "p95": "127.44",
            "p99": "120.10",
            "min": "120.08",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "176.15",
            "p50": "161.08",
            "p95": "131.65",
            "p99": "116.80",
            "min": "116.03",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.98",
            "p50": "117.92",
            "p95": "94.24",
            "p99": "71.12",
            "min": "69.62",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "200.35",
            "p50": "180.41",
            "p95": "141.43",
            "p99": "129.55",
            "min": "127.68",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "181.61",
            "p50": "165.18",
            "p95": "132.91",
            "p99": "119.08",
            "min": "118.51",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "74.44",
            "p50": "69.71",
            "p95": "62.44",
            "p99": "60.79",
            "min": "60.75",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "130.07",
            "p50": "118.25",
            "p95": "102.90",
            "p99": "111.00",
            "min": "100.73",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "204.50",
            "p50": "182.45",
            "p95": "143.74",
            "p99": "153.95",
            "min": "142.09",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "146.74",
            "p50": "134.94",
            "p95": "130.24",
            "p99": "137.17",
            "min": "129.95",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "123.56",
            "p50": "113.81",
            "p95": "97.32",
            "p99": "107.07",
            "min": "94.63",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1033.34",
            "p50": "667.77",
            "p95": "313.27",
            "p99": "252.37",
            "min": "251.46",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "971.53",
            "p50": "653.52",
            "p95": "335.50",
            "p99": "256.03",
            "min": "253.28",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1117.52",
            "p50": "724.89",
            "p95": "329.16",
            "p99": "267.69",
            "min": "265.45",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1057.64",
            "p50": "682.71",
            "p95": "348.52",
            "p99": "247.30",
            "min": "229.45",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "991.04",
            "p50": "676.53",
            "p95": "329.91",
            "p99": "271.57",
            "min": "263.16",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1001.74",
            "p50": "653.04",
            "p95": "352.20",
            "p99": "251.96",
            "min": "248.70",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "337.62",
            "p50": "279.54",
            "p95": "200.07",
            "p99": "179.54",
            "min": "177.68",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "324.53",
            "p50": "278.93",
            "p95": "190.03",
            "p99": "171.98",
            "min": "169.68",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "320.42",
            "p50": "282.44",
            "p95": "192.23",
            "p99": "166.78",
            "min": "165.51",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "358.19",
            "p50": "302.21",
            "p95": "214.51",
            "p99": "190.31",
            "min": "190.18",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "284.37",
            "p50": "243.36",
            "p95": "180.12",
            "p99": "159.22",
            "min": "157.46",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "282.03",
            "p50": "244.10",
            "p95": "186.33",
            "p99": "157.71",
            "min": "157.35",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "279.35",
            "p50": "241.32",
            "p95": "174.86",
            "p99": "161.80",
            "min": "160.93",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "279.65",
            "p50": "239.66",
            "p95": "182.26",
            "p99": "155.87",
            "min": "154.54",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "282.81",
            "p50": "243.93",
            "p95": "171.39",
            "p99": "158.98",
            "min": "158.59",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "103.83",
            "p50": "98.04",
            "p95": "84.31",
            "p99": "79.03",
            "min": "78.06",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "103.70",
            "p50": "97.90",
            "p95": "83.12",
            "p99": "79.29",
            "min": "78.99",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "96.29",
            "p50": "90.74",
            "p95": "80.47",
            "p99": "74.11",
            "min": "73.33",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "246.61",
            "p50": "216.12",
            "p95": "164.84",
            "p99": "146.78",
            "min": "143.31",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "95.47",
            "p50": "90.68",
            "p95": "79.01",
            "p99": "75.25",
            "min": "75.03",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "239.48",
            "p50": "209.15",
            "p95": "155.38",
            "p99": "140.13",
            "min": "139.02",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "179.83",
            "p50": "164.26",
            "p95": "134.07",
            "p99": "121.37",
            "min": "120.24",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "152.27",
            "p50": "140.12",
            "p95": "110.67",
            "p99": "69.80",
            "min": "40.56",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "438.84",
            "p50": "382.73",
            "p95": "253.04",
            "p99": "209.24",
            "min": "207.10",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5095.86",
            "p50": "2108.10",
            "p95": "665.50",
            "p99": "551.85",
            "min": "548.11",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "438.45",
            "p50": "384.57",
            "p95": "271.07",
            "p99": "232.39",
            "min": "224.37",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14157.39",
            "p50": "2984.28",
            "p95": "1023.19",
            "p99": "587.43",
            "min": "504.80",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3002.16",
            "p50": "1861.10",
            "p95": "614.20",
            "p99": "517.14",
            "min": "496.65",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "207.51",
            "p50": "187.19",
            "p95": "152.23",
            "p99": "139.03",
            "min": "138.05",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "229.62",
            "p50": "211.64",
            "p95": "160.52",
            "p99": "134.03",
            "min": "130.50",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "128.74",
            "p50": "120.70",
            "p95": "105.11",
            "p99": "96.16",
            "min": "96.13",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "206.76",
            "p50": "185.79",
            "p95": "142.65",
            "p99": "114.34",
            "min": "107.79",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "136.64",
            "p50": "127.23",
            "p95": "102.82",
            "p99": "69.22",
            "min": "68.91",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "175.10",
            "p50": "158.44",
            "p95": "127.35",
            "p99": "118.65",
            "min": "116.76",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "175.29",
            "p50": "163.30",
            "p95": "130.66",
            "p99": "114.83",
            "min": "113.59",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "177.48",
            "p50": "163.93",
            "p95": "130.04",
            "p99": "114.35",
            "min": "114.07",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "299.93",
            "p50": "240.65",
            "p95": "57.63",
            "p99": "51.40",
            "min": "51.39",
            "n": "106",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "143.92",
            "p50": "135.35",
            "p95": "108.52",
            "p99": "56.86",
            "min": "56.76",
            "n": "106",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "87.20",
            "p50": "82.77",
            "p95": "76.10",
            "p99": "69.77",
            "min": "69.63",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "89.20",
            "p50": "84.03",
            "p95": "81.21",
            "p99": "78.12",
            "min": "78.04",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "87.81",
            "p50": "83.55",
            "p95": "81.10",
            "p99": "74.51",
            "min": "73.37",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "236.12",
            "p50": "178.76",
            "p95": "174.93",
            "p99": "164.93",
            "min": "164.30",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "96.28",
            "p50": "94.80",
            "p95": "89.06",
            "p99": "88.03",
            "min": "88.02",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "111.91",
            "p50": "109.28",
            "p95": "106.68",
            "p99": "99.67",
            "min": "99.18",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "121.25",
            "p50": "118.80",
            "p95": "107.02",
            "p99": "98.73",
            "min": "98.02",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "122.89",
            "p50": "119.50",
            "p95": "115.93",
            "p99": "111.68",
            "min": "111.23",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "93.95",
            "p50": "92.60",
            "p95": "71.09",
            "p99": "70.87",
            "min": "70.86",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "99.97",
            "p50": "97.97",
            "p95": "94.97",
            "p99": "92.39",
            "min": "92.30",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "99.95",
            "p50": "98.30",
            "p95": "94.86",
            "p99": "92.41",
            "min": "91.98",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "123.59",
            "p50": "120.28",
            "p95": "115.80",
            "p99": "112.33",
            "min": "111.98",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "135.98",
            "p50": "132.01",
            "p95": "119.11",
            "p99": "110.18",
            "min": "109.68",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "112.70",
            "p50": "111.33",
            "p95": "100.25",
            "p99": "91.54",
            "min": "89.81",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "88.09",
            "p50": "83.43",
            "p95": "77.51",
            "p99": "72.63",
            "min": "72.41",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "101.07",
            "p50": "99.50",
            "p95": "93.03",
            "p99": "93.21",
            "min": "88.97",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "76.03",
            "p50": "73.28",
            "p95": "69.85",
            "p99": "70.49",
            "min": "69.20",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "156.21",
            "p50": "124.91",
            "p95": "115.25",
            "p99": "132.58",
            "min": "114.76",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "107.96",
            "p50": "106.08",
            "p95": "102.63",
            "p99": "102.94",
            "min": "99.16",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "421.54",
            "p50": "410.67",
            "p95": "385.67",
            "p99": "338.36",
            "min": "331.07",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "479.83",
            "p50": "468.48",
            "p95": "444.66",
            "p99": "412.01",
            "min": "398.34",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "457.19",
            "p50": "437.49",
            "p95": "411.05",
            "p99": "349.27",
            "min": "346.12",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "462.74",
            "p50": "442.93",
            "p95": "409.91",
            "p99": "324.40",
            "min": "323.15",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "467.29",
            "p50": "446.28",
            "p95": "416.69",
            "p99": "343.73",
            "min": "321.81",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "460.10",
            "p50": "452.90",
            "p95": "420.08",
            "p99": "366.09",
            "min": "358.69",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "123.18",
            "p50": "118.54",
            "p95": "113.42",
            "p99": "110.98",
            "min": "110.88",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "123.93",
            "p50": "119.42",
            "p95": "114.67",
            "p99": "111.61",
            "min": "111.49",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "121.76",
            "p50": "117.41",
            "p95": "113.25",
            "p99": "111.24",
            "min": "111.23",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "103.86",
            "p50": "100.80",
            "p95": "98.87",
            "p99": "94.09",
            "min": "93.68",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "84.74",
            "p50": "84.28",
            "p95": "83.04",
            "p99": "79.83",
            "min": "79.54",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "121.81",
            "p50": "116.85",
            "p95": "111.25",
            "p99": "106.71",
            "min": "106.20",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "115.66",
            "p50": "111.23",
            "p95": "105.86",
            "p99": "97.83",
            "min": "97.58",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "115.59",
            "p50": "111.02",
            "p95": "104.76",
            "p99": "94.82",
            "min": "93.59",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "116.31",
            "p50": "111.16",
            "p95": "104.99",
            "p99": "97.41",
            "min": "96.90",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1580.69",
            "p50": "1442.04",
            "p95": "690.02",
            "p99": "418.47",
            "min": "408.11",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1602.85",
            "p50": "1394.77",
            "p95": "707.99",
            "p99": "549.81",
            "min": "518.11",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.61",
            "p50": "151.28",
            "p95": "136.82",
            "p99": "127.73",
            "min": "126.81",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3999.78",
            "p50": "3614.38",
            "p95": "1251.63",
            "p99": "932.69",
            "min": "892.66",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "154.78",
            "p50": "151.21",
            "p95": "140.76",
            "p99": "125.38",
            "min": "123.26",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3954.09",
            "p50": "3577.04",
            "p95": "1771.22",
            "p99": "1211.58",
            "min": "1204.81",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "100.37",
            "p50": "98.53",
            "p95": "91.99",
            "p99": "86.75",
            "min": "86.59",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "172.00",
            "p50": "169.21",
            "p95": "161.70",
            "p99": "152.06",
            "min": "151.27",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "359.86",
            "p50": "262.44",
            "p95": "207.45",
            "p99": "175.30",
            "min": "174.75",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9647.16",
            "p50": "1618.94",
            "p95": "870.24",
            "p99": "581.54",
            "min": "519.91",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "359.12",
            "p50": "264.81",
            "p95": "211.76",
            "p99": "188.54",
            "min": "187.27",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "26295.60",
            "p50": "8951.88",
            "p95": "2443.62",
            "p99": "2181.04",
            "min": "2177.35",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "5880.26",
            "p50": "3141.69",
            "p95": "1707.89",
            "p99": "1042.83",
            "min": "889.82",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "302.16",
            "p50": "233.58",
            "p95": "176.43",
            "p99": "132.74",
            "min": "119.93",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "155.92",
            "p50": "130.54",
            "p95": "109.54",
            "p99": "102.25",
            "min": "101.97",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "122.19",
            "p50": "118.12",
            "p95": "93.87",
            "p99": "88.01",
            "min": "87.90",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "126.09",
            "p50": "120.15",
            "p95": "96.81",
            "p99": "94.99",
            "min": "94.82",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "122.42",
            "p50": "118.14",
            "p95": "114.27",
            "p99": "109.69",
            "min": "108.81",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "157.54",
            "p50": "147.00",
            "p95": "143.03",
            "p99": "133.68",
            "min": "133.50",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "95.03",
            "p50": "92.69",
            "p95": "71.93",
            "p99": "69.58",
            "min": "69.32",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "130.84",
            "p50": "114.31",
            "p95": "110.34",
            "p99": "107.76",
            "min": "107.63",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1216.21",
            "p50": "1119.16",
            "p95": "381.62",
            "p99": "367.47",
            "min": "365.67",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "122.09",
            "p50": "119.19",
            "p95": "102.75",
            "p99": "94.89",
            "min": "93.53",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}