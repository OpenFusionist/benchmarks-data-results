{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "110.78",
            "p50": "106.13",
            "p95": "99.57",
            "p99": "96.07",
            "min": "96.03",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1135.66",
            "p50": "943.51",
            "p95": "601.89",
            "p99": "439.11",
            "min": "422.28",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "110.51",
            "p50": "107.31",
            "p95": "99.79",
            "p99": "97.07",
            "min": "96.90",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "764.32",
            "p50": "679.18",
            "p95": "435.01",
            "p99": "168.70",
            "min": "168.43",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "403.88",
            "p50": "373.83",
            "p95": "312.80",
            "p99": "294.62",
            "min": "293.22",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "429.55",
            "p50": "408.66",
            "p95": "333.42",
            "p99": "295.71",
            "min": "294.33",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "293.02",
            "p50": "276.97",
            "p95": "198.67",
            "p99": "191.28",
            "min": "190.92",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "184.10",
            "p50": "176.50",
            "p95": "160.49",
            "p99": "151.14",
            "min": "150.36",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "257.51",
            "p50": "240.32",
            "p95": "209.91",
            "p99": "198.47",
            "min": "197.90",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "263.85",
            "p50": "245.61",
            "p95": "212.56",
            "p99": "204.42",
            "min": "204.14",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "261.12",
            "p50": "242.61",
            "p95": "209.83",
            "p99": "199.87",
            "min": "199.28",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "203.32",
            "p50": "193.27",
            "p95": "175.22",
            "p99": "165.31",
            "min": "164.48",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "338.84",
            "p50": "317.15",
            "p95": "275.57",
            "p99": "231.52",
            "min": "223.07",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "301.26",
            "p50": "283.16",
            "p95": "238.43",
            "p99": "158.71",
            "min": "140.08",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8820.69",
            "p50": "4394.99",
            "p95": "1874.43",
            "p99": "1532.62",
            "min": "1524.54",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "3022.93",
            "p50": "1780.47",
            "p95": "906.92",
            "p99": "1628.06",
            "min": "876.98",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "329.50",
            "p50": "302.64",
            "p95": "265.66",
            "p99": "262.26",
            "min": "246.49",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1431.96",
            "p50": "796.20",
            "p95": "357.91",
            "p99": "801.78",
            "min": "326.37",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7472.73",
            "p50": "3724.48",
            "p95": "1359.08",
            "p99": "3968.25",
            "min": "1324.53",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "817.10",
            "p50": "708.38",
            "p95": "539.25",
            "p99": "507.06",
            "min": "506.27",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "816.68",
            "p50": "760.68",
            "p95": "543.12",
            "p99": "442.58",
            "min": "440.80",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "944.38",
            "p50": "821.73",
            "p95": "567.34",
            "p99": "520.93",
            "min": "520.47",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2443.14",
            "p50": "1982.15",
            "p95": "1043.00",
            "p99": "737.73",
            "min": "698.27",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2415.60",
            "p50": "1922.44",
            "p95": "964.46",
            "p99": "773.15",
            "min": "734.20",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "804.52",
            "p50": "720.38",
            "p95": "514.16",
            "p99": "431.79",
            "min": "421.34",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "170.12",
            "p50": "156.91",
            "p95": "144.11",
            "p99": "137.62",
            "min": "136.87",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "560.32",
            "p50": "500.88",
            "p95": "376.86",
            "p99": "335.17",
            "min": "333.87",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "169.16",
            "p50": "156.76",
            "p95": "143.99",
            "p99": "141.05",
            "min": "141.02",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "188.90",
            "p50": "173.80",
            "p95": "162.10",
            "p99": "153.67",
            "min": "152.45",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "32573.20",
            "p50": "8132.15",
            "p95": "2417.24",
            "p99": "1099.62",
            "min": "858.14",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "418.19",
            "p50": "377.54",
            "p95": "320.31",
            "p99": "284.20",
            "min": "282.40",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "399.13",
            "p50": "366.60",
            "p95": "314.69",
            "p99": "269.17",
            "min": "262.05",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "397.66",
            "p50": "371.72",
            "p95": "304.83",
            "p99": "286.57",
            "min": "284.21",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "396.63",
            "p50": "358.92",
            "p95": "301.60",
            "p99": "254.73",
            "min": "252.93",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "16940.33",
            "p50": "5734.89",
            "p95": "2405.28",
            "p99": "2103.49",
            "min": "2080.75",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "16986.50",
            "p50": "5858.76",
            "p95": "2587.24",
            "p99": "2006.41",
            "min": "1806.57",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "16379.49",
            "p50": "5326.10",
            "p95": "2250.45",
            "p99": "1989.19",
            "min": "1972.90",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "16964.83",
            "p50": "5248.72",
            "p95": "2336.69",
            "p99": "1562.19",
            "min": "1548.24",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "16453.72",
            "p50": "5223.67",
            "p95": "2361.68",
            "p99": "2226.38",
            "min": "2223.69",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "17045.68",
            "p50": "5394.15",
            "p95": "2435.57",
            "p99": "1972.75",
            "min": "1867.19",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "263.27",
            "p50": "243.94",
            "p95": "216.51",
            "p99": "203.69",
            "min": "203.52",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "525.10",
            "p50": "488.22",
            "p95": "390.34",
            "p99": "338.01",
            "min": "337.54",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1649.54",
            "p50": "1398.60",
            "p95": "377.40",
            "p99": "281.33",
            "min": "266.51",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "20987.67",
            "p50": "5581.57",
            "p95": "298.19",
            "p99": "268.96",
            "min": "257.26",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1410.55",
            "p50": "1200.58",
            "p95": "801.21",
            "p99": "659.37",
            "min": "596.35",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "54767.65",
            "p50": "9229.95",
            "p95": "2393.09",
            "p99": "1069.86",
            "min": "598.32",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14746.87",
            "p50": "6652.17",
            "p95": "313.64",
            "p99": "267.21",
            "min": "259.55",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "574.96",
            "p50": "509.96",
            "p95": "398.78",
            "p99": "367.83",
            "min": "354.98",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "552.96",
            "p50": "503.37",
            "p95": "391.46",
            "p99": "353.76",
            "min": "348.36",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "201.29",
            "p50": "193.17",
            "p95": "176.52",
            "p99": "165.09",
            "min": "164.46",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "387.13",
            "p50": "367.72",
            "p95": "303.60",
            "p99": "270.63",
            "min": "269.46",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "201.05",
            "p50": "193.48",
            "p95": "171.17",
            "p99": "163.43",
            "min": "163.08",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "338.67",
            "p50": "323.98",
            "p95": "270.96",
            "p99": "206.27",
            "min": "168.39",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "261.34",
            "p50": "244.48",
            "p95": "217.58",
            "p99": "196.22",
            "min": "193.00",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "574.92",
            "p50": "536.85",
            "p95": "402.46",
            "p99": "388.27",
            "min": "387.87",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1455.42",
            "p50": "1291.73",
            "p95": "991.72",
            "p99": "859.44",
            "min": "856.60",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "290.59",
            "p50": "274.67",
            "p95": "235.45",
            "p99": "218.98",
            "min": "217.14",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "138.48",
            "p50": "136.59",
            "p95": "126.61",
            "p99": "110.95",
            "min": "107.83",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "138.25",
            "p50": "136.00",
            "p95": "126.99",
            "p99": "119.29",
            "min": "118.58",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "138.14",
            "p50": "135.98",
            "p95": "126.61",
            "p99": "116.56",
            "min": "115.41",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "233.05",
            "p50": "228.30",
            "p95": "197.01",
            "p99": "137.19",
            "min": "133.98",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "193.47",
            "p50": "189.88",
            "p95": "172.04",
            "p99": "163.67",
            "min": "163.61",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "205.40",
            "p50": "201.76",
            "p95": "177.87",
            "p99": "168.51",
            "min": "167.58",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "190.74",
            "p50": "185.89",
            "p95": "164.00",
            "p99": "125.28",
            "min": "117.43",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "186.51",
            "p50": "182.45",
            "p95": "161.79",
            "p99": "147.59",
            "min": "146.20",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "213.88",
            "p50": "205.11",
            "p95": "181.46",
            "p99": "151.45",
            "min": "146.73",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "184.23",
            "p50": "178.08",
            "p95": "158.66",
            "p99": "97.25",
            "min": "89.89",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "212.08",
            "p50": "206.27",
            "p95": "185.05",
            "p99": "162.01",
            "min": "159.48",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "148.53",
            "p50": "144.34",
            "p95": "132.72",
            "p99": "116.34",
            "min": "113.68",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "230.71",
            "p50": "227.12",
            "p95": "196.66",
            "p99": "156.85",
            "min": "153.74",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "184.65",
            "p50": "179.50",
            "p95": "154.59",
            "p99": "97.63",
            "min": "94.87",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "73.12",
            "p50": "70.64",
            "p95": "67.37",
            "p99": "65.28",
            "min": "64.89",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "142.77",
            "p50": "141.03",
            "p95": "124.06",
            "p99": "129.82",
            "min": "122.84",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "476.43",
            "p50": "388.39",
            "p95": "336.29",
            "p99": "280.24",
            "min": "234.22",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "196.06",
            "p50": "156.78",
            "p95": "141.45",
            "p99": "164.28",
            "min": "140.31",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.56",
            "p50": "132.69",
            "p95": "124.09",
            "p99": "127.66",
            "min": "121.71",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1244.16",
            "p50": "1186.58",
            "p95": "799.80",
            "p99": "605.91",
            "min": "527.48",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1065.65",
            "p50": "1027.61",
            "p95": "706.62",
            "p99": "517.43",
            "min": "497.90",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1498.25",
            "p50": "1387.79",
            "p95": "762.59",
            "p99": "602.97",
            "min": "563.55",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1392.16",
            "p50": "1302.75",
            "p95": "873.91",
            "p99": "619.84",
            "min": "570.40",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1357.81",
            "p50": "1245.74",
            "p95": "811.36",
            "p99": "552.79",
            "min": "518.29",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1098.71",
            "p50": "1066.73",
            "p95": "662.80",
            "p99": "539.66",
            "min": "510.13",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "745.45",
            "p50": "667.90",
            "p95": "468.47",
            "p99": "383.12",
            "min": "374.85",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "738.77",
            "p50": "651.64",
            "p95": "473.21",
            "p99": "359.25",
            "min": "349.95",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "744.98",
            "p50": "654.17",
            "p95": "470.37",
            "p99": "436.80",
            "min": "436.41",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "743.99",
            "p50": "657.48",
            "p95": "494.52",
            "p99": "424.45",
            "min": "414.41",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "296.80",
            "p50": "290.62",
            "p95": "238.91",
            "p99": "221.93",
            "min": "221.86",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "655.54",
            "p50": "554.11",
            "p95": "431.59",
            "p99": "238.31",
            "min": "215.60",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "644.38",
            "p50": "563.23",
            "p95": "433.42",
            "p99": "323.85",
            "min": "309.85",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "651.56",
            "p50": "577.85",
            "p95": "463.05",
            "p99": "399.24",
            "min": "396.66",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "664.02",
            "p50": "588.52",
            "p95": "392.84",
            "p99": "323.59",
            "min": "323.24",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "107.58",
            "p50": "106.12",
            "p95": "99.35",
            "p99": "94.78",
            "min": "94.46",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "107.45",
            "p50": "105.89",
            "p95": "100.31",
            "p99": "97.65",
            "min": "97.15",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "100.07",
            "p50": "98.46",
            "p95": "91.27",
            "p99": "85.47",
            "min": "85.44",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "257.85",
            "p50": "253.15",
            "p95": "224.30",
            "p99": "218.72",
            "min": "215.39",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "100.00",
            "p50": "98.78",
            "p95": "93.32",
            "p99": "89.24",
            "min": "89.04",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "250.43",
            "p50": "245.68",
            "p95": "213.13",
            "p99": "183.16",
            "min": "166.77",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "211.54",
            "p50": "208.19",
            "p95": "190.76",
            "p99": "179.66",
            "min": "179.61",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "241.32",
            "p50": "235.81",
            "p95": "205.43",
            "p99": "183.32",
            "min": "180.86",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "574.28",
            "p50": "562.17",
            "p95": "448.62",
            "p99": "391.32",
            "min": "363.61",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7747.94",
            "p50": "4618.94",
            "p95": "2233.18",
            "p99": "1660.07",
            "min": "1429.96",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "534.32",
            "p50": "521.40",
            "p95": "427.29",
            "p99": "346.44",
            "min": "332.67",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "20588.43",
            "p50": "7307.20",
            "p95": "2430.08",
            "p99": "1650.81",
            "min": "1289.53",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4487.51",
            "p50": "3633.18",
            "p95": "1579.98",
            "p99": "1179.85",
            "min": "1085.80",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "254.15",
            "p50": "219.41",
            "p95": "193.84",
            "p99": "183.47",
            "min": "182.54",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "266.71",
            "p50": "262.54",
            "p95": "222.98",
            "p99": "145.55",
            "min": "121.21",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "148.45",
            "p50": "146.00",
            "p95": "134.38",
            "p99": "127.59",
            "min": "127.01",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "245.04",
            "p50": "239.42",
            "p95": "213.87",
            "p99": "160.20",
            "min": "139.00",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "187.00",
            "p50": "183.93",
            "p95": "166.28",
            "p99": "156.92",
            "min": "156.91",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "221.76",
            "p50": "217.09",
            "p95": "184.86",
            "p99": "155.64",
            "min": "154.36",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "210.62",
            "p50": "207.38",
            "p95": "175.75",
            "p99": "166.60",
            "min": "166.45",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "210.72",
            "p50": "207.27",
            "p95": "183.21",
            "p99": "159.92",
            "min": "150.25",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1347.49",
            "p50": "1169.93",
            "p95": "737.84",
            "p99": "672.55",
            "min": "670.59",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "183.85",
            "p50": "180.81",
            "p95": "162.18",
            "p99": "148.41",
            "min": "144.71",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.80",
            "p50": "192.88",
            "p95": "190.60",
            "p99": "180.93",
            "min": "179.87",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.67",
            "p50": "192.83",
            "p95": "190.51",
            "p99": "180.63",
            "min": "178.18",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.36",
            "p50": "193.53",
            "p95": "190.99",
            "p99": "186.55",
            "min": "186.00",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1189.84",
            "p50": "1157.27",
            "p95": "1016.65",
            "p99": "652.22",
            "min": "648.08",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "701.14",
            "p50": "690.77",
            "p95": "622.70",
            "p99": "584.45",
            "min": "575.34",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "807.83",
            "p50": "793.65",
            "p95": "702.75",
            "p99": "620.77",
            "min": "620.67",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "738.70",
            "p50": "724.45",
            "p95": "651.27",
            "p99": "465.58",
            "min": "439.16",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "748.98",
            "p50": "735.18",
            "p95": "686.22",
            "p99": "629.39",
            "min": "628.64",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "920.20",
            "p50": "896.14",
            "p95": "758.09",
            "p99": "676.29",
            "min": "670.91",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "885.85",
            "p50": "866.43",
            "p95": "758.14",
            "p99": "649.77",
            "min": "639.29",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "884.00",
            "p50": "867.00",
            "p95": "724.13",
            "p99": "437.35",
            "min": "434.68",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "840.51",
            "p50": "818.72",
            "p95": "755.53",
            "p99": "643.00",
            "min": "638.62",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "882.75",
            "p50": "866.46",
            "p95": "808.78",
            "p99": "661.57",
            "min": "654.79",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "885.60",
            "p50": "864.74",
            "p95": "804.17",
            "p99": "679.54",
            "min": "667.85",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "113.70",
            "p50": "109.40",
            "p95": "107.30",
            "p99": "106.43",
            "min": "106.21",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "95.82",
            "p50": "95.12",
            "p95": "94.52",
            "p99": "94.12",
            "min": "93.20",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "605.68",
            "p50": "588.38",
            "p95": "565.18",
            "p99": "498.10",
            "min": "472.87",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "129.21",
            "p50": "103.67",
            "p95": "97.12",
            "p99": "109.46",
            "min": "94.57",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "89.70",
            "p50": "87.73",
            "p95": "86.93",
            "p99": "87.23",
            "min": "85.37",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1933.41",
            "p50": "1884.04",
            "p95": "1511.22",
            "p99": "1116.76",
            "min": "1094.16",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1640.01",
            "p50": "1591.57",
            "p95": "1308.33",
            "p99": "894.30",
            "min": "671.88",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2497.83",
            "p50": "2409.24",
            "p95": "1588.12",
            "p99": "1248.58",
            "min": "1202.95",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2503.24",
            "p50": "2405.72",
            "p95": "1679.50",
            "p99": "1126.67",
            "min": "929.11",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2491.20",
            "p50": "2393.95",
            "p95": "1409.39",
            "p99": "911.43",
            "min": "905.79",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1707.98",
            "p50": "1661.32",
            "p95": "1290.63",
            "p99": "780.48",
            "min": "580.69",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "881.65",
            "p50": "850.93",
            "p95": "807.05",
            "p99": "571.52",
            "min": "564.35",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "866.86",
            "p50": "848.37",
            "p95": "815.05",
            "p99": "729.39",
            "min": "722.57",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "886.63",
            "p50": "852.92",
            "p95": "786.10",
            "p99": "651.24",
            "min": "634.93",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "882.03",
            "p50": "860.65",
            "p95": "770.65",
            "p99": "689.07",
            "min": "680.38",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.06",
            "p50": "86.35",
            "p95": "83.32",
            "p99": "82.86",
            "min": "82.84",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "801.62",
            "p50": "777.79",
            "p95": "738.49",
            "p99": "654.82",
            "min": "653.46",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "761.58",
            "p50": "735.62",
            "p95": "670.67",
            "p99": "569.08",
            "min": "559.13",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "754.06",
            "p50": "734.40",
            "p95": "686.43",
            "p99": "485.30",
            "min": "476.01",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "763.54",
            "p50": "737.37",
            "p95": "708.65",
            "p99": "601.16",
            "min": "599.65",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2023.14",
            "p50": "1955.05",
            "p95": "1403.76",
            "p99": "954.06",
            "min": "863.27",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2335.59",
            "p50": "2249.97",
            "p95": "1979.62",
            "p99": "1237.12",
            "min": "1233.50",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.37",
            "p50": "71.92",
            "p95": "71.28",
            "p99": "67.73",
            "min": "67.56",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "10079.09",
            "p50": "8352.32",
            "p95": "2664.76",
            "p99": "2164.59",
            "min": "1964.27",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.44",
            "p50": "72.04",
            "p95": "71.35",
            "p99": "70.51",
            "min": "70.44",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "223.09",
            "p50": "220.94",
            "p95": "217.32",
            "p99": "208.67",
            "min": "207.90",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "884.53",
            "p50": "864.09",
            "p95": "701.06",
            "p99": "489.02",
            "min": "485.77",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "669.56",
            "p50": "658.81",
            "p95": "627.24",
            "p99": "556.50",
            "min": "510.51",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2271.96",
            "p50": "2140.75",
            "p95": "1366.71",
            "p99": "882.33",
            "min": "692.24",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "15722.40",
            "p50": "8617.34",
            "p95": "2298.54",
            "p99": "1432.59",
            "min": "1378.19",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2091.64",
            "p50": "1991.39",
            "p95": "1404.00",
            "p99": "707.07",
            "min": "645.02",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "77440.02",
            "p50": "8939.66",
            "p95": "2380.73",
            "p99": "1696.02",
            "min": "1480.82",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15762.74",
            "p50": "8419.19",
            "p95": "2529.93",
            "p99": "1713.36",
            "min": "1501.48",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "798.86",
            "p50": "717.00",
            "p95": "601.20",
            "p99": "503.28",
            "min": "495.40",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "991.91",
            "p50": "969.66",
            "p95": "880.88",
            "p99": "653.10",
            "min": "637.95",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "841.02",
            "p50": "815.74",
            "p95": "730.95",
            "p99": "480.71",
            "min": "478.84",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1199.87",
            "p50": "1157.44",
            "p95": "1039.70",
            "p99": "903.29",
            "min": "877.56",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "743.98",
            "p50": "734.22",
            "p95": "694.99",
            "p99": "571.54",
            "min": "549.96",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1153.59",
            "p50": "1120.17",
            "p95": "1007.88",
            "p99": "889.33",
            "min": "880.63",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "893.65",
            "p50": "870.35",
            "p95": "750.97",
            "p99": "534.76",
            "min": "508.39",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "932.71",
            "p50": "905.27",
            "p95": "763.14",
            "p99": "661.72",
            "min": "650.89",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2404.22",
            "p50": "2093.37",
            "p95": "1538.35",
            "p99": "1374.81",
            "min": "1349.53",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "877.31",
            "p50": "851.06",
            "p95": "684.48",
            "p99": "508.01",
            "min": "481.42",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "123.46",
            "p50": "119.85",
            "p95": "108.06",
            "p99": "101.31",
            "min": "101.23",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "123.70",
            "p50": "120.28",
            "p95": "111.30",
            "p99": "98.19",
            "min": "97.37",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "123.19",
            "p50": "119.27",
            "p95": "105.95",
            "p99": "102.30",
            "min": "101.96",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "214.28",
            "p50": "202.79",
            "p95": "157.69",
            "p99": "88.36",
            "min": "81.71",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "105.14",
            "p50": "101.65",
            "p95": "91.94",
            "p99": "84.71",
            "min": "83.91",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "111.41",
            "p50": "107.53",
            "p95": "96.04",
            "p99": "90.15",
            "min": "89.65",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "143.39",
            "p50": "137.37",
            "p95": "119.61",
            "p99": "109.46",
            "min": "109.11",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "142.50",
            "p50": "137.70",
            "p95": "120.87",
            "p99": "72.06",
            "min": "71.48",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "188.01",
            "p50": "177.89",
            "p95": "146.28",
            "p99": "116.75",
            "min": "109.01",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "185.33",
            "p50": "177.21",
            "p95": "156.36",
            "p99": "107.53",
            "min": "99.88",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "186.09",
            "p50": "176.43",
            "p95": "156.03",
            "p99": "140.45",
            "min": "140.17",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "125.83",
            "p50": "121.70",
            "p95": "112.53",
            "p99": "101.24",
            "min": "100.83",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "210.01",
            "p50": "196.98",
            "p95": "172.80",
            "p99": "153.44",
            "min": "151.82",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "191.04",
            "p50": "181.46",
            "p95": "156.17",
            "p99": "147.12",
            "min": "146.80",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "71.45",
            "p50": "68.58",
            "p95": "64.81",
            "p99": "60.09",
            "min": "59.60",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "134.96",
            "p50": "127.53",
            "p95": "108.17",
            "p99": "114.96",
            "min": "104.18",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "214.25",
            "p50": "197.17",
            "p95": "170.25",
            "p99": "165.10",
            "min": "153.57",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "179.37",
            "p50": "144.70",
            "p95": "135.07",
            "p99": "153.37",
            "min": "133.75",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "130.37",
            "p50": "123.15",
            "p95": "106.80",
            "p99": "114.86",
            "min": "103.15",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1048.22",
            "p50": "856.73",
            "p95": "462.92",
            "p99": "369.57",
            "min": "358.61",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1037.57",
            "p50": "852.31",
            "p95": "520.40",
            "p99": "374.58",
            "min": "363.24",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1153.51",
            "p50": "935.62",
            "p95": "616.17",
            "p99": "443.05",
            "min": "430.69",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1085.30",
            "p50": "902.73",
            "p95": "528.99",
            "p99": "396.81",
            "min": "395.34",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1036.24",
            "p50": "889.21",
            "p95": "561.28",
            "p99": "367.85",
            "min": "342.35",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1036.57",
            "p50": "873.63",
            "p95": "535.84",
            "p99": "370.98",
            "min": "369.01",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "349.29",
            "p50": "310.93",
            "p95": "234.27",
            "p99": "205.28",
            "min": "205.14",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "339.36",
            "p50": "305.23",
            "p95": "238.59",
            "p99": "198.00",
            "min": "194.97",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "348.18",
            "p50": "309.25",
            "p95": "230.96",
            "p99": "213.32",
            "min": "212.27",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "373.77",
            "p50": "339.07",
            "p95": "267.95",
            "p99": "242.10",
            "min": "240.39",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "291.22",
            "p50": "266.41",
            "p95": "232.07",
            "p99": "211.72",
            "min": "211.15",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "290.96",
            "p50": "267.14",
            "p95": "212.22",
            "p99": "184.31",
            "min": "180.49",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "288.72",
            "p50": "259.77",
            "p95": "219.56",
            "p99": "171.52",
            "min": "170.61",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "286.53",
            "p50": "262.47",
            "p95": "221.14",
            "p99": "205.18",
            "min": "204.16",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "299.54",
            "p50": "264.61",
            "p95": "208.06",
            "p99": "186.99",
            "min": "184.63",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.70",
            "p50": "102.64",
            "p95": "94.86",
            "p99": "90.42",
            "min": "89.23",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.64",
            "p50": "102.49",
            "p95": "95.31",
            "p99": "86.19",
            "min": "84.68",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.99",
            "p50": "95.39",
            "p95": "88.72",
            "p99": "85.52",
            "min": "85.51",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "248.98",
            "p50": "234.80",
            "p95": "200.34",
            "p99": "173.07",
            "min": "168.72",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.86",
            "p50": "94.95",
            "p95": "85.43",
            "p99": "82.12",
            "min": "81.61",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "242.94",
            "p50": "227.83",
            "p95": "194.06",
            "p99": "174.60",
            "min": "173.76",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "187.04",
            "p50": "177.84",
            "p95": "152.54",
            "p99": "119.06",
            "min": "114.48",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "154.95",
            "p50": "147.18",
            "p95": "130.58",
            "p99": "115.79",
            "min": "111.08",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "439.41",
            "p50": "395.84",
            "p95": "303.86",
            "p99": "252.93",
            "min": "251.65",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5579.90",
            "p50": "2624.21",
            "p95": "847.45",
            "p99": "576.61",
            "min": "534.54",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "438.04",
            "p50": "389.58",
            "p95": "267.33",
            "p99": "249.41",
            "min": "240.83",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "15756.64",
            "p50": "3666.87",
            "p95": "1392.41",
            "p99": "787.25",
            "min": "750.71",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3207.40",
            "p50": "1905.59",
            "p95": "638.16",
            "p99": "498.69",
            "min": "455.29",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "209.61",
            "p50": "192.59",
            "p95": "170.73",
            "p99": "142.24",
            "min": "142.14",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "235.84",
            "p50": "221.31",
            "p95": "179.13",
            "p99": "163.31",
            "min": "160.34",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "125.62",
            "p50": "121.49",
            "p95": "108.12",
            "p99": "102.23",
            "min": "101.99",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "214.83",
            "p50": "198.91",
            "p95": "163.94",
            "p99": "143.83",
            "min": "141.88",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "142.08",
            "p50": "135.10",
            "p95": "119.12",
            "p99": "83.53",
            "min": "76.73",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "177.55",
            "p50": "169.67",
            "p95": "140.89",
            "p99": "136.58",
            "min": "136.34",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "185.18",
            "p50": "174.87",
            "p95": "153.13",
            "p99": "134.36",
            "min": "134.35",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "186.47",
            "p50": "175.26",
            "p95": "150.90",
            "p99": "136.89",
            "min": "135.68",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "306.32",
            "p50": "257.62",
            "p95": "119.07",
            "p99": "105.94",
            "min": "105.63",
            "n": "104",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "144.17",
            "p50": "137.63",
            "p95": "122.99",
            "p99": "113.34",
            "min": "112.87",
            "n": "120",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "87.66",
            "p50": "86.46",
            "p95": "76.28",
            "p99": "73.20",
            "min": "72.62",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "89.01",
            "p50": "87.78",
            "p95": "83.87",
            "p99": "81.97",
            "min": "81.64",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "88.68",
            "p50": "87.35",
            "p95": "83.32",
            "p99": "81.16",
            "min": "80.80",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "193.33",
            "p50": "182.80",
            "p95": "178.20",
            "p99": "153.74",
            "min": "147.75",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "91.76",
            "p50": "89.33",
            "p95": "76.88",
            "p99": "74.72",
            "min": "74.52",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "111.84",
            "p50": "108.70",
            "p95": "105.61",
            "p99": "99.52",
            "min": "97.59",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "125.26",
            "p50": "121.32",
            "p95": "107.65",
            "p99": "95.13",
            "min": "93.29",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "127.72",
            "p50": "124.79",
            "p95": "120.96",
            "p99": "117.97",
            "min": "117.71",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "99.06",
            "p50": "96.83",
            "p95": "92.97",
            "p99": "90.18",
            "min": "90.18",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.75",
            "p50": "95.73",
            "p95": "92.62",
            "p99": "89.31",
            "min": "88.48",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "97.92",
            "p50": "95.95",
            "p95": "93.02",
            "p99": "91.26",
            "min": "91.16",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.84",
            "p50": "124.04",
            "p95": "119.77",
            "p99": "113.10",
            "min": "112.93",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "122.25",
            "p50": "119.63",
            "p95": "105.15",
            "p99": "100.53",
            "min": "99.25",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "118.61",
            "p50": "115.81",
            "p95": "113.08",
            "p99": "106.37",
            "min": "106.09",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "88.81",
            "p50": "83.45",
            "p95": "78.00",
            "p99": "71.41",
            "min": "71.22",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "101.67",
            "p50": "100.03",
            "p95": "94.66",
            "p99": "95.49",
            "min": "92.15",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "74.40",
            "p50": "69.47",
            "p95": "65.54",
            "p99": "62.20",
            "min": "59.33",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "159.13",
            "p50": "127.03",
            "p95": "118.73",
            "p99": "134.33",
            "min": "115.62",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "110.09",
            "p50": "107.84",
            "p95": "106.77",
            "p99": "106.42",
            "min": "103.65",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "423.65",
            "p50": "404.82",
            "p95": "387.65",
            "p99": "372.84",
            "min": "370.49",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "487.80",
            "p50": "477.92",
            "p95": "442.22",
            "p99": "396.72",
            "min": "378.56",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "446.74",
            "p50": "424.46",
            "p95": "398.52",
            "p99": "358.04",
            "min": "340.62",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "450.99",
            "p50": "429.26",
            "p95": "402.04",
            "p99": "345.63",
            "min": "329.61",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "454.57",
            "p50": "432.38",
            "p95": "402.72",
            "p99": "332.10",
            "min": "315.80",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "470.46",
            "p50": "457.83",
            "p95": "426.80",
            "p99": "382.93",
            "min": "380.80",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "118.76",
            "p50": "112.60",
            "p95": "106.70",
            "p99": "105.45",
            "min": "105.35",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "119.85",
            "p50": "112.91",
            "p95": "107.01",
            "p99": "105.25",
            "min": "105.16",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "118.20",
            "p50": "111.58",
            "p95": "104.75",
            "p99": "102.88",
            "min": "102.73",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "102.52",
            "p50": "98.00",
            "p95": "94.15",
            "p99": "92.72",
            "min": "92.43",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.92",
            "p50": "85.96",
            "p95": "84.81",
            "p99": "83.79",
            "min": "83.68",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "116.96",
            "p50": "108.96",
            "p95": "100.68",
            "p99": "100.28",
            "min": "100.28",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "110.28",
            "p50": "103.96",
            "p95": "96.22",
            "p99": "94.83",
            "min": "94.63",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "111.16",
            "p50": "103.64",
            "p95": "96.63",
            "p99": "95.59",
            "min": "95.53",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "110.79",
            "p50": "103.90",
            "p95": "96.14",
            "p99": "94.71",
            "min": "94.51",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1557.61",
            "p50": "1379.36",
            "p95": "810.57",
            "p99": "554.93",
            "min": "502.12",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1542.71",
            "p50": "1401.07",
            "p95": "758.11",
            "p99": "238.95",
            "min": "190.86",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "156.62",
            "p50": "153.76",
            "p95": "139.52",
            "p99": "132.28",
            "min": "131.09",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3833.73",
            "p50": "3353.48",
            "p95": "1357.67",
            "p99": "747.96",
            "min": "734.61",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "157.74",
            "p50": "153.33",
            "p95": "137.11",
            "p99": "124.73",
            "min": "124.56",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3868.59",
            "p50": "3372.20",
            "p95": "1245.40",
            "p99": "590.67",
            "min": "330.26",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.16",
            "p50": "96.52",
            "p95": "91.25",
            "p99": "76.61",
            "min": "75.01",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "185.55",
            "p50": "182.63",
            "p95": "178.33",
            "p99": "168.53",
            "min": "165.31",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "386.32",
            "p50": "297.30",
            "p95": "217.60",
            "p99": "192.65",
            "min": "191.59",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9384.65",
            "p50": "2068.66",
            "p95": "1111.26",
            "p99": "623.97",
            "min": "454.74",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "369.64",
            "p50": "294.15",
            "p95": "241.41",
            "p99": "216.44",
            "min": "210.52",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "27219.85",
            "p50": "8335.99",
            "p95": "2406.97",
            "p99": "2134.05",
            "min": "2028.93",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "5977.72",
            "p50": "3316.89",
            "p95": "1473.99",
            "p99": "845.39",
            "min": "773.39",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "310.51",
            "p50": "251.25",
            "p95": "186.65",
            "p99": "161.42",
            "min": "159.19",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "151.97",
            "p50": "131.12",
            "p95": "119.09",
            "p99": "114.87",
            "min": "114.32",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "125.10",
            "p50": "120.93",
            "p95": "100.01",
            "p99": "94.24",
            "min": "93.46",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "131.81",
            "p50": "120.59",
            "p95": "117.70",
            "p99": "116.08",
            "min": "116.07",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "124.87",
            "p50": "120.59",
            "p95": "117.03",
            "p99": "109.72",
            "min": "109.04",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "163.33",
            "p50": "148.49",
            "p95": "145.90",
            "p99": "137.83",
            "min": "133.95",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "95.52",
            "p50": "92.54",
            "p95": "88.79",
            "p99": "85.26",
            "min": "85.09",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "120.27",
            "p50": "113.45",
            "p95": "109.45",
            "p99": "105.35",
            "min": "105.11",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1185.73",
            "p50": "1078.54",
            "p95": "727.97",
            "p99": "676.66",
            "min": "673.57",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "124.99",
            "p50": "120.83",
            "p95": "101.69",
            "p99": "98.68",
            "min": "98.67",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}