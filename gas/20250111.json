{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "112.39",
            "p50": "109.78",
            "p95": "101.62",
            "p99": "99.48",
            "min": "99.39",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "997.98",
            "p50": "974.11",
            "p95": "940.28",
            "p99": "718.91",
            "min": "665.87",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "113.13",
            "p50": "110.41",
            "p95": "105.67",
            "p99": "104.68",
            "min": "104.59",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "730.92",
            "p50": "718.69",
            "p95": "495.57",
            "p99": "461.24",
            "min": "444.36",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "370.13",
            "p50": "363.84",
            "p95": "356.32",
            "p99": "334.74",
            "min": "330.07",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "398.86",
            "p50": "392.83",
            "p95": "383.36",
            "p99": "353.00",
            "min": "342.90",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "311.41",
            "p50": "306.16",
            "p95": "201.87",
            "p99": "187.89",
            "min": "187.75",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "186.20",
            "p50": "179.60",
            "p95": "175.18",
            "p99": "116.64",
            "min": "101.97",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "246.98",
            "p50": "242.75",
            "p95": "227.66",
            "p99": "220.96",
            "min": "220.65",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "251.41",
            "p50": "247.77",
            "p95": "233.29",
            "p99": "227.31",
            "min": "226.61",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "257.76",
            "p50": "251.16",
            "p95": "242.82",
            "p99": "236.35",
            "min": "235.78",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "202.86",
            "p50": "196.27",
            "p95": "194.48",
            "p99": "188.58",
            "min": "188.18",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "314.13",
            "p50": "310.12",
            "p95": "272.75",
            "p99": "270.93",
            "min": "270.85",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "295.91",
            "p50": "291.45",
            "p95": "255.48",
            "p99": "250.80",
            "min": "250.30",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "7181.02",
            "p50": "5864.42",
            "p95": "2418.73",
            "p99": "2247.45",
            "min": "2237.19",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2614.34",
            "p50": "2210.56",
            "p95": "1892.13",
            "p99": "2134.75",
            "min": "1876.51",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "284.30",
            "p50": "251.59",
            "p95": "240.36",
            "p99": "243.64",
            "min": "234.10",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1430.23",
            "p50": "951.13",
            "p95": "398.36",
            "p99": "802.76",
            "min": "329.41",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "8076.48",
            "p50": "4308.43",
            "p95": "2277.16",
            "p99": "4464.13",
            "min": "1739.02",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "815.07",
            "p50": "782.28",
            "p95": "531.02",
            "p99": "519.97",
            "min": "515.58",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "819.73",
            "p50": "799.34",
            "p95": "755.97",
            "p99": "737.35",
            "min": "730.28",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "912.81",
            "p50": "878.34",
            "p95": "729.03",
            "p99": "639.21",
            "min": "639.13",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2197.65",
            "p50": "2039.13",
            "p95": "1814.64",
            "p99": "1738.23",
            "min": "1713.84",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2205.27",
            "p50": "2061.20",
            "p95": "1824.69",
            "p99": "1616.02",
            "min": "1542.83",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "805.88",
            "p50": "790.72",
            "p95": "755.69",
            "p99": "735.03",
            "min": "719.84",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "163.99",
            "p50": "156.51",
            "p95": "134.86",
            "p99": "132.39",
            "min": "132.33",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "508.76",
            "p50": "475.12",
            "p95": "393.81",
            "p99": "348.07",
            "min": "347.99",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "161.98",
            "p50": "152.17",
            "p95": "143.65",
            "p99": "131.50",
            "min": "128.80",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "183.42",
            "p50": "177.19",
            "p95": "154.30",
            "p99": "152.04",
            "min": "152.04",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "34168.95",
            "p50": "8607.28",
            "p95": "2454.58",
            "p99": "1267.71",
            "min": "705.91",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "380.81",
            "p50": "315.66",
            "p95": "302.06",
            "p99": "257.00",
            "min": "245.91",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "362.30",
            "p50": "300.01",
            "p95": "285.72",
            "p99": "275.27",
            "min": "273.81",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "363.36",
            "p50": "306.15",
            "p95": "286.86",
            "p99": "280.03",
            "min": "279.70",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "361.62",
            "p50": "299.66",
            "p95": "286.96",
            "p99": "278.28",
            "min": "277.37",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "13828.80",
            "p50": "7296.03",
            "p95": "2610.04",
            "p99": "2340.48",
            "min": "2335.04",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "14205.34",
            "p50": "8487.45",
            "p95": "2340.78",
            "p99": "1039.43",
            "min": "287.74",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "13458.46",
            "p50": "6890.69",
            "p95": "2595.57",
            "p99": "2262.23",
            "min": "2221.69",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "13734.47",
            "p50": "6786.51",
            "p95": "2394.36",
            "p99": "1989.89",
            "min": "1681.02",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "13971.68",
            "p50": "5781.04",
            "p95": "2576.62",
            "p99": "2150.16",
            "min": "2121.76",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "13914.42",
            "p50": "6990.05",
            "p95": "2591.02",
            "p99": "2001.01",
            "min": "1707.09",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "251.78",
            "p50": "246.27",
            "p95": "232.47",
            "p99": "230.19",
            "min": "229.74",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "525.78",
            "p50": "517.51",
            "p95": "502.17",
            "p99": "304.49",
            "min": "171.37",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1621.95",
            "p50": "1536.98",
            "p95": "376.49",
            "p99": "353.69",
            "min": "339.83",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "22390.18",
            "p50": "6090.50",
            "p95": "271.42",
            "p99": "246.42",
            "min": "246.17",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1426.21",
            "p50": "1360.32",
            "p95": "272.17",
            "p99": "101.15",
            "min": "45.07",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "54517.10",
            "p50": "9397.61",
            "p95": "2411.42",
            "p99": "1238.68",
            "min": "180.41",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15567.85",
            "p50": "7368.49",
            "p95": "273.81",
            "p99": "157.32",
            "min": "68.49",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "579.14",
            "p50": "534.76",
            "p95": "440.98",
            "p99": "391.28",
            "min": "391.19",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "517.04",
            "p50": "506.08",
            "p95": "497.08",
            "p99": "492.85",
            "min": "492.26",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "202.26",
            "p50": "196.88",
            "p95": "194.75",
            "p99": "190.08",
            "min": "189.77",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "382.49",
            "p50": "374.11",
            "p95": "318.51",
            "p99": "313.84",
            "min": "312.76",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "203.88",
            "p50": "197.12",
            "p95": "194.05",
            "p99": "185.87",
            "min": "184.68",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "340.70",
            "p50": "335.21",
            "p95": "243.17",
            "p99": "205.36",
            "min": "175.71",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "260.49",
            "p50": "253.44",
            "p95": "249.00",
            "p99": "243.58",
            "min": "243.34",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "522.55",
            "p50": "507.10",
            "p95": "495.89",
            "p99": "483.55",
            "min": "478.55",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1386.87",
            "p50": "1265.84",
            "p95": "963.81",
            "p99": "896.01",
            "min": "892.07",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "311.66",
            "p50": "306.86",
            "p95": "287.72",
            "p99": "283.75",
            "min": "283.71",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "90.28",
            "p50": "89.22",
            "p95": "84.51",
            "p99": "82.64",
            "min": "82.61",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "82.27",
            "p50": "81.47",
            "p95": "77.21",
            "p99": "72.50",
            "min": "71.97",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "84.04",
            "p50": "83.18",
            "p95": "78.63",
            "p99": "76.63",
            "min": "76.26",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "250.72",
            "p50": "245.67",
            "p95": "216.59",
            "p99": "134.54",
            "min": "85.80",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "186.45",
            "p50": "183.18",
            "p95": "165.37",
            "p99": "145.51",
            "min": "143.72",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "195.78",
            "p50": "190.83",
            "p95": "169.47",
            "p99": "155.82",
            "min": "154.91",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "185.70",
            "p50": "177.40",
            "p95": "157.80",
            "p99": "149.96",
            "min": "149.29",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "182.78",
            "p50": "179.06",
            "p95": "160.78",
            "p99": "130.58",
            "min": "129.48",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "208.58",
            "p50": "201.70",
            "p95": "184.27",
            "p99": "156.99",
            "min": "149.73",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "186.58",
            "p50": "181.64",
            "p95": "161.14",
            "p99": "148.08",
            "min": "147.12",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "210.14",
            "p50": "204.35",
            "p95": "185.40",
            "p99": "173.45",
            "min": "172.71",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "154.06",
            "p50": "149.90",
            "p95": "136.20",
            "p99": "130.61",
            "min": "130.54",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "226.62",
            "p50": "221.41",
            "p95": "199.29",
            "p99": "133.38",
            "min": "114.69",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "186.52",
            "p50": "181.26",
            "p95": "160.04",
            "p99": "137.09",
            "min": "134.52",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.98",
            "p50": "66.67",
            "p95": "64.05",
            "p99": "61.79",
            "min": "61.65",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "142.56",
            "p50": "140.11",
            "p95": "127.64",
            "p99": "130.14",
            "min": "123.45",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "450.40",
            "p50": "372.31",
            "p95": "287.14",
            "p99": "269.31",
            "min": "226.83",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "196.73",
            "p50": "153.61",
            "p95": "141.90",
            "p99": "164.78",
            "min": "140.67",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.80",
            "p50": "132.97",
            "p95": "123.29",
            "p99": "125.39",
            "min": "117.53",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1230.89",
            "p50": "1171.95",
            "p95": "746.27",
            "p99": "641.17",
            "min": "625.25",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1063.88",
            "p50": "1039.82",
            "p95": "766.66",
            "p99": "520.67",
            "min": "491.52",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1482.84",
            "p50": "1354.84",
            "p95": "858.13",
            "p99": "547.45",
            "min": "540.79",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1372.92",
            "p50": "1281.37",
            "p95": "828.94",
            "p99": "600.93",
            "min": "563.59",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1350.76",
            "p50": "1270.43",
            "p95": "785.04",
            "p99": "555.68",
            "min": "524.00",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1101.53",
            "p50": "1074.57",
            "p95": "759.12",
            "p99": "655.38",
            "min": "643.24",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "742.68",
            "p50": "640.94",
            "p95": "462.15",
            "p99": "443.81",
            "min": "442.90",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "744.84",
            "p50": "644.48",
            "p95": "451.31",
            "p99": "363.24",
            "min": "358.97",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "751.46",
            "p50": "672.91",
            "p95": "493.48",
            "p99": "405.24",
            "min": "398.20",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "742.70",
            "p50": "661.92",
            "p95": "458.91",
            "p99": "371.57",
            "min": "364.90",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "296.37",
            "p50": "291.02",
            "p95": "259.74",
            "p99": "231.12",
            "min": "230.85",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "664.09",
            "p50": "547.98",
            "p95": "427.23",
            "p99": "360.89",
            "min": "360.85",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "645.17",
            "p50": "566.50",
            "p95": "419.92",
            "p99": "343.34",
            "min": "340.37",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "660.96",
            "p50": "580.32",
            "p95": "445.35",
            "p99": "358.46",
            "min": "350.50",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "674.49",
            "p50": "598.15",
            "p95": "420.53",
            "p99": "361.74",
            "min": "357.08",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "107.20",
            "p50": "105.93",
            "p95": "98.92",
            "p99": "95.19",
            "min": "94.69",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "107.14",
            "p50": "105.67",
            "p95": "99.37",
            "p99": "96.43",
            "min": "96.36",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.80",
            "p50": "98.75",
            "p95": "92.36",
            "p99": "83.77",
            "min": "80.99",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "257.19",
            "p50": "253.94",
            "p95": "224.82",
            "p99": "174.62",
            "min": "170.50",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.78",
            "p50": "97.91",
            "p95": "90.68",
            "p99": "86.06",
            "min": "85.58",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "250.01",
            "p50": "246.38",
            "p95": "215.29",
            "p99": "199.36",
            "min": "195.98",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "210.28",
            "p50": "205.19",
            "p95": "181.64",
            "p99": "168.23",
            "min": "168.06",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "242.94",
            "p50": "238.56",
            "p95": "212.18",
            "p99": "182.48",
            "min": "177.05",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "460.84",
            "p50": "450.87",
            "p95": "363.42",
            "p99": "301.94",
            "min": "295.46",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7639.22",
            "p50": "4636.40",
            "p95": "2006.52",
            "p99": "1494.69",
            "min": "1456.65",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "440.64",
            "p50": "432.39",
            "p95": "363.72",
            "p99": "328.40",
            "min": "314.20",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "18344.20",
            "p50": "7137.92",
            "p95": "2522.13",
            "p99": "2233.94",
            "min": "2181.96",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4341.19",
            "p50": "3526.87",
            "p95": "1614.33",
            "p99": "1344.64",
            "min": "1332.76",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "211.57",
            "p50": "188.02",
            "p95": "168.13",
            "p99": "156.35",
            "min": "155.61",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "265.96",
            "p50": "261.44",
            "p95": "217.64",
            "p99": "206.82",
            "min": "206.70",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "95.37",
            "p50": "94.25",
            "p95": "88.88",
            "p99": "86.06",
            "min": "85.93",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "248.08",
            "p50": "242.50",
            "p95": "217.51",
            "p99": "178.71",
            "min": "163.72",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "183.13",
            "p50": "180.48",
            "p95": "163.37",
            "p99": "135.03",
            "min": "131.76",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "223.80",
            "p50": "219.19",
            "p95": "192.05",
            "p99": "126.57",
            "min": "108.92",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "211.06",
            "p50": "208.16",
            "p95": "185.95",
            "p99": "179.33",
            "min": "179.30",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "208.37",
            "p50": "205.26",
            "p95": "183.20",
            "p99": "170.68",
            "min": "167.95",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1232.72",
            "p50": "1110.63",
            "p95": "923.42",
            "p99": "712.56",
            "min": "695.12",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "183.30",
            "p50": "180.32",
            "p95": "162.86",
            "p99": "153.82",
            "min": "152.96",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.14",
            "p50": "192.54",
            "p95": "186.75",
            "p99": "181.36",
            "min": "181.18",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "195.12",
            "p50": "193.32",
            "p95": "185.71",
            "p99": "172.08",
            "min": "171.82",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.61",
            "p50": "193.67",
            "p95": "186.28",
            "p99": "184.18",
            "min": "184.03",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1188.71",
            "p50": "1165.15",
            "p95": "1056.71",
            "p99": "739.28",
            "min": "646.90",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "702.82",
            "p50": "693.67",
            "p95": "623.67",
            "p99": "454.28",
            "min": "445.06",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "811.91",
            "p50": "798.86",
            "p95": "706.33",
            "p99": "547.71",
            "min": "544.08",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "740.00",
            "p50": "724.52",
            "p95": "627.76",
            "p99": "474.15",
            "min": "465.31",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "747.05",
            "p50": "735.10",
            "p95": "647.08",
            "p99": "464.77",
            "min": "464.75",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "919.93",
            "p50": "901.97",
            "p95": "764.27",
            "p99": "511.60",
            "min": "502.14",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "877.24",
            "p50": "837.57",
            "p95": "720.79",
            "p99": "513.89",
            "min": "496.42",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "849.75",
            "p50": "838.01",
            "p95": "699.47",
            "p99": "475.89",
            "min": "445.34",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "839.73",
            "p50": "824.66",
            "p95": "667.83",
            "p99": "523.89",
            "min": "502.94",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "886.81",
            "p50": "870.47",
            "p95": "767.97",
            "p99": "281.93",
            "min": "190.07",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "857.79",
            "p50": "838.92",
            "p95": "711.32",
            "p99": "518.64",
            "min": "505.21",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "109.81",
            "p50": "105.51",
            "p95": "103.10",
            "p99": "96.36",
            "min": "96.34",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "96.27",
            "p50": "95.20",
            "p95": "91.46",
            "p99": "91.74",
            "min": "89.30",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "574.22",
            "p50": "562.17",
            "p95": "497.61",
            "p99": "436.95",
            "min": "404.75",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "130.27",
            "p50": "103.93",
            "p95": "97.29",
            "p99": "111.27",
            "min": "96.94",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "89.92",
            "p50": "88.19",
            "p95": "84.70",
            "p99": "86.83",
            "min": "84.49",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1890.90",
            "p50": "1844.21",
            "p95": "1383.68",
            "p99": "1119.12",
            "min": "1060.88",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1640.71",
            "p50": "1608.92",
            "p95": "1368.19",
            "p99": "879.39",
            "min": "672.38",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2384.26",
            "p50": "2312.90",
            "p95": "1738.38",
            "p99": "995.71",
            "min": "893.38",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2378.67",
            "p50": "2308.09",
            "p95": "1387.73",
            "p99": "899.01",
            "min": "817.78",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2367.53",
            "p50": "2286.20",
            "p95": "1400.19",
            "p99": "809.15",
            "min": "806.44",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1699.21",
            "p50": "1661.51",
            "p95": "1246.11",
            "p99": "804.68",
            "min": "804.26",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "827.93",
            "p50": "798.29",
            "p95": "747.91",
            "p99": "544.37",
            "min": "511.54",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "816.01",
            "p50": "793.09",
            "p95": "667.48",
            "p99": "592.25",
            "min": "585.13",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "818.78",
            "p50": "799.17",
            "p95": "745.62",
            "p99": "587.44",
            "min": "579.59",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "833.42",
            "p50": "814.77",
            "p95": "791.11",
            "p99": "669.68",
            "min": "662.54",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.64",
            "p50": "86.01",
            "p95": "82.30",
            "p99": "80.29",
            "min": "80.20",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "768.33",
            "p50": "743.80",
            "p95": "655.31",
            "p99": "531.85",
            "min": "515.63",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "726.93",
            "p50": "702.69",
            "p95": "653.30",
            "p99": "494.81",
            "min": "467.91",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "731.77",
            "p50": "702.36",
            "p95": "674.73",
            "p99": "552.82",
            "min": "525.39",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "739.45",
            "p50": "714.07",
            "p95": "663.59",
            "p99": "564.35",
            "min": "549.75",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2026.40",
            "p50": "1964.90",
            "p95": "1348.17",
            "p99": "999.56",
            "min": "896.56",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2338.76",
            "p50": "2266.23",
            "p95": "1687.62",
            "p99": "1233.38",
            "min": "1228.30",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.45",
            "p50": "71.97",
            "p95": "70.53",
            "p99": "68.33",
            "min": "68.31",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9946.04",
            "p50": "8143.91",
            "p95": "2571.39",
            "p99": "1928.27",
            "min": "1465.08",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.48",
            "p50": "72.06",
            "p95": "70.96",
            "p99": "69.22",
            "min": "69.14",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "223.73",
            "p50": "221.90",
            "p95": "215.25",
            "p99": "203.83",
            "min": "203.44",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "852.65",
            "p50": "835.34",
            "p95": "603.42",
            "p99": "474.63",
            "min": "471.49",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.96",
            "p50": "662.91",
            "p95": "574.83",
            "p99": "490.52",
            "min": "476.49",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2345.08",
            "p50": "2227.34",
            "p95": "1259.42",
            "p99": "705.17",
            "min": "697.60",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "33303.26",
            "p50": "9303.15",
            "p95": "2523.35",
            "p99": "2212.00",
            "min": "2163.16",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2188.21",
            "p50": "2079.55",
            "p95": "1317.81",
            "p99": "660.23",
            "min": "654.95",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "84967.44",
            "p50": "9708.46",
            "p95": "2592.59",
            "p99": "1923.14",
            "min": "1371.56",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "19231.47",
            "p50": "8758.82",
            "p95": "2548.37",
            "p99": "2371.93",
            "min": "2343.76",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "862.81",
            "p50": "727.76",
            "p95": "615.45",
            "p99": "554.72",
            "min": "520.55",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "993.01",
            "p50": "967.29",
            "p95": "738.17",
            "p99": "628.35",
            "min": "609.28",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "838.26",
            "p50": "821.24",
            "p95": "703.19",
            "p99": "525.30",
            "min": "492.87",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1197.73",
            "p50": "1174.19",
            "p95": "992.53",
            "p99": "339.96",
            "min": "90.36",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "745.83",
            "p50": "733.22",
            "p95": "625.61",
            "p99": "472.47",
            "min": "453.42",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1156.16",
            "p50": "1132.29",
            "p95": "1004.44",
            "p99": "735.52",
            "min": "679.26",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "858.43",
            "p50": "834.62",
            "p95": "736.52",
            "p99": "599.09",
            "min": "594.81",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "929.17",
            "p50": "911.91",
            "p95": "749.39",
            "p99": "620.47",
            "min": "607.37",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2626.36",
            "p50": "2396.34",
            "p95": "1867.81",
            "p99": "1366.02",
            "min": "1338.53",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "867.95",
            "p50": "835.46",
            "p95": "718.56",
            "p99": "610.56",
            "min": "610.49",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "124.48",
            "p50": "119.78",
            "p95": "103.00",
            "p99": "93.59",
            "min": "93.28",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "124.36",
            "p50": "120.04",
            "p95": "107.60",
            "p99": "100.23",
            "min": "99.95",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "124.63",
            "p50": "119.67",
            "p95": "109.59",
            "p99": "99.06",
            "min": "98.41",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "214.39",
            "p50": "201.21",
            "p95": "168.81",
            "p99": "110.49",
            "min": "108.75",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "104.98",
            "p50": "102.03",
            "p95": "93.32",
            "p99": "76.73",
            "min": "74.44",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "111.49",
            "p50": "106.62",
            "p95": "97.36",
            "p99": "89.38",
            "min": "88.65",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "143.70",
            "p50": "137.29",
            "p95": "120.75",
            "p99": "109.05",
            "min": "108.38",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "143.24",
            "p50": "136.99",
            "p95": "121.70",
            "p99": "88.94",
            "min": "81.45",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "189.35",
            "p50": "177.58",
            "p95": "152.22",
            "p99": "60.22",
            "min": "56.39",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "185.46",
            "p50": "175.96",
            "p95": "148.94",
            "p99": "130.84",
            "min": "129.66",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "185.92",
            "p50": "179.33",
            "p95": "140.55",
            "p99": "92.68",
            "min": "81.62",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.68",
            "p50": "123.74",
            "p95": "110.56",
            "p99": "102.22",
            "min": "101.47",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "205.69",
            "p50": "192.21",
            "p95": "157.57",
            "p99": "138.25",
            "min": "135.02",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "191.04",
            "p50": "179.67",
            "p95": "157.26",
            "p99": "142.14",
            "min": "142.11",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "71.94",
            "p50": "68.45",
            "p95": "64.45",
            "p99": "59.61",
            "min": "58.93",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "135.13",
            "p50": "127.85",
            "p95": "114.59",
            "p99": "117.53",
            "min": "108.05",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "225.70",
            "p50": "203.00",
            "p95": "166.67",
            "p99": "163.93",
            "min": "149.44",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "167.77",
            "p50": "145.60",
            "p95": "134.75",
            "p99": "147.88",
            "min": "132.87",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "130.21",
            "p50": "122.51",
            "p95": "108.86",
            "p99": "115.20",
            "min": "103.87",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1055.31",
            "p50": "860.73",
            "p95": "543.96",
            "p99": "371.60",
            "min": "369.09",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1035.66",
            "p50": "852.61",
            "p95": "455.80",
            "p99": "353.85",
            "min": "350.67",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1147.24",
            "p50": "950.19",
            "p95": "491.50",
            "p99": "372.45",
            "min": "347.99",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1108.05",
            "p50": "902.39",
            "p95": "480.67",
            "p99": "376.27",
            "min": "340.74",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1068.79",
            "p50": "880.77",
            "p95": "478.47",
            "p99": "352.40",
            "min": "341.63",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1042.94",
            "p50": "866.46",
            "p95": "534.05",
            "p99": "400.34",
            "min": "388.73",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "354.93",
            "p50": "317.16",
            "p95": "257.75",
            "p99": "230.07",
            "min": "229.83",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "348.25",
            "p50": "310.13",
            "p95": "245.77",
            "p99": "208.89",
            "min": "206.66",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "352.34",
            "p50": "312.22",
            "p95": "255.83",
            "p99": "233.13",
            "min": "232.01",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "394.85",
            "p50": "345.00",
            "p95": "267.93",
            "p99": "223.77",
            "min": "222.02",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "289.34",
            "p50": "266.63",
            "p95": "217.62",
            "p99": "188.85",
            "min": "186.19",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "302.05",
            "p50": "277.26",
            "p95": "211.52",
            "p99": "179.98",
            "min": "173.80",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "294.85",
            "p50": "266.95",
            "p95": "225.78",
            "p99": "204.18",
            "min": "203.42",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "312.06",
            "p50": "267.98",
            "p95": "218.87",
            "p99": "190.56",
            "min": "188.26",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "305.49",
            "p50": "275.52",
            "p95": "218.10",
            "p99": "181.35",
            "min": "177.41",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.98",
            "p50": "102.63",
            "p95": "92.15",
            "p99": "85.66",
            "min": "85.46",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.55",
            "p50": "102.37",
            "p95": "92.90",
            "p99": "87.57",
            "min": "87.51",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.36",
            "p50": "95.02",
            "p95": "88.05",
            "p99": "81.50",
            "min": "81.49",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "251.06",
            "p50": "235.36",
            "p95": "191.72",
            "p99": "165.20",
            "min": "164.40",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.45",
            "p50": "95.04",
            "p95": "85.86",
            "p99": "79.66",
            "min": "79.64",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "242.85",
            "p50": "228.42",
            "p95": "190.88",
            "p99": "164.10",
            "min": "160.89",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "186.34",
            "p50": "177.31",
            "p95": "159.17",
            "p99": "143.69",
            "min": "143.04",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "155.58",
            "p50": "147.89",
            "p95": "130.43",
            "p99": "94.29",
            "min": "74.44",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "433.06",
            "p50": "388.83",
            "p95": "282.31",
            "p99": "236.93",
            "min": "236.53",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5315.52",
            "p50": "2638.64",
            "p95": "840.69",
            "p99": "530.72",
            "min": "493.76",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "434.11",
            "p50": "385.06",
            "p95": "278.65",
            "p99": "247.39",
            "min": "246.33",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14712.06",
            "p50": "3418.91",
            "p95": "1392.89",
            "p99": "1006.10",
            "min": "954.73",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3255.09",
            "p50": "1870.86",
            "p95": "590.63",
            "p99": "504.31",
            "min": "502.00",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "212.32",
            "p50": "193.84",
            "p95": "157.96",
            "p99": "143.40",
            "min": "142.13",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "235.13",
            "p50": "220.84",
            "p95": "196.94",
            "p99": "174.06",
            "min": "171.67",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "128.98",
            "p50": "123.61",
            "p95": "107.33",
            "p99": "99.30",
            "min": "96.80",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "212.36",
            "p50": "197.67",
            "p95": "173.08",
            "p99": "132.92",
            "min": "125.29",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "142.97",
            "p50": "136.32",
            "p95": "123.05",
            "p99": "90.86",
            "min": "85.14",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "178.16",
            "p50": "168.42",
            "p95": "140.75",
            "p99": "100.16",
            "min": "82.83",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "186.89",
            "p50": "176.89",
            "p95": "146.96",
            "p99": "132.36",
            "min": "131.44",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "186.29",
            "p50": "174.76",
            "p95": "150.53",
            "p99": "136.85",
            "min": "135.29",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "305.06",
            "p50": "264.91",
            "p95": "118.45",
            "p99": "110.04",
            "min": "109.95",
            "n": "103",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "146.21",
            "p50": "138.38",
            "p95": "85.72",
            "p99": "82.73",
            "min": "82.60",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "89.40",
            "p50": "87.67",
            "p95": "80.20",
            "p99": "75.82",
            "min": "75.58",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "90.67",
            "p50": "88.98",
            "p95": "84.58",
            "p99": "82.85",
            "min": "82.76",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "90.09",
            "p50": "88.54",
            "p95": "84.40",
            "p99": "79.25",
            "min": "77.98",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "188.32",
            "p50": "182.19",
            "p95": "174.39",
            "p99": "143.12",
            "min": "123.05",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "90.11",
            "p50": "88.82",
            "p95": "85.99",
            "p99": "83.83",
            "min": "83.62",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "111.82",
            "p50": "108.56",
            "p95": "104.31",
            "p99": "92.39",
            "min": "90.28",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "124.40",
            "p50": "121.42",
            "p95": "107.04",
            "p99": "102.86",
            "min": "102.63",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "125.47",
            "p50": "123.32",
            "p95": "120.77",
            "p99": "116.06",
            "min": "115.89",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "96.67",
            "p50": "94.52",
            "p95": "92.80",
            "p99": "87.78",
            "min": "86.32",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.49",
            "p50": "95.88",
            "p95": "94.84",
            "p99": "92.13",
            "min": "91.72",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.59",
            "p50": "96.29",
            "p95": "94.84",
            "p99": "93.58",
            "min": "93.56",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.01",
            "p50": "122.15",
            "p95": "119.93",
            "p99": "118.29",
            "min": "118.22",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "115.75",
            "p50": "112.63",
            "p95": "109.00",
            "p99": "99.58",
            "min": "98.63",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "116.20",
            "p50": "113.84",
            "p95": "111.70",
            "p99": "107.12",
            "min": "106.96",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "86.57",
            "p50": "82.70",
            "p95": "79.55",
            "p99": "75.68",
            "min": "75.49",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "92.96",
            "p50": "92.06",
            "p95": "89.00",
            "p99": "89.90",
            "min": "88.26",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "59.63",
            "p50": "57.96",
            "p95": "56.06",
            "p99": "56.37",
            "min": "55.60",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "150.20",
            "p50": "119.31",
            "p95": "112.25",
            "p99": "128.29",
            "min": "111.76",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "103.74",
            "p50": "101.74",
            "p95": "99.42",
            "p99": "100.78",
            "min": "98.54",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "374.75",
            "p50": "366.11",
            "p95": "356.65",
            "p99": "344.55",
            "min": "342.06",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "487.28",
            "p50": "481.02",
            "p95": "467.50",
            "p99": "417.03",
            "min": "389.76",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "375.37",
            "p50": "364.05",
            "p95": "349.28",
            "p99": "326.20",
            "min": "321.13",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "378.78",
            "p50": "367.57",
            "p95": "354.99",
            "p99": "297.21",
            "min": "260.11",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "378.16",
            "p50": "368.99",
            "p95": "352.79",
            "p99": "302.57",
            "min": "287.51",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "455.37",
            "p50": "446.26",
            "p95": "434.64",
            "p99": "401.15",
            "min": "391.68",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "95.61",
            "p50": "94.48",
            "p95": "92.31",
            "p99": "86.60",
            "min": "85.71",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "96.44",
            "p50": "95.05",
            "p95": "92.47",
            "p99": "89.69",
            "min": "89.01",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "94.90",
            "p50": "93.78",
            "p95": "91.54",
            "p99": "91.08",
            "min": "91.01",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "87.45",
            "p50": "86.22",
            "p95": "84.30",
            "p99": "83.99",
            "min": "83.97",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.89",
            "p50": "86.45",
            "p95": "85.46",
            "p99": "83.99",
            "min": "83.73",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "89.25",
            "p50": "87.68",
            "p95": "85.13",
            "p99": "84.65",
            "min": "84.61",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "85.36",
            "p50": "83.54",
            "p95": "81.12",
            "p99": "79.09",
            "min": "78.76",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "84.38",
            "p50": "83.22",
            "p95": "80.86",
            "p99": "79.82",
            "min": "79.68",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "84.20",
            "p50": "83.07",
            "p95": "80.56",
            "p99": "78.14",
            "min": "77.90",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1433.33",
            "p50": "1299.59",
            "p95": "851.91",
            "p99": "655.50",
            "min": "582.87",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1438.46",
            "p50": "1330.27",
            "p95": "814.84",
            "p99": "431.02",
            "min": "351.90",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "156.07",
            "p50": "153.75",
            "p95": "143.01",
            "p99": "133.72",
            "min": "132.66",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3000.20",
            "p50": "2798.90",
            "p95": "1358.14",
            "p99": "1021.14",
            "min": "975.17",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "155.98",
            "p50": "153.31",
            "p95": "143.99",
            "p99": "135.82",
            "min": "134.26",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3014.14",
            "p50": "2816.92",
            "p95": "1580.20",
            "p99": "933.88",
            "min": "858.10",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.09",
            "p50": "96.37",
            "p95": "92.52",
            "p99": "85.96",
            "min": "85.34",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "187.11",
            "p50": "173.11",
            "p95": "169.23",
            "p99": "162.88",
            "min": "161.49",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "395.59",
            "p50": "336.46",
            "p95": "250.73",
            "p99": "235.77",
            "min": "229.78",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9674.09",
            "p50": "1871.21",
            "p95": "931.68",
            "p99": "700.02",
            "min": "679.97",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "423.18",
            "p50": "360.60",
            "p95": "278.55",
            "p99": "265.46",
            "min": "264.55",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "29200.06",
            "p50": "9093.08",
            "p95": "2629.01",
            "p99": "2284.43",
            "min": "2268.70",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6154.41",
            "p50": "3343.64",
            "p95": "1807.03",
            "p99": "865.50",
            "min": "812.82",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "346.38",
            "p50": "306.69",
            "p95": "231.86",
            "p99": "192.48",
            "min": "188.83",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "155.81",
            "p50": "140.74",
            "p95": "126.84",
            "p99": "105.10",
            "min": "104.54",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "123.41",
            "p50": "107.76",
            "p95": "68.41",
            "p99": "67.44",
            "min": "67.36",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "135.55",
            "p50": "122.76",
            "p95": "113.51",
            "p99": "108.97",
            "min": "107.94",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "125.38",
            "p50": "119.99",
            "p95": "114.64",
            "p99": "112.80",
            "min": "112.74",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "173.14",
            "p50": "168.62",
            "p95": "142.50",
            "p99": "140.82",
            "min": "140.57",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "93.55",
            "p50": "92.03",
            "p95": "82.43",
            "p99": "81.52",
            "min": "81.46",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "118.13",
            "p50": "112.20",
            "p95": "104.73",
            "p99": "103.79",
            "min": "103.36",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1124.50",
            "p50": "1047.11",
            "p95": "354.34",
            "p99": "344.64",
            "min": "344.64",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "127.15",
            "p50": "114.75",
            "p95": "104.56",
            "p99": "103.06",
            "min": "102.76",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}