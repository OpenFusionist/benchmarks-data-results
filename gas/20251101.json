{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "115.05",
            "p50": "110.25",
            "p95": "95.04",
            "p99": "90.02",
            "min": "89.92",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1065.41",
            "p50": "915.31",
            "p95": "628.41",
            "p99": "454.07",
            "min": "442.88",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "114.70",
            "p50": "110.20",
            "p95": "101.55",
            "p99": "97.88",
            "min": "97.72",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "975.57",
            "p50": "931.61",
            "p95": "652.11",
            "p99": "520.09",
            "min": "504.68",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "458.19",
            "p50": "421.51",
            "p95": "350.14",
            "p99": "309.53",
            "min": "304.05",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "442.50",
            "p50": "430.24",
            "p95": "336.47",
            "p99": "287.60",
            "min": "277.86",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "666.03",
            "p50": "595.93",
            "p95": "279.26",
            "p99": "269.17",
            "min": "269.05",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "615.09",
            "p50": "574.43",
            "p95": "464.39",
            "p99": "367.46",
            "min": "365.87",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "382.21",
            "p50": "362.67",
            "p95": "267.11",
            "p99": "232.53",
            "min": "227.33",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "683.21",
            "p50": "614.24",
            "p95": "434.52",
            "p99": "388.16",
            "min": "388.09",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "656.14",
            "p50": "617.16",
            "p95": "472.37",
            "p99": "369.45",
            "min": "368.22",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "606.85",
            "p50": "571.07",
            "p95": "430.68",
            "p99": "375.10",
            "min": "365.51",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "399.51",
            "p50": "384.42",
            "p95": "304.78",
            "p99": "298.80",
            "min": "298.09",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "392.60",
            "p50": "373.75",
            "p95": "296.09",
            "p99": "189.39",
            "min": "189.35",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "9006.80",
            "p50": "4469.86",
            "p95": "2222.15",
            "p99": "1508.92",
            "min": "1463.53",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2828.96",
            "p50": "2394.24",
            "p95": "943.70",
            "p99": "1541.60",
            "min": "848.40",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "319.16",
            "p50": "284.38",
            "p95": "245.98",
            "p99": "245.90",
            "min": "228.72",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1436.44",
            "p50": "787.65",
            "p95": "470.96",
            "p99": "878.82",
            "min": "458.15",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7335.54",
            "p50": "3798.65",
            "p95": "1407.53",
            "p99": "3903.98",
            "min": "1315.26",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "833.00",
            "p50": "740.32",
            "p95": "512.51",
            "p99": "434.34",
            "min": "395.82",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "806.55",
            "p50": "750.66",
            "p95": "549.95",
            "p99": "442.45",
            "min": "422.16",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "961.59",
            "p50": "834.76",
            "p95": "577.78",
            "p99": "480.88",
            "min": "474.43",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2459.33",
            "p50": "2099.33",
            "p95": "925.96",
            "p99": "773.85",
            "min": "763.81",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2480.37",
            "p50": "2139.44",
            "p95": "1027.25",
            "p99": "801.17",
            "min": "770.81",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "804.96",
            "p50": "756.29",
            "p95": "524.48",
            "p99": "437.12",
            "min": "423.73",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "170.45",
            "p50": "158.24",
            "p95": "147.10",
            "p99": "135.66",
            "min": "134.42",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "567.55",
            "p50": "505.88",
            "p95": "423.94",
            "p99": "342.82",
            "min": "337.40",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "169.21",
            "p50": "158.69",
            "p95": "144.69",
            "p99": "140.45",
            "min": "140.10",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "190.82",
            "p50": "175.66",
            "p95": "161.72",
            "p99": "149.97",
            "min": "147.65",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "33285.50",
            "p50": "8014.02",
            "p95": "2353.27",
            "p99": "887.06",
            "min": "372.65",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "414.18",
            "p50": "370.37",
            "p95": "313.90",
            "p99": "226.82",
            "min": "223.59",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "401.03",
            "p50": "362.08",
            "p95": "310.55",
            "p99": "251.30",
            "min": "249.02",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "400.61",
            "p50": "361.62",
            "p95": "291.82",
            "p99": "255.33",
            "min": "248.70",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "395.38",
            "p50": "355.28",
            "p95": "289.46",
            "p99": "240.91",
            "min": "235.52",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "16525.71",
            "p50": "6233.75",
            "p95": "2471.77",
            "p99": "1755.76",
            "min": "1463.53",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "16882.10",
            "p50": "6150.57",
            "p95": "2379.53",
            "p99": "1411.31",
            "min": "1356.30",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "16507.07",
            "p50": "5367.27",
            "p95": "2233.41",
            "p99": "1510.36",
            "min": "1451.02",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "16845.91",
            "p50": "6275.03",
            "p95": "2341.76",
            "p99": "1645.00",
            "min": "1430.42",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "15799.93",
            "p50": "5175.44",
            "p95": "2359.59",
            "p99": "1625.56",
            "min": "1483.64",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "16885.40",
            "p50": "6298.18",
            "p95": "2344.58",
            "p99": "1877.59",
            "min": "1639.39",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "680.83",
            "p50": "628.72",
            "p95": "462.90",
            "p99": "301.84",
            "min": "278.69",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "504.71",
            "p50": "414.21",
            "p95": "339.68",
            "p99": "286.46",
            "min": "284.70",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1404.83",
            "p50": "1268.03",
            "p95": "340.71",
            "p99": "269.42",
            "min": "264.18",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "23039.00",
            "p50": "8136.01",
            "p95": "2311.96",
            "p99": "1755.04",
            "min": "1451.08",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1333.80",
            "p50": "1246.85",
            "p95": "744.77",
            "p99": "401.66",
            "min": "252.47",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "54843.21",
            "p50": "8417.66",
            "p95": "2313.26",
            "p99": "929.50",
            "min": "916.97",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13214.11",
            "p50": "6858.98",
            "p95": "2204.18",
            "p99": "599.30",
            "min": "247.24",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "576.27",
            "p50": "502.50",
            "p95": "387.36",
            "p99": "353.68",
            "min": "351.84",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "535.44",
            "p50": "517.68",
            "p95": "408.73",
            "p99": "363.46",
            "min": "358.66",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "595.89",
            "p50": "564.37",
            "p95": "439.27",
            "p99": "398.05",
            "min": "395.30",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "611.42",
            "p50": "578.24",
            "p95": "424.26",
            "p99": "358.20",
            "min": "357.64",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "660.22",
            "p50": "588.85",
            "p95": "453.95",
            "p99": "410.31",
            "min": "406.56",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "910.16",
            "p50": "852.79",
            "p95": "549.04",
            "p99": "433.24",
            "min": "411.59",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "647.03",
            "p50": "589.22",
            "p95": "458.36",
            "p99": "391.56",
            "min": "388.27",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "689.10",
            "p50": "649.43",
            "p95": "455.69",
            "p99": "403.93",
            "min": "395.40",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1682.85",
            "p50": "1455.00",
            "p95": "1133.34",
            "p99": "947.12",
            "min": "891.07",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "658.35",
            "p50": "621.80",
            "p95": "428.31",
            "p99": "376.10",
            "min": "367.95",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "142.78",
            "p50": "138.47",
            "p95": "126.81",
            "p99": "119.91",
            "min": "119.82",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "140.09",
            "p50": "136.30",
            "p95": "127.11",
            "p99": "120.36",
            "min": "119.89",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "142.26",
            "p50": "139.04",
            "p95": "129.03",
            "p99": "124.18",
            "min": "123.77",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "229.32",
            "p50": "224.20",
            "p95": "197.12",
            "p99": "183.06",
            "min": "181.34",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "187.85",
            "p50": "181.38",
            "p95": "164.54",
            "p99": "153.68",
            "min": "152.39",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "200.95",
            "p50": "195.04",
            "p95": "173.40",
            "p99": "67.67",
            "min": "67.65",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "184.90",
            "p50": "174.89",
            "p95": "158.68",
            "p99": "128.97",
            "min": "123.96",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "176.26",
            "p50": "167.36",
            "p95": "151.26",
            "p99": "123.59",
            "min": "118.37",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "205.69",
            "p50": "195.87",
            "p95": "175.04",
            "p99": "121.77",
            "min": "105.41",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "183.43",
            "p50": "173.97",
            "p95": "157.55",
            "p99": "62.32",
            "min": "57.46",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "203.69",
            "p50": "191.98",
            "p95": "174.71",
            "p99": "148.98",
            "min": "148.72",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "149.17",
            "p50": "141.51",
            "p95": "125.74",
            "p99": "99.72",
            "min": "98.87",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "225.62",
            "p50": "219.62",
            "p95": "198.68",
            "p99": "177.22",
            "min": "171.62",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "183.54",
            "p50": "173.53",
            "p95": "159.08",
            "p99": "155.04",
            "min": "154.76",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "100.79",
            "p50": "97.02",
            "p95": "90.70",
            "p99": "83.90",
            "min": "81.95",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "142.04",
            "p50": "135.20",
            "p95": "123.72",
            "p99": "127.74",
            "min": "120.04",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "441.62",
            "p50": "319.43",
            "p95": "250.55",
            "p99": "278.58",
            "min": "240.33",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "192.28",
            "p50": "149.34",
            "p95": "135.22",
            "p99": "155.71",
            "min": "128.12",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "134.70",
            "p50": "130.52",
            "p95": "119.88",
            "p99": "123.86",
            "min": "115.69",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1208.48",
            "p50": "1055.86",
            "p95": "759.57",
            "p99": "517.91",
            "min": "492.75",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1041.46",
            "p50": "1003.07",
            "p95": "742.75",
            "p99": "560.47",
            "min": "548.17",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1475.60",
            "p50": "1225.75",
            "p95": "927.72",
            "p99": "705.40",
            "min": "689.87",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1342.29",
            "p50": "1095.61",
            "p95": "730.60",
            "p99": "519.73",
            "min": "477.68",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1325.12",
            "p50": "1088.01",
            "p95": "748.61",
            "p99": "575.41",
            "min": "531.45",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1078.69",
            "p50": "1017.73",
            "p95": "705.00",
            "p99": "601.70",
            "min": "574.49",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "726.09",
            "p50": "515.18",
            "p95": "430.74",
            "p99": "372.33",
            "min": "371.62",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "687.73",
            "p50": "534.85",
            "p95": "417.18",
            "p99": "337.18",
            "min": "320.54",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "718.32",
            "p50": "547.29",
            "p95": "408.07",
            "p99": "327.83",
            "min": "319.83",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "724.09",
            "p50": "556.11",
            "p95": "436.34",
            "p99": "371.90",
            "min": "361.01",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "292.89",
            "p50": "284.60",
            "p95": "246.98",
            "p99": "229.11",
            "min": "227.06",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "608.06",
            "p50": "411.68",
            "p95": "323.53",
            "p99": "301.68",
            "min": "301.53",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "611.07",
            "p50": "444.36",
            "p95": "349.66",
            "p99": "317.08",
            "min": "316.78",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "648.66",
            "p50": "476.25",
            "p95": "386.42",
            "p99": "318.09",
            "min": "304.87",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "649.30",
            "p50": "475.88",
            "p95": "398.06",
            "p99": "376.10",
            "min": "375.48",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "453.63",
            "p50": "433.11",
            "p95": "370.24",
            "p99": "330.31",
            "min": "327.95",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "454.10",
            "p50": "430.82",
            "p95": "335.83",
            "p99": "312.76",
            "min": "302.48",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "167.08",
            "p50": "161.29",
            "p95": "148.57",
            "p99": "135.37",
            "min": "134.99",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "625.64",
            "p50": "591.97",
            "p95": "466.33",
            "p99": "370.76",
            "min": "367.39",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "167.89",
            "p50": "161.59",
            "p95": "144.46",
            "p99": "139.88",
            "min": "139.74",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "318.59",
            "p50": "304.87",
            "p95": "273.23",
            "p99": "254.40",
            "min": "242.75",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "203.31",
            "p50": "195.67",
            "p95": "174.13",
            "p99": "139.72",
            "min": "134.21",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "250.93",
            "p50": "242.29",
            "p95": "209.17",
            "p99": "74.48",
            "min": "49.48",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "522.24",
            "p50": "501.05",
            "p95": "408.42",
            "p99": "360.16",
            "min": "359.38",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7006.09",
            "p50": "2683.45",
            "p95": "1758.39",
            "p99": "1373.36",
            "min": "1327.33",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "491.97",
            "p50": "479.31",
            "p95": "404.06",
            "p99": "362.92",
            "min": "362.41",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "22963.85",
            "p50": "7199.89",
            "p95": "2285.80",
            "p99": "1914.21",
            "min": "1800.87",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4473.57",
            "p50": "2621.24",
            "p95": "1449.34",
            "p99": "1288.30",
            "min": "1248.61",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "265.91",
            "p50": "193.13",
            "p95": "166.92",
            "p99": "151.52",
            "min": "149.98",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "257.18",
            "p50": "246.80",
            "p95": "222.20",
            "p99": "180.12",
            "min": "176.46",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "148.73",
            "p50": "143.87",
            "p95": "132.12",
            "p99": "120.95",
            "min": "119.53",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "234.15",
            "p50": "228.85",
            "p95": "206.37",
            "p99": "177.66",
            "min": "172.13",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "178.21",
            "p50": "171.51",
            "p95": "154.53",
            "p99": "98.13",
            "min": "86.80",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "174.63",
            "p50": "171.39",
            "p95": "128.00",
            "p99": "92.65",
            "min": "69.86",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "202.81",
            "p50": "197.51",
            "p95": "169.78",
            "p99": "96.44",
            "min": "93.14",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "203.22",
            "p50": "195.58",
            "p95": "172.51",
            "p99": "124.00",
            "min": "110.06",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1340.30",
            "p50": "1199.65",
            "p95": "952.52",
            "p99": "778.43",
            "min": "767.63",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "182.91",
            "p50": "178.83",
            "p95": "165.59",
            "p99": "144.41",
            "min": "138.42",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "191.76",
            "p50": "188.36",
            "p95": "177.98",
            "p99": "168.46",
            "min": "168.44",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "190.57",
            "p50": "188.82",
            "p95": "175.04",
            "p99": "167.59",
            "min": "167.33",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "192.00",
            "p50": "189.31",
            "p95": "166.61",
            "p99": "160.17",
            "min": "159.22",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1141.11",
            "p50": "1102.50",
            "p95": "809.48",
            "p99": "634.12",
            "min": "595.97",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "777.35",
            "p50": "761.07",
            "p95": "651.07",
            "p99": "589.39",
            "min": "589.23",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "850.44",
            "p50": "824.76",
            "p95": "622.47",
            "p99": "540.45",
            "min": "532.92",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "796.26",
            "p50": "772.15",
            "p95": "560.54",
            "p99": "481.49",
            "min": "481.11",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "818.42",
            "p50": "801.33",
            "p95": "652.70",
            "p99": "532.77",
            "min": "521.69",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "895.28",
            "p50": "869.33",
            "p95": "673.06",
            "p99": "585.65",
            "min": "578.04",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "910.37",
            "p50": "885.78",
            "p95": "655.56",
            "p99": "542.84",
            "min": "532.88",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "908.98",
            "p50": "879.94",
            "p95": "663.45",
            "p99": "557.49",
            "min": "552.80",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "814.53",
            "p50": "796.83",
            "p95": "585.82",
            "p99": "489.44",
            "min": "484.39",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "847.84",
            "p50": "816.86",
            "p95": "650.46",
            "p99": "435.94",
            "min": "413.23",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "887.54",
            "p50": "865.98",
            "p95": "587.16",
            "p99": "503.73",
            "min": "500.21",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "12127.37",
            "p50": "5838.80",
            "p95": "2331.80",
            "p99": "1605.21",
            "min": "1453.77",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "4176.45",
            "p50": "3154.19",
            "p95": "1432.45",
            "p99": "2271.31",
            "min": "1245.47",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "474.11",
            "p50": "466.10",
            "p95": "405.66",
            "p99": "339.17",
            "min": "307.52",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "7537.19",
            "p50": "3678.63",
            "p95": "453.98",
            "p99": "3486.56",
            "min": "430.82",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7662.52",
            "p50": "4171.78",
            "p95": "1851.68",
            "p99": "4307.33",
            "min": "1776.23",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1519.53",
            "p50": "1353.62",
            "p95": "920.55",
            "p99": "646.88",
            "min": "625.23",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "14439.44",
            "p50": "1282.49",
            "p95": "941.65",
            "p99": "659.82",
            "min": "648.18",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1710.07",
            "p50": "1574.17",
            "p95": "1011.74",
            "p99": "721.55",
            "min": "691.47",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "3477.38",
            "p50": "3140.59",
            "p95": "1471.13",
            "p99": "1190.23",
            "min": "1133.12",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "3468.89",
            "p50": "3120.12",
            "p95": "1370.77",
            "p99": "1075.61",
            "min": "1051.52",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1454.69",
            "p50": "1355.32",
            "p95": "868.20",
            "p99": "691.79",
            "min": "638.68",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "539.02",
            "p50": "510.30",
            "p95": "448.07",
            "p99": "391.28",
            "min": "387.18",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "795.15",
            "p50": "772.52",
            "p95": "579.09",
            "p99": "481.49",
            "min": "471.61",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "533.89",
            "p50": "513.16",
            "p95": "435.50",
            "p99": "371.36",
            "min": "362.30",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "546.75",
            "p50": "516.17",
            "p95": "423.14",
            "p99": "375.50",
            "min": "371.56",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "32556.06",
            "p50": "8063.68",
            "p95": "2359.16",
            "p99": "1796.39",
            "min": "1722.94",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "601.15",
            "p50": "583.33",
            "p95": "478.17",
            "p99": "384.36",
            "min": "377.17",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "574.92",
            "p50": "560.15",
            "p95": "462.55",
            "p99": "363.51",
            "min": "355.84",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "575.24",
            "p50": "557.51",
            "p95": "480.22",
            "p99": "420.29",
            "min": "413.76",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "588.71",
            "p50": "572.36",
            "p95": "474.28",
            "p99": "399.30",
            "min": "399.23",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "24130.56",
            "p50": "8006.63",
            "p95": "2379.34",
            "p99": "1701.07",
            "min": "1418.14",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "24003.24",
            "p50": "7812.68",
            "p95": "2414.67",
            "p99": "1550.79",
            "min": "1469.79",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "22756.86",
            "p50": "7552.35",
            "p95": "2347.11",
            "p99": "1595.47",
            "min": "1455.48",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "24342.24",
            "p50": "7765.82",
            "p95": "2391.16",
            "p99": "2049.07",
            "min": "1864.33",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "21218.41",
            "p50": "7053.66",
            "p95": "2364.51",
            "p99": "2227.12",
            "min": "2203.08",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "23854.02",
            "p50": "7909.46",
            "p95": "2448.16",
            "p99": "2116.28",
            "min": "1987.88",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "902.38",
            "p50": "875.04",
            "p95": "629.22",
            "p99": "495.13",
            "min": "489.91",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "672.05",
            "p50": "657.71",
            "p95": "532.72",
            "p99": "442.60",
            "min": "438.47",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1825.11",
            "p50": "1740.64",
            "p95": "1073.98",
            "p99": "668.01",
            "min": "656.86",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "15306.22",
            "p50": "8478.58",
            "p95": "2353.73",
            "p99": "2237.08",
            "min": "2214.17",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1782.05",
            "p50": "1688.71",
            "p95": "979.57",
            "p99": "670.19",
            "min": "662.68",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "68348.53",
            "p50": "8716.54",
            "p95": "2427.83",
            "p99": "1647.59",
            "min": "1458.01",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14122.29",
            "p50": "7212.29",
            "p95": "2359.27",
            "p99": "1513.19",
            "min": "1417.21",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "697.07",
            "p50": "563.52",
            "p95": "480.09",
            "p99": "378.05",
            "min": "371.80",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "956.21",
            "p50": "930.07",
            "p95": "710.47",
            "p99": "524.74",
            "min": "522.04",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "815.92",
            "p50": "790.50",
            "p95": "593.27",
            "p99": "491.66",
            "min": "477.17",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1122.55",
            "p50": "1087.03",
            "p95": "719.56",
            "p99": "623.15",
            "min": "601.53",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "815.63",
            "p50": "791.77",
            "p95": "640.07",
            "p99": "545.38",
            "min": "537.29",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1067.05",
            "p50": "1035.41",
            "p95": "805.96",
            "p99": "646.08",
            "min": "612.40",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "859.37",
            "p50": "837.95",
            "p95": "596.90",
            "p99": "492.70",
            "min": "489.80",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "899.10",
            "p50": "877.36",
            "p95": "689.68",
            "p99": "584.03",
            "min": "578.47",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "419.70",
            "p50": "373.09",
            "p95": "358.43",
            "p99": "334.63",
            "min": "331.44",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "892.11",
            "p50": "864.86",
            "p95": "591.79",
            "p99": "519.39",
            "min": "513.16",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "131.99",
            "p50": "124.73",
            "p95": "105.43",
            "p99": "97.86",
            "min": "97.77",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "130.89",
            "p50": "123.77",
            "p95": "107.58",
            "p99": "99.38",
            "min": "98.33",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "131.81",
            "p50": "123.47",
            "p95": "106.77",
            "p99": "81.01",
            "min": "76.94",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "236.58",
            "p50": "213.00",
            "p95": "165.52",
            "p99": "142.12",
            "min": "137.33",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "169.45",
            "p50": "157.52",
            "p95": "129.05",
            "p99": "114.77",
            "min": "113.63",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "166.43",
            "p50": "155.27",
            "p95": "125.95",
            "p99": "117.43",
            "min": "117.28",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "150.81",
            "p50": "141.58",
            "p95": "115.46",
            "p99": "107.33",
            "min": "107.14",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "151.04",
            "p50": "141.10",
            "p95": "120.23",
            "p99": "91.59",
            "min": "86.14",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "196.72",
            "p50": "183.43",
            "p95": "148.56",
            "p99": "130.23",
            "min": "129.83",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "197.87",
            "p50": "183.63",
            "p95": "134.51",
            "p99": "109.08",
            "min": "108.31",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "199.62",
            "p50": "184.48",
            "p95": "139.05",
            "p99": "124.27",
            "min": "123.94",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "132.45",
            "p50": "124.43",
            "p95": "101.63",
            "p99": "90.14",
            "min": "87.99",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "214.48",
            "p50": "195.34",
            "p95": "157.02",
            "p99": "141.26",
            "min": "139.07",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "198.13",
            "p50": "182.02",
            "p95": "151.24",
            "p99": "126.24",
            "min": "124.83",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "112.01",
            "p50": "103.80",
            "p95": "90.77",
            "p99": "87.37",
            "min": "87.24",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "132.76",
            "p50": "124.78",
            "p95": "101.92",
            "p99": "109.73",
            "min": "97.34",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "280.92",
            "p50": "250.24",
            "p95": "186.85",
            "p99": "192.99",
            "min": "172.36",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "163.77",
            "p50": "137.20",
            "p95": "131.12",
            "p99": "145.06",
            "min": "130.94",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "126.95",
            "p50": "118.12",
            "p95": "101.74",
            "p99": "111.52",
            "min": "99.88",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "939.43",
            "p50": "684.30",
            "p95": "365.91",
            "p99": "287.46",
            "min": "285.21",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1015.36",
            "p50": "720.47",
            "p95": "370.93",
            "p99": "274.88",
            "min": "272.21",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "971.06",
            "p50": "740.47",
            "p95": "367.14",
            "p99": "265.70",
            "min": "245.55",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "932.10",
            "p50": "700.27",
            "p95": "402.56",
            "p99": "296.08",
            "min": "272.42",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "906.47",
            "p50": "674.59",
            "p95": "334.59",
            "p99": "275.25",
            "min": "275.05",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1003.79",
            "p50": "700.83",
            "p95": "419.86",
            "p99": "299.78",
            "min": "286.36",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "424.73",
            "p50": "358.36",
            "p95": "236.81",
            "p99": "199.55",
            "min": "199.17",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "434.61",
            "p50": "367.12",
            "p95": "247.74",
            "p99": "220.52",
            "min": "219.52",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "435.81",
            "p50": "374.05",
            "p95": "255.33",
            "p99": "189.65",
            "min": "188.28",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "463.65",
            "p50": "383.86",
            "p95": "272.09",
            "p99": "226.24",
            "min": "224.74",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "483.18",
            "p50": "394.27",
            "p95": "59.75",
            "p99": "58.24",
            "min": "58.06",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "358.65",
            "p50": "304.41",
            "p95": "219.15",
            "p99": "188.31",
            "min": "188.14",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "360.81",
            "p50": "308.56",
            "p95": "215.81",
            "p99": "181.64",
            "min": "179.88",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "366.55",
            "p50": "315.36",
            "p95": "233.08",
            "p99": "194.46",
            "min": "194.35",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "372.73",
            "p50": "323.40",
            "p95": "220.39",
            "p99": "198.69",
            "min": "197.44",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1966.16",
            "p50": "1059.98",
            "p95": "455.39",
            "p99": "381.78",
            "min": "380.96",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1958.56",
            "p50": "1046.29",
            "p95": "488.82",
            "p99": "356.30",
            "min": "335.54",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "175.59",
            "p50": "161.53",
            "p95": "133.90",
            "p99": "116.70",
            "min": "116.31",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3438.01",
            "p50": "1386.34",
            "p95": "563.64",
            "p99": "454.81",
            "min": "429.75",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "174.48",
            "p50": "160.93",
            "p95": "135.05",
            "p99": "119.56",
            "min": "118.22",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "351.48",
            "p50": "301.91",
            "p95": "202.73",
            "p99": "178.92",
            "min": "171.61",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "203.66",
            "p50": "186.75",
            "p95": "144.57",
            "p99": "123.72",
            "min": "120.41",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "162.85",
            "p50": "150.63",
            "p95": "128.22",
            "p99": "114.17",
            "min": "114.14",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "478.50",
            "p50": "394.11",
            "p95": "268.48",
            "p99": "200.25",
            "min": "199.78",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5465.04",
            "p50": "1977.82",
            "p95": "522.61",
            "p99": "445.98",
            "min": "430.79",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "480.12",
            "p50": "384.75",
            "p95": "261.15",
            "p99": "236.13",
            "min": "222.53",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "12630.08",
            "p50": "2413.55",
            "p95": "584.84",
            "p99": "539.10",
            "min": "513.99",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3866.85",
            "p50": "1776.82",
            "p95": "555.55",
            "p99": "448.09",
            "min": "442.78",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "221.42",
            "p50": "202.36",
            "p95": "156.69",
            "p99": "143.09",
            "min": "142.38",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "231.89",
            "p50": "179.55",
            "p95": "141.53",
            "p99": "120.78",
            "min": "119.62",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "129.39",
            "p50": "120.86",
            "p95": "98.60",
            "p99": "87.84",
            "min": "87.30",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "228.80",
            "p50": "206.87",
            "p95": "167.48",
            "p99": "147.17",
            "min": "143.08",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "155.80",
            "p50": "143.44",
            "p95": "121.17",
            "p99": "114.32",
            "min": "114.32",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "190.35",
            "p50": "173.37",
            "p95": "132.78",
            "p99": "117.05",
            "min": "114.79",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "202.61",
            "p50": "186.21",
            "p95": "140.56",
            "p99": "116.93",
            "min": "115.40",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "208.90",
            "p50": "190.62",
            "p95": "151.45",
            "p99": "141.27",
            "min": "141.26",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "407.28",
            "p50": "287.73",
            "p95": "70.54",
            "p99": "66.39",
            "min": "66.23",
            "n": "114",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "163.32",
            "p50": "149.71",
            "p95": "117.53",
            "p99": "72.48",
            "min": "68.58",
            "n": "120",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "85.92",
            "p50": "82.34",
            "p95": "74.28",
            "p99": "70.61",
            "min": "70.43",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "87.78",
            "p50": "83.52",
            "p95": "82.13",
            "p99": "74.32",
            "min": "73.53",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "86.56",
            "p50": "82.92",
            "p95": "81.57",
            "p99": "77.77",
            "min": "76.83",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "226.59",
            "p50": "177.83",
            "p95": "167.68",
            "p99": "133.03",
            "min": "132.12",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "97.22",
            "p50": "93.50",
            "p95": "88.97",
            "p99": "86.65",
            "min": "86.57",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.35",
            "p50": "107.06",
            "p95": "103.99",
            "p99": "100.91",
            "min": "100.42",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "139.61",
            "p50": "136.38",
            "p95": "127.80",
            "p99": "123.62",
            "min": "123.56",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "142.02",
            "p50": "137.19",
            "p95": "123.46",
            "p99": "120.09",
            "min": "119.68",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "104.87",
            "p50": "100.22",
            "p95": "78.18",
            "p99": "77.30",
            "min": "77.06",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "107.24",
            "p50": "105.07",
            "p95": "102.13",
            "p99": "97.72",
            "min": "97.67",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "107.48",
            "p50": "105.46",
            "p95": "102.56",
            "p99": "95.62",
            "min": "94.59",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "140.02",
            "p50": "136.84",
            "p95": "131.75",
            "p99": "124.01",
            "min": "124.00",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "132.39",
            "p50": "127.87",
            "p95": "123.70",
            "p99": "104.00",
            "min": "98.29",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "124.50",
            "p50": "120.07",
            "p95": "95.13",
            "p99": "94.89",
            "min": "94.85",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "102.73",
            "p50": "99.19",
            "p95": "95.62",
            "p99": "93.26",
            "min": "92.37",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "95.14",
            "p50": "93.60",
            "p95": "90.86",
            "p99": "91.52",
            "min": "89.57",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "73.58",
            "p50": "72.08",
            "p95": "68.35",
            "p99": "66.56",
            "min": "64.91",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "149.09",
            "p50": "117.96",
            "p95": "110.63",
            "p99": "126.54",
            "min": "109.53",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "101.76",
            "p50": "100.11",
            "p95": "97.38",
            "p99": "97.27",
            "min": "93.89",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "416.26",
            "p50": "407.72",
            "p95": "376.51",
            "p99": "366.77",
            "min": "365.29",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "476.25",
            "p50": "467.03",
            "p95": "432.19",
            "p99": "366.80",
            "min": "331.43",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "445.91",
            "p50": "432.94",
            "p95": "396.31",
            "p99": "337.95",
            "min": "324.05",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "448.87",
            "p50": "438.81",
            "p95": "405.73",
            "p99": "362.50",
            "min": "354.33",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "452.94",
            "p50": "441.55",
            "p95": "400.47",
            "p99": "364.85",
            "min": "350.94",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "460.36",
            "p50": "450.37",
            "p95": "423.12",
            "p99": "400.39",
            "min": "391.34",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "120.22",
            "p50": "116.62",
            "p95": "110.43",
            "p99": "109.95",
            "min": "109.95",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "119.95",
            "p50": "117.15",
            "p95": "110.14",
            "p99": "102.19",
            "min": "101.25",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "117.80",
            "p50": "115.41",
            "p95": "108.94",
            "p99": "95.93",
            "min": "95.93",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "102.12",
            "p50": "99.79",
            "p95": "94.71",
            "p99": "92.62",
            "min": "92.50",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "85.50",
            "p50": "84.26",
            "p95": "83.74",
            "p99": "83.00",
            "min": "82.89",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "118.74",
            "p50": "114.47",
            "p95": "107.18",
            "p99": "104.55",
            "min": "104.34",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "111.65",
            "p50": "108.84",
            "p95": "100.06",
            "p99": "94.23",
            "min": "94.07",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "111.43",
            "p50": "108.31",
            "p95": "101.06",
            "p99": "100.63",
            "min": "100.58",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "112.36",
            "p50": "108.25",
            "p95": "100.90",
            "p99": "93.39",
            "min": "92.14",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1574.39",
            "p50": "1410.59",
            "p95": "890.86",
            "p99": "585.45",
            "min": "510.11",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1601.90",
            "p50": "1395.94",
            "p95": "774.60",
            "p99": "503.62",
            "min": "497.60",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.42",
            "p50": "151.62",
            "p95": "138.04",
            "p99": "127.83",
            "min": "125.44",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3894.00",
            "p50": "3448.96",
            "p95": "1446.29",
            "p99": "913.94",
            "min": "886.04",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "154.36",
            "p50": "150.78",
            "p95": "137.53",
            "p99": "100.80",
            "min": "90.27",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3914.57",
            "p50": "3520.45",
            "p95": "1245.25",
            "p99": "702.54",
            "min": "669.88",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "107.87",
            "p50": "104.95",
            "p95": "99.00",
            "p99": "91.86",
            "min": "91.63",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "171.94",
            "p50": "160.90",
            "p95": "156.34",
            "p99": "146.89",
            "min": "146.10",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "377.07",
            "p50": "288.49",
            "p95": "197.85",
            "p99": "165.13",
            "min": "162.64",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "10127.25",
            "p50": "1632.41",
            "p95": "811.99",
            "p99": "559.59",
            "min": "505.48",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "425.19",
            "p50": "320.30",
            "p95": "249.29",
            "p99": "212.74",
            "min": "205.48",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "27901.77",
            "p50": "8506.78",
            "p95": "2377.94",
            "p99": "1528.16",
            "min": "1458.55",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6664.14",
            "p50": "3164.29",
            "p95": "1691.20",
            "p99": "1224.13",
            "min": "1126.96",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "340.95",
            "p50": "270.36",
            "p95": "201.94",
            "p99": "158.43",
            "min": "151.59",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "137.20",
            "p50": "127.88",
            "p95": "115.00",
            "p99": "102.27",
            "min": "101.29",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "140.57",
            "p50": "131.50",
            "p95": "125.28",
            "p99": "122.71",
            "min": "122.68",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "120.77",
            "p50": "111.28",
            "p95": "94.10",
            "p99": "90.75",
            "min": "90.08",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "137.46",
            "p50": "133.40",
            "p95": "123.73",
            "p99": "119.55",
            "min": "119.24",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "148.97",
            "p50": "146.07",
            "p95": "139.24",
            "p99": "88.78",
            "min": "55.57",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "102.61",
            "p50": "98.78",
            "p95": "78.02",
            "p99": "75.22",
            "min": "75.10",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "154.10",
            "p50": "130.22",
            "p95": "120.41",
            "p99": "114.80",
            "min": "114.38",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1214.65",
            "p50": "1107.32",
            "p95": "378.29",
            "p99": "367.58",
            "min": "367.08",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "138.31",
            "p50": "131.11",
            "p95": "123.62",
            "p99": "113.25",
            "min": "110.75",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}