{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "169.89",
            "p50": "167.76",
            "p95": "146.45",
            "p99": "140.10",
            "min": "138.92",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "170.44",
            "p50": "168.45",
            "p95": "164.46",
            "p99": "145.02",
            "min": "144.96",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "169.79",
            "p50": "167.81",
            "p95": "159.39",
            "p99": "144.56",
            "min": "144.40",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "759.38",
            "p50": "745.06",
            "p95": "471.71",
            "p99": "430.33",
            "min": "426.78",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "403.18",
            "p50": "394.86",
            "p95": "385.40",
            "p99": "373.36",
            "min": "372.00",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "438.26",
            "p50": "429.27",
            "p95": "413.13",
            "p99": "407.84",
            "min": "407.52",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "324.05",
            "p50": "318.09",
            "p95": "308.68",
            "p99": "303.73",
            "min": "303.27",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "186.74",
            "p50": "185.13",
            "p95": "157.82",
            "p99": "157.38",
            "min": "157.32",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "270.97",
            "p50": "260.87",
            "p95": "243.53",
            "p99": "227.92",
            "min": "225.80",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "262.07",
            "p50": "254.41",
            "p95": "249.34",
            "p99": "242.96",
            "min": "242.25",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "264.11",
            "p50": "257.24",
            "p95": "251.35",
            "p99": "243.16",
            "min": "242.45",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "191.00",
            "p50": "188.26",
            "p95": "182.07",
            "p99": "180.20",
            "min": "179.96",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "319.97",
            "p50": "313.49",
            "p95": "301.76",
            "p99": "290.01",
            "min": "286.77",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "309.43",
            "p50": "303.27",
            "p95": "293.43",
            "p99": "288.28",
            "min": "288.19",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "110.76",
            "p50": "106.88",
            "p95": "104.38",
            "p99": "103.57",
            "min": "103.28",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "170.12",
            "p50": "167.98",
            "p95": "164.62",
            "p99": "164.95",
            "min": "162.16",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "289.50",
            "p50": "246.51",
            "p95": "228.28",
            "p99": "235.58",
            "min": "222.93",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "241.29",
            "p50": "193.98",
            "p95": "181.46",
            "p99": "207.15",
            "min": "181.40",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "167.32",
            "p50": "164.39",
            "p95": "163.04",
            "p99": "164.70",
            "min": "162.72",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "888.53",
            "p50": "826.19",
            "p95": "788.89",
            "p99": "765.21",
            "min": "764.84",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "845.24",
            "p50": "817.27",
            "p95": "786.28",
            "p99": "756.17",
            "min": "754.97",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1033.73",
            "p50": "948.46",
            "p95": "893.40",
            "p99": "849.71",
            "min": "843.10",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1085.53",
            "p50": "969.04",
            "p95": "925.99",
            "p99": "873.92",
            "min": "855.61",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1083.71",
            "p50": "979.89",
            "p95": "933.25",
            "p99": "910.95",
            "min": "908.80",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "854.49",
            "p50": "814.96",
            "p95": "786.07",
            "p99": "759.81",
            "min": "757.95",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "199.16",
            "p50": "186.02",
            "p95": "181.25",
            "p99": "177.98",
            "min": "177.30",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "199.72",
            "p50": "186.84",
            "p95": "182.11",
            "p99": "176.03",
            "min": "175.57",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "198.74",
            "p50": "187.12",
            "p95": "181.38",
            "p99": "175.83",
            "min": "175.40",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "224.33",
            "p50": "213.23",
            "p95": "208.59",
            "p99": "128.04",
            "min": "108.93",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.84",
            "p50": "87.28",
            "p95": "74.46",
            "p99": "74.22",
            "min": "74.21",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "343.78",
            "p50": "306.09",
            "p95": "282.04",
            "p99": "274.89",
            "min": "274.38",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "335.31",
            "p50": "295.82",
            "p95": "283.24",
            "p99": "279.06",
            "min": "278.77",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "333.14",
            "p50": "299.61",
            "p95": "284.88",
            "p99": "280.65",
            "min": "280.11",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "335.94",
            "p50": "300.24",
            "p95": "280.13",
            "p99": "105.04",
            "min": "101.32",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2384.40",
            "p50": "2255.15",
            "p95": "2017.11",
            "p99": "1805.56",
            "min": "1728.01",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2317.45",
            "p50": "2191.21",
            "p95": "1993.68",
            "p99": "1811.32",
            "min": "1780.37",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "94.02",
            "p50": "93.11",
            "p95": "92.50",
            "p99": "92.15",
            "min": "92.06",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "5684.94",
            "p50": "5047.67",
            "p95": "2590.59",
            "p99": "66.16",
            "min": "62.13",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "94.09",
            "p50": "93.22",
            "p95": "92.34",
            "p99": "91.46",
            "min": "91.28",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3215.10",
            "p50": "2971.66",
            "p95": "2533.89",
            "p99": "1908.94",
            "min": "1861.10",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "262.23",
            "p50": "252.06",
            "p95": "248.35",
            "p99": "238.68",
            "min": "237.92",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "539.17",
            "p50": "531.65",
            "p95": "520.92",
            "p99": "515.69",
            "min": "515.09",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1279.01",
            "p50": "1192.71",
            "p95": "387.68",
            "p99": "374.68",
            "min": "371.81",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "17207.25",
            "p50": "8190.02",
            "p95": "2472.51",
            "p99": "789.89",
            "min": "387.77",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1147.42",
            "p50": "1099.96",
            "p95": "345.56",
            "p99": "333.65",
            "min": "332.32",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "48054.45",
            "p50": "9406.33",
            "p95": "2311.02",
            "p99": "477.44",
            "min": "377.81",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15784.36",
            "p50": "6987.62",
            "p95": "2674.19",
            "p99": "2327.47",
            "min": "2139.75",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "533.91",
            "p50": "488.21",
            "p95": "429.39",
            "p99": "372.84",
            "min": "370.14",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "517.18",
            "p50": "508.45",
            "p95": "499.93",
            "p99": "449.25",
            "min": "435.30",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "204.28",
            "p50": "201.28",
            "p95": "167.82",
            "p99": "163.62",
            "min": "162.75",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "439.71",
            "p50": "429.78",
            "p95": "417.25",
            "p99": "412.91",
            "min": "412.53",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "203.55",
            "p50": "201.64",
            "p95": "172.31",
            "p99": "171.47",
            "min": "171.38",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "328.79",
            "p50": "322.64",
            "p95": "316.39",
            "p99": "281.65",
            "min": "280.86",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "271.35",
            "p50": "267.15",
            "p95": "254.41",
            "p99": "251.56",
            "min": "251.54",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "513.33",
            "p50": "506.54",
            "p95": "492.99",
            "p99": "484.61",
            "min": "484.30",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1463.16",
            "p50": "1157.60",
            "p95": "851.29",
            "p99": "757.32",
            "min": "746.47",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "318.33",
            "p50": "311.38",
            "p95": "302.39",
            "p99": "296.86",
            "min": "295.76",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.15",
            "p50": "85.18",
            "p95": "77.63",
            "p99": "70.21",
            "min": "68.94",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "80.46",
            "p50": "77.82",
            "p95": "72.62",
            "p99": "70.46",
            "min": "70.43",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "82.07",
            "p50": "79.61",
            "p95": "72.88",
            "p99": "71.08",
            "min": "70.88",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "226.38",
            "p50": "208.65",
            "p95": "173.82",
            "p99": "79.89",
            "min": "77.06",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "173.40",
            "p50": "162.72",
            "p95": "136.62",
            "p99": "104.27",
            "min": "97.68",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "180.82",
            "p50": "166.74",
            "p95": "146.88",
            "p99": "137.25",
            "min": "136.83",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "172.59",
            "p50": "161.11",
            "p95": "135.57",
            "p99": "110.39",
            "min": "108.50",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "171.98",
            "p50": "160.02",
            "p95": "139.83",
            "p99": "120.43",
            "min": "117.76",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "194.66",
            "p50": "181.87",
            "p95": "156.62",
            "p99": "149.98",
            "min": "149.51",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "173.65",
            "p50": "164.15",
            "p95": "142.03",
            "p99": "135.10",
            "min": "134.47",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "193.41",
            "p50": "181.04",
            "p95": "157.58",
            "p99": "140.99",
            "min": "139.18",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "146.34",
            "p50": "136.68",
            "p95": "123.09",
            "p99": "116.77",
            "min": "116.71",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "213.96",
            "p50": "200.64",
            "p95": "167.97",
            "p99": "157.65",
            "min": "157.44",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "176.40",
            "p50": "163.61",
            "p95": "137.15",
            "p99": "129.27",
            "min": "129.03",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.28",
            "p50": "64.98",
            "p95": "61.08",
            "p99": "58.58",
            "min": "58.12",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "140.92",
            "p50": "128.27",
            "p95": "114.73",
            "p99": "121.41",
            "min": "110.91",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "414.82",
            "p50": "328.91",
            "p95": "229.54",
            "p99": "251.27",
            "min": "212.91",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "177.18",
            "p50": "142.81",
            "p95": "134.08",
            "p99": "152.44",
            "min": "133.78",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "130.99",
            "p50": "122.68",
            "p95": "114.73",
            "p99": "120.08",
            "min": "111.85",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1171.46",
            "p50": "925.54",
            "p95": "542.04",
            "p99": "432.04",
            "min": "431.19",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1030.91",
            "p50": "820.87",
            "p95": "554.75",
            "p99": "432.15",
            "min": "411.68",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1370.99",
            "p50": "1052.90",
            "p95": "685.79",
            "p99": "464.71",
            "min": "457.30",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1246.17",
            "p50": "988.87",
            "p95": "641.16",
            "p99": "525.90",
            "min": "512.19",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1241.36",
            "p50": "967.40",
            "p95": "564.18",
            "p99": "450.08",
            "min": "449.94",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1049.24",
            "p50": "832.43",
            "p95": "527.83",
            "p99": "456.02",
            "min": "450.44",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "696.23",
            "p50": "555.48",
            "p95": "429.46",
            "p99": "352.33",
            "min": "348.15",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "678.55",
            "p50": "548.23",
            "p95": "386.51",
            "p99": "360.49",
            "min": "359.60",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "686.70",
            "p50": "543.05",
            "p95": "393.94",
            "p99": "350.62",
            "min": "347.96",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "698.54",
            "p50": "555.68",
            "p95": "390.50",
            "p99": "301.25",
            "min": "293.64",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "290.18",
            "p50": "266.37",
            "p95": "228.29",
            "p99": "204.05",
            "min": "198.42",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "587.74",
            "p50": "466.09",
            "p95": "353.31",
            "p99": "313.83",
            "min": "311.95",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "578.80",
            "p50": "474.72",
            "p95": "337.64",
            "p99": "247.93",
            "min": "236.40",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "589.44",
            "p50": "493.07",
            "p95": "328.71",
            "p99": "296.98",
            "min": "294.63",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "608.13",
            "p50": "496.24",
            "p95": "346.04",
            "p99": "258.94",
            "min": "240.54",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.70",
            "p50": "102.44",
            "p95": "93.11",
            "p99": "89.27",
            "min": "88.27",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.11",
            "p50": "102.48",
            "p95": "91.49",
            "p99": "85.16",
            "min": "81.11",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.15",
            "p50": "94.78",
            "p95": "85.56",
            "p99": "82.23",
            "min": "81.83",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "253.86",
            "p50": "234.59",
            "p95": "192.05",
            "p99": "151.19",
            "min": "144.21",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.82",
            "p50": "95.02",
            "p95": "85.94",
            "p99": "83.33",
            "min": "83.08",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "246.73",
            "p50": "227.47",
            "p95": "196.60",
            "p99": "171.55",
            "min": "169.43",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "196.10",
            "p50": "181.36",
            "p95": "153.49",
            "p99": "146.19",
            "min": "146.19",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "199.59",
            "p50": "184.78",
            "p95": "160.15",
            "p99": "149.81",
            "min": "148.40",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "468.52",
            "p50": "410.31",
            "p95": "313.14",
            "p99": "277.53",
            "min": "276.15",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5050.05",
            "p50": "2276.59",
            "p95": "934.89",
            "p99": "671.03",
            "min": "656.59",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "447.61",
            "p50": "395.24",
            "p95": "305.41",
            "p99": "271.56",
            "min": "267.47",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "16737.48",
            "p50": "3990.21",
            "p95": "1366.57",
            "p99": "640.70",
            "min": "615.47",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3306.40",
            "p50": "1763.77",
            "p95": "839.54",
            "p99": "661.16",
            "min": "563.55",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "232.69",
            "p50": "208.60",
            "p95": "174.92",
            "p99": "156.43",
            "min": "149.46",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "248.19",
            "p50": "226.80",
            "p95": "192.69",
            "p99": "142.74",
            "min": "124.28",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "92.02",
            "p50": "88.30",
            "p95": "80.15",
            "p99": "75.15",
            "min": "75.14",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "223.41",
            "p50": "207.54",
            "p95": "179.62",
            "p99": "161.14",
            "min": "159.77",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "172.12",
            "p50": "160.84",
            "p95": "135.30",
            "p99": "120.18",
            "min": "119.82",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "202.36",
            "p50": "187.92",
            "p95": "165.32",
            "p99": "114.79",
            "min": "99.60",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "197.12",
            "p50": "182.04",
            "p95": "156.30",
            "p99": "144.10",
            "min": "142.98",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "197.52",
            "p50": "183.03",
            "p95": "156.04",
            "p99": "103.81",
            "min": "77.68",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1130.93",
            "p50": "909.84",
            "p95": "518.73",
            "p99": "458.23",
            "min": "457.32",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "177.84",
            "p50": "166.05",
            "p95": "127.18",
            "p99": "117.93",
            "min": "116.79",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.51",
            "p50": "188.53",
            "p95": "172.14",
            "p99": "161.20",
            "min": "160.97",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.46",
            "p50": "188.34",
            "p95": "169.10",
            "p99": "161.75",
            "min": "160.56",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "194.91",
            "p50": "189.98",
            "p95": "173.65",
            "p99": "168.61",
            "min": "168.27",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1190.40",
            "p50": "1106.14",
            "p95": "658.62",
            "p99": "527.19",
            "min": "523.90",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "703.07",
            "p50": "634.13",
            "p95": "513.37",
            "p99": "423.97",
            "min": "409.27",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "811.97",
            "p50": "747.32",
            "p95": "585.60",
            "p99": "455.21",
            "min": "433.13",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "747.24",
            "p50": "668.48",
            "p95": "524.56",
            "p99": "416.09",
            "min": "415.39",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "265.35",
            "p50": "253.50",
            "p95": "226.41",
            "p99": "175.35",
            "min": "166.74",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "913.13",
            "p50": "823.06",
            "p95": "590.19",
            "p99": "470.29",
            "min": "464.13",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "870.34",
            "p50": "792.66",
            "p95": "523.87",
            "p99": "455.94",
            "min": "453.52",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "871.08",
            "p50": "777.12",
            "p95": "508.68",
            "p99": "101.70",
            "min": "85.47",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "287.00",
            "p50": "272.40",
            "p95": "235.41",
            "p99": "219.54",
            "min": "219.39",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "654.61",
            "p50": "602.19",
            "p95": "462.34",
            "p99": "391.01",
            "min": "379.75",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "862.42",
            "p50": "756.19",
            "p95": "544.61",
            "p99": "445.11",
            "min": "440.25",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "111.49",
            "p50": "106.70",
            "p95": "101.66",
            "p99": "96.81",
            "min": "96.39",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "96.58",
            "p50": "94.98",
            "p95": "89.79",
            "p99": "90.28",
            "min": "86.88",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "413.00",
            "p50": "387.24",
            "p95": "308.78",
            "p99": "307.72",
            "min": "283.03",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "132.11",
            "p50": "103.01",
            "p95": "96.78",
            "p99": "111.07",
            "min": "95.19",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "91.39",
            "p50": "88.60",
            "p95": "84.56",
            "p99": "86.49",
            "min": "82.80",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1702.89",
            "p50": "1383.56",
            "p95": "784.07",
            "p99": "622.19",
            "min": "615.95",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1637.78",
            "p50": "1450.79",
            "p95": "737.00",
            "p99": "627.23",
            "min": "606.49",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2027.62",
            "p50": "1647.46",
            "p95": "913.38",
            "p99": "649.43",
            "min": "642.52",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2020.05",
            "p50": "1647.32",
            "p95": "886.84",
            "p99": "632.40",
            "min": "630.62",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2021.25",
            "p50": "1625.03",
            "p95": "840.51",
            "p99": "700.07",
            "min": "643.54",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1654.78",
            "p50": "1469.87",
            "p95": "851.75",
            "p99": "673.46",
            "min": "619.34",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "635.87",
            "p50": "569.13",
            "p95": "439.80",
            "p99": "385.15",
            "min": "379.08",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "628.76",
            "p50": "568.68",
            "p95": "454.84",
            "p99": "384.32",
            "min": "382.77",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "631.19",
            "p50": "568.92",
            "p95": "460.27",
            "p99": "392.72",
            "min": "383.37",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "650.88",
            "p50": "581.06",
            "p95": "436.03",
            "p99": "423.45",
            "min": "421.14",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.06",
            "p50": "86.02",
            "p95": "82.08",
            "p99": "79.67",
            "min": "79.65",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "571.20",
            "p50": "515.64",
            "p95": "389.62",
            "p99": "348.10",
            "min": "346.69",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "540.39",
            "p50": "488.66",
            "p95": "407.66",
            "p99": "349.27",
            "min": "349.17",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "538.87",
            "p50": "486.07",
            "p95": "388.34",
            "p99": "341.40",
            "min": "339.30",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "542.97",
            "p50": "482.84",
            "p95": "387.77",
            "p99": "352.22",
            "min": "345.36",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1357.61",
            "p50": "1189.00",
            "p95": "729.95",
            "p99": "545.10",
            "min": "535.76",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1661.60",
            "p50": "1384.80",
            "p95": "821.49",
            "p99": "618.94",
            "min": "610.09",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.14",
            "p50": "71.35",
            "p95": "68.27",
            "p99": "67.22",
            "min": "67.09",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "8828.51",
            "p50": "4257.33",
            "p95": "2318.63",
            "p99": "1974.68",
            "min": "1801.67",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.20",
            "p50": "71.35",
            "p95": "68.42",
            "p99": "66.92",
            "min": "66.89",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "221.40",
            "p50": "217.26",
            "p95": "191.96",
            "p99": "179.25",
            "min": "179.18",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "869.86",
            "p50": "779.10",
            "p95": "573.19",
            "p99": "499.88",
            "min": "491.80",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.64",
            "p50": "624.46",
            "p95": "475.81",
            "p99": "388.13",
            "min": "382.45",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1133.75",
            "p50": "1032.96",
            "p95": "673.22",
            "p99": "602.12",
            "min": "601.18",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "25704.05",
            "p50": "9254.98",
            "p95": "2686.73",
            "p99": "1915.36",
            "min": "1748.69",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1135.58",
            "p50": "1055.80",
            "p95": "724.41",
            "p99": "595.80",
            "min": "573.43",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "58494.49",
            "p50": "9285.68",
            "p95": "2614.89",
            "p99": "1619.81",
            "min": "1618.67",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "15418.19",
            "p50": "6067.97",
            "p95": "1281.91",
            "p99": "795.83",
            "min": "784.87",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "568.70",
            "p50": "500.16",
            "p95": "418.28",
            "p99": "340.26",
            "min": "334.60",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "987.23",
            "p50": "894.66",
            "p95": "611.99",
            "p99": "559.70",
            "min": "548.47",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "286.71",
            "p50": "279.03",
            "p95": "246.72",
            "p99": "225.66",
            "min": "222.90",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1207.66",
            "p50": "1057.57",
            "p95": "671.88",
            "p99": "541.59",
            "min": "531.73",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "265.33",
            "p50": "253.58",
            "p95": "228.92",
            "p99": "210.53",
            "min": "208.18",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "537.19",
            "p50": "514.01",
            "p95": "409.73",
            "p99": "341.71",
            "min": "341.20",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "834.76",
            "p50": "731.85",
            "p95": "533.29",
            "p99": "508.38",
            "min": "508.20",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "916.29",
            "p50": "862.08",
            "p95": "566.31",
            "p99": "462.18",
            "min": "462.02",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2315.24",
            "p50": "1898.05",
            "p95": "1049.33",
            "p99": "962.31",
            "min": "950.53",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "897.18",
            "p50": "815.14",
            "p95": "556.85",
            "p99": "484.37",
            "min": "469.98",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "81.78",
            "p50": "78.96",
            "p95": "68.19",
            "p99": "63.93",
            "min": "63.72",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "75.24",
            "p50": "72.67",
            "p95": "65.31",
            "p99": "58.91",
            "min": "58.12",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "76.56",
            "p50": "73.65",
            "p95": "67.84",
            "p99": "64.72",
            "min": "64.62",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "209.99",
            "p50": "191.74",
            "p95": "152.07",
            "p99": "128.49",
            "min": "128.35",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.64",
            "p50": "98.55",
            "p95": "85.92",
            "p99": "80.11",
            "min": "79.72",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.49",
            "p50": "103.64",
            "p95": "91.03",
            "p99": "64.61",
            "min": "64.26",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "140.06",
            "p50": "132.47",
            "p95": "111.00",
            "p99": "102.53",
            "min": "101.75",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "140.35",
            "p50": "131.89",
            "p95": "115.48",
            "p99": "104.81",
            "min": "103.91",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "186.39",
            "p50": "172.59",
            "p95": "137.41",
            "p99": "118.27",
            "min": "116.93",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "182.94",
            "p50": "168.99",
            "p95": "132.58",
            "p99": "117.61",
            "min": "115.43",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "183.05",
            "p50": "169.06",
            "p95": "140.02",
            "p99": "123.85",
            "min": "122.56",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.96",
            "p50": "120.53",
            "p95": "99.09",
            "p99": "72.96",
            "min": "67.02",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "204.64",
            "p50": "185.92",
            "p95": "151.12",
            "p99": "137.49",
            "min": "135.89",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "188.07",
            "p50": "173.02",
            "p95": "142.57",
            "p99": "124.35",
            "min": "122.05",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "70.90",
            "p50": "67.16",
            "p95": "60.98",
            "p99": "57.30",
            "min": "56.36",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "130.46",
            "p50": "119.46",
            "p95": "103.71",
            "p99": "110.77",
            "min": "100.16",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "210.61",
            "p50": "190.38",
            "p95": "141.59",
            "p99": "149.42",
            "min": "135.06",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "153.20",
            "p50": "137.86",
            "p95": "127.26",
            "p99": "136.83",
            "min": "124.48",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "124.77",
            "p50": "117.33",
            "p95": "103.47",
            "p99": "104.60",
            "min": "89.38",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1037.31",
            "p50": "742.78",
            "p95": "398.88",
            "p99": "268.64",
            "min": "255.22",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1013.67",
            "p50": "691.74",
            "p95": "368.93",
            "p99": "293.16",
            "min": "286.05",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1146.84",
            "p50": "778.26",
            "p95": "433.37",
            "p99": "339.17",
            "min": "304.78",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1089.59",
            "p50": "731.56",
            "p95": "386.47",
            "p99": "258.63",
            "min": "241.00",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1013.58",
            "p50": "704.05",
            "p95": "405.52",
            "p99": "314.87",
            "min": "298.03",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1014.06",
            "p50": "706.71",
            "p95": "378.54",
            "p99": "267.54",
            "min": "258.18",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "342.95",
            "p50": "290.43",
            "p95": "218.47",
            "p99": "175.86",
            "min": "175.55",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "337.77",
            "p50": "297.51",
            "p95": "229.61",
            "p99": "187.51",
            "min": "187.08",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "330.65",
            "p50": "298.10",
            "p95": "229.46",
            "p99": "154.80",
            "min": "153.64",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "372.54",
            "p50": "316.28",
            "p95": "244.60",
            "p99": "178.56",
            "min": "169.76",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "285.06",
            "p50": "249.26",
            "p95": "199.48",
            "p99": "156.04",
            "min": "146.43",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "288.25",
            "p50": "257.04",
            "p95": "202.24",
            "p99": "175.01",
            "min": "172.84",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "284.32",
            "p50": "255.82",
            "p95": "185.63",
            "p99": "161.19",
            "min": "160.67",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "284.03",
            "p50": "254.70",
            "p95": "211.41",
            "p99": "138.85",
            "min": "136.67",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "291.28",
            "p50": "256.00",
            "p95": "206.63",
            "p99": "147.94",
            "min": "144.63",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.14",
            "p50": "99.94",
            "p95": "89.61",
            "p99": "76.92",
            "min": "74.74",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.42",
            "p50": "100.30",
            "p95": "88.10",
            "p99": "84.82",
            "min": "84.79",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.29",
            "p50": "93.09",
            "p95": "83.97",
            "p99": "79.79",
            "min": "79.65",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "248.85",
            "p50": "223.48",
            "p95": "176.48",
            "p99": "140.45",
            "min": "131.42",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "96.73",
            "p50": "93.16",
            "p95": "83.21",
            "p99": "71.06",
            "min": "68.87",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "241.94",
            "p50": "217.92",
            "p95": "176.37",
            "p99": "150.19",
            "min": "148.00",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "184.97",
            "p50": "171.40",
            "p95": "141.91",
            "p99": "123.52",
            "min": "121.75",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "154.43",
            "p50": "143.30",
            "p95": "121.10",
            "p99": "106.54",
            "min": "105.34",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "437.61",
            "p50": "362.35",
            "p95": "259.98",
            "p99": "161.01",
            "min": "149.70",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4115.92",
            "p50": "1450.58",
            "p95": "434.74",
            "p99": "347.71",
            "min": "325.82",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "438.48",
            "p50": "362.23",
            "p95": "260.85",
            "p99": "211.51",
            "min": "192.54",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "10844.14",
            "p50": "1878.63",
            "p95": "561.88",
            "p99": "341.38",
            "min": "313.96",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2763.84",
            "p50": "1230.49",
            "p95": "426.13",
            "p99": "360.80",
            "min": "359.06",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "207.47",
            "p50": "187.57",
            "p95": "147.60",
            "p99": "138.48",
            "min": "138.12",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "230.64",
            "p50": "210.31",
            "p95": "167.72",
            "p99": "136.46",
            "min": "132.73",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "127.21",
            "p50": "120.83",
            "p95": "104.47",
            "p99": "90.95",
            "min": "90.18",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "207.53",
            "p50": "188.84",
            "p95": "150.82",
            "p99": "134.88",
            "min": "134.22",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "140.02",
            "p50": "133.06",
            "p95": "113.49",
            "p99": "100.80",
            "min": "98.65",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "174.35",
            "p50": "160.87",
            "p95": "129.47",
            "p99": "94.12",
            "min": "78.36",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "183.79",
            "p50": "169.97",
            "p95": "140.03",
            "p99": "129.69",
            "min": "129.08",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "185.89",
            "p50": "171.20",
            "p95": "140.49",
            "p99": "121.92",
            "min": "115.74",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "288.32",
            "p50": "219.11",
            "p95": "138.25",
            "p99": "125.73",
            "min": "118.96",
            "n": "95",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "141.99",
            "p50": "135.62",
            "p95": "114.17",
            "p99": "116.75",
            "min": "107.88",
            "n": "73",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.98",
            "p50": "85.71",
            "p95": "80.15",
            "p99": "78.08",
            "min": "77.97",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "89.99",
            "p50": "86.85",
            "p95": "82.12",
            "p99": "77.33",
            "min": "77.01",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "89.53",
            "p50": "86.30",
            "p95": "82.94",
            "p99": "80.56",
            "min": "80.26",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "189.65",
            "p50": "181.65",
            "p95": "176.33",
            "p99": "172.24",
            "min": "170.91",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "93.57",
            "p50": "90.38",
            "p95": "87.53",
            "p99": "85.20",
            "min": "85.06",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "114.53",
            "p50": "111.73",
            "p95": "107.79",
            "p99": "103.99",
            "min": "103.65",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "124.30",
            "p50": "119.89",
            "p95": "107.88",
            "p99": "102.53",
            "min": "102.53",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "128.94",
            "p50": "124.51",
            "p95": "120.71",
            "p99": "116.80",
            "min": "116.30",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "97.40",
            "p50": "94.60",
            "p95": "78.62",
            "p99": "76.70",
            "min": "76.42",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "98.68",
            "p50": "96.61",
            "p95": "94.18",
            "p99": "90.33",
            "min": "90.08",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.49",
            "p50": "96.49",
            "p95": "94.33",
            "p99": "88.39",
            "min": "88.31",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.08",
            "p50": "122.87",
            "p95": "120.11",
            "p99": "118.49",
            "min": "118.48",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "121.18",
            "p50": "118.67",
            "p95": "115.45",
            "p99": "111.27",
            "min": "110.43",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "116.40",
            "p50": "113.74",
            "p95": "110.43",
            "p99": "105.98",
            "min": "105.76",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "76.17",
            "p50": "73.41",
            "p95": "69.86",
            "p99": "67.49",
            "min": "67.39",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "98.85",
            "p50": "97.95",
            "p95": "95.05",
            "p99": "94.37",
            "min": "91.96",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "60.92",
            "p50": "59.69",
            "p95": "55.81",
            "p99": "55.46",
            "min": "54.18",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "159.43",
            "p50": "127.89",
            "p95": "119.98",
            "p99": "136.14",
            "min": "118.56",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "110.12",
            "p50": "108.44",
            "p95": "105.45",
            "p99": "106.67",
            "min": "104.07",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "379.64",
            "p50": "369.45",
            "p95": "341.80",
            "p99": "294.21",
            "min": "289.11",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "514.98",
            "p50": "488.87",
            "p95": "472.90",
            "p99": "432.45",
            "min": "426.85",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "375.25",
            "p50": "365.79",
            "p95": "340.87",
            "p99": "277.40",
            "min": "270.61",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "378.80",
            "p50": "368.20",
            "p95": "333.51",
            "p99": "291.65",
            "min": "285.74",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "379.49",
            "p50": "369.93",
            "p95": "346.08",
            "p99": "323.98",
            "min": "322.52",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "472.44",
            "p50": "452.60",
            "p95": "424.62",
            "p99": "392.38",
            "min": "389.00",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "96.39",
            "p50": "94.64",
            "p95": "89.68",
            "p99": "88.21",
            "min": "88.09",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "97.08",
            "p50": "95.33",
            "p95": "89.33",
            "p99": "86.01",
            "min": "85.49",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "95.82",
            "p50": "94.15",
            "p95": "88.99",
            "p99": "86.64",
            "min": "86.27",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "88.21",
            "p50": "86.65",
            "p95": "82.88",
            "p99": "77.20",
            "min": "76.01",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.88",
            "p50": "86.54",
            "p95": "85.79",
            "p99": "83.36",
            "min": "82.95",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "89.44",
            "p50": "87.39",
            "p95": "82.29",
            "p99": "81.84",
            "min": "81.78",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "84.84",
            "p50": "82.82",
            "p95": "78.15",
            "p99": "76.68",
            "min": "76.56",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "84.89",
            "p50": "82.77",
            "p95": "78.26",
            "p99": "76.80",
            "min": "76.61",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "85.38",
            "p50": "82.86",
            "p95": "77.61",
            "p99": "76.41",
            "min": "76.28",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1352.05",
            "p50": "1220.92",
            "p95": "764.73",
            "p99": "415.91",
            "min": "371.73",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1317.80",
            "p50": "1188.17",
            "p95": "825.16",
            "p99": "545.33",
            "min": "491.43",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "90.24",
            "p50": "89.18",
            "p95": "84.25",
            "p99": "76.46",
            "min": "73.62",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "2023.62",
            "p50": "1762.58",
            "p95": "1017.65",
            "p99": "665.10",
            "min": "592.07",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "90.14",
            "p50": "89.18",
            "p95": "84.49",
            "p99": "81.35",
            "min": "81.29",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "1639.80",
            "p50": "1474.46",
            "p95": "767.91",
            "p99": "583.28",
            "min": "581.37",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "97.99",
            "p50": "96.21",
            "p95": "93.21",
            "p99": "86.93",
            "min": "86.52",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "185.62",
            "p50": "175.84",
            "p95": "169.33",
            "p99": "167.60",
            "min": "166.93",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "409.47",
            "p50": "356.40",
            "p95": "266.98",
            "p99": "227.00",
            "min": "219.44",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7105.84",
            "p50": "2347.88",
            "p95": "1040.25",
            "p99": "764.22",
            "min": "610.53",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "440.63",
            "p50": "388.19",
            "p95": "285.73",
            "p99": "271.56",
            "min": "263.01",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "29513.10",
            "p50": "9564.02",
            "p95": "2578.53",
            "p99": "2063.56",
            "min": "2002.82",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4601.63",
            "p50": "2997.24",
            "p95": "1910.19",
            "p99": "594.70",
            "min": "432.43",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "355.12",
            "p50": "310.85",
            "p95": "235.69",
            "p99": "181.38",
            "min": "157.59",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "155.43",
            "p50": "145.26",
            "p95": "130.11",
            "p99": "99.18",
            "min": "94.07",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "125.43",
            "p50": "114.70",
            "p95": "104.89",
            "p99": "100.90",
            "min": "100.57",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "136.24",
            "p50": "120.36",
            "p95": "116.87",
            "p99": "83.65",
            "min": "65.52",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "127.46",
            "p50": "122.61",
            "p95": "116.54",
            "p99": "115.60",
            "min": "115.47",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "176.94",
            "p50": "170.60",
            "p95": "142.88",
            "p99": "139.74",
            "min": "138.15",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "94.23",
            "p50": "91.73",
            "p95": "81.54",
            "p99": "78.59",
            "min": "77.96",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "119.70",
            "p50": "114.01",
            "p95": "106.74",
            "p99": "101.68",
            "min": "99.46",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "908.99",
            "p50": "836.97",
            "p95": "320.63",
            "p99": "309.04",
            "min": "307.58",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "126.76",
            "p50": "122.41",
            "p95": "113.33",
            "p99": "108.74",
            "min": "108.57",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}