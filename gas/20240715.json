{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "170.20",
            "p50": "168.13",
            "p95": "156.72",
            "p99": "153.32",
            "min": "153.24",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "170.44",
            "p50": "168.71",
            "p95": "167.03",
            "p99": "165.68",
            "min": "165.65",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "170.04",
            "p50": "167.88",
            "p95": "163.72",
            "p99": "162.40",
            "min": "162.26",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "759.95",
            "p50": "747.32",
            "p95": "477.27",
            "p99": "437.73",
            "min": "436.51",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "404.04",
            "p50": "396.18",
            "p95": "388.51",
            "p99": "374.08",
            "min": "373.00",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "440.59",
            "p50": "432.45",
            "p95": "420.90",
            "p99": "389.33",
            "min": "381.60",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "323.60",
            "p50": "318.11",
            "p95": "310.03",
            "p99": "301.43",
            "min": "301.00",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "186.93",
            "p50": "184.89",
            "p95": "181.61",
            "p99": "178.11",
            "min": "177.91",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "265.43",
            "p50": "257.84",
            "p95": "239.91",
            "p99": "229.77",
            "min": "226.52",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "257.35",
            "p50": "253.52",
            "p95": "243.43",
            "p99": "219.72",
            "min": "215.96",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "258.73",
            "p50": "256.21",
            "p95": "249.26",
            "p99": "238.06",
            "min": "236.97",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "190.90",
            "p50": "187.95",
            "p95": "184.34",
            "p99": "181.25",
            "min": "181.04",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "319.42",
            "p50": "315.73",
            "p95": "303.68",
            "p99": "300.99",
            "min": "300.93",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "309.43",
            "p50": "304.52",
            "p95": "294.68",
            "p99": "290.16",
            "min": "289.54",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "111.04",
            "p50": "107.16",
            "p95": "104.93",
            "p99": "104.03",
            "min": "104.02",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "170.15",
            "p50": "167.90",
            "p95": "163.04",
            "p99": "163.07",
            "min": "159.26",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "293.76",
            "p50": "244.16",
            "p95": "233.05",
            "p99": "242.22",
            "min": "230.13",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "241.03",
            "p50": "193.91",
            "p95": "181.25",
            "p99": "206.54",
            "min": "180.52",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "167.21",
            "p50": "164.08",
            "p95": "162.70",
            "p99": "164.23",
            "min": "161.97",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "883.25",
            "p50": "827.66",
            "p95": "785.81",
            "p99": "746.63",
            "min": "737.26",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "845.39",
            "p50": "820.27",
            "p95": "795.10",
            "p99": "773.57",
            "min": "762.52",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1035.63",
            "p50": "950.16",
            "p95": "901.67",
            "p99": "854.48",
            "min": "853.44",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1077.09",
            "p50": "975.20",
            "p95": "929.52",
            "p99": "919.82",
            "min": "916.31",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1082.32",
            "p50": "977.88",
            "p95": "929.93",
            "p99": "898.48",
            "min": "895.56",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "853.06",
            "p50": "817.45",
            "p95": "790.95",
            "p99": "775.71",
            "min": "768.59",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "199.26",
            "p50": "186.18",
            "p95": "180.34",
            "p99": "100.56",
            "min": "80.58",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "199.98",
            "p50": "186.10",
            "p95": "181.10",
            "p99": "179.20",
            "min": "179.09",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "199.19",
            "p50": "187.26",
            "p95": "181.52",
            "p99": "175.78",
            "min": "175.64",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "225.55",
            "p50": "212.33",
            "p95": "206.24",
            "p99": "201.55",
            "min": "200.91",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.86",
            "p50": "87.39",
            "p95": "86.60",
            "p99": "85.79",
            "min": "85.45",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "341.01",
            "p50": "309.73",
            "p95": "291.82",
            "p99": "281.66",
            "min": "280.23",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "328.33",
            "p50": "296.21",
            "p95": "287.06",
            "p99": "281.55",
            "min": "281.11",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "332.16",
            "p50": "300.25",
            "p95": "291.54",
            "p99": "284.57",
            "min": "283.60",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "333.69",
            "p50": "300.71",
            "p95": "288.07",
            "p99": "140.79",
            "min": "140.51",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2396.27",
            "p50": "2264.88",
            "p95": "1926.65",
            "p99": "1092.85",
            "min": "444.75",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2313.53",
            "p50": "2189.88",
            "p95": "1957.76",
            "p99": "955.61",
            "min": "121.00",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "93.92",
            "p50": "92.99",
            "p95": "91.89",
            "p99": "87.60",
            "min": "87.29",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "5718.23",
            "p50": "5053.85",
            "p95": "2409.95",
            "p99": "71.79",
            "min": "69.34",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "94.01",
            "p50": "93.03",
            "p95": "91.96",
            "p99": "89.59",
            "min": "89.42",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3223.67",
            "p50": "2976.34",
            "p95": "2273.83",
            "p99": "773.97",
            "min": "115.90",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "255.85",
            "p50": "252.30",
            "p95": "243.82",
            "p99": "242.77",
            "min": "242.76",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "539.43",
            "p50": "532.36",
            "p95": "521.50",
            "p99": "480.07",
            "min": "472.64",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1269.16",
            "p50": "1206.67",
            "p95": "383.45",
            "p99": "368.09",
            "min": "363.55",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "17130.55",
            "p50": "8121.45",
            "p95": "2574.26",
            "p99": "2226.86",
            "min": "2173.69",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1147.26",
            "p50": "1106.30",
            "p95": "346.55",
            "p99": "339.21",
            "min": "337.77",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "49345.61",
            "p50": "9748.50",
            "p95": "2550.31",
            "p99": "1688.46",
            "min": "1673.55",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "16486.86",
            "p50": "7072.41",
            "p95": "2612.77",
            "p99": "1061.72",
            "min": "432.80",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "534.01",
            "p50": "490.35",
            "p95": "423.38",
            "p99": "367.55",
            "min": "355.52",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "517.13",
            "p50": "507.96",
            "p95": "493.32",
            "p99": "479.97",
            "min": "478.85",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "204.79",
            "p50": "201.59",
            "p95": "198.67",
            "p99": "195.35",
            "min": "195.22",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "436.63",
            "p50": "424.53",
            "p95": "412.94",
            "p99": "378.26",
            "min": "363.22",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "205.29",
            "p50": "201.89",
            "p95": "197.87",
            "p99": "185.27",
            "min": "184.17",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "328.05",
            "p50": "322.32",
            "p95": "312.17",
            "p99": "299.62",
            "min": "294.81",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "270.21",
            "p50": "265.96",
            "p95": "250.87",
            "p99": "246.71",
            "min": "246.04",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "514.39",
            "p50": "503.82",
            "p95": "489.86",
            "p99": "474.34",
            "min": "470.90",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1491.59",
            "p50": "1132.43",
            "p95": "821.55",
            "p99": "739.54",
            "min": "730.51",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "315.95",
            "p50": "311.15",
            "p95": "305.23",
            "p99": "289.03",
            "min": "286.42",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "87.94",
            "p50": "84.53",
            "p95": "77.67",
            "p99": "72.80",
            "min": "71.95",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "80.67",
            "p50": "77.72",
            "p95": "71.74",
            "p99": "70.72",
            "min": "70.64",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "82.03",
            "p50": "79.24",
            "p95": "72.12",
            "p99": "66.89",
            "min": "66.85",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "227.90",
            "p50": "206.77",
            "p95": "174.06",
            "p99": "160.56",
            "min": "157.24",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "173.18",
            "p50": "159.76",
            "p95": "143.31",
            "p99": "133.28",
            "min": "131.76",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "178.50",
            "p50": "166.87",
            "p95": "143.70",
            "p99": "103.24",
            "min": "100.38",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "173.19",
            "p50": "160.33",
            "p95": "141.71",
            "p99": "119.61",
            "min": "118.90",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "171.91",
            "p50": "159.51",
            "p95": "142.70",
            "p99": "115.95",
            "min": "115.78",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "195.76",
            "p50": "180.66",
            "p95": "150.87",
            "p99": "138.78",
            "min": "137.96",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "174.47",
            "p50": "160.55",
            "p95": "143.51",
            "p99": "131.24",
            "min": "130.80",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "194.17",
            "p50": "179.16",
            "p95": "156.84",
            "p99": "141.52",
            "min": "140.19",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "145.79",
            "p50": "136.21",
            "p95": "116.90",
            "p99": "96.38",
            "min": "94.10",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "214.39",
            "p50": "199.66",
            "p95": "172.22",
            "p99": "119.47",
            "min": "103.87",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "174.16",
            "p50": "162.27",
            "p95": "135.27",
            "p99": "102.32",
            "min": "95.31",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.15",
            "p50": "65.08",
            "p95": "60.23",
            "p99": "57.96",
            "min": "57.59",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "138.75",
            "p50": "129.62",
            "p95": "114.74",
            "p99": "121.13",
            "min": "111.63",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "408.17",
            "p50": "325.55",
            "p95": "225.93",
            "p99": "232.17",
            "min": "190.89",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "176.01",
            "p50": "143.34",
            "p95": "133.91",
            "p99": "151.76",
            "min": "133.47",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "130.21",
            "p50": "122.50",
            "p95": "110.21",
            "p99": "117.91",
            "min": "108.64",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1214.93",
            "p50": "902.14",
            "p95": "516.04",
            "p99": "414.02",
            "min": "412.28",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1038.17",
            "p50": "799.36",
            "p95": "477.57",
            "p99": "389.40",
            "min": "387.73",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1387.82",
            "p50": "998.47",
            "p95": "547.29",
            "p99": "446.37",
            "min": "445.12",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1282.82",
            "p50": "935.04",
            "p95": "531.22",
            "p99": "429.97",
            "min": "408.54",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1232.35",
            "p50": "931.51",
            "p95": "582.67",
            "p99": "435.75",
            "min": "434.42",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1075.38",
            "p50": "854.43",
            "p95": "467.79",
            "p99": "395.93",
            "min": "383.47",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "678.37",
            "p50": "532.40",
            "p95": "384.67",
            "p99": "330.24",
            "min": "329.92",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "685.53",
            "p50": "549.83",
            "p95": "355.54",
            "p99": "339.76",
            "min": "339.42",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "716.44",
            "p50": "533.52",
            "p95": "351.27",
            "p99": "294.23",
            "min": "282.12",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "697.33",
            "p50": "574.03",
            "p95": "392.08",
            "p99": "297.74",
            "min": "285.75",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "293.59",
            "p50": "263.28",
            "p95": "217.38",
            "p99": "198.04",
            "min": "196.04",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "571.22",
            "p50": "459.90",
            "p95": "348.35",
            "p99": "249.61",
            "min": "231.61",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "569.04",
            "p50": "465.01",
            "p95": "329.31",
            "p99": "278.48",
            "min": "276.00",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "588.69",
            "p50": "478.25",
            "p95": "338.44",
            "p99": "245.49",
            "min": "234.31",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "601.31",
            "p50": "492.32",
            "p95": "318.91",
            "p99": "264.21",
            "min": "259.22",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.63",
            "p50": "102.19",
            "p95": "93.11",
            "p99": "86.59",
            "min": "84.05",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.52",
            "p50": "102.83",
            "p95": "91.83",
            "p99": "86.37",
            "min": "86.13",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.01",
            "p50": "94.93",
            "p95": "88.16",
            "p99": "83.09",
            "min": "82.61",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "254.33",
            "p50": "231.79",
            "p95": "184.44",
            "p99": "161.82",
            "min": "157.73",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.62",
            "p50": "94.69",
            "p95": "85.88",
            "p99": "79.82",
            "min": "78.68",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "247.32",
            "p50": "225.33",
            "p95": "190.59",
            "p99": "161.02",
            "min": "155.95",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "195.31",
            "p50": "181.45",
            "p95": "149.46",
            "p99": "146.21",
            "min": "145.97",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "198.56",
            "p50": "185.58",
            "p95": "157.68",
            "p99": "149.29",
            "min": "148.70",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "468.27",
            "p50": "409.45",
            "p95": "310.76",
            "p99": "280.12",
            "min": "271.72",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5337.94",
            "p50": "2129.15",
            "p95": "904.64",
            "p99": "713.45",
            "min": "707.32",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "451.01",
            "p50": "387.98",
            "p95": "291.89",
            "p99": "261.27",
            "min": "259.64",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "16700.83",
            "p50": "3840.64",
            "p95": "1250.68",
            "p99": "716.68",
            "min": "714.78",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3200.31",
            "p50": "1706.54",
            "p95": "725.01",
            "p99": "573.58",
            "min": "570.57",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "236.01",
            "p50": "208.64",
            "p95": "177.64",
            "p99": "163.09",
            "min": "162.63",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "247.18",
            "p50": "226.61",
            "p95": "183.63",
            "p99": "126.01",
            "min": "123.59",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "92.19",
            "p50": "88.17",
            "p95": "81.16",
            "p99": "76.19",
            "min": "75.28",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "224.90",
            "p50": "206.15",
            "p95": "171.92",
            "p99": "113.45",
            "min": "85.29",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "172.77",
            "p50": "160.44",
            "p95": "137.01",
            "p99": "132.47",
            "min": "132.38",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "202.57",
            "p50": "186.70",
            "p95": "149.19",
            "p99": "111.51",
            "min": "99.04",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "197.01",
            "p50": "180.27",
            "p95": "150.31",
            "p99": "146.73",
            "min": "146.73",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "196.66",
            "p50": "182.42",
            "p95": "154.99",
            "p99": "144.33",
            "min": "142.89",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1141.09",
            "p50": "905.19",
            "p95": "560.03",
            "p99": "495.10",
            "min": "491.63",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "177.87",
            "p50": "166.63",
            "p95": "123.09",
            "p99": "117.80",
            "min": "116.53",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.46",
            "p50": "188.43",
            "p95": "173.85",
            "p99": "163.25",
            "min": "161.89",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.21",
            "p50": "189.18",
            "p95": "173.12",
            "p99": "162.11",
            "min": "160.61",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "194.67",
            "p50": "188.25",
            "p95": "164.88",
            "p99": "160.06",
            "min": "160.03",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1188.93",
            "p50": "1065.64",
            "p95": "710.57",
            "p99": "602.51",
            "min": "592.46",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "704.22",
            "p50": "631.31",
            "p95": "491.18",
            "p99": "416.27",
            "min": "406.08",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "815.46",
            "p50": "722.36",
            "p95": "536.74",
            "p99": "430.27",
            "min": "427.73",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "750.87",
            "p50": "684.73",
            "p95": "474.62",
            "p99": "420.33",
            "min": "418.95",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "264.29",
            "p50": "253.32",
            "p95": "220.93",
            "p99": "205.25",
            "min": "205.02",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "916.49",
            "p50": "830.50",
            "p95": "558.70",
            "p99": "468.71",
            "min": "467.03",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "870.85",
            "p50": "781.81",
            "p95": "577.37",
            "p99": "524.22",
            "min": "523.89",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "872.07",
            "p50": "766.46",
            "p95": "542.23",
            "p99": "446.23",
            "min": "442.01",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "286.92",
            "p50": "272.34",
            "p95": "241.17",
            "p99": "218.66",
            "min": "218.14",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "653.70",
            "p50": "605.63",
            "p95": "445.88",
            "p99": "399.69",
            "min": "399.46",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "859.40",
            "p50": "737.96",
            "p95": "541.78",
            "p99": "451.62",
            "min": "450.31",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "111.82",
            "p50": "106.69",
            "p95": "101.73",
            "p99": "97.83",
            "min": "97.05",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "96.57",
            "p50": "93.39",
            "p95": "89.20",
            "p99": "90.78",
            "min": "87.67",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "415.61",
            "p50": "371.79",
            "p95": "298.35",
            "p99": "315.91",
            "min": "292.52",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "133.05",
            "p50": "103.21",
            "p95": "96.58",
            "p99": "112.08",
            "min": "96.25",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "90.92",
            "p50": "87.91",
            "p95": "83.84",
            "p99": "86.64",
            "min": "83.40",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1698.32",
            "p50": "1387.53",
            "p95": "791.28",
            "p99": "612.63",
            "min": "611.82",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1636.97",
            "p50": "1414.44",
            "p95": "846.35",
            "p99": "600.95",
            "min": "594.39",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2040.96",
            "p50": "1558.93",
            "p95": "811.37",
            "p99": "629.00",
            "min": "618.45",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2010.62",
            "p50": "1517.19",
            "p95": "907.00",
            "p99": "800.35",
            "min": "788.37",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2006.44",
            "p50": "1583.62",
            "p95": "911.07",
            "p99": "629.01",
            "min": "624.39",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1654.83",
            "p50": "1386.42",
            "p95": "796.07",
            "p99": "590.34",
            "min": "577.82",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "631.61",
            "p50": "561.68",
            "p95": "457.66",
            "p99": "378.38",
            "min": "378.04",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "635.39",
            "p50": "567.48",
            "p95": "430.94",
            "p99": "382.12",
            "min": "381.16",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "628.35",
            "p50": "557.62",
            "p95": "447.36",
            "p99": "392.35",
            "min": "384.62",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "652.07",
            "p50": "572.59",
            "p95": "445.41",
            "p99": "373.86",
            "min": "370.03",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.05",
            "p50": "85.72",
            "p95": "81.64",
            "p99": "79.41",
            "min": "79.36",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "569.18",
            "p50": "520.23",
            "p95": "419.79",
            "p99": "374.05",
            "min": "371.23",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "539.28",
            "p50": "480.50",
            "p95": "386.53",
            "p99": "349.78",
            "min": "349.39",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "542.80",
            "p50": "490.50",
            "p95": "400.38",
            "p99": "352.83",
            "min": "352.17",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "546.06",
            "p50": "495.61",
            "p95": "389.48",
            "p99": "353.76",
            "min": "353.33",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1356.52",
            "p50": "1189.56",
            "p95": "745.73",
            "p99": "565.51",
            "min": "552.34",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1660.17",
            "p50": "1462.51",
            "p95": "841.09",
            "p99": "629.00",
            "min": "613.20",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.12",
            "p50": "71.24",
            "p95": "68.36",
            "p99": "66.72",
            "min": "66.57",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "8741.97",
            "p50": "4910.01",
            "p95": "2322.87",
            "p99": "1992.47",
            "min": "1811.55",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.20",
            "p50": "71.28",
            "p95": "68.26",
            "p99": "66.85",
            "min": "66.82",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "221.44",
            "p50": "216.42",
            "p95": "194.86",
            "p99": "180.06",
            "min": "179.85",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "873.20",
            "p50": "767.50",
            "p95": "606.20",
            "p99": "503.37",
            "min": "496.76",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "671.29",
            "p50": "622.13",
            "p95": "481.96",
            "p99": "411.87",
            "min": "393.36",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1129.33",
            "p50": "1023.96",
            "p95": "701.38",
            "p99": "614.64",
            "min": "564.06",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "25975.66",
            "p50": "9158.06",
            "p95": "2675.06",
            "p99": "1724.02",
            "min": "1719.53",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1135.45",
            "p50": "1013.57",
            "p95": "675.39",
            "p99": "543.83",
            "min": "539.66",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "55969.33",
            "p50": "8777.10",
            "p95": "2647.05",
            "p99": "2036.99",
            "min": "1862.02",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13955.28",
            "p50": "5802.83",
            "p95": "1083.09",
            "p99": "813.72",
            "min": "803.53",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "565.12",
            "p50": "495.32",
            "p95": "411.70",
            "p99": "364.76",
            "min": "340.62",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "991.66",
            "p50": "891.48",
            "p95": "656.66",
            "p99": "481.58",
            "min": "481.15",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "287.02",
            "p50": "274.62",
            "p95": "244.33",
            "p99": "221.63",
            "min": "220.64",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1214.72",
            "p50": "1119.36",
            "p95": "723.79",
            "p99": "557.61",
            "min": "534.37",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "265.71",
            "p50": "255.59",
            "p95": "225.76",
            "p99": "209.06",
            "min": "206.21",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "538.25",
            "p50": "515.25",
            "p95": "400.15",
            "p99": "345.50",
            "min": "342.75",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "882.39",
            "p50": "736.45",
            "p95": "516.50",
            "p99": "449.57",
            "min": "446.38",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "914.64",
            "p50": "816.20",
            "p95": "579.18",
            "p99": "479.21",
            "min": "449.66",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2298.88",
            "p50": "1929.29",
            "p95": "1071.83",
            "p99": "899.85",
            "min": "891.27",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "895.57",
            "p50": "835.80",
            "p95": "530.86",
            "p99": "258.97",
            "min": "170.43",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "81.94",
            "p50": "78.95",
            "p95": "70.72",
            "p99": "63.51",
            "min": "63.33",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "75.21",
            "p50": "72.55",
            "p95": "65.97",
            "p99": "64.46",
            "min": "64.23",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "76.64",
            "p50": "73.77",
            "p95": "67.07",
            "p99": "62.57",
            "min": "62.42",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "210.51",
            "p50": "190.38",
            "p95": "151.30",
            "p99": "121.45",
            "min": "118.71",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.45",
            "p50": "98.35",
            "p95": "85.43",
            "p99": "76.18",
            "min": "76.11",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.26",
            "p50": "103.57",
            "p95": "88.52",
            "p99": "76.62",
            "min": "76.32",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "140.50",
            "p50": "131.71",
            "p95": "108.74",
            "p99": "91.22",
            "min": "89.23",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "139.95",
            "p50": "131.80",
            "p95": "116.63",
            "p99": "110.70",
            "min": "110.65",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "186.38",
            "p50": "171.47",
            "p95": "140.41",
            "p99": "129.64",
            "min": "129.58",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "181.94",
            "p50": "169.35",
            "p95": "142.49",
            "p99": "132.39",
            "min": "131.06",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "183.93",
            "p50": "169.10",
            "p95": "141.49",
            "p99": "124.28",
            "min": "123.57",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "126.56",
            "p50": "120.80",
            "p95": "105.15",
            "p99": "92.76",
            "min": "91.55",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "203.50",
            "p50": "185.57",
            "p95": "148.37",
            "p99": "131.44",
            "min": "130.36",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "187.39",
            "p50": "171.97",
            "p95": "141.69",
            "p99": "115.46",
            "min": "114.67",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "70.80",
            "p50": "67.27",
            "p95": "60.53",
            "p99": "56.02",
            "min": "54.26",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "130.39",
            "p50": "121.89",
            "p95": "108.22",
            "p99": "115.19",
            "min": "107.01",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "208.68",
            "p50": "185.32",
            "p95": "153.48",
            "p99": "150.41",
            "min": "136.74",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "153.71",
            "p50": "136.88",
            "p95": "127.87",
            "p99": "137.59",
            "min": "125.43",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "125.25",
            "p50": "118.29",
            "p95": "97.34",
            "p99": "107.94",
            "min": "94.89",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1035.16",
            "p50": "721.52",
            "p95": "403.84",
            "p99": "287.73",
            "min": "281.61",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1005.94",
            "p50": "689.50",
            "p95": "367.33",
            "p99": "269.08",
            "min": "258.64",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1159.98",
            "p50": "755.61",
            "p95": "381.44",
            "p99": "300.52",
            "min": "291.01",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1081.70",
            "p50": "728.72",
            "p95": "388.06",
            "p99": "282.33",
            "min": "271.49",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1015.32",
            "p50": "695.81",
            "p95": "379.02",
            "p99": "271.00",
            "min": "262.58",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1009.15",
            "p50": "698.48",
            "p95": "390.62",
            "p99": "329.18",
            "min": "308.57",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "335.53",
            "p50": "295.82",
            "p95": "223.49",
            "p99": "182.64",
            "min": "178.93",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "332.21",
            "p50": "290.44",
            "p95": "226.11",
            "p99": "172.55",
            "min": "168.86",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "336.94",
            "p50": "293.40",
            "p95": "227.73",
            "p99": "194.32",
            "min": "190.49",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "367.58",
            "p50": "317.57",
            "p95": "243.09",
            "p99": "213.30",
            "min": "209.66",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "284.06",
            "p50": "249.83",
            "p95": "199.50",
            "p99": "176.83",
            "min": "172.34",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "280.61",
            "p50": "258.47",
            "p95": "181.76",
            "p99": "163.32",
            "min": "162.71",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "286.58",
            "p50": "251.68",
            "p95": "189.51",
            "p99": "155.32",
            "min": "148.26",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "284.46",
            "p50": "256.90",
            "p95": "203.47",
            "p99": "189.15",
            "min": "188.07",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "290.16",
            "p50": "257.07",
            "p95": "202.81",
            "p99": "174.72",
            "min": "174.23",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.44",
            "p50": "100.15",
            "p95": "88.69",
            "p99": "78.14",
            "min": "75.66",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.66",
            "p50": "100.22",
            "p95": "85.91",
            "p99": "81.54",
            "min": "81.51",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.52",
            "p50": "93.24",
            "p95": "82.66",
            "p99": "73.82",
            "min": "73.54",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "249.13",
            "p50": "223.58",
            "p95": "171.59",
            "p99": "142.43",
            "min": "135.30",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "97.06",
            "p50": "92.57",
            "p95": "80.48",
            "p99": "70.74",
            "min": "70.00",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "241.73",
            "p50": "217.99",
            "p95": "162.09",
            "p99": "143.67",
            "min": "137.61",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "185.03",
            "p50": "169.29",
            "p95": "140.44",
            "p99": "133.46",
            "min": "133.24",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "153.60",
            "p50": "143.21",
            "p95": "117.62",
            "p99": "89.03",
            "min": "79.33",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "436.13",
            "p50": "359.46",
            "p95": "234.17",
            "p99": "181.15",
            "min": "179.35",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4503.29",
            "p50": "1359.40",
            "p95": "443.92",
            "p99": "329.42",
            "min": "323.84",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "437.16",
            "p50": "350.92",
            "p95": "252.58",
            "p99": "209.84",
            "min": "200.58",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "10464.71",
            "p50": "1942.25",
            "p95": "641.34",
            "p99": "427.82",
            "min": "402.83",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3105.04",
            "p50": "1186.70",
            "p95": "439.95",
            "p99": "309.06",
            "min": "307.38",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "206.73",
            "p50": "186.76",
            "p95": "153.50",
            "p99": "136.88",
            "min": "131.24",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "231.32",
            "p50": "209.61",
            "p95": "163.60",
            "p99": "139.01",
            "min": "136.26",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "127.17",
            "p50": "120.24",
            "p95": "104.58",
            "p99": "96.69",
            "min": "96.57",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "207.87",
            "p50": "189.80",
            "p95": "153.18",
            "p99": "138.06",
            "min": "136.02",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "140.40",
            "p50": "132.88",
            "p95": "111.21",
            "p99": "93.66",
            "min": "91.62",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "173.88",
            "p50": "160.46",
            "p95": "130.62",
            "p99": "112.42",
            "min": "110.79",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "182.97",
            "p50": "171.12",
            "p95": "140.42",
            "p99": "130.66",
            "min": "130.07",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "185.66",
            "p50": "169.84",
            "p95": "133.97",
            "p99": "120.13",
            "min": "117.79",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "285.25",
            "p50": "214.29",
            "p95": "141.04",
            "p99": "139.97",
            "min": "130.70",
            "n": "93",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "142.01",
            "p50": "133.79",
            "p95": "111.30",
            "p99": "111.64",
            "min": "100.41",
            "n": "72",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.99",
            "p50": "85.85",
            "p95": "80.22",
            "p99": "75.74",
            "min": "75.54",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "90.35",
            "p50": "87.03",
            "p95": "82.59",
            "p99": "78.83",
            "min": "78.31",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "89.83",
            "p50": "86.60",
            "p95": "83.37",
            "p99": "81.55",
            "min": "81.45",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "190.11",
            "p50": "186.36",
            "p95": "177.34",
            "p99": "158.10",
            "min": "149.75",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "94.39",
            "p50": "91.12",
            "p95": "87.02",
            "p99": "85.07",
            "min": "84.99",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "116.42",
            "p50": "111.88",
            "p95": "106.87",
            "p99": "104.86",
            "min": "104.80",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "123.66",
            "p50": "121.34",
            "p95": "108.98",
            "p99": "105.32",
            "min": "105.11",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "127.06",
            "p50": "124.36",
            "p95": "121.41",
            "p99": "114.48",
            "min": "114.18",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "97.44",
            "p50": "95.38",
            "p95": "93.24",
            "p99": "91.52",
            "min": "91.25",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "97.48",
            "p50": "96.54",
            "p95": "94.69",
            "p99": "91.36",
            "min": "91.23",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.82",
            "p50": "96.66",
            "p95": "94.98",
            "p99": "93.84",
            "min": "93.82",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "125.44",
            "p50": "122.48",
            "p95": "121.29",
            "p99": "116.74",
            "min": "115.75",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "121.22",
            "p50": "118.77",
            "p95": "115.95",
            "p99": "110.04",
            "min": "109.15",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "115.95",
            "p50": "113.57",
            "p95": "110.11",
            "p99": "105.18",
            "min": "105.16",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "76.36",
            "p50": "73.30",
            "p95": "69.72",
            "p99": "65.56",
            "min": "65.44",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "98.93",
            "p50": "98.06",
            "p95": "92.45",
            "p99": "93.88",
            "min": "91.16",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "61.01",
            "p50": "59.26",
            "p95": "55.70",
            "p99": "54.57",
            "min": "53.06",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "159.12",
            "p50": "127.94",
            "p95": "120.03",
            "p99": "135.74",
            "min": "118.11",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "110.13",
            "p50": "108.38",
            "p95": "105.51",
            "p99": "106.76",
            "min": "104.22",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "375.96",
            "p50": "364.67",
            "p95": "336.58",
            "p99": "297.31",
            "min": "284.11",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "512.81",
            "p50": "485.11",
            "p95": "468.89",
            "p99": "448.03",
            "min": "443.66",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "372.02",
            "p50": "358.85",
            "p95": "337.76",
            "p99": "290.95",
            "min": "288.45",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "373.75",
            "p50": "361.71",
            "p95": "332.18",
            "p99": "294.92",
            "min": "283.26",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "376.54",
            "p50": "365.44",
            "p95": "349.04",
            "p99": "319.39",
            "min": "319.25",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "469.47",
            "p50": "448.52",
            "p95": "416.56",
            "p99": "375.82",
            "min": "372.20",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "97.01",
            "p50": "94.06",
            "p95": "89.14",
            "p99": "84.66",
            "min": "83.97",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "97.75",
            "p50": "94.40",
            "p95": "89.52",
            "p99": "88.24",
            "min": "88.20",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "96.16",
            "p50": "93.36",
            "p95": "88.82",
            "p99": "87.47",
            "min": "87.47",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "88.21",
            "p50": "86.59",
            "p95": "83.03",
            "p99": "82.66",
            "min": "82.65",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.91",
            "p50": "86.50",
            "p95": "85.98",
            "p99": "85.00",
            "min": "84.71",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "89.36",
            "p50": "87.01",
            "p95": "80.63",
            "p99": "77.03",
            "min": "76.90",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "85.29",
            "p50": "82.48",
            "p95": "77.12",
            "p99": "76.51",
            "min": "76.46",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "85.04",
            "p50": "82.44",
            "p95": "77.43",
            "p99": "76.88",
            "min": "76.87",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "85.32",
            "p50": "82.31",
            "p95": "76.92",
            "p99": "75.98",
            "min": "75.83",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1356.83",
            "p50": "1241.27",
            "p95": "720.39",
            "p99": "334.40",
            "min": "311.84",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1314.10",
            "p50": "1210.91",
            "p95": "818.45",
            "p99": "430.00",
            "min": "364.30",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "90.26",
            "p50": "89.42",
            "p95": "85.39",
            "p99": "78.92",
            "min": "78.89",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "2036.83",
            "p50": "1748.79",
            "p95": "1040.51",
            "p99": "713.95",
            "min": "681.04",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "90.28",
            "p50": "89.31",
            "p95": "83.86",
            "p99": "79.17",
            "min": "78.00",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "1640.76",
            "p50": "1483.88",
            "p95": "769.05",
            "p99": "434.44",
            "min": "325.77",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.01",
            "p50": "96.65",
            "p95": "92.68",
            "p99": "90.08",
            "min": "89.97",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "185.46",
            "p50": "182.34",
            "p95": "171.27",
            "p99": "164.51",
            "min": "161.45",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "408.37",
            "p50": "354.20",
            "p95": "252.66",
            "p99": "244.57",
            "min": "240.63",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "6620.92",
            "p50": "2232.06",
            "p95": "1033.44",
            "p99": "534.47",
            "min": "468.18",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "438.50",
            "p50": "383.91",
            "p95": "310.88",
            "p99": "277.13",
            "min": "276.36",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "29334.19",
            "p50": "9807.18",
            "p95": "2612.32",
            "p99": "1793.47",
            "min": "1753.27",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4750.67",
            "p50": "3033.99",
            "p95": "2025.56",
            "p99": "865.70",
            "min": "730.05",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "350.91",
            "p50": "313.24",
            "p95": "236.04",
            "p99": "227.14",
            "min": "225.96",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "156.22",
            "p50": "144.76",
            "p95": "133.06",
            "p99": "118.99",
            "min": "117.57",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "126.85",
            "p50": "114.64",
            "p95": "108.46",
            "p99": "101.89",
            "min": "100.33",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "138.96",
            "p50": "135.53",
            "p95": "119.91",
            "p99": "118.12",
            "min": "118.04",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "127.15",
            "p50": "122.82",
            "p95": "116.47",
            "p99": "114.66",
            "min": "114.32",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "176.31",
            "p50": "171.33",
            "p95": "142.72",
            "p99": "137.83",
            "min": "137.24",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "94.64",
            "p50": "93.26",
            "p95": "90.82",
            "p99": "88.08",
            "min": "87.93",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "118.70",
            "p50": "113.42",
            "p95": "107.86",
            "p99": "105.88",
            "min": "104.99",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "918.28",
            "p50": "843.65",
            "p95": "319.05",
            "p99": "311.12",
            "min": "310.09",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "126.60",
            "p50": "122.22",
            "p95": "113.72",
            "p99": "105.75",
            "min": "105.53",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}