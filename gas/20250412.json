{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "110.34",
            "p50": "106.50",
            "p95": "96.44",
            "p99": "93.01",
            "min": "92.94",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1119.23",
            "p50": "956.43",
            "p95": "596.78",
            "p99": "481.84",
            "min": "477.38",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "111.74",
            "p50": "107.25",
            "p95": "97.57",
            "p99": "94.07",
            "min": "93.72",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "765.31",
            "p50": "715.71",
            "p95": "455.13",
            "p99": "426.08",
            "min": "424.53",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "404.20",
            "p50": "371.33",
            "p95": "244.08",
            "p99": "222.52",
            "min": "221.69",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "432.93",
            "p50": "392.29",
            "p95": "256.82",
            "p99": "225.82",
            "min": "225.43",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "295.20",
            "p50": "277.94",
            "p95": "194.81",
            "p99": "173.12",
            "min": "168.45",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "185.28",
            "p50": "176.25",
            "p95": "162.59",
            "p99": "153.58",
            "min": "153.54",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "257.57",
            "p50": "240.84",
            "p95": "214.02",
            "p99": "197.36",
            "min": "195.21",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "263.79",
            "p50": "247.88",
            "p95": "214.37",
            "p99": "203.08",
            "min": "202.96",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "262.69",
            "p50": "245.40",
            "p95": "216.00",
            "p99": "201.42",
            "min": "200.12",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "203.97",
            "p50": "192.26",
            "p95": "169.83",
            "p99": "164.33",
            "min": "164.13",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "338.06",
            "p50": "321.16",
            "p95": "267.77",
            "p99": "251.24",
            "min": "248.59",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "299.62",
            "p50": "281.60",
            "p95": "236.49",
            "p99": "209.83",
            "min": "205.61",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8775.90",
            "p50": "4173.98",
            "p95": "2190.02",
            "p99": "1761.65",
            "min": "1747.49",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "3007.21",
            "p50": "1821.70",
            "p95": "917.87",
            "p99": "1619.16",
            "min": "871.75",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "330.04",
            "p50": "302.15",
            "p95": "260.31",
            "p99": "260.59",
            "min": "244.30",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1433.28",
            "p50": "790.65",
            "p95": "355.91",
            "p99": "807.80",
            "min": "335.95",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7211.75",
            "p50": "3279.98",
            "p95": "1464.87",
            "p99": "3899.76",
            "min": "1401.25",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "825.39",
            "p50": "718.52",
            "p95": "518.83",
            "p99": "472.72",
            "min": "457.60",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "813.97",
            "p50": "761.41",
            "p95": "541.30",
            "p99": "471.54",
            "min": "460.79",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "946.93",
            "p50": "813.62",
            "p95": "609.98",
            "p99": "458.33",
            "min": "450.53",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2442.20",
            "p50": "1740.34",
            "p95": "1005.50",
            "p99": "791.82",
            "min": "777.98",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2430.41",
            "p50": "1753.95",
            "p95": "975.39",
            "p99": "783.51",
            "min": "778.25",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "807.58",
            "p50": "746.32",
            "p95": "555.36",
            "p99": "473.22",
            "min": "468.69",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "172.12",
            "p50": "158.01",
            "p95": "146.63",
            "p99": "103.38",
            "min": "93.54",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "565.07",
            "p50": "503.45",
            "p95": "387.83",
            "p99": "337.03",
            "min": "337.02",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "169.11",
            "p50": "157.20",
            "p95": "146.01",
            "p99": "94.23",
            "min": "93.49",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "188.60",
            "p50": "175.21",
            "p95": "162.07",
            "p99": "115.72",
            "min": "104.92",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "33481.34",
            "p50": "7698.95",
            "p95": "2470.46",
            "p99": "1767.35",
            "min": "1460.16",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "415.41",
            "p50": "378.71",
            "p95": "319.27",
            "p99": "301.70",
            "min": "300.93",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "405.91",
            "p50": "361.73",
            "p95": "298.94",
            "p99": "274.47",
            "min": "272.11",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "392.89",
            "p50": "362.75",
            "p95": "310.29",
            "p99": "272.10",
            "min": "270.65",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "396.85",
            "p50": "357.15",
            "p95": "296.36",
            "p99": "268.46",
            "min": "266.22",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "17215.68",
            "p50": "5273.52",
            "p95": "2406.18",
            "p99": "1607.57",
            "min": "1418.59",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "16983.31",
            "p50": "5336.88",
            "p95": "2450.32",
            "p99": "1767.85",
            "min": "1446.08",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "16703.90",
            "p50": "5278.00",
            "p95": "2405.58",
            "p99": "1499.89",
            "min": "1468.50",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "17303.95",
            "p50": "5742.71",
            "p95": "2406.50",
            "p99": "2290.08",
            "min": "2279.55",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "15744.63",
            "p50": "5151.69",
            "p95": "2467.23",
            "p99": "2122.62",
            "min": "2099.54",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "16852.40",
            "p50": "5869.57",
            "p95": "2498.78",
            "p99": "1915.16",
            "min": "1722.91",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "264.91",
            "p50": "247.38",
            "p95": "211.20",
            "p99": "202.92",
            "min": "202.67",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "523.63",
            "p50": "490.79",
            "p95": "367.72",
            "p99": "336.41",
            "min": "331.72",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1640.01",
            "p50": "1298.58",
            "p95": "364.76",
            "p99": "304.01",
            "min": "303.56",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "16628.13",
            "p50": "5260.01",
            "p95": "199.39",
            "p99": "173.45",
            "min": "169.47",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1402.97",
            "p50": "1174.15",
            "p95": "726.62",
            "p99": "611.49",
            "min": "578.69",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "54018.82",
            "p50": "8968.66",
            "p95": "2586.22",
            "p99": "2235.91",
            "min": "2235.19",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "14531.08",
            "p50": "6212.10",
            "p95": "198.13",
            "p99": "180.39",
            "min": "178.79",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "560.81",
            "p50": "497.73",
            "p95": "416.96",
            "p99": "344.40",
            "min": "336.04",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "550.47",
            "p50": "501.80",
            "p95": "381.83",
            "p99": "349.83",
            "min": "349.54",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "201.51",
            "p50": "193.72",
            "p95": "177.86",
            "p99": "167.24",
            "min": "166.07",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "387.71",
            "p50": "361.84",
            "p95": "295.10",
            "p99": "275.16",
            "min": "273.84",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "201.56",
            "p50": "192.31",
            "p95": "178.53",
            "p99": "170.48",
            "min": "169.89",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "341.88",
            "p50": "321.35",
            "p95": "269.94",
            "p99": "244.39",
            "min": "240.36",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "262.81",
            "p50": "246.33",
            "p95": "210.26",
            "p99": "202.75",
            "min": "202.63",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "577.60",
            "p50": "533.67",
            "p95": "422.55",
            "p99": "365.00",
            "min": "352.26",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1447.53",
            "p50": "1287.32",
            "p95": "965.48",
            "p99": "728.79",
            "min": "711.95",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "289.64",
            "p50": "274.90",
            "p95": "236.94",
            "p99": "224.31",
            "min": "224.25",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "141.53",
            "p50": "133.27",
            "p95": "117.34",
            "p99": "110.81",
            "min": "110.19",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "140.44",
            "p50": "133.37",
            "p95": "117.91",
            "p99": "109.01",
            "min": "107.35",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "140.71",
            "p50": "132.91",
            "p95": "118.19",
            "p99": "99.17",
            "min": "95.02",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "250.63",
            "p50": "230.05",
            "p95": "192.22",
            "p99": "167.34",
            "min": "159.13",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "189.95",
            "p50": "176.16",
            "p95": "146.77",
            "p99": "135.50",
            "min": "133.90",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "202.87",
            "p50": "188.46",
            "p95": "167.60",
            "p99": "152.13",
            "min": "151.48",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "186.20",
            "p50": "173.16",
            "p95": "146.45",
            "p99": "132.82",
            "min": "131.39",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "185.32",
            "p50": "169.83",
            "p95": "138.49",
            "p99": "122.40",
            "min": "119.92",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "209.43",
            "p50": "192.12",
            "p95": "159.24",
            "p99": "102.73",
            "min": "82.22",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "181.55",
            "p50": "169.89",
            "p95": "144.05",
            "p99": "139.00",
            "min": "138.93",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "209.07",
            "p50": "191.64",
            "p95": "164.69",
            "p99": "140.64",
            "min": "137.10",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "145.28",
            "p50": "136.81",
            "p95": "118.44",
            "p99": "74.83",
            "min": "67.46",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "229.10",
            "p50": "212.51",
            "p95": "175.47",
            "p99": "157.69",
            "min": "154.67",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "184.17",
            "p50": "171.25",
            "p95": "149.43",
            "p99": "137.00",
            "min": "134.77",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "104.07",
            "p50": "96.21",
            "p95": "88.49",
            "p99": "81.76",
            "min": "81.52",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "137.66",
            "p50": "129.12",
            "p95": "112.09",
            "p99": "118.69",
            "min": "108.48",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "434.24",
            "p50": "347.87",
            "p95": "250.96",
            "p99": "247.33",
            "min": "203.49",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "178.95",
            "p50": "142.24",
            "p95": "133.01",
            "p99": "149.79",
            "min": "127.80",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "131.13",
            "p50": "123.10",
            "p95": "110.39",
            "p99": "118.58",
            "min": "109.12",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1169.19",
            "p50": "931.60",
            "p95": "550.82",
            "p99": "435.85",
            "min": "432.60",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1033.55",
            "p50": "825.66",
            "p95": "521.28",
            "p99": "407.21",
            "min": "397.30",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1434.91",
            "p50": "1071.17",
            "p95": "610.16",
            "p99": "477.04",
            "min": "473.25",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1276.95",
            "p50": "1060.72",
            "p95": "602.06",
            "p99": "472.64",
            "min": "464.36",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1288.36",
            "p50": "961.51",
            "p95": "482.42",
            "p99": "453.40",
            "min": "445.99",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1078.35",
            "p50": "857.49",
            "p95": "561.52",
            "p99": "412.31",
            "min": "395.35",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "704.72",
            "p50": "542.66",
            "p95": "362.75",
            "p99": "252.07",
            "min": "249.69",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "674.92",
            "p50": "548.59",
            "p95": "373.75",
            "p99": "312.99",
            "min": "305.03",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "712.26",
            "p50": "558.35",
            "p95": "381.23",
            "p99": "285.55",
            "min": "274.03",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "708.41",
            "p50": "557.98",
            "p95": "423.07",
            "p99": "353.78",
            "min": "347.56",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "291.22",
            "p50": "265.37",
            "p95": "200.65",
            "p99": "194.44",
            "min": "194.33",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "608.09",
            "p50": "479.59",
            "p95": "371.25",
            "p99": "302.32",
            "min": "291.53",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "605.62",
            "p50": "484.29",
            "p95": "320.13",
            "p99": "292.95",
            "min": "290.88",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "608.74",
            "p50": "499.75",
            "p95": "358.06",
            "p99": "279.88",
            "min": "271.70",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "608.26",
            "p50": "513.34",
            "p95": "375.47",
            "p99": "341.79",
            "min": "341.02",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.28",
            "p50": "102.21",
            "p95": "94.18",
            "p99": "91.51",
            "min": "90.03",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.72",
            "p50": "102.47",
            "p95": "92.99",
            "p99": "87.39",
            "min": "87.24",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.60",
            "p50": "95.17",
            "p95": "85.41",
            "p99": "84.08",
            "min": "83.88",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "255.32",
            "p50": "232.70",
            "p95": "198.64",
            "p99": "176.85",
            "min": "176.51",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.92",
            "p50": "95.05",
            "p95": "86.67",
            "p99": "81.31",
            "min": "81.01",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "248.70",
            "p50": "225.77",
            "p95": "188.42",
            "p99": "169.11",
            "min": "161.63",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "210.54",
            "p50": "192.76",
            "p95": "168.16",
            "p99": "99.55",
            "min": "86.78",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "239.88",
            "p50": "221.94",
            "p95": "179.03",
            "p99": "131.41",
            "min": "99.66",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "525.78",
            "p50": "465.97",
            "p95": "344.46",
            "p99": "301.24",
            "min": "300.21",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5518.64",
            "p50": "2628.07",
            "p95": "1284.44",
            "p99": "1173.64",
            "min": "1173.38",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "490.63",
            "p50": "431.22",
            "p95": "325.64",
            "p99": "284.36",
            "min": "282.01",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "16968.35",
            "p50": "4063.25",
            "p95": "1519.91",
            "p99": "1137.34",
            "min": "1075.98",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3624.93",
            "p50": "2328.44",
            "p95": "931.83",
            "p99": "595.09",
            "min": "455.46",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "224.77",
            "p50": "199.12",
            "p95": "171.28",
            "p99": "148.24",
            "min": "143.33",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "259.14",
            "p50": "241.68",
            "p95": "197.77",
            "p99": "162.57",
            "min": "156.13",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "145.27",
            "p50": "138.14",
            "p95": "122.38",
            "p99": "101.01",
            "min": "99.08",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "246.98",
            "p50": "226.00",
            "p95": "185.31",
            "p99": "120.11",
            "min": "86.98",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "184.05",
            "p50": "170.50",
            "p95": "149.10",
            "p99": "141.85",
            "min": "141.40",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "222.18",
            "p50": "204.46",
            "p95": "175.48",
            "p99": "158.76",
            "min": "157.29",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "207.77",
            "p50": "193.79",
            "p95": "167.27",
            "p99": "159.37",
            "min": "159.22",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "208.60",
            "p50": "190.68",
            "p95": "163.85",
            "p99": "151.42",
            "min": "150.83",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1293.82",
            "p50": "1060.59",
            "p95": "761.73",
            "p99": "639.95",
            "min": "633.31",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "181.88",
            "p50": "169.10",
            "p95": "151.18",
            "p99": "139.83",
            "min": "139.76",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.50",
            "p50": "191.43",
            "p95": "178.44",
            "p99": "170.50",
            "min": "170.23",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "193.51",
            "p50": "190.97",
            "p95": "177.05",
            "p99": "168.86",
            "min": "167.28",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "194.70",
            "p50": "191.84",
            "p95": "184.48",
            "p99": "181.16",
            "min": "181.11",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1151.70",
            "p50": "1113.16",
            "p95": "946.33",
            "p99": "732.21",
            "min": "688.85",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "623.62",
            "p50": "613.49",
            "p95": "532.25",
            "p99": "284.09",
            "min": "238.43",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "677.16",
            "p50": "659.93",
            "p95": "546.00",
            "p99": "353.10",
            "min": "327.92",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "627.81",
            "p50": "618.64",
            "p95": "530.77",
            "p99": "492.91",
            "min": "492.72",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "781.54",
            "p50": "764.78",
            "p95": "588.87",
            "p99": "411.88",
            "min": "404.92",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "917.54",
            "p50": "892.65",
            "p95": "732.36",
            "p99": "517.73",
            "min": "459.39",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "855.77",
            "p50": "833.24",
            "p95": "698.81",
            "p99": "560.67",
            "min": "552.00",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "853.18",
            "p50": "834.11",
            "p95": "675.45",
            "p99": "503.34",
            "min": "490.10",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "844.21",
            "p50": "823.83",
            "p95": "686.28",
            "p99": "495.61",
            "min": "451.75",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "741.10",
            "p50": "726.40",
            "p95": "593.09",
            "p99": "424.56",
            "min": "409.54",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "848.98",
            "p50": "832.46",
            "p95": "708.04",
            "p99": "494.50",
            "min": "493.17",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "118.60",
            "p50": "113.75",
            "p95": "111.12",
            "p99": "104.07",
            "min": "103.19",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "95.79",
            "p50": "95.15",
            "p95": "91.60",
            "p99": "92.60",
            "min": "90.89",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "530.31",
            "p50": "508.97",
            "p95": "413.54",
            "p99": "396.71",
            "min": "365.37",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "129.57",
            "p50": "102.90",
            "p95": "96.77",
            "p99": "110.37",
            "min": "95.88",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "89.76",
            "p50": "88.17",
            "p95": "87.10",
            "p99": "85.33",
            "min": "81.98",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1833.42",
            "p50": "1761.68",
            "p95": "1162.05",
            "p99": "881.92",
            "min": "817.96",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1638.14",
            "p50": "1586.69",
            "p95": "1282.88",
            "p99": "1078.22",
            "min": "1049.17",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2292.74",
            "p50": "2182.02",
            "p95": "1252.58",
            "p99": "796.15",
            "min": "708.42",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2302.85",
            "p50": "2187.29",
            "p95": "1353.34",
            "p99": "881.53",
            "min": "864.76",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2289.17",
            "p50": "2184.93",
            "p95": "1494.83",
            "p99": "868.28",
            "min": "845.32",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1687.72",
            "p50": "1628.84",
            "p95": "915.88",
            "p99": "693.06",
            "min": "673.08",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "775.96",
            "p50": "753.13",
            "p95": "605.85",
            "p99": "482.56",
            "min": "474.79",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "777.77",
            "p50": "751.50",
            "p95": "615.50",
            "p99": "534.30",
            "min": "530.74",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "782.90",
            "p50": "760.07",
            "p95": "664.99",
            "p99": "540.08",
            "min": "534.59",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "778.87",
            "p50": "757.86",
            "p95": "672.23",
            "p99": "632.18",
            "min": "631.72",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.45",
            "p50": "86.73",
            "p95": "39.03",
            "p99": "38.77",
            "min": "38.76",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "741.83",
            "p50": "718.27",
            "p95": "605.54",
            "p99": "459.07",
            "min": "454.88",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "706.27",
            "p50": "677.20",
            "p95": "606.17",
            "p99": "546.88",
            "min": "539.81",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "703.99",
            "p50": "679.32",
            "p95": "622.11",
            "p99": "579.77",
            "min": "579.45",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "706.65",
            "p50": "678.69",
            "p95": "582.23",
            "p99": "420.23",
            "min": "401.88",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2439.39",
            "p50": "2323.10",
            "p95": "1225.60",
            "p99": "868.21",
            "min": "766.83",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2820.90",
            "p50": "2669.12",
            "p95": "1515.34",
            "p99": "956.09",
            "min": "868.75",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "105.55",
            "p50": "104.73",
            "p95": "99.27",
            "p99": "94.83",
            "min": "94.38",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "15266.80",
            "p50": "7970.11",
            "p95": "2413.25",
            "p99": "2130.07",
            "min": "1992.25",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "105.50",
            "p50": "104.72",
            "p95": "101.59",
            "p99": "96.48",
            "min": "96.45",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "6125.47",
            "p50": "5465.07",
            "p95": "1989.20",
            "p99": "1523.43",
            "min": "1499.00",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "872.69",
            "p50": "850.70",
            "p95": "612.50",
            "p99": "467.08",
            "min": "458.52",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "668.28",
            "p50": "658.59",
            "p95": "588.05",
            "p99": "243.29",
            "min": "89.30",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2192.02",
            "p50": "2066.72",
            "p95": "1204.91",
            "p99": "689.19",
            "min": "655.29",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "20706.04",
            "p50": "8606.75",
            "p95": "2382.84",
            "p99": "2101.03",
            "min": "1949.53",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2020.68",
            "p50": "1902.13",
            "p95": "1042.49",
            "p99": "619.92",
            "min": "613.20",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "83997.01",
            "p50": "9180.47",
            "p95": "2441.68",
            "p99": "1546.93",
            "min": "1283.94",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "18623.13",
            "p50": "8536.89",
            "p95": "2401.83",
            "p99": "1644.42",
            "min": "1389.19",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "791.21",
            "p50": "692.74",
            "p95": "531.29",
            "p99": "455.86",
            "min": "448.81",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "932.57",
            "p50": "906.51",
            "p95": "731.50",
            "p99": "554.73",
            "min": "545.33",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "841.50",
            "p50": "819.28",
            "p95": "703.39",
            "p99": "630.38",
            "min": "614.78",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1164.80",
            "p50": "1129.42",
            "p95": "917.89",
            "p99": "588.82",
            "min": "574.07",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "695.48",
            "p50": "683.64",
            "p95": "606.24",
            "p99": "516.48",
            "min": "511.93",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1152.03",
            "p50": "1112.62",
            "p95": "872.56",
            "p99": "679.13",
            "min": "653.92",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "814.09",
            "p50": "794.95",
            "p95": "649.89",
            "p99": "505.23",
            "min": "488.55",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "887.61",
            "p50": "866.39",
            "p95": "709.07",
            "p99": "580.43",
            "min": "556.30",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2230.50",
            "p50": "2001.05",
            "p95": "1737.31",
            "p99": "1276.98",
            "min": "1244.21",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "857.51",
            "p50": "832.93",
            "p95": "667.53",
            "p99": "581.72",
            "min": "559.97",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "123.49",
            "p50": "119.15",
            "p95": "106.81",
            "p99": "97.99",
            "min": "97.90",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "123.37",
            "p50": "118.95",
            "p95": "106.90",
            "p99": "100.06",
            "min": "99.77",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "122.89",
            "p50": "119.17",
            "p95": "105.30",
            "p99": "91.16",
            "min": "90.29",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "213.93",
            "p50": "193.26",
            "p95": "156.05",
            "p99": "110.05",
            "min": "79.72",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "103.79",
            "p50": "98.51",
            "p95": "83.78",
            "p99": "75.83",
            "min": "75.71",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.85",
            "p50": "102.75",
            "p95": "88.28",
            "p99": "83.78",
            "min": "83.21",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "139.76",
            "p50": "130.57",
            "p95": "109.30",
            "p99": "100.50",
            "min": "100.23",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "139.91",
            "p50": "130.11",
            "p95": "107.14",
            "p99": "103.85",
            "min": "103.64",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "183.95",
            "p50": "166.13",
            "p95": "134.35",
            "p99": "123.83",
            "min": "123.45",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "176.73",
            "p50": "162.81",
            "p95": "129.85",
            "p99": "125.15",
            "min": "124.94",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "177.00",
            "p50": "163.66",
            "p95": "135.26",
            "p99": "115.87",
            "min": "113.22",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.92",
            "p50": "120.96",
            "p95": "104.63",
            "p99": "93.66",
            "min": "92.24",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "203.47",
            "p50": "183.48",
            "p95": "149.57",
            "p99": "127.97",
            "min": "126.95",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "184.93",
            "p50": "169.66",
            "p95": "128.87",
            "p99": "120.83",
            "min": "120.33",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "75.66",
            "p50": "71.18",
            "p95": "65.31",
            "p99": "63.09",
            "min": "63.06",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "131.16",
            "p50": "120.80",
            "p95": "99.96",
            "p99": "109.18",
            "min": "97.34",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "210.25",
            "p50": "187.56",
            "p95": "150.70",
            "p99": "154.91",
            "min": "141.93",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "156.74",
            "p50": "134.61",
            "p95": "131.98",
            "p99": "142.34",
            "min": "131.48",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "125.80",
            "p50": "115.57",
            "p95": "103.42",
            "p99": "110.40",
            "min": "98.79",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1057.00",
            "p50": "679.58",
            "p95": "381.85",
            "p99": "267.42",
            "min": "252.17",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1013.73",
            "p50": "660.03",
            "p95": "315.55",
            "p99": "280.35",
            "min": "279.07",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1142.35",
            "p50": "717.61",
            "p95": "327.97",
            "p99": "271.80",
            "min": "266.93",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1071.48",
            "p50": "706.47",
            "p95": "351.53",
            "p99": "267.06",
            "min": "258.87",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1010.48",
            "p50": "674.62",
            "p95": "340.33",
            "p99": "271.26",
            "min": "270.49",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1010.68",
            "p50": "666.01",
            "p95": "345.18",
            "p99": "263.20",
            "min": "241.02",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "340.03",
            "p50": "294.16",
            "p95": "201.51",
            "p99": "182.21",
            "min": "179.88",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "337.70",
            "p50": "287.79",
            "p95": "202.46",
            "p99": "171.72",
            "min": "166.91",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "340.94",
            "p50": "290.31",
            "p95": "207.91",
            "p99": "187.46",
            "min": "186.93",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "358.91",
            "p50": "314.43",
            "p95": "217.37",
            "p99": "176.19",
            "min": "173.91",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "283.55",
            "p50": "248.13",
            "p95": "179.38",
            "p99": "159.79",
            "min": "157.36",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "285.13",
            "p50": "249.29",
            "p95": "182.80",
            "p99": "159.75",
            "min": "155.67",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "292.07",
            "p50": "246.91",
            "p95": "183.46",
            "p99": "170.52",
            "min": "169.99",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "288.33",
            "p50": "249.93",
            "p95": "193.11",
            "p99": "169.75",
            "min": "169.54",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "289.70",
            "p50": "249.86",
            "p95": "174.80",
            "p99": "152.29",
            "min": "149.85",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.50",
            "p50": "99.80",
            "p95": "87.69",
            "p99": "81.11",
            "min": "80.04",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.66",
            "p50": "99.45",
            "p95": "86.50",
            "p99": "80.24",
            "min": "80.01",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.64",
            "p50": "92.70",
            "p95": "79.86",
            "p99": "77.86",
            "min": "77.69",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "247.59",
            "p50": "219.41",
            "p95": "164.45",
            "p99": "154.40",
            "min": "154.06",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "96.56",
            "p50": "92.52",
            "p95": "79.51",
            "p99": "78.09",
            "min": "77.98",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "242.10",
            "p50": "215.59",
            "p95": "165.95",
            "p99": "146.49",
            "min": "142.01",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "183.16",
            "p50": "166.29",
            "p95": "135.60",
            "p99": "126.21",
            "min": "125.97",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "148.62",
            "p50": "138.09",
            "p95": "120.77",
            "p99": "111.84",
            "min": "108.01",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "439.83",
            "p50": "390.92",
            "p95": "261.98",
            "p99": "219.98",
            "min": "202.38",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5529.02",
            "p50": "2224.32",
            "p95": "669.52",
            "p99": "448.18",
            "min": "380.96",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "444.67",
            "p50": "393.63",
            "p95": "298.41",
            "p99": "244.22",
            "min": "240.13",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14747.20",
            "p50": "3600.59",
            "p95": "1165.76",
            "p99": "1015.25",
            "min": "1005.62",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3560.43",
            "p50": "1718.58",
            "p95": "590.68",
            "p99": "487.29",
            "min": "458.84",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "208.84",
            "p50": "196.66",
            "p95": "164.02",
            "p99": "151.08",
            "min": "147.36",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "233.20",
            "p50": "216.46",
            "p95": "167.51",
            "p99": "151.13",
            "min": "149.00",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "130.34",
            "p50": "122.32",
            "p95": "105.28",
            "p99": "95.77",
            "min": "95.71",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "211.12",
            "p50": "189.41",
            "p95": "146.40",
            "p99": "133.48",
            "min": "130.83",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "138.76",
            "p50": "129.97",
            "p95": "107.31",
            "p99": "99.71",
            "min": "99.44",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "176.91",
            "p50": "161.22",
            "p95": "127.28",
            "p99": "119.97",
            "min": "119.79",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "177.81",
            "p50": "163.13",
            "p95": "127.30",
            "p99": "124.42",
            "min": "124.42",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "181.11",
            "p50": "163.13",
            "p95": "136.15",
            "p99": "124.38",
            "min": "123.94",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "308.10",
            "p50": "245.84",
            "p95": "58.39",
            "p99": "53.75",
            "min": "53.66",
            "n": "106",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "146.84",
            "p50": "139.20",
            "p95": "118.23",
            "p99": "55.57",
            "min": "55.47",
            "n": "107",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "87.06",
            "p50": "83.69",
            "p95": "77.07",
            "p99": "72.73",
            "min": "72.69",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "88.72",
            "p50": "84.88",
            "p95": "82.48",
            "p99": "80.07",
            "min": "79.89",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "87.92",
            "p50": "84.39",
            "p95": "81.52",
            "p99": "79.40",
            "min": "79.32",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "192.49",
            "p50": "188.84",
            "p95": "165.77",
            "p99": "156.84",
            "min": "156.66",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "99.04",
            "p50": "95.76",
            "p95": "92.44",
            "p99": "87.80",
            "min": "87.43",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "114.23",
            "p50": "109.11",
            "p95": "104.92",
            "p99": "102.22",
            "min": "101.99",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "123.88",
            "p50": "121.57",
            "p95": "110.59",
            "p99": "103.78",
            "min": "103.37",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "128.14",
            "p50": "124.72",
            "p95": "121.15",
            "p99": "114.27",
            "min": "113.78",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "97.42",
            "p50": "95.86",
            "p95": "92.32",
            "p99": "89.85",
            "min": "89.44",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "102.51",
            "p50": "99.88",
            "p95": "66.50",
            "p99": "66.11",
            "min": "66.08",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "102.07",
            "p50": "100.24",
            "p95": "68.07",
            "p99": "67.34",
            "min": "67.31",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.46",
            "p50": "123.30",
            "p95": "118.73",
            "p99": "115.43",
            "min": "115.32",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "137.39",
            "p50": "131.79",
            "p95": "100.39",
            "p99": "69.68",
            "min": "65.29",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "117.66",
            "p50": "115.01",
            "p95": "92.43",
            "p99": "80.31",
            "min": "79.31",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "90.31",
            "p50": "83.90",
            "p95": "78.93",
            "p99": "74.78",
            "min": "74.31",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "102.02",
            "p50": "100.73",
            "p95": "94.55",
            "p99": "94.09",
            "min": "89.81",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "75.33",
            "p50": "73.29",
            "p95": "61.98",
            "p99": "62.77",
            "min": "59.82",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "158.48",
            "p50": "127.03",
            "p95": "118.93",
            "p99": "135.20",
            "min": "117.64",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "109.95",
            "p50": "107.84",
            "p95": "103.57",
            "p99": "105.77",
            "min": "102.62",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "424.77",
            "p50": "411.32",
            "p95": "365.97",
            "p99": "340.57",
            "min": "321.03",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "485.45",
            "p50": "476.59",
            "p95": "462.56",
            "p99": "379.49",
            "min": "346.13",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "452.56",
            "p50": "440.06",
            "p95": "392.34",
            "p99": "367.46",
            "min": "367.23",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "458.96",
            "p50": "445.84",
            "p95": "391.09",
            "p99": "321.98",
            "min": "305.94",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "459.71",
            "p50": "448.14",
            "p95": "408.60",
            "p99": "372.36",
            "min": "360.87",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "471.90",
            "p50": "459.07",
            "p95": "430.22",
            "p99": "362.07",
            "min": "353.81",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "120.63",
            "p50": "118.42",
            "p95": "107.61",
            "p99": "106.95",
            "min": "106.91",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "121.53",
            "p50": "119.15",
            "p95": "109.11",
            "p99": "104.61",
            "min": "104.04",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "119.65",
            "p50": "117.01",
            "p95": "106.27",
            "p99": "99.94",
            "min": "99.11",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "103.56",
            "p50": "101.52",
            "p95": "95.35",
            "p99": "93.16",
            "min": "93.07",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.92",
            "p50": "85.86",
            "p95": "85.06",
            "p99": "82.08",
            "min": "81.22",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "119.78",
            "p50": "116.90",
            "p95": "102.60",
            "p99": "100.05",
            "min": "99.84",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "113.94",
            "p50": "110.51",
            "p95": "95.99",
            "p99": "80.54",
            "min": "80.10",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "113.19",
            "p50": "110.13",
            "p95": "97.75",
            "p99": "90.78",
            "min": "89.92",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "113.44",
            "p50": "109.99",
            "p95": "97.65",
            "p99": "91.10",
            "min": "90.86",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1582.30",
            "p50": "1402.38",
            "p95": "831.47",
            "p99": "599.64",
            "min": "484.30",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1591.85",
            "p50": "1419.32",
            "p95": "913.95",
            "p99": "598.28",
            "min": "532.76",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "157.38",
            "p50": "153.94",
            "p95": "140.32",
            "p99": "132.40",
            "min": "131.83",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3931.31",
            "p50": "3418.95",
            "p95": "1417.29",
            "p99": "819.64",
            "min": "816.65",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "156.32",
            "p50": "153.34",
            "p95": "134.03",
            "p99": "99.81",
            "min": "99.56",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3955.95",
            "p50": "3495.52",
            "p95": "1391.11",
            "p99": "563.20",
            "min": "448.02",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "103.28",
            "p50": "100.71",
            "p95": "95.07",
            "p99": "84.93",
            "min": "82.85",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "185.93",
            "p50": "182.16",
            "p95": "175.46",
            "p99": "126.63",
            "min": "91.96",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "349.92",
            "p50": "270.19",
            "p95": "214.14",
            "p99": "200.49",
            "min": "199.63",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9640.59",
            "p50": "1689.23",
            "p95": "927.46",
            "p99": "732.14",
            "min": "697.18",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "348.38",
            "p50": "273.15",
            "p95": "220.98",
            "p99": "183.70",
            "min": "166.91",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "26154.51",
            "p50": "9142.54",
            "p95": "2298.79",
            "p99": "1763.66",
            "min": "1702.88",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "5791.76",
            "p50": "3283.59",
            "p95": "1510.52",
            "p99": "882.26",
            "min": "804.06",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "294.92",
            "p50": "230.25",
            "p95": "173.57",
            "p99": "148.71",
            "min": "146.89",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "152.59",
            "p50": "139.73",
            "p95": "120.53",
            "p99": "117.16",
            "min": "116.63",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "124.06",
            "p50": "119.99",
            "p95": "98.02",
            "p99": "89.56",
            "min": "88.29",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "129.75",
            "p50": "123.23",
            "p95": "104.52",
            "p99": "99.81",
            "min": "99.50",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "125.13",
            "p50": "120.33",
            "p95": "107.83",
            "p99": "104.93",
            "min": "104.49",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "158.71",
            "p50": "152.26",
            "p95": "145.58",
            "p99": "118.81",
            "min": "104.48",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "98.62",
            "p50": "95.93",
            "p95": "76.69",
            "p99": "74.39",
            "min": "74.21",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "118.53",
            "p50": "112.19",
            "p95": "109.05",
            "p99": "102.36",
            "min": "101.47",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1218.22",
            "p50": "1128.37",
            "p95": "383.53",
            "p99": "374.41",
            "min": "374.23",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "125.15",
            "p50": "122.28",
            "p95": "73.93",
            "p99": "71.84",
            "min": "71.46",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}