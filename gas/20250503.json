{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "112.39",
            "p50": "107.94",
            "p95": "97.99",
            "p99": "94.78",
            "min": "94.38",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1090.42",
            "p50": "926.63",
            "p95": "620.82",
            "p99": "563.50",
            "min": "558.86",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "113.24",
            "p50": "108.93",
            "p95": "99.39",
            "p99": "97.14",
            "min": "96.94",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "753.35",
            "p50": "710.19",
            "p95": "464.52",
            "p99": "413.36",
            "min": "410.27",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "399.17",
            "p50": "368.09",
            "p95": "303.55",
            "p99": "279.20",
            "min": "278.72",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "424.43",
            "p50": "404.20",
            "p95": "334.21",
            "p99": "288.88",
            "min": "283.90",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "290.54",
            "p50": "274.89",
            "p95": "194.90",
            "p99": "188.26",
            "min": "187.72",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "181.80",
            "p50": "173.24",
            "p95": "159.38",
            "p99": "148.67",
            "min": "147.97",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "254.32",
            "p50": "236.52",
            "p95": "209.52",
            "p99": "196.06",
            "min": "194.37",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "261.17",
            "p50": "243.67",
            "p95": "219.55",
            "p99": "202.79",
            "min": "202.74",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "257.72",
            "p50": "240.26",
            "p95": "210.21",
            "p99": "197.65",
            "min": "196.43",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "202.58",
            "p50": "191.42",
            "p95": "170.97",
            "p99": "116.54",
            "min": "104.25",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "334.69",
            "p50": "310.67",
            "p95": "266.45",
            "p99": "250.93",
            "min": "249.86",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "296.62",
            "p50": "279.65",
            "p95": "235.12",
            "p99": "224.05",
            "min": "222.57",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8698.95",
            "p50": "3635.87",
            "p95": "1839.81",
            "p99": "1546.66",
            "min": "1546.28",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2931.96",
            "p50": "1575.38",
            "p95": "923.99",
            "p99": "1574.77",
            "min": "843.97",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "324.51",
            "p50": "289.77",
            "p95": "245.45",
            "p99": "250.88",
            "min": "233.61",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1431.29",
            "p50": "800.68",
            "p95": "417.81",
            "p99": "806.74",
            "min": "335.59",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "6519.27",
            "p50": "3471.61",
            "p95": "1399.89",
            "p99": "3576.27",
            "min": "1356.11",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "818.58",
            "p50": "699.43",
            "p95": "505.48",
            "p99": "455.59",
            "min": "448.67",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "812.29",
            "p50": "722.76",
            "p95": "516.42",
            "p99": "454.05",
            "min": "441.43",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "930.08",
            "p50": "786.21",
            "p95": "567.06",
            "p99": "449.79",
            "min": "446.08",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2443.61",
            "p50": "1783.91",
            "p95": "930.03",
            "p99": "774.76",
            "min": "758.19",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2389.81",
            "p50": "1802.11",
            "p95": "943.22",
            "p99": "799.17",
            "min": "792.50",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "804.29",
            "p50": "716.63",
            "p95": "512.90",
            "p99": "450.67",
            "min": "422.14",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "171.60",
            "p50": "156.59",
            "p95": "136.46",
            "p99": "94.51",
            "min": "94.34",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "556.42",
            "p50": "484.73",
            "p95": "368.36",
            "p99": "332.06",
            "min": "332.00",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "168.88",
            "p50": "156.28",
            "p95": "139.60",
            "p99": "97.22",
            "min": "96.76",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "188.58",
            "p50": "172.27",
            "p95": "159.23",
            "p99": "119.88",
            "min": "111.42",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "32171.47",
            "p50": "8163.02",
            "p95": "2230.00",
            "p99": "553.96",
            "min": "474.68",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "414.01",
            "p50": "364.46",
            "p95": "304.67",
            "p99": "276.16",
            "min": "273.20",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "390.43",
            "p50": "349.59",
            "p95": "301.29",
            "p99": "279.25",
            "min": "277.46",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "396.91",
            "p50": "351.61",
            "p95": "295.01",
            "p99": "264.82",
            "min": "259.99",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "393.38",
            "p50": "353.18",
            "p95": "299.90",
            "p99": "289.08",
            "min": "288.11",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "17022.70",
            "p50": "5238.52",
            "p95": "2343.27",
            "p99": "2073.27",
            "min": "1977.81",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "16403.08",
            "p50": "5400.63",
            "p95": "2375.51",
            "p99": "1627.72",
            "min": "1443.33",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "16207.32",
            "p50": "5181.01",
            "p95": "2342.30",
            "p99": "1692.15",
            "min": "1519.63",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "16882.52",
            "p50": "5532.31",
            "p95": "2359.16",
            "p99": "1737.27",
            "min": "1497.48",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "16307.77",
            "p50": "4930.83",
            "p95": "2483.59",
            "p99": "2090.99",
            "min": "2012.18",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "17061.45",
            "p50": "5202.10",
            "p95": "2399.03",
            "p99": "1836.05",
            "min": "1444.41",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "258.12",
            "p50": "239.53",
            "p95": "207.23",
            "p99": "190.63",
            "min": "189.19",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "517.69",
            "p50": "476.92",
            "p95": "399.68",
            "p99": "349.63",
            "min": "344.39",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1620.43",
            "p50": "1307.65",
            "p95": "368.10",
            "p99": "301.42",
            "min": "300.14",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "22755.15",
            "p50": "4864.42",
            "p95": "292.18",
            "p99": "236.28",
            "min": "230.41",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1395.48",
            "p50": "1227.15",
            "p95": "742.26",
            "p99": "629.53",
            "min": "623.43",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "54765.12",
            "p50": "8851.27",
            "p95": "2296.95",
            "p99": "614.06",
            "min": "585.66",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13499.72",
            "p50": "5976.32",
            "p95": "293.43",
            "p99": "264.98",
            "min": "261.48",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "560.28",
            "p50": "480.78",
            "p95": "378.42",
            "p99": "346.74",
            "min": "345.47",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "545.30",
            "p50": "498.42",
            "p95": "390.05",
            "p99": "352.51",
            "min": "349.99",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "198.90",
            "p50": "190.66",
            "p95": "170.05",
            "p99": "161.04",
            "min": "159.38",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "383.52",
            "p50": "356.88",
            "p95": "299.95",
            "p99": "271.20",
            "min": "270.42",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "199.97",
            "p50": "189.90",
            "p95": "176.15",
            "p99": "163.68",
            "min": "163.30",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "336.87",
            "p50": "318.02",
            "p95": "272.98",
            "p99": "245.41",
            "min": "241.72",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "259.07",
            "p50": "242.03",
            "p95": "214.59",
            "p99": "199.07",
            "min": "198.84",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "569.65",
            "p50": "520.15",
            "p95": "390.50",
            "p99": "351.21",
            "min": "350.26",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1461.28",
            "p50": "1215.16",
            "p95": "961.96",
            "p99": "864.99",
            "min": "848.95",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "287.36",
            "p50": "270.36",
            "p95": "232.60",
            "p99": "220.45",
            "min": "220.28",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "140.42",
            "p50": "133.45",
            "p95": "120.06",
            "p99": "114.68",
            "min": "114.57",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "138.90",
            "p50": "133.51",
            "p95": "120.60",
            "p99": "115.46",
            "min": "115.20",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "139.59",
            "p50": "132.61",
            "p95": "119.45",
            "p99": "111.61",
            "min": "111.31",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "249.48",
            "p50": "230.25",
            "p95": "206.63",
            "p99": "177.60",
            "min": "173.52",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "190.92",
            "p50": "177.90",
            "p95": "147.57",
            "p99": "107.99",
            "min": "98.84",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "199.41",
            "p50": "187.68",
            "p95": "157.46",
            "p99": "150.64",
            "min": "150.47",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "187.39",
            "p50": "171.18",
            "p95": "144.96",
            "p99": "125.35",
            "min": "125.27",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "181.84",
            "p50": "169.39",
            "p95": "152.09",
            "p99": "138.71",
            "min": "138.39",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "209.33",
            "p50": "194.69",
            "p95": "169.12",
            "p99": "146.84",
            "min": "143.93",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "184.42",
            "p50": "169.45",
            "p95": "147.96",
            "p99": "93.35",
            "min": "83.43",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "206.07",
            "p50": "191.40",
            "p95": "169.58",
            "p99": "147.19",
            "min": "144.54",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "144.85",
            "p50": "136.82",
            "p95": "120.51",
            "p99": "116.59",
            "min": "116.47",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "226.16",
            "p50": "212.08",
            "p95": "183.71",
            "p99": "159.07",
            "min": "153.14",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "182.70",
            "p50": "170.18",
            "p95": "147.06",
            "p99": "135.53",
            "min": "135.27",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "101.84",
            "p50": "95.54",
            "p95": "88.13",
            "p99": "85.16",
            "min": "84.79",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "139.13",
            "p50": "132.70",
            "p95": "115.33",
            "p99": "123.07",
            "min": "114.42",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "443.38",
            "p50": "352.16",
            "p95": "275.24",
            "p99": "297.43",
            "min": "263.20",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "179.87",
            "p50": "145.22",
            "p95": "133.64",
            "p99": "152.44",
            "min": "131.76",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "131.39",
            "p50": "124.61",
            "p95": "112.67",
            "p99": "116.19",
            "min": "104.72",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1179.97",
            "p50": "980.15",
            "p95": "546.13",
            "p99": "431.21",
            "min": "426.91",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1035.12",
            "p50": "861.88",
            "p95": "561.56",
            "p99": "414.71",
            "min": "407.81",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1427.67",
            "p50": "1101.86",
            "p95": "646.80",
            "p99": "450.14",
            "min": "440.96",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1322.18",
            "p50": "1048.01",
            "p95": "659.71",
            "p99": "462.03",
            "min": "457.56",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1283.19",
            "p50": "1011.83",
            "p95": "590.31",
            "p99": "452.88",
            "min": "431.26",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1051.49",
            "p50": "891.02",
            "p95": "510.15",
            "p99": "452.71",
            "min": "439.47",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "674.20",
            "p50": "564.96",
            "p95": "360.45",
            "p99": "261.50",
            "min": "261.04",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "704.64",
            "p50": "550.82",
            "p95": "401.33",
            "p99": "340.01",
            "min": "339.85",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "707.95",
            "p50": "575.68",
            "p95": "457.26",
            "p99": "371.54",
            "min": "363.77",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "707.28",
            "p50": "571.67",
            "p95": "416.92",
            "p99": "353.52",
            "min": "351.43",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "290.21",
            "p50": "265.27",
            "p95": "226.35",
            "p99": "202.38",
            "min": "201.54",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "607.49",
            "p50": "492.53",
            "p95": "368.53",
            "p99": "289.19",
            "min": "279.13",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "615.40",
            "p50": "497.57",
            "p95": "341.39",
            "p99": "282.76",
            "min": "273.15",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "623.74",
            "p50": "514.47",
            "p95": "379.91",
            "p99": "320.46",
            "min": "315.75",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "642.86",
            "p50": "531.71",
            "p95": "366.72",
            "p99": "344.08",
            "min": "341.73",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "105.88",
            "p50": "101.39",
            "p95": "93.20",
            "p99": "88.13",
            "min": "87.07",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.19",
            "p50": "101.88",
            "p95": "90.86",
            "p99": "87.02",
            "min": "85.39",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "98.43",
            "p50": "94.31",
            "p95": "85.52",
            "p99": "83.63",
            "min": "83.27",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "253.86",
            "p50": "236.43",
            "p95": "190.74",
            "p99": "172.31",
            "min": "170.21",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.40",
            "p50": "93.53",
            "p95": "86.33",
            "p99": "81.23",
            "min": "80.62",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "246.12",
            "p50": "228.83",
            "p95": "188.63",
            "p99": "163.10",
            "min": "157.00",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "206.44",
            "p50": "193.67",
            "p95": "165.90",
            "p99": "143.28",
            "min": "143.18",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "237.98",
            "p50": "221.82",
            "p95": "182.75",
            "p99": "167.10",
            "min": "166.37",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "519.68",
            "p50": "462.25",
            "p95": "353.05",
            "p99": "292.06",
            "min": "289.79",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5666.39",
            "p50": "2830.22",
            "p95": "1458.37",
            "p99": "1135.13",
            "min": "1078.04",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "486.69",
            "p50": "434.06",
            "p95": "315.46",
            "p99": "280.31",
            "min": "279.59",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "17593.49",
            "p50": "4808.01",
            "p95": "1759.67",
            "p99": "1272.95",
            "min": "1225.11",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3676.00",
            "p50": "2428.58",
            "p95": "1018.18",
            "p99": "728.87",
            "min": "718.51",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "220.52",
            "p50": "196.70",
            "p95": "169.08",
            "p99": "139.02",
            "min": "132.55",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "260.69",
            "p50": "239.60",
            "p95": "201.64",
            "p99": "183.83",
            "min": "183.04",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "145.93",
            "p50": "137.10",
            "p95": "125.00",
            "p99": "116.56",
            "min": "116.49",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "244.44",
            "p50": "225.26",
            "p95": "187.06",
            "p99": "175.88",
            "min": "175.46",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "181.34",
            "p50": "170.59",
            "p95": "147.80",
            "p99": "133.03",
            "min": "130.69",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "220.65",
            "p50": "206.26",
            "p95": "177.42",
            "p99": "164.30",
            "min": "160.53",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "208.52",
            "p50": "191.93",
            "p95": "157.58",
            "p99": "146.10",
            "min": "144.35",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "206.79",
            "p50": "193.78",
            "p95": "170.31",
            "p99": "157.11",
            "min": "155.89",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1283.70",
            "p50": "1097.13",
            "p95": "791.71",
            "p99": "680.56",
            "min": "663.88",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "180.84",
            "p50": "169.24",
            "p95": "148.51",
            "p99": "139.53",
            "min": "137.91",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "191.90",
            "p50": "187.95",
            "p95": "180.43",
            "p99": "160.50",
            "min": "159.73",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "192.26",
            "p50": "187.52",
            "p95": "177.84",
            "p99": "167.38",
            "min": "166.72",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "192.07",
            "p50": "188.21",
            "p95": "173.15",
            "p99": "161.17",
            "min": "159.96",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1142.60",
            "p50": "1102.17",
            "p95": "948.92",
            "p99": "707.71",
            "min": "642.13",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "620.56",
            "p50": "603.89",
            "p95": "538.09",
            "p99": "416.05",
            "min": "410.59",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "672.78",
            "p50": "650.75",
            "p95": "520.86",
            "p99": "382.00",
            "min": "362.91",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "623.78",
            "p50": "605.38",
            "p95": "467.21",
            "p99": "411.00",
            "min": "407.46",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "771.46",
            "p50": "751.84",
            "p95": "616.67",
            "p99": "512.83",
            "min": "500.35",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "910.00",
            "p50": "874.82",
            "p95": "686.09",
            "p99": "508.53",
            "min": "507.52",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "843.31",
            "p50": "820.24",
            "p95": "602.10",
            "p99": "423.21",
            "min": "418.82",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "850.83",
            "p50": "821.61",
            "p95": "652.74",
            "p99": "565.98",
            "min": "558.54",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "837.09",
            "p50": "807.91",
            "p95": "690.46",
            "p99": "554.01",
            "min": "546.08",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "734.99",
            "p50": "713.90",
            "p95": "631.11",
            "p99": "493.82",
            "min": "488.32",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "843.99",
            "p50": "818.66",
            "p95": "640.53",
            "p99": "459.40",
            "min": "450.04",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "117.09",
            "p50": "112.67",
            "p95": "109.62",
            "p99": "107.38",
            "min": "107.28",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "95.22",
            "p50": "93.34",
            "p95": "89.25",
            "p99": "90.79",
            "min": "88.41",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "512.99",
            "p50": "496.79",
            "p95": "437.72",
            "p99": "425.07",
            "min": "404.45",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "128.92",
            "p50": "102.06",
            "p95": "94.90",
            "p99": "108.91",
            "min": "93.82",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "89.00",
            "p50": "86.56",
            "p95": "81.97",
            "p99": "84.52",
            "min": "81.14",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1816.87",
            "p50": "1733.00",
            "p95": "1240.71",
            "p99": "595.10",
            "min": "575.97",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1636.83",
            "p50": "1571.02",
            "p95": "1137.39",
            "p99": "801.22",
            "min": "785.55",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2294.86",
            "p50": "2161.74",
            "p95": "1395.02",
            "p99": "892.86",
            "min": "875.44",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2248.61",
            "p50": "2154.50",
            "p95": "1131.04",
            "p99": "838.67",
            "min": "778.77",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2250.15",
            "p50": "2146.49",
            "p95": "1421.19",
            "p99": "950.60",
            "min": "894.53",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1687.06",
            "p50": "1616.03",
            "p95": "1035.10",
            "p99": "791.06",
            "min": "786.18",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "775.04",
            "p50": "735.99",
            "p95": "632.75",
            "p99": "487.59",
            "min": "472.37",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "778.35",
            "p50": "736.23",
            "p95": "605.16",
            "p99": "475.12",
            "min": "455.26",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "777.78",
            "p50": "742.06",
            "p95": "633.34",
            "p99": "442.42",
            "min": "410.81",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "771.54",
            "p50": "739.05",
            "p95": "637.34",
            "p99": "553.17",
            "min": "551.87",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.16",
            "p50": "85.32",
            "p95": "38.43",
            "p99": "37.92",
            "min": "37.91",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "728.35",
            "p50": "696.92",
            "p95": "581.89",
            "p99": "565.79",
            "min": "565.00",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "678.03",
            "p50": "653.51",
            "p95": "579.16",
            "p99": "488.59",
            "min": "480.85",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "690.46",
            "p50": "657.82",
            "p95": "561.13",
            "p99": "417.74",
            "min": "388.40",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "689.55",
            "p50": "654.79",
            "p95": "571.63",
            "p99": "522.31",
            "min": "517.98",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2443.78",
            "p50": "2286.69",
            "p95": "1344.96",
            "p99": "931.61",
            "min": "924.13",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2807.52",
            "p50": "2633.89",
            "p95": "1342.01",
            "p99": "885.81",
            "min": "785.54",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "105.18",
            "p50": "103.19",
            "p95": "98.27",
            "p99": "93.09",
            "min": "92.35",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "15176.40",
            "p50": "7585.43",
            "p95": "2452.90",
            "p99": "1924.09",
            "min": "1504.98",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "105.22",
            "p50": "103.22",
            "p95": "99.46",
            "p99": "95.17",
            "min": "94.92",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "6016.17",
            "p50": "5372.86",
            "p95": "2211.40",
            "p99": "1574.56",
            "min": "1496.76",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "863.70",
            "p50": "837.12",
            "p95": "622.24",
            "p99": "502.09",
            "min": "490.10",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "662.23",
            "p50": "643.86",
            "p95": "522.90",
            "p99": "474.11",
            "min": "460.49",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "2156.77",
            "p50": "2056.00",
            "p95": "1216.82",
            "p99": "789.56",
            "min": "658.81",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "20216.74",
            "p50": "8518.00",
            "p95": "2456.21",
            "p99": "1580.92",
            "min": "1343.21",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "2016.53",
            "p50": "1883.60",
            "p95": "1056.03",
            "p99": "620.22",
            "min": "604.78",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "78595.45",
            "p50": "8660.21",
            "p95": "2462.63",
            "p99": "1575.75",
            "min": "1316.86",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "16467.70",
            "p50": "8060.15",
            "p95": "2424.07",
            "p99": "2172.00",
            "min": "2171.18",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "699.50",
            "p50": "591.21",
            "p95": "495.17",
            "p99": "429.31",
            "min": "412.84",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "922.66",
            "p50": "892.68",
            "p95": "689.41",
            "p99": "517.23",
            "min": "509.28",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "829.11",
            "p50": "806.87",
            "p95": "659.92",
            "p99": "584.75",
            "min": "581.35",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1149.89",
            "p50": "1106.65",
            "p95": "750.49",
            "p99": "544.41",
            "min": "483.85",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "692.41",
            "p50": "672.98",
            "p95": "576.46",
            "p99": "454.51",
            "min": "439.84",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1137.68",
            "p50": "1098.06",
            "p95": "820.12",
            "p99": "646.51",
            "min": "645.77",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "802.59",
            "p50": "779.55",
            "p95": "615.87",
            "p99": "303.10",
            "min": "234.05",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "885.48",
            "p50": "849.41",
            "p95": "702.47",
            "p99": "489.64",
            "min": "488.84",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2167.22",
            "p50": "1966.84",
            "p95": "1641.35",
            "p99": "1371.56",
            "min": "1371.08",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "848.52",
            "p50": "823.55",
            "p95": "701.05",
            "p99": "520.72",
            "min": "487.74",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "121.68",
            "p50": "118.10",
            "p95": "105.96",
            "p99": "97.47",
            "min": "96.66",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "121.81",
            "p50": "117.77",
            "p95": "108.13",
            "p99": "96.63",
            "min": "96.18",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "121.72",
            "p50": "117.65",
            "p95": "107.11",
            "p99": "100.39",
            "min": "100.29",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "208.87",
            "p50": "198.72",
            "p95": "171.05",
            "p99": "161.76",
            "min": "158.38",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.80",
            "p50": "98.77",
            "p95": "87.15",
            "p99": "75.23",
            "min": "72.92",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "107.95",
            "p50": "103.99",
            "p95": "90.52",
            "p99": "86.41",
            "min": "85.95",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "139.26",
            "p50": "132.46",
            "p95": "117.11",
            "p99": "106.60",
            "min": "106.56",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "138.93",
            "p50": "131.31",
            "p95": "116.09",
            "p99": "106.48",
            "min": "105.98",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "181.68",
            "p50": "169.31",
            "p95": "142.51",
            "p99": "128.20",
            "min": "125.46",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "178.56",
            "p50": "165.87",
            "p95": "132.68",
            "p99": "122.45",
            "min": "121.27",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "178.95",
            "p50": "166.65",
            "p95": "141.11",
            "p99": "131.89",
            "min": "130.77",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.55",
            "p50": "121.76",
            "p95": "107.69",
            "p99": "102.06",
            "min": "100.70",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "202.74",
            "p50": "190.81",
            "p95": "145.73",
            "p99": "134.56",
            "min": "133.87",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "183.09",
            "p50": "170.50",
            "p95": "145.37",
            "p99": "134.12",
            "min": "133.86",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "75.27",
            "p50": "70.65",
            "p95": "66.21",
            "p99": "63.53",
            "min": "63.18",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "131.66",
            "p50": "122.96",
            "p95": "104.09",
            "p99": "111.54",
            "min": "100.71",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "212.84",
            "p50": "189.35",
            "p95": "154.70",
            "p99": "149.58",
            "min": "134.74",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "164.39",
            "p50": "140.53",
            "p95": "134.33",
            "p99": "146.97",
            "min": "133.82",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "126.77",
            "p50": "119.96",
            "p95": "103.18",
            "p99": "107.31",
            "min": "92.64",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1034.94",
            "p50": "790.35",
            "p95": "388.24",
            "p99": "316.80",
            "min": "313.10",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1014.40",
            "p50": "768.78",
            "p95": "382.50",
            "p99": "307.87",
            "min": "299.08",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1135.05",
            "p50": "775.55",
            "p95": "406.74",
            "p99": "289.80",
            "min": "281.57",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1067.87",
            "p50": "774.58",
            "p95": "407.96",
            "p99": "338.18",
            "min": "322.25",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1017.39",
            "p50": "772.08",
            "p95": "390.09",
            "p99": "297.55",
            "min": "285.19",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1005.91",
            "p50": "781.93",
            "p95": "397.18",
            "p99": "307.99",
            "min": "290.99",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "335.22",
            "p50": "298.47",
            "p95": "212.05",
            "p99": "193.04",
            "min": "191.79",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "333.23",
            "p50": "299.23",
            "p95": "213.80",
            "p99": "205.08",
            "min": "204.90",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "341.28",
            "p50": "299.39",
            "p95": "231.08",
            "p99": "206.49",
            "min": "206.27",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "364.11",
            "p50": "323.54",
            "p95": "244.18",
            "p99": "200.84",
            "min": "199.30",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "285.46",
            "p50": "258.62",
            "p95": "197.59",
            "p99": "171.54",
            "min": "169.56",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "292.17",
            "p50": "256.73",
            "p95": "203.68",
            "p99": "173.53",
            "min": "170.79",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "289.22",
            "p50": "248.99",
            "p95": "194.59",
            "p99": "167.12",
            "min": "165.28",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "291.74",
            "p50": "256.77",
            "p95": "198.97",
            "p99": "186.55",
            "min": "184.60",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "288.79",
            "p50": "256.06",
            "p95": "206.14",
            "p99": "177.63",
            "min": "175.39",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "103.46",
            "p50": "99.74",
            "p95": "90.79",
            "p99": "86.57",
            "min": "86.36",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "104.18",
            "p50": "99.93",
            "p95": "91.75",
            "p99": "84.75",
            "min": "84.57",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "96.73",
            "p50": "92.95",
            "p95": "83.85",
            "p99": "79.07",
            "min": "79.04",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "248.21",
            "p50": "224.99",
            "p95": "176.92",
            "p99": "158.13",
            "min": "155.89",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "96.83",
            "p50": "92.34",
            "p95": "82.40",
            "p99": "78.05",
            "min": "77.76",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "239.46",
            "p50": "220.20",
            "p95": "176.33",
            "p99": "155.68",
            "min": "154.92",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "183.21",
            "p50": "169.54",
            "p95": "141.78",
            "p99": "127.53",
            "min": "126.85",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "147.84",
            "p50": "139.85",
            "p95": "121.59",
            "p99": "112.98",
            "min": "111.74",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "439.46",
            "p50": "392.39",
            "p95": "275.13",
            "p99": "231.29",
            "min": "225.38",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5644.45",
            "p50": "2508.53",
            "p95": "786.29",
            "p99": "646.23",
            "min": "622.01",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "437.05",
            "p50": "394.62",
            "p95": "305.86",
            "p99": "268.75",
            "min": "244.24",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "15438.41",
            "p50": "4028.06",
            "p95": "1580.26",
            "p99": "1094.71",
            "min": "1078.47",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3560.60",
            "p50": "2102.17",
            "p95": "735.31",
            "p99": "614.08",
            "min": "577.25",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "205.26",
            "p50": "189.35",
            "p95": "163.20",
            "p99": "152.57",
            "min": "151.91",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "230.32",
            "p50": "217.44",
            "p95": "188.35",
            "p99": "168.72",
            "min": "166.79",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "128.16",
            "p50": "122.95",
            "p95": "107.47",
            "p99": "75.76",
            "min": "67.15",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "210.58",
            "p50": "191.14",
            "p95": "153.67",
            "p99": "96.19",
            "min": "71.39",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "137.83",
            "p50": "131.49",
            "p95": "113.48",
            "p99": "97.82",
            "min": "96.59",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "175.44",
            "p50": "163.55",
            "p95": "141.83",
            "p99": "125.46",
            "min": "123.80",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "177.12",
            "p50": "166.13",
            "p95": "134.94",
            "p99": "123.38",
            "min": "123.20",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "180.11",
            "p50": "168.40",
            "p95": "146.56",
            "p99": "127.53",
            "min": "123.49",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "303.19",
            "p50": "255.51",
            "p95": "56.92",
            "p99": "53.88",
            "min": "53.80",
            "n": "104",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "144.07",
            "p50": "138.92",
            "p95": "122.72",
            "p99": "59.98",
            "min": "59.87",
            "n": "106",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "86.26",
            "p50": "84.64",
            "p95": "76.36",
            "p99": "73.68",
            "min": "73.54",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "87.36",
            "p50": "85.96",
            "p95": "81.75",
            "p99": "79.46",
            "min": "79.34",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "86.81",
            "p50": "85.43",
            "p95": "80.81",
            "p99": "80.30",
            "min": "80.28",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "189.09",
            "p50": "179.79",
            "p95": "160.38",
            "p99": "136.44",
            "min": "136.39",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "96.50",
            "p50": "94.05",
            "p95": "89.63",
            "p99": "86.70",
            "min": "86.48",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.70",
            "p50": "106.65",
            "p95": "103.88",
            "p99": "101.68",
            "min": "101.03",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "126.64",
            "p50": "120.37",
            "p95": "110.51",
            "p99": "102.97",
            "min": "101.79",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "128.20",
            "p50": "123.40",
            "p95": "119.25",
            "p99": "116.24",
            "min": "116.02",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "96.52",
            "p50": "93.57",
            "p95": "89.36",
            "p99": "66.97",
            "min": "66.92",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "101.18",
            "p50": "98.19",
            "p95": "94.26",
            "p99": "89.99",
            "min": "89.85",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "101.08",
            "p50": "98.69",
            "p95": "95.74",
            "p99": "90.91",
            "min": "90.76",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "127.88",
            "p50": "122.59",
            "p95": "117.41",
            "p99": "112.13",
            "min": "111.52",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "134.51",
            "p50": "130.08",
            "p95": "121.92",
            "p99": "115.31",
            "min": "115.13",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "116.47",
            "p50": "113.03",
            "p95": "100.70",
            "p99": "96.69",
            "min": "96.41",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "88.73",
            "p50": "83.65",
            "p95": "79.66",
            "p99": "74.68",
            "min": "74.42",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "100.56",
            "p50": "99.43",
            "p95": "91.93",
            "p99": "92.32",
            "min": "87.88",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "77.73",
            "p50": "71.74",
            "p95": "67.87",
            "p99": "67.54",
            "min": "65.15",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "156.22",
            "p50": "124.92",
            "p95": "117.38",
            "p99": "133.91",
            "min": "117.07",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "108.24",
            "p50": "106.14",
            "p95": "102.56",
            "p99": "104.78",
            "min": "102.16",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "421.67",
            "p50": "408.54",
            "p95": "367.87",
            "p99": "333.46",
            "min": "326.87",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "477.98",
            "p50": "470.36",
            "p95": "446.81",
            "p99": "421.83",
            "min": "411.63",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "452.58",
            "p50": "436.02",
            "p95": "395.24",
            "p99": "350.28",
            "min": "322.22",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "458.46",
            "p50": "442.19",
            "p95": "393.93",
            "p99": "326.66",
            "min": "306.05",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "459.87",
            "p50": "444.49",
            "p95": "406.86",
            "p99": "338.98",
            "min": "327.65",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "461.56",
            "p50": "454.50",
            "p95": "431.46",
            "p99": "385.01",
            "min": "378.90",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "121.54",
            "p50": "116.96",
            "p95": "110.11",
            "p99": "106.07",
            "min": "105.23",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "122.91",
            "p50": "117.77",
            "p95": "110.53",
            "p99": "109.08",
            "min": "108.91",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "121.01",
            "p50": "115.76",
            "p95": "109.16",
            "p99": "102.99",
            "min": "102.66",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "103.83",
            "p50": "100.35",
            "p95": "96.39",
            "p99": "94.52",
            "min": "94.45",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "85.68",
            "p50": "84.39",
            "p95": "83.52",
            "p99": "80.73",
            "min": "79.48",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "121.04",
            "p50": "115.50",
            "p95": "108.25",
            "p99": "106.56",
            "min": "106.31",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "115.81",
            "p50": "109.42",
            "p95": "102.18",
            "p99": "94.12",
            "min": "93.74",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "114.47",
            "p50": "109.31",
            "p95": "101.47",
            "p99": "99.13",
            "min": "98.86",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "113.84",
            "p50": "109.22",
            "p95": "102.09",
            "p99": "97.78",
            "min": "96.92",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1567.70",
            "p50": "1440.55",
            "p95": "702.08",
            "p99": "471.40",
            "min": "410.06",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1574.57",
            "p50": "1415.03",
            "p95": "713.20",
            "p99": "512.77",
            "min": "485.43",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.35",
            "p50": "151.71",
            "p95": "138.13",
            "p99": "125.34",
            "min": "123.61",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3908.02",
            "p50": "3516.19",
            "p95": "1048.01",
            "p99": "627.91",
            "min": "581.79",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "155.69",
            "p50": "151.60",
            "p95": "137.14",
            "p99": "124.86",
            "min": "123.66",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3994.33",
            "p50": "3518.60",
            "p95": "1426.60",
            "p99": "650.23",
            "min": "349.96",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "101.38",
            "p50": "99.00",
            "p95": "93.55",
            "p99": "86.65",
            "min": "85.29",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "179.82",
            "p50": "176.73",
            "p95": "171.44",
            "p99": "151.32",
            "min": "148.95",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "347.27",
            "p50": "263.04",
            "p95": "207.65",
            "p99": "184.94",
            "min": "184.33",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "9688.09",
            "p50": "1628.72",
            "p95": "899.13",
            "p99": "580.51",
            "min": "479.33",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "352.51",
            "p50": "264.16",
            "p95": "199.32",
            "p99": "173.06",
            "min": "163.06",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "25519.29",
            "p50": "8743.16",
            "p95": "2446.96",
            "p99": "2304.64",
            "min": "2273.50",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "5865.90",
            "p50": "3294.57",
            "p95": "1513.77",
            "p99": "768.42",
            "min": "523.19",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "290.93",
            "p50": "227.44",
            "p95": "173.69",
            "p99": "129.61",
            "min": "123.97",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "150.97",
            "p50": "131.49",
            "p95": "110.68",
            "p99": "104.85",
            "min": "104.05",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "122.44",
            "p50": "118.84",
            "p95": "93.63",
            "p99": "89.94",
            "min": "89.91",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "128.34",
            "p50": "125.74",
            "p95": "119.38",
            "p99": "115.08",
            "min": "114.29",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "124.74",
            "p50": "119.06",
            "p95": "115.33",
            "p99": "109.03",
            "min": "108.10",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "159.88",
            "p50": "152.10",
            "p95": "147.58",
            "p99": "144.17",
            "min": "144.17",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "97.24",
            "p50": "95.35",
            "p95": "90.34",
            "p99": "89.28",
            "min": "89.15",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "119.32",
            "p50": "114.60",
            "p95": "111.54",
            "p99": "108.15",
            "min": "108.05",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1206.32",
            "p50": "1113.82",
            "p95": "380.24",
            "p99": "355.42",
            "min": "351.11",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "123.94",
            "p50": "120.53",
            "p95": "105.80",
            "p99": "100.01",
            "min": "99.01",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}