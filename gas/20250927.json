{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "114.59",
            "p50": "109.21",
            "p95": "95.19",
            "p99": "82.73",
            "min": "80.49",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1068.70",
            "p50": "981.83",
            "p95": "618.58",
            "p99": "531.90",
            "min": "521.76",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "114.75",
            "p50": "109.54",
            "p95": "100.09",
            "p99": "95.85",
            "min": "95.79",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "974.57",
            "p50": "927.52",
            "p95": "618.20",
            "p99": "490.44",
            "min": "489.33",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "455.86",
            "p50": "426.19",
            "p95": "337.98",
            "p99": "310.96",
            "min": "306.15",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "443.34",
            "p50": "424.91",
            "p95": "340.27",
            "p99": "302.32",
            "min": "297.86",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "684.22",
            "p50": "626.55",
            "p95": "465.96",
            "p99": "303.57",
            "min": "282.30",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "630.58",
            "p50": "582.89",
            "p95": "476.27",
            "p99": "399.02",
            "min": "388.48",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "388.11",
            "p50": "364.32",
            "p95": "307.39",
            "p99": "278.02",
            "min": "275.75",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "695.03",
            "p50": "655.93",
            "p95": "465.93",
            "p99": "437.37",
            "min": "436.90",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "670.45",
            "p50": "635.87",
            "p95": "489.87",
            "p99": "401.82",
            "min": "391.26",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "620.06",
            "p50": "561.29",
            "p95": "374.37",
            "p99": "125.67",
            "min": "124.32",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "400.28",
            "p50": "384.17",
            "p95": "311.42",
            "p99": "251.28",
            "min": "241.01",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "396.13",
            "p50": "375.34",
            "p95": "311.28",
            "p99": "274.02",
            "min": "273.02",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8367.09",
            "p50": "5610.71",
            "p95": "2133.98",
            "p99": "1409.39",
            "min": "1348.40",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2874.08",
            "p50": "2397.01",
            "p95": "1008.90",
            "p99": "1538.58",
            "min": "819.47",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "306.04",
            "p50": "289.61",
            "p95": "249.64",
            "p99": "241.37",
            "min": "226.20",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1430.54",
            "p50": "802.09",
            "p95": "410.88",
            "p99": "794.39",
            "min": "314.49",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "6991.92",
            "p50": "3638.39",
            "p95": "1463.50",
            "p99": "3779.71",
            "min": "1356.46",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "818.07",
            "p50": "725.94",
            "p95": "493.80",
            "p99": "406.40",
            "min": "396.41",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "809.88",
            "p50": "764.02",
            "p95": "594.29",
            "p99": "456.48",
            "min": "402.94",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "946.87",
            "p50": "808.23",
            "p95": "595.23",
            "p99": "499.53",
            "min": "487.56",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2410.91",
            "p50": "2142.07",
            "p95": "1189.20",
            "p99": "918.13",
            "min": "904.81",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2387.23",
            "p50": "2124.01",
            "p95": "1064.08",
            "p99": "741.28",
            "min": "726.73",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "802.10",
            "p50": "731.58",
            "p95": "550.66",
            "p99": "441.54",
            "min": "430.25",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "170.23",
            "p50": "156.31",
            "p95": "144.54",
            "p99": "135.18",
            "min": "134.04",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "547.88",
            "p50": "502.96",
            "p95": "398.18",
            "p99": "352.69",
            "min": "349.52",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "166.66",
            "p50": "157.44",
            "p95": "143.93",
            "p99": "141.93",
            "min": "141.84",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "188.98",
            "p50": "172.56",
            "p95": "157.15",
            "p99": "145.59",
            "min": "144.93",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "32729.49",
            "p50": "8327.61",
            "p95": "2377.36",
            "p99": "887.65",
            "min": "558.71",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "399.92",
            "p50": "367.82",
            "p95": "307.61",
            "p99": "256.83",
            "min": "249.59",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "382.92",
            "p50": "354.36",
            "p95": "291.42",
            "p99": "258.42",
            "min": "257.45",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "388.11",
            "p50": "357.73",
            "p95": "307.36",
            "p99": "213.39",
            "min": "197.37",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "388.75",
            "p50": "351.07",
            "p95": "291.39",
            "p99": "279.35",
            "min": "278.42",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "16830.57",
            "p50": "6137.09",
            "p95": "2408.80",
            "p99": "1523.80",
            "min": "1464.97",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "16576.92",
            "p50": "6638.61",
            "p95": "2311.52",
            "p99": "1908.95",
            "min": "1757.64",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "16258.78",
            "p50": "5586.35",
            "p95": "2326.80",
            "p99": "1606.62",
            "min": "1562.35",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "16635.17",
            "p50": "6560.74",
            "p95": "2384.81",
            "p99": "1864.12",
            "min": "1399.44",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "15908.20",
            "p50": "5932.89",
            "p95": "2367.82",
            "p99": "1776.75",
            "min": "1609.66",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "16600.26",
            "p50": "6296.31",
            "p95": "2467.76",
            "p99": "1389.31",
            "min": "1352.47",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "700.80",
            "p50": "669.17",
            "p95": "508.49",
            "p99": "321.02",
            "min": "283.07",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "599.75",
            "p50": "457.09",
            "p95": "376.20",
            "p99": "360.85",
            "min": "358.84",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1418.93",
            "p50": "1320.32",
            "p95": "338.85",
            "p99": "264.35",
            "min": "257.64",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "22155.85",
            "p50": "8078.76",
            "p95": "2385.89",
            "p99": "1203.42",
            "min": "546.57",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1345.65",
            "p50": "1266.81",
            "p95": "718.85",
            "p99": "639.50",
            "min": "636.24",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "54119.76",
            "p50": "8801.59",
            "p95": "2364.86",
            "p99": "1392.85",
            "min": "1367.27",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "12782.25",
            "p50": "7541.05",
            "p95": "2343.05",
            "p99": "900.25",
            "min": "181.28",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "577.72",
            "p50": "513.70",
            "p95": "391.88",
            "p99": "351.37",
            "min": "341.49",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "539.32",
            "p50": "518.39",
            "p95": "415.53",
            "p99": "343.90",
            "min": "342.62",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "611.83",
            "p50": "575.77",
            "p95": "450.61",
            "p99": "288.25",
            "min": "241.47",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "616.55",
            "p50": "595.90",
            "p95": "459.36",
            "p99": "378.66",
            "min": "378.19",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "672.65",
            "p50": "614.87",
            "p95": "498.29",
            "p99": "429.95",
            "min": "426.80",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "910.74",
            "p50": "882.31",
            "p95": "634.58",
            "p99": "561.11",
            "min": "548.85",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "662.80",
            "p50": "633.54",
            "p95": "436.25",
            "p99": "423.03",
            "min": "422.42",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "722.40",
            "p50": "664.33",
            "p95": "479.85",
            "p99": "435.79",
            "min": "435.07",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1606.47",
            "p50": "1387.86",
            "p95": "1104.51",
            "p99": "943.19",
            "min": "921.02",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "674.91",
            "p50": "614.25",
            "p95": "445.59",
            "p99": "395.51",
            "min": "393.24",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "137.55",
            "p50": "135.07",
            "p95": "125.37",
            "p99": "116.97",
            "min": "115.80",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "138.87",
            "p50": "135.62",
            "p95": "126.29",
            "p99": "113.99",
            "min": "113.16",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "138.47",
            "p50": "134.77",
            "p95": "125.37",
            "p99": "87.47",
            "min": "85.65",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "231.83",
            "p50": "225.58",
            "p95": "200.45",
            "p99": "186.90",
            "min": "183.46",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "187.23",
            "p50": "182.84",
            "p95": "160.61",
            "p99": "118.35",
            "min": "112.38",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "196.37",
            "p50": "190.28",
            "p95": "153.72",
            "p99": "134.54",
            "min": "133.99",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "184.55",
            "p50": "174.54",
            "p95": "159.70",
            "p99": "103.27",
            "min": "92.35",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "175.75",
            "p50": "166.02",
            "p95": "145.97",
            "p99": "75.25",
            "min": "75.13",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "207.73",
            "p50": "194.20",
            "p95": "172.78",
            "p99": "155.61",
            "min": "152.48",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "183.29",
            "p50": "172.17",
            "p95": "156.78",
            "p99": "149.73",
            "min": "149.06",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "203.58",
            "p50": "194.03",
            "p95": "175.01",
            "p99": "159.90",
            "min": "159.69",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "142.97",
            "p50": "137.36",
            "p95": "126.38",
            "p99": "82.78",
            "min": "74.79",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "125.92",
            "p50": "121.78",
            "p95": "114.67",
            "p99": "108.40",
            "min": "108.06",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "180.44",
            "p50": "171.84",
            "p95": "156.00",
            "p99": "108.64",
            "min": "107.56",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "101.24",
            "p50": "96.20",
            "p95": "90.67",
            "p99": "89.00",
            "min": "88.65",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "139.85",
            "p50": "134.66",
            "p95": "124.64",
            "p99": "129.21",
            "min": "123.49",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "397.38",
            "p50": "292.42",
            "p95": "235.58",
            "p99": "243.14",
            "min": "206.96",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "194.46",
            "p50": "152.78",
            "p95": "138.97",
            "p99": "151.40",
            "min": "118.92",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "133.38",
            "p50": "128.82",
            "p95": "119.15",
            "p99": "116.24",
            "min": "103.31",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1174.97",
            "p50": "994.59",
            "p95": "706.08",
            "p99": "547.36",
            "min": "522.96",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1037.64",
            "p50": "1008.45",
            "p95": "669.00",
            "p99": "527.97",
            "min": "501.35",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1370.99",
            "p50": "1144.32",
            "p95": "770.53",
            "p99": "618.64",
            "min": "570.40",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1273.51",
            "p50": "1049.42",
            "p95": "755.61",
            "p99": "592.85",
            "min": "574.94",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1256.17",
            "p50": "1049.07",
            "p95": "714.71",
            "p99": "626.03",
            "min": "613.77",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1064.76",
            "p50": "998.41",
            "p95": "695.74",
            "p99": "617.43",
            "min": "600.75",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "626.76",
            "p50": "486.46",
            "p95": "404.01",
            "p99": "308.54",
            "min": "291.26",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "608.24",
            "p50": "480.08",
            "p95": "370.80",
            "p99": "345.20",
            "min": "344.82",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "641.93",
            "p50": "489.81",
            "p95": "393.49",
            "p99": "343.01",
            "min": "339.57",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "638.17",
            "p50": "512.31",
            "p95": "413.17",
            "p99": "372.02",
            "min": "370.96",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "291.11",
            "p50": "284.82",
            "p95": "245.36",
            "p99": "220.57",
            "min": "214.78",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "538.56",
            "p50": "372.78",
            "p95": "301.72",
            "p99": "266.83",
            "min": "263.48",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "522.53",
            "p50": "406.33",
            "p95": "318.35",
            "p99": "301.41",
            "min": "301.24",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "524.36",
            "p50": "429.02",
            "p95": "352.90",
            "p99": "303.63",
            "min": "295.95",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "558.30",
            "p50": "444.35",
            "p95": "358.19",
            "p99": "340.52",
            "min": "339.58",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "104.79",
            "p50": "101.51",
            "p95": "96.54",
            "p99": "91.76",
            "min": "91.73",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.05",
            "p50": "102.21",
            "p95": "96.01",
            "p99": "91.30",
            "min": "88.34",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.61",
            "p50": "94.61",
            "p95": "89.91",
            "p99": "85.43",
            "min": "84.10",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "253.44",
            "p50": "238.11",
            "p95": "206.92",
            "p99": "196.36",
            "min": "193.69",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.30",
            "p50": "94.61",
            "p95": "89.67",
            "p99": "83.60",
            "min": "83.21",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "243.93",
            "p50": "231.69",
            "p95": "210.71",
            "p99": "190.08",
            "min": "189.28",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "203.21",
            "p50": "194.38",
            "p95": "175.63",
            "p99": "163.09",
            "min": "161.79",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "248.55",
            "p50": "243.46",
            "p95": "218.85",
            "p99": "197.76",
            "min": "195.42",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "516.47",
            "p50": "503.25",
            "p95": "416.20",
            "p99": "357.33",
            "min": "353.10",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7346.13",
            "p50": "2973.27",
            "p95": "1711.77",
            "p99": "1389.67",
            "min": "1356.54",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "486.26",
            "p50": "473.93",
            "p95": "378.88",
            "p99": "341.74",
            "min": "335.23",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "21093.32",
            "p50": "7161.62",
            "p95": "2496.76",
            "p99": "1557.88",
            "min": "1428.23",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4360.27",
            "p50": "2721.90",
            "p95": "1529.79",
            "p99": "1325.98",
            "min": "1291.54",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "254.89",
            "p50": "188.67",
            "p95": "161.26",
            "p99": "144.90",
            "min": "141.80",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "255.17",
            "p50": "249.61",
            "p95": "222.03",
            "p99": "204.96",
            "min": "204.80",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "144.15",
            "p50": "139.38",
            "p95": "130.35",
            "p99": "118.41",
            "min": "117.70",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "235.38",
            "p50": "230.05",
            "p95": "208.22",
            "p99": "194.92",
            "min": "192.99",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "176.49",
            "p50": "169.35",
            "p95": "152.27",
            "p99": "76.74",
            "min": "58.06",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "214.06",
            "p50": "208.37",
            "p95": "185.85",
            "p99": "124.64",
            "min": "80.75",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "203.90",
            "p50": "197.82",
            "p95": "181.86",
            "p99": "168.96",
            "min": "167.60",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "201.42",
            "p50": "196.00",
            "p95": "176.75",
            "p99": "166.88",
            "min": "163.83",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1327.06",
            "p50": "1212.63",
            "p95": "990.72",
            "p99": "759.82",
            "min": "738.76",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "181.81",
            "p50": "176.57",
            "p95": "159.38",
            "p99": "73.51",
            "min": "58.06",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "190.65",
            "p50": "187.44",
            "p95": "178.71",
            "p99": "168.37",
            "min": "168.32",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "189.82",
            "p50": "187.66",
            "p95": "180.49",
            "p99": "174.34",
            "min": "174.27",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "190.26",
            "p50": "188.11",
            "p95": "174.66",
            "p99": "164.92",
            "min": "163.43",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1123.79",
            "p50": "1097.58",
            "p95": "780.38",
            "p99": "666.35",
            "min": "658.89",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "638.30",
            "p50": "624.14",
            "p95": "545.36",
            "p99": "309.50",
            "min": "281.61",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "606.95",
            "p50": "593.69",
            "p95": "520.15",
            "p99": "452.34",
            "min": "445.41",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "647.97",
            "p50": "636.86",
            "p95": "519.19",
            "p99": "431.39",
            "min": "430.04",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "762.27",
            "p50": "744.90",
            "p95": "560.46",
            "p99": "471.32",
            "min": "452.91",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "909.06",
            "p50": "839.52",
            "p95": "698.67",
            "p99": "561.24",
            "min": "548.83",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "881.29",
            "p50": "863.35",
            "p95": "632.63",
            "p99": "517.39",
            "min": "506.44",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "881.23",
            "p50": "859.83",
            "p95": "661.43",
            "p99": "534.17",
            "min": "525.74",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "807.00",
            "p50": "790.79",
            "p95": "621.28",
            "p99": "539.35",
            "min": "539.15",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "688.63",
            "p50": "671.58",
            "p95": "567.57",
            "p99": "433.69",
            "min": "431.53",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "852.01",
            "p50": "827.82",
            "p95": "592.34",
            "p99": "499.31",
            "min": "491.84",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "11402.06",
            "p50": "6007.38",
            "p95": "2334.26",
            "p99": "1817.43",
            "min": "1735.66",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "3901.71",
            "p50": "3618.14",
            "p95": "1414.93",
            "p99": "2145.27",
            "min": "1199.49",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "438.78",
            "p50": "432.26",
            "p95": "375.15",
            "p99": "369.87",
            "min": "353.70",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "7273.32",
            "p50": "3544.62",
            "p95": "559.03",
            "p99": "3414.24",
            "min": "503.01",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7656.45",
            "p50": "4593.23",
            "p95": "1822.65",
            "p99": "4059.97",
            "min": "1346.84",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1511.73",
            "p50": "1386.79",
            "p95": "1047.99",
            "p99": "814.50",
            "min": "744.31",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "14680.50",
            "p50": "1293.02",
            "p95": "1047.09",
            "p99": "648.72",
            "min": "557.36",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1676.30",
            "p50": "1542.44",
            "p95": "1167.49",
            "p99": "983.76",
            "min": "909.43",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "3225.84",
            "p50": "3031.24",
            "p95": "1537.70",
            "p99": "1087.93",
            "min": "1034.31",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "3250.66",
            "p50": "3058.02",
            "p95": "1357.31",
            "p99": "1066.88",
            "min": "1033.61",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1468.48",
            "p50": "1376.49",
            "p95": "898.59",
            "p99": "656.84",
            "min": "653.05",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "531.76",
            "p50": "500.24",
            "p95": "431.83",
            "p99": "364.52",
            "min": "353.74",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "739.77",
            "p50": "718.88",
            "p95": "515.67",
            "p99": "448.68",
            "min": "435.66",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "519.71",
            "p50": "501.85",
            "p95": "451.22",
            "p99": "369.95",
            "min": "369.68",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "544.11",
            "p50": "510.08",
            "p95": "458.61",
            "p99": "370.16",
            "min": "366.09",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "32638.97",
            "p50": "7534.74",
            "p95": "2468.58",
            "p99": "1928.40",
            "min": "1720.83",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "547.52",
            "p50": "537.85",
            "p95": "454.30",
            "p99": "413.69",
            "min": "411.15",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "528.93",
            "p50": "515.97",
            "p95": "439.20",
            "p99": "371.79",
            "min": "368.58",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "533.61",
            "p50": "520.65",
            "p95": "460.93",
            "p99": "407.78",
            "min": "406.92",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "540.92",
            "p50": "524.70",
            "p95": "446.69",
            "p99": "400.54",
            "min": "398.68",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "22283.67",
            "p50": "7734.73",
            "p95": "2414.47",
            "p99": "1809.52",
            "min": "1356.10",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "22417.74",
            "p50": "7774.82",
            "p95": "2335.24",
            "p99": "2009.19",
            "min": "1972.32",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "21676.29",
            "p50": "7335.54",
            "p95": "2423.59",
            "p99": "2252.32",
            "min": "2245.33",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "22364.62",
            "p50": "8139.35",
            "p95": "2380.11",
            "p99": "1614.20",
            "min": "1409.92",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "20864.15",
            "p50": "7040.99",
            "p95": "2451.13",
            "p99": "2265.20",
            "min": "2257.07",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "22501.70",
            "p50": "7884.79",
            "p95": "2330.90",
            "p99": "1416.10",
            "min": "1370.90",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "871.20",
            "p50": "831.39",
            "p95": "709.52",
            "p99": "541.51",
            "min": "529.11",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "634.94",
            "p50": "618.81",
            "p95": "516.53",
            "p99": "436.02",
            "min": "426.61",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1948.12",
            "p50": "1880.14",
            "p95": "1370.49",
            "p99": "677.79",
            "min": "650.66",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "15423.23",
            "p50": "9344.58",
            "p95": "2335.95",
            "p99": "1751.20",
            "min": "1721.53",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1861.92",
            "p50": "1785.89",
            "p95": "1255.13",
            "p99": "787.60",
            "min": "729.60",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "74937.45",
            "p50": "8836.61",
            "p95": "2312.61",
            "p99": "1398.95",
            "min": "1373.34",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13853.30",
            "p50": "8059.57",
            "p95": "2410.72",
            "p99": "1717.99",
            "min": "1413.72",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "670.82",
            "p50": "566.77",
            "p95": "490.89",
            "p99": "431.63",
            "min": "423.60",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "919.12",
            "p50": "898.09",
            "p95": "713.64",
            "p99": "552.88",
            "min": "520.53",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "809.28",
            "p50": "793.12",
            "p95": "605.01",
            "p99": "479.90",
            "min": "478.83",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1141.17",
            "p50": "1110.54",
            "p95": "814.87",
            "p99": "620.14",
            "min": "599.43",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "761.07",
            "p50": "746.22",
            "p95": "611.67",
            "p99": "522.41",
            "min": "521.34",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1077.75",
            "p50": "1045.44",
            "p95": "858.34",
            "p99": "584.19",
            "min": "566.06",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "837.49",
            "p50": "821.93",
            "p95": "652.22",
            "p99": "491.28",
            "min": "485.59",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "890.94",
            "p50": "866.90",
            "p95": "669.53",
            "p99": "547.64",
            "min": "535.45",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2059.46",
            "p50": "1811.16",
            "p95": "1363.80",
            "p99": "1105.78",
            "min": "1088.70",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "854.27",
            "p50": "821.38",
            "p95": "665.86",
            "p99": "511.91",
            "min": "505.35",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "121.80",
            "p50": "117.14",
            "p95": "106.30",
            "p99": "96.22",
            "min": "96.18",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "121.76",
            "p50": "116.96",
            "p95": "104.14",
            "p99": "94.02",
            "min": "92.38",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "121.92",
            "p50": "116.77",
            "p95": "100.03",
            "p99": "95.21",
            "min": "95.11",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "212.53",
            "p50": "194.07",
            "p95": "159.03",
            "p99": "138.62",
            "min": "134.77",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "102.63",
            "p50": "97.81",
            "p95": "84.17",
            "p99": "74.16",
            "min": "72.02",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "108.64",
            "p50": "102.02",
            "p95": "88.97",
            "p99": "83.44",
            "min": "82.66",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "138.70",
            "p50": "128.17",
            "p95": "105.57",
            "p99": "100.08",
            "min": "99.20",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "138.78",
            "p50": "129.94",
            "p95": "108.94",
            "p99": "100.34",
            "min": "100.17",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "183.60",
            "p50": "166.10",
            "p95": "132.28",
            "p99": "126.53",
            "min": "126.10",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "181.82",
            "p50": "165.77",
            "p95": "132.99",
            "p99": "116.90",
            "min": "115.86",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "180.29",
            "p50": "165.70",
            "p95": "133.22",
            "p99": "123.48",
            "min": "122.99",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "123.75",
            "p50": "117.06",
            "p95": "100.12",
            "p99": "81.77",
            "min": "78.55",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "200.54",
            "p50": "184.31",
            "p95": "144.38",
            "p99": "131.96",
            "min": "129.86",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "184.43",
            "p50": "168.83",
            "p95": "137.72",
            "p99": "129.32",
            "min": "128.29",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "74.51",
            "p50": "70.11",
            "p95": "63.58",
            "p99": "61.33",
            "min": "61.08",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "130.92",
            "p50": "119.26",
            "p95": "104.79",
            "p99": "109.99",
            "min": "98.73",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "207.34",
            "p50": "181.69",
            "p95": "143.01",
            "p99": "144.17",
            "min": "129.35",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "154.64",
            "p50": "134.12",
            "p95": "130.16",
            "p99": "139.20",
            "min": "127.55",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "123.12",
            "p50": "114.13",
            "p95": "96.90",
            "p99": "107.86",
            "min": "96.35",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1019.81",
            "p50": "668.30",
            "p95": "325.48",
            "p99": "262.98",
            "min": "256.71",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "999.04",
            "p50": "643.91",
            "p95": "317.79",
            "p99": "277.09",
            "min": "276.43",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1109.61",
            "p50": "705.26",
            "p95": "333.57",
            "p99": "284.52",
            "min": "276.80",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1030.42",
            "p50": "705.63",
            "p95": "341.72",
            "p99": "281.37",
            "min": "277.35",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "994.29",
            "p50": "662.26",
            "p95": "350.53",
            "p99": "268.64",
            "min": "252.00",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1002.41",
            "p50": "682.12",
            "p95": "357.14",
            "p99": "288.81",
            "min": "282.21",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "341.00",
            "p50": "282.55",
            "p95": "189.28",
            "p99": "174.09",
            "min": "173.82",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "338.65",
            "p50": "281.67",
            "p95": "185.86",
            "p99": "168.82",
            "min": "168.47",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "327.92",
            "p50": "281.73",
            "p95": "202.44",
            "p99": "186.93",
            "min": "186.71",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "356.49",
            "p50": "305.45",
            "p95": "201.88",
            "p99": "163.54",
            "min": "158.15",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "279.96",
            "p50": "245.82",
            "p95": "174.21",
            "p99": "154.87",
            "min": "154.79",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "288.76",
            "p50": "244.33",
            "p95": "184.25",
            "p99": "166.69",
            "min": "166.49",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "270.74",
            "p50": "242.64",
            "p95": "174.39",
            "p99": "156.87",
            "min": "156.42",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "285.33",
            "p50": "245.95",
            "p95": "192.94",
            "p99": "174.39",
            "min": "174.39",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "282.34",
            "p50": "244.61",
            "p95": "188.18",
            "p99": "161.64",
            "min": "160.35",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "103.90",
            "p50": "97.78",
            "p95": "83.39",
            "p99": "80.24",
            "min": "79.53",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "103.18",
            "p50": "98.13",
            "p95": "86.98",
            "p99": "81.20",
            "min": "80.93",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "96.14",
            "p50": "91.29",
            "p95": "79.99",
            "p99": "76.14",
            "min": "76.01",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "245.93",
            "p50": "214.90",
            "p95": "166.19",
            "p99": "144.95",
            "min": "144.51",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "95.45",
            "p50": "90.66",
            "p95": "80.83",
            "p99": "75.97",
            "min": "75.69",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "239.94",
            "p50": "209.55",
            "p95": "159.81",
            "p99": "140.55",
            "min": "135.84",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "179.11",
            "p50": "163.49",
            "p95": "126.52",
            "p99": "102.13",
            "min": "99.86",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "153.55",
            "p50": "140.86",
            "p95": "115.98",
            "p99": "110.16",
            "min": "109.69",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "432.15",
            "p50": "378.73",
            "p95": "268.76",
            "p99": "224.58",
            "min": "221.11",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5082.26",
            "p50": "2137.90",
            "p95": "622.84",
            "p99": "407.53",
            "min": "374.55",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "433.91",
            "p50": "382.26",
            "p95": "279.12",
            "p99": "222.98",
            "min": "220.85",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14474.90",
            "p50": "3062.48",
            "p95": "977.81",
            "p99": "619.89",
            "min": "494.36",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3389.90",
            "p50": "1951.96",
            "p95": "586.55",
            "p99": "484.09",
            "min": "430.44",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "208.04",
            "p50": "189.07",
            "p95": "154.02",
            "p99": "137.08",
            "min": "135.34",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "236.29",
            "p50": "214.64",
            "p95": "168.41",
            "p99": "149.85",
            "min": "148.05",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "127.08",
            "p50": "118.30",
            "p95": "100.84",
            "p99": "94.44",
            "min": "94.12",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "205.99",
            "p50": "185.94",
            "p95": "148.39",
            "p99": "139.73",
            "min": "136.81",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "138.52",
            "p50": "130.63",
            "p95": "104.15",
            "p99": "98.30",
            "min": "97.61",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "174.28",
            "p50": "157.80",
            "p95": "119.61",
            "p99": "109.81",
            "min": "107.66",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "178.06",
            "p50": "164.48",
            "p95": "136.79",
            "p99": "124.25",
            "min": "124.25",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "183.24",
            "p50": "165.64",
            "p95": "132.68",
            "p99": "123.93",
            "min": "123.57",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "307.64",
            "p50": "257.82",
            "p95": "55.77",
            "p99": "50.70",
            "min": "50.56",
            "n": "104",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "144.60",
            "p50": "136.95",
            "p95": "114.81",
            "p99": "56.63",
            "min": "53.22",
            "n": "105",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "86.16",
            "p50": "82.55",
            "p95": "73.37",
            "p99": "71.23",
            "min": "71.22",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "87.64",
            "p50": "83.75",
            "p95": "81.23",
            "p99": "79.45",
            "min": "79.30",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "87.04",
            "p50": "83.21",
            "p95": "81.36",
            "p99": "74.89",
            "min": "74.27",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "185.59",
            "p50": "178.15",
            "p95": "138.46",
            "p99": "133.61",
            "min": "132.71",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "96.49",
            "p50": "94.46",
            "p95": "88.74",
            "p99": "85.85",
            "min": "85.32",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "110.04",
            "p50": "108.50",
            "p95": "104.47",
            "p99": "102.83",
            "min": "102.79",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "140.68",
            "p50": "138.20",
            "p95": "124.70",
            "p99": "115.94",
            "min": "115.91",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "142.57",
            "p50": "139.00",
            "p95": "136.22",
            "p99": "132.84",
            "min": "132.12",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "103.34",
            "p50": "100.28",
            "p95": "80.45",
            "p99": "79.65",
            "min": "79.39",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "107.22",
            "p50": "105.11",
            "p95": "100.90",
            "p99": "97.95",
            "min": "97.73",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "108.09",
            "p50": "105.12",
            "p95": "102.68",
            "p99": "100.79",
            "min": "100.63",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "140.99",
            "p50": "138.54",
            "p95": "136.09",
            "p99": "128.13",
            "min": "127.88",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "133.05",
            "p50": "130.35",
            "p95": "122.77",
            "p99": "113.70",
            "min": "112.80",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "125.06",
            "p50": "123.14",
            "p95": "114.68",
            "p99": "108.59",
            "min": "108.31",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "86.97",
            "p50": "81.97",
            "p95": "77.76",
            "p99": "75.51",
            "min": "75.23",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "95.14",
            "p50": "93.78",
            "p95": "87.90",
            "p99": "89.45",
            "min": "86.38",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "75.26",
            "p50": "72.41",
            "p95": "67.37",
            "p99": "62.49",
            "min": "59.50",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "147.41",
            "p50": "117.42",
            "p95": "109.91",
            "p99": "125.72",
            "min": "109.35",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "101.73",
            "p50": "100.12",
            "p95": "98.48",
            "p99": "99.67",
            "min": "98.13",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "421.02",
            "p50": "411.67",
            "p95": "372.31",
            "p99": "326.36",
            "min": "323.75",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "477.83",
            "p50": "470.63",
            "p95": "434.70",
            "p99": "385.54",
            "min": "365.69",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "448.83",
            "p50": "438.10",
            "p95": "407.14",
            "p99": "366.27",
            "min": "364.87",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "457.66",
            "p50": "442.97",
            "p95": "401.45",
            "p99": "359.49",
            "min": "347.30",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "457.04",
            "p50": "446.05",
            "p95": "409.19",
            "p99": "374.05",
            "min": "371.18",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "463.44",
            "p50": "453.91",
            "p95": "428.27",
            "p99": "406.88",
            "min": "402.39",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "121.06",
            "p50": "117.51",
            "p95": "113.17",
            "p99": "105.03",
            "min": "104.74",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "121.04",
            "p50": "118.24",
            "p95": "113.71",
            "p99": "106.17",
            "min": "104.69",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "120.22",
            "p50": "116.39",
            "p95": "111.86",
            "p99": "106.07",
            "min": "105.92",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "102.83",
            "p50": "100.70",
            "p95": "98.08",
            "p99": "94.45",
            "min": "93.82",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "85.43",
            "p50": "84.32",
            "p95": "83.17",
            "p99": "82.57",
            "min": "82.55",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "121.27",
            "p50": "116.26",
            "p95": "111.02",
            "p99": "106.91",
            "min": "106.65",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "114.93",
            "p50": "109.82",
            "p95": "103.93",
            "p99": "97.37",
            "min": "96.87",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "113.48",
            "p50": "109.97",
            "p95": "105.91",
            "p99": "101.72",
            "min": "101.44",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "113.94",
            "p50": "109.62",
            "p95": "104.87",
            "p99": "100.98",
            "min": "100.08",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1587.35",
            "p50": "1424.45",
            "p95": "764.49",
            "p99": "444.61",
            "min": "359.14",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1593.26",
            "p50": "1473.35",
            "p95": "768.18",
            "p99": "445.14",
            "min": "262.10",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.60",
            "p50": "152.08",
            "p95": "139.57",
            "p99": "133.21",
            "min": "131.32",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3934.54",
            "p50": "3402.43",
            "p95": "1185.08",
            "p99": "818.87",
            "min": "755.47",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "155.41",
            "p50": "150.72",
            "p95": "135.58",
            "p99": "106.20",
            "min": "100.55",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3915.60",
            "p50": "3513.44",
            "p95": "1374.57",
            "p99": "896.64",
            "min": "739.88",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "108.56",
            "p50": "105.37",
            "p95": "101.09",
            "p99": "92.50",
            "min": "91.96",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "170.54",
            "p50": "167.72",
            "p95": "162.75",
            "p99": "159.67",
            "min": "159.13",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "395.28",
            "p50": "294.25",
            "p95": "220.54",
            "p99": "191.36",
            "min": "174.64",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "10564.28",
            "p50": "1669.60",
            "p95": "867.39",
            "p99": "403.65",
            "min": "383.67",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "440.84",
            "p50": "325.36",
            "p95": "248.30",
            "p99": "205.51",
            "min": "203.46",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "29490.37",
            "p50": "8717.57",
            "p95": "2455.79",
            "p99": "1654.14",
            "min": "1646.32",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6682.88",
            "p50": "3186.28",
            "p95": "1652.92",
            "p99": "1047.66",
            "min": "973.52",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "357.85",
            "p50": "279.48",
            "p95": "204.88",
            "p99": "169.11",
            "min": "161.00",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "130.66",
            "p50": "127.10",
            "p95": "111.50",
            "p99": "98.23",
            "min": "98.00",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "141.30",
            "p50": "132.87",
            "p95": "128.46",
            "p99": "126.27",
            "min": "126.24",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "120.98",
            "p50": "111.11",
            "p95": "74.10",
            "p99": "72.02",
            "min": "71.55",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "138.86",
            "p50": "135.96",
            "p95": "129.01",
            "p99": "125.79",
            "min": "125.35",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "150.00",
            "p50": "146.32",
            "p95": "92.57",
            "p99": "91.19",
            "min": "90.96",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "102.55",
            "p50": "99.66",
            "p95": "80.49",
            "p99": "72.38",
            "min": "71.89",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "123.35",
            "p50": "120.05",
            "p95": "118.06",
            "p99": "115.54",
            "min": "115.44",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1225.01",
            "p50": "1112.09",
            "p95": "383.70",
            "p99": "378.29",
            "min": "378.11",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "139.08",
            "p50": "133.51",
            "p95": "126.73",
            "p99": "123.85",
            "min": "123.57",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}