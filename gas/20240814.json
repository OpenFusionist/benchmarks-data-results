{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "170.19",
            "p50": "167.90",
            "p95": "133.19",
            "p99": "132.11",
            "min": "131.92",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "170.51",
            "p50": "168.27",
            "p95": "133.01",
            "p99": "132.89",
            "min": "132.88",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "169.99",
            "p50": "167.85",
            "p95": "132.87",
            "p99": "131.99",
            "min": "131.87",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "760.14",
            "p50": "746.03",
            "p95": "473.60",
            "p99": "450.28",
            "min": "437.25",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "403.37",
            "p50": "393.88",
            "p95": "382.34",
            "p99": "356.06",
            "min": "354.39",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "438.84",
            "p50": "429.12",
            "p95": "415.19",
            "p99": "396.18",
            "min": "393.66",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "324.07",
            "p50": "317.57",
            "p95": "311.11",
            "p99": "307.12",
            "min": "306.80",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "187.05",
            "p50": "185.08",
            "p95": "157.83",
            "p99": "156.69",
            "min": "156.65",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "271.05",
            "p50": "261.27",
            "p95": "246.24",
            "p99": "238.02",
            "min": "237.74",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "264.68",
            "p50": "255.93",
            "p95": "250.44",
            "p99": "228.49",
            "min": "226.05",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "266.21",
            "p50": "257.65",
            "p95": "254.68",
            "p99": "245.68",
            "min": "245.03",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "190.52",
            "p50": "187.96",
            "p95": "181.84",
            "p99": "181.13",
            "min": "181.11",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "319.99",
            "p50": "314.78",
            "p95": "303.74",
            "p99": "297.34",
            "min": "297.09",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "308.37",
            "p50": "302.83",
            "p95": "294.46",
            "p99": "288.84",
            "min": "287.82",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "111.15",
            "p50": "106.97",
            "p95": "104.68",
            "p99": "104.25",
            "min": "104.17",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "170.29",
            "p50": "167.96",
            "p95": "165.14",
            "p99": "163.64",
            "min": "160.06",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "297.35",
            "p50": "248.92",
            "p95": "229.91",
            "p99": "235.65",
            "min": "221.18",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "242.82",
            "p50": "194.01",
            "p95": "181.83",
            "p99": "207.36",
            "min": "180.60",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "167.37",
            "p50": "164.28",
            "p95": "163.14",
            "p99": "164.64",
            "min": "162.57",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "890.26",
            "p50": "822.48",
            "p95": "786.65",
            "p99": "769.56",
            "min": "767.47",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "843.58",
            "p50": "815.76",
            "p95": "788.50",
            "p99": "757.46",
            "min": "756.07",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1042.46",
            "p50": "948.22",
            "p95": "894.84",
            "p99": "863.23",
            "min": "855.16",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1069.26",
            "p50": "967.46",
            "p95": "902.80",
            "p99": "880.66",
            "min": "875.74",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1079.97",
            "p50": "980.24",
            "p95": "942.52",
            "p99": "923.77",
            "min": "916.20",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "855.07",
            "p50": "816.97",
            "p95": "795.80",
            "p99": "764.54",
            "min": "763.48",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "200.54",
            "p50": "185.46",
            "p95": "180.53",
            "p99": "177.11",
            "min": "176.79",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "194.99",
            "p50": "185.24",
            "p95": "179.72",
            "p99": "173.26",
            "min": "173.18",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "201.63",
            "p50": "185.82",
            "p95": "181.15",
            "p99": "176.71",
            "min": "176.45",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "225.01",
            "p50": "211.34",
            "p95": "205.55",
            "p99": "202.35",
            "min": "202.10",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.85",
            "p50": "87.30",
            "p95": "86.72",
            "p99": "85.73",
            "min": "85.46",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "345.41",
            "p50": "307.04",
            "p95": "286.88",
            "p99": "139.33",
            "min": "138.97",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "334.97",
            "p50": "298.39",
            "p95": "285.74",
            "p99": "269.03",
            "min": "265.85",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "332.07",
            "p50": "299.68",
            "p95": "290.43",
            "p99": "285.89",
            "min": "285.87",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "335.24",
            "p50": "298.81",
            "p95": "287.17",
            "p99": "150.52",
            "min": "117.47",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "2403.76",
            "p50": "2266.80",
            "p95": "2055.21",
            "p99": "1894.30",
            "min": "1883.66",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "2316.59",
            "p50": "2205.40",
            "p95": "1972.90",
            "p99": "1477.17",
            "min": "1365.99",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "94.06",
            "p50": "93.22",
            "p95": "92.51",
            "p99": "87.58",
            "min": "85.83",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "5663.79",
            "p50": "5126.89",
            "p95": "2399.79",
            "p99": "65.59",
            "min": "62.56",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "94.10",
            "p50": "93.26",
            "p95": "92.67",
            "p99": "92.43",
            "min": "92.42",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3179.16",
            "p50": "3003.81",
            "p95": "2626.48",
            "p99": "1741.29",
            "min": "1533.88",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "263.74",
            "p50": "254.79",
            "p95": "249.07",
            "p99": "234.68",
            "min": "232.26",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "538.68",
            "p50": "531.18",
            "p95": "515.44",
            "p99": "487.51",
            "min": "485.67",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1261.75",
            "p50": "1216.56",
            "p95": "420.59",
            "p99": "366.62",
            "min": "356.86",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "17935.84",
            "p50": "8350.39",
            "p95": "2449.68",
            "p99": "902.96",
            "min": "82.93",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1151.98",
            "p50": "1113.84",
            "p95": "346.14",
            "p99": "341.02",
            "min": "340.92",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "50169.29",
            "p50": "8663.12",
            "p95": "2129.25",
            "p99": "170.87",
            "min": "157.49",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "16541.21",
            "p50": "7079.45",
            "p95": "2488.36",
            "p99": "1037.72",
            "min": "410.68",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "536.15",
            "p50": "494.29",
            "p95": "447.73",
            "p99": "425.64",
            "min": "420.86",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "515.48",
            "p50": "506.70",
            "p95": "495.90",
            "p99": "486.28",
            "min": "485.90",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "204.01",
            "p50": "200.76",
            "p95": "170.08",
            "p99": "167.27",
            "min": "166.54",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "442.64",
            "p50": "430.23",
            "p95": "420.08",
            "p99": "406.92",
            "min": "404.28",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "204.06",
            "p50": "201.71",
            "p95": "171.08",
            "p99": "170.30",
            "min": "170.29",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "327.69",
            "p50": "321.33",
            "p95": "311.57",
            "p99": "289.03",
            "min": "282.46",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "271.60",
            "p50": "267.05",
            "p95": "250.24",
            "p99": "245.39",
            "min": "245.06",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "515.12",
            "p50": "506.72",
            "p95": "490.53",
            "p99": "482.20",
            "min": "479.19",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1480.13",
            "p50": "1151.69",
            "p95": "856.87",
            "p99": "778.75",
            "min": "766.94",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "316.77",
            "p50": "310.91",
            "p95": "302.56",
            "p99": "275.25",
            "min": "267.39",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "88.37",
            "p50": "85.02",
            "p95": "78.28",
            "p99": "74.52",
            "min": "74.43",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "80.71",
            "p50": "77.99",
            "p95": "71.39",
            "p99": "68.52",
            "min": "68.12",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "82.61",
            "p50": "79.58",
            "p95": "73.67",
            "p99": "70.49",
            "min": "70.40",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "226.39",
            "p50": "209.68",
            "p95": "176.81",
            "p99": "163.68",
            "min": "162.79",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "174.80",
            "p50": "163.51",
            "p95": "140.54",
            "p99": "67.67",
            "min": "64.23",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "181.26",
            "p50": "169.78",
            "p95": "147.23",
            "p99": "138.61",
            "min": "137.67",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "167.63",
            "p50": "156.56",
            "p95": "130.80",
            "p99": "108.64",
            "min": "106.84",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "170.28",
            "p50": "155.41",
            "p95": "132.59",
            "p99": "100.04",
            "min": "95.90",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "191.71",
            "p50": "180.73",
            "p95": "154.73",
            "p99": "147.38",
            "min": "146.82",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "171.73",
            "p50": "160.11",
            "p95": "137.26",
            "p99": "123.34",
            "min": "120.91",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "193.17",
            "p50": "179.30",
            "p95": "151.03",
            "p99": "146.30",
            "min": "146.19",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "140.47",
            "p50": "131.84",
            "p95": "116.27",
            "p99": "102.75",
            "min": "101.22",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "218.72",
            "p50": "203.10",
            "p95": "173.65",
            "p99": "158.22",
            "min": "155.92",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "173.64",
            "p50": "159.91",
            "p95": "143.07",
            "p99": "137.67",
            "min": "137.03",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "68.09",
            "p50": "65.07",
            "p95": "59.91",
            "p99": "58.62",
            "min": "58.57",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "139.95",
            "p50": "128.90",
            "p95": "112.27",
            "p99": "120.14",
            "min": "109.47",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "399.50",
            "p50": "305.84",
            "p95": "255.88",
            "p99": "242.64",
            "min": "205.85",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "176.25",
            "p50": "143.08",
            "p95": "134.53",
            "p99": "152.11",
            "min": "133.90",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "129.07",
            "p50": "121.25",
            "p95": "113.94",
            "p99": "117.43",
            "min": "108.65",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1172.38",
            "p50": "902.16",
            "p95": "528.48",
            "p99": "435.03",
            "min": "430.47",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1029.36",
            "p50": "817.81",
            "p95": "497.88",
            "p99": "416.44",
            "min": "416.38",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1379.17",
            "p50": "1044.82",
            "p95": "598.35",
            "p99": "498.90",
            "min": "459.77",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1243.47",
            "p50": "938.56",
            "p95": "542.68",
            "p99": "411.04",
            "min": "359.31",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1249.42",
            "p50": "938.82",
            "p95": "526.08",
            "p99": "392.22",
            "min": "382.39",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1070.97",
            "p50": "859.24",
            "p95": "549.53",
            "p99": "408.41",
            "min": "398.46",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "684.05",
            "p50": "516.60",
            "p95": "366.63",
            "p99": "346.91",
            "min": "346.35",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "651.71",
            "p50": "521.76",
            "p95": "347.44",
            "p99": "295.94",
            "min": "295.37",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "661.05",
            "p50": "521.97",
            "p95": "379.91",
            "p99": "327.74",
            "min": "323.25",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "653.30",
            "p50": "542.68",
            "p95": "393.03",
            "p99": "332.20",
            "min": "329.31",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "293.78",
            "p50": "264.34",
            "p95": "220.99",
            "p99": "203.69",
            "min": "198.85",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "549.70",
            "p50": "430.65",
            "p95": "318.53",
            "p99": "279.71",
            "min": "274.79",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "536.47",
            "p50": "447.73",
            "p95": "320.33",
            "p99": "264.21",
            "min": "263.19",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "552.35",
            "p50": "450.67",
            "p95": "355.81",
            "p99": "283.69",
            "min": "275.68",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "569.48",
            "p50": "473.25",
            "p95": "331.12",
            "p99": "293.49",
            "min": "291.34",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.73",
            "p50": "102.19",
            "p95": "92.94",
            "p99": "85.86",
            "min": "85.76",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "106.40",
            "p50": "101.66",
            "p95": "92.15",
            "p99": "86.80",
            "min": "84.86",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "99.28",
            "p50": "95.05",
            "p95": "86.36",
            "p99": "83.81",
            "min": "83.61",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "252.58",
            "p50": "235.13",
            "p95": "192.42",
            "p99": "177.90",
            "min": "177.51",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "99.42",
            "p50": "94.97",
            "p95": "86.45",
            "p99": "83.77",
            "min": "83.76",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "246.99",
            "p50": "226.82",
            "p95": "188.54",
            "p99": "171.73",
            "min": "170.49",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "193.88",
            "p50": "182.05",
            "p95": "151.07",
            "p99": "144.74",
            "min": "144.26",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "198.72",
            "p50": "185.16",
            "p95": "158.27",
            "p99": "149.23",
            "min": "149.15",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "356.85",
            "p50": "318.17",
            "p95": "246.18",
            "p99": "206.71",
            "min": "190.91",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5529.06",
            "p50": "2230.06",
            "p95": "1098.05",
            "p99": "895.48",
            "min": "890.67",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "345.26",
            "p50": "310.01",
            "p95": "241.24",
            "p99": "204.54",
            "min": "188.05",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14073.49",
            "p50": "3667.29",
            "p95": "1451.69",
            "p99": "1300.25",
            "min": "1235.22",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3301.33",
            "p50": "1783.77",
            "p95": "889.28",
            "p99": "634.87",
            "min": "560.60",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "181.76",
            "p50": "165.82",
            "p95": "142.51",
            "p99": "130.59",
            "min": "130.25",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "249.88",
            "p50": "228.36",
            "p95": "189.03",
            "p99": "129.04",
            "min": "110.54",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "91.42",
            "p50": "88.03",
            "p95": "80.09",
            "p99": "60.86",
            "min": "54.96",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "225.70",
            "p50": "207.49",
            "p95": "175.26",
            "p99": "164.30",
            "min": "162.71",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "171.58",
            "p50": "158.81",
            "p95": "137.15",
            "p99": "126.99",
            "min": "125.44",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "201.41",
            "p50": "187.95",
            "p95": "159.25",
            "p99": "149.86",
            "min": "148.93",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "193.90",
            "p50": "181.53",
            "p95": "154.09",
            "p99": "130.74",
            "min": "126.84",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "195.91",
            "p50": "182.93",
            "p95": "156.29",
            "p99": "146.83",
            "min": "146.70",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1087.76",
            "p50": "879.54",
            "p95": "598.56",
            "p99": "554.14",
            "min": "553.38",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "174.23",
            "p50": "164.69",
            "p95": "123.42",
            "p99": "115.33",
            "min": "115.11",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "194.85",
            "p50": "189.31",
            "p95": "170.81",
            "p99": "166.80",
            "min": "166.77",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "194.58",
            "p50": "188.30",
            "p95": "173.30",
            "p99": "168.37",
            "min": "168.34",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "195.16",
            "p50": "190.52",
            "p95": "173.95",
            "p99": "164.87",
            "min": "162.94",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1187.96",
            "p50": "1091.10",
            "p95": "674.31",
            "p99": "566.67",
            "min": "530.25",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "701.46",
            "p50": "630.25",
            "p95": "486.87",
            "p99": "408.58",
            "min": "404.35",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "811.15",
            "p50": "735.45",
            "p95": "537.16",
            "p99": "432.99",
            "min": "426.69",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "721.50",
            "p50": "641.32",
            "p95": "481.69",
            "p99": "414.15",
            "min": "401.83",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "727.27",
            "p50": "653.77",
            "p95": "463.47",
            "p99": "405.93",
            "min": "405.71",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "901.85",
            "p50": "810.50",
            "p95": "555.84",
            "p99": "443.58",
            "min": "436.53",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "864.48",
            "p50": "756.41",
            "p95": "501.28",
            "p99": "457.45",
            "min": "456.52",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "857.14",
            "p50": "747.51",
            "p95": "506.91",
            "p99": "447.05",
            "min": "446.47",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "821.35",
            "p50": "722.25",
            "p95": "571.63",
            "p99": "426.90",
            "min": "423.44",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "648.54",
            "p50": "594.81",
            "p95": "447.11",
            "p99": "382.18",
            "min": "382.13",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "857.31",
            "p50": "772.30",
            "p95": "568.39",
            "p99": "517.12",
            "min": "514.97",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "64.47",
            "p50": "62.66",
            "p95": "60.76",
            "p99": "59.45",
            "min": "59.19",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "97.13",
            "p50": "94.31",
            "p95": "90.10",
            "p99": "90.75",
            "min": "87.32",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "487.41",
            "p50": "442.81",
            "p95": "363.71",
            "p99": "343.39",
            "min": "309.61",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "129.76",
            "p50": "103.68",
            "p95": "97.40",
            "p99": "109.79",
            "min": "94.71",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "91.60",
            "p50": "87.47",
            "p95": "84.27",
            "p99": "86.61",
            "min": "82.85",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1788.03",
            "p50": "1565.42",
            "p95": "845.97",
            "p99": "618.75",
            "min": "617.78",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1638.96",
            "p50": "1413.67",
            "p95": "764.84",
            "p99": "612.38",
            "min": "602.12",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "2233.76",
            "p50": "1736.34",
            "p95": "935.42",
            "p99": "763.44",
            "min": "705.59",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2194.38",
            "p50": "1666.80",
            "p95": "931.41",
            "p99": "664.30",
            "min": "661.14",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2214.18",
            "p50": "1676.14",
            "p95": "915.44",
            "p99": "666.36",
            "min": "660.28",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1678.64",
            "p50": "1349.02",
            "p95": "769.86",
            "p99": "615.86",
            "min": "613.22",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "717.99",
            "p50": "630.52",
            "p95": "475.42",
            "p99": "408.36",
            "min": "406.97",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "710.99",
            "p50": "634.75",
            "p95": "515.51",
            "p99": "415.08",
            "min": "414.28",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "718.19",
            "p50": "632.07",
            "p95": "494.53",
            "p99": "420.06",
            "min": "418.75",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "734.56",
            "p50": "662.81",
            "p95": "433.78",
            "p99": "403.97",
            "min": "400.71",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "86.65",
            "p50": "85.38",
            "p95": "81.27",
            "p99": "79.81",
            "min": "79.72",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "631.23",
            "p50": "568.43",
            "p95": "427.32",
            "p99": "393.66",
            "min": "390.35",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "595.23",
            "p50": "537.81",
            "p95": "443.64",
            "p99": "383.51",
            "min": "378.52",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "604.84",
            "p50": "536.03",
            "p95": "404.69",
            "p99": "366.49",
            "min": "365.44",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "613.01",
            "p50": "536.92",
            "p95": "408.89",
            "p99": "371.81",
            "min": "371.28",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1376.75",
            "p50": "1197.41",
            "p95": "750.55",
            "p99": "570.52",
            "min": "567.97",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1676.81",
            "p50": "1433.34",
            "p95": "847.92",
            "p99": "639.72",
            "min": "620.54",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "72.13",
            "p50": "71.22",
            "p95": "68.08",
            "p99": "66.89",
            "min": "66.84",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "9400.81",
            "p50": "4459.24",
            "p95": "2379.72",
            "p99": "1806.95",
            "min": "1717.29",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "72.16",
            "p50": "71.23",
            "p95": "68.56",
            "p99": "67.26",
            "min": "67.24",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "221.70",
            "p50": "216.45",
            "p95": "193.94",
            "p99": "181.33",
            "min": "180.36",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "862.05",
            "p50": "764.50",
            "p95": "568.31",
            "p99": "471.49",
            "min": "453.11",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "670.90",
            "p50": "617.69",
            "p95": "486.59",
            "p99": "392.98",
            "min": "391.47",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1073.00",
            "p50": "980.15",
            "p95": "685.05",
            "p99": "573.80",
            "min": "568.85",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "25392.70",
            "p50": "9150.01",
            "p95": "2656.97",
            "p99": "1879.20",
            "min": "1627.94",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1062.27",
            "p50": "960.87",
            "p95": "657.34",
            "p99": "520.06",
            "min": "518.94",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "55412.43",
            "p50": "9312.19",
            "p95": "2671.99",
            "p99": "1898.58",
            "min": "1598.51",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "17101.72",
            "p50": "5827.13",
            "p95": "1120.76",
            "p99": "1008.90",
            "min": "998.14",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "540.04",
            "p50": "477.99",
            "p95": "407.89",
            "p99": "359.58",
            "min": "351.94",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "978.76",
            "p50": "911.28",
            "p95": "605.75",
            "p99": "482.94",
            "min": "481.52",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "797.78",
            "p50": "719.35",
            "p95": "513.53",
            "p99": "441.03",
            "min": "434.45",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1198.01",
            "p50": "1088.42",
            "p95": "731.24",
            "p99": "546.38",
            "min": "541.07",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "726.59",
            "p50": "662.54",
            "p95": "511.07",
            "p99": "412.76",
            "min": "411.46",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1152.55",
            "p50": "1068.78",
            "p95": "686.46",
            "p99": "550.31",
            "min": "547.56",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "871.85",
            "p50": "782.19",
            "p95": "571.55",
            "p99": "459.95",
            "min": "459.85",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "903.85",
            "p50": "827.14",
            "p95": "545.99",
            "p99": "481.43",
            "min": "480.43",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "2359.77",
            "p50": "1968.36",
            "p95": "1077.57",
            "p99": "944.86",
            "min": "931.56",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "853.79",
            "p50": "799.17",
            "p95": "535.30",
            "p99": "459.85",
            "min": "457.14",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "82.92",
            "p50": "79.81",
            "p95": "71.97",
            "p99": "68.98",
            "min": "68.63",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "75.87",
            "p50": "73.41",
            "p95": "66.20",
            "p99": "62.97",
            "min": "62.94",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "77.63",
            "p50": "75.03",
            "p95": "69.19",
            "p99": "66.36",
            "min": "66.36",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "212.55",
            "p50": "194.86",
            "p95": "159.69",
            "p99": "109.86",
            "min": "77.98",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "103.67",
            "p50": "99.69",
            "p95": "86.87",
            "p99": "68.65",
            "min": "65.51",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.43",
            "p50": "105.45",
            "p95": "94.36",
            "p99": "89.16",
            "min": "88.56",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "143.78",
            "p50": "136.00",
            "p95": "113.24",
            "p99": "88.66",
            "min": "84.12",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "143.21",
            "p50": "134.10",
            "p95": "116.03",
            "p99": "106.07",
            "min": "105.49",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "186.95",
            "p50": "174.63",
            "p95": "140.81",
            "p99": "133.66",
            "min": "132.59",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "185.59",
            "p50": "172.84",
            "p95": "141.37",
            "p99": "105.43",
            "min": "97.85",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "186.92",
            "p50": "172.47",
            "p95": "142.25",
            "p99": "111.44",
            "min": "105.92",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.46",
            "p50": "122.56",
            "p95": "106.55",
            "p99": "68.56",
            "min": "60.16",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "205.76",
            "p50": "188.87",
            "p95": "153.60",
            "p99": "125.68",
            "min": "119.02",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "188.56",
            "p50": "175.99",
            "p95": "145.78",
            "p99": "131.99",
            "min": "130.97",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "73.26",
            "p50": "69.14",
            "p95": "63.86",
            "p99": "61.05",
            "min": "60.66",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "134.04",
            "p50": "124.46",
            "p95": "104.80",
            "p99": "112.03",
            "min": "100.18",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "214.74",
            "p50": "193.44",
            "p95": "158.87",
            "p99": "157.63",
            "min": "144.23",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "164.56",
            "p50": "141.37",
            "p95": "131.49",
            "p99": "144.61",
            "min": "129.57",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "128.39",
            "p50": "119.08",
            "p95": "102.78",
            "p99": "111.57",
            "min": "98.88",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1028.88",
            "p50": "747.20",
            "p95": "406.54",
            "p99": "326.51",
            "min": "303.11",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1034.14",
            "p50": "723.57",
            "p95": "381.60",
            "p99": "334.74",
            "min": "331.85",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1117.98",
            "p50": "828.47",
            "p95": "429.11",
            "p99": "330.18",
            "min": "318.18",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1098.00",
            "p50": "795.04",
            "p95": "411.33",
            "p99": "312.89",
            "min": "299.26",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1053.70",
            "p50": "757.08",
            "p95": "418.53",
            "p99": "322.76",
            "min": "303.55",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1029.35",
            "p50": "766.83",
            "p95": "390.44",
            "p99": "322.51",
            "min": "306.82",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "341.72",
            "p50": "299.73",
            "p95": "228.72",
            "p99": "191.48",
            "min": "190.55",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "342.64",
            "p50": "294.20",
            "p95": "218.87",
            "p99": "187.89",
            "min": "184.96",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "340.31",
            "p50": "300.80",
            "p95": "217.13",
            "p99": "190.96",
            "min": "188.98",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "371.54",
            "p50": "317.68",
            "p95": "224.69",
            "p99": "194.41",
            "min": "194.05",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "288.88",
            "p50": "257.94",
            "p95": "188.22",
            "p99": "155.60",
            "min": "152.35",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "296.52",
            "p50": "261.85",
            "p95": "195.97",
            "p99": "176.34",
            "min": "172.72",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "292.70",
            "p50": "257.69",
            "p95": "202.66",
            "p99": "171.52",
            "min": "169.78",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "294.71",
            "p50": "262.13",
            "p95": "205.47",
            "p99": "172.77",
            "min": "172.20",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "301.55",
            "p50": "260.25",
            "p95": "186.79",
            "p99": "178.28",
            "min": "177.60",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "106.10",
            "p50": "101.25",
            "p95": "91.66",
            "p99": "85.69",
            "min": "83.74",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "105.72",
            "p50": "101.47",
            "p95": "89.61",
            "p99": "83.85",
            "min": "83.71",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "97.78",
            "p50": "94.17",
            "p95": "84.85",
            "p99": "78.84",
            "min": "77.90",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "250.80",
            "p50": "228.44",
            "p95": "179.50",
            "p99": "163.84",
            "min": "161.94",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "98.26",
            "p50": "93.77",
            "p95": "83.15",
            "p99": "79.74",
            "min": "79.18",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "244.15",
            "p50": "222.74",
            "p95": "176.36",
            "p99": "156.12",
            "min": "152.30",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "185.75",
            "p50": "173.28",
            "p95": "143.63",
            "p99": "133.21",
            "min": "132.50",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "149.75",
            "p50": "141.76",
            "p95": "116.92",
            "p99": "79.18",
            "min": "62.87",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "445.48",
            "p50": "378.89",
            "p95": "266.20",
            "p99": "211.01",
            "min": "201.50",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4287.68",
            "p50": "1745.43",
            "p95": "505.36",
            "p99": "431.02",
            "min": "430.71",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "441.69",
            "p50": "379.35",
            "p95": "244.11",
            "p99": "229.21",
            "min": "226.24",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "13823.07",
            "p50": "2759.09",
            "p95": "1073.05",
            "p99": "726.11",
            "min": "519.73",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3206.42",
            "p50": "1415.50",
            "p95": "485.39",
            "p99": "437.02",
            "min": "434.85",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "205.92",
            "p50": "189.53",
            "p95": "158.66",
            "p99": "143.54",
            "min": "141.43",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "233.90",
            "p50": "213.58",
            "p95": "165.20",
            "p99": "156.22",
            "min": "155.40",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "128.42",
            "p50": "121.69",
            "p95": "110.03",
            "p99": "96.30",
            "min": "95.10",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "209.17",
            "p50": "191.60",
            "p95": "157.93",
            "p99": "102.16",
            "min": "84.24",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "141.44",
            "p50": "133.74",
            "p95": "116.51",
            "p99": "94.53",
            "min": "94.45",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "176.26",
            "p50": "163.36",
            "p95": "137.59",
            "p99": "122.99",
            "min": "119.52",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "184.61",
            "p50": "170.72",
            "p95": "140.41",
            "p99": "120.80",
            "min": "118.08",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "186.44",
            "p50": "172.96",
            "p95": "141.92",
            "p99": "132.43",
            "min": "132.30",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "300.22",
            "p50": "237.66",
            "p95": "149.25",
            "p99": "138.88",
            "min": "132.15",
            "n": "95",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "143.44",
            "p50": "136.58",
            "p95": "114.63",
            "p99": "116.55",
            "min": "108.96",
            "n": "77",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "85.98",
            "p50": "84.73",
            "p95": "78.37",
            "p99": "76.81",
            "min": "76.71",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "87.18",
            "p50": "85.99",
            "p95": "83.71",
            "p99": "82.04",
            "min": "81.93",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "86.40",
            "p50": "85.52",
            "p95": "81.59",
            "p99": "79.87",
            "min": "79.84",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "189.43",
            "p50": "181.72",
            "p95": "177.01",
            "p99": "163.46",
            "min": "157.78",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "91.87",
            "p50": "89.95",
            "p95": "85.02",
            "p99": "78.75",
            "min": "77.95",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "113.25",
            "p50": "109.78",
            "p95": "101.97",
            "p99": "98.72",
            "min": "98.64",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "125.47",
            "p50": "123.08",
            "p95": "109.36",
            "p99": "103.14",
            "min": "102.62",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "125.31",
            "p50": "123.20",
            "p95": "120.19",
            "p99": "113.07",
            "min": "112.12",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "98.48",
            "p50": "95.31",
            "p95": "92.86",
            "p99": "88.55",
            "min": "87.78",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "98.37",
            "p50": "96.63",
            "p95": "94.85",
            "p99": "89.74",
            "min": "89.46",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "98.48",
            "p50": "96.61",
            "p95": "94.35",
            "p99": "92.09",
            "min": "92.07",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "128.05",
            "p50": "123.43",
            "p95": "120.95",
            "p99": "114.00",
            "min": "113.45",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "121.35",
            "p50": "118.44",
            "p95": "111.00",
            "p99": "105.40",
            "min": "103.69",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "116.61",
            "p50": "113.83",
            "p95": "110.79",
            "p99": "107.86",
            "min": "107.80",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "76.66",
            "p50": "73.73",
            "p95": "70.39",
            "p99": "66.86",
            "min": "65.83",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "99.29",
            "p50": "98.62",
            "p95": "95.05",
            "p99": "91.91",
            "min": "87.94",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "62.33",
            "p50": "60.90",
            "p95": "58.75",
            "p99": "54.69",
            "min": "52.90",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "158.73",
            "p50": "127.77",
            "p95": "119.66",
            "p99": "134.72",
            "min": "116.62",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "110.04",
            "p50": "108.35",
            "p95": "107.03",
            "p99": "107.43",
            "min": "105.46",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "385.56",
            "p50": "375.30",
            "p95": "357.84",
            "p99": "323.51",
            "min": "315.32",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "488.56",
            "p50": "481.04",
            "p95": "470.84",
            "p99": "345.94",
            "min": "319.09",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "389.56",
            "p50": "378.30",
            "p95": "347.39",
            "p99": "310.61",
            "min": "296.45",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "392.04",
            "p50": "383.24",
            "p95": "355.41",
            "p99": "320.50",
            "min": "313.13",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "394.75",
            "p50": "384.79",
            "p95": "368.32",
            "p99": "311.49",
            "min": "277.37",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "457.68",
            "p50": "448.57",
            "p95": "426.25",
            "p99": "411.08",
            "min": "406.06",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "101.20",
            "p50": "99.03",
            "p95": "94.50",
            "p99": "93.12",
            "min": "92.85",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "101.62",
            "p50": "99.61",
            "p95": "95.11",
            "p99": "91.99",
            "min": "91.42",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "100.24",
            "p50": "98.11",
            "p95": "93.83",
            "p99": "93.36",
            "min": "93.32",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "91.37",
            "p50": "89.24",
            "p95": "85.42",
            "p99": "85.08",
            "min": "85.07",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "87.08",
            "p50": "86.45",
            "p95": "85.43",
            "p99": "83.57",
            "min": "83.25",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "94.63",
            "p50": "92.08",
            "p95": "87.63",
            "p99": "87.19",
            "min": "87.18",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "90.31",
            "p50": "87.94",
            "p95": "82.95",
            "p99": "81.82",
            "min": "81.74",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "89.67",
            "p50": "87.70",
            "p95": "83.19",
            "p99": "82.01",
            "min": "82.00",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "89.79",
            "p50": "87.56",
            "p95": "82.83",
            "p99": "79.27",
            "min": "78.58",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "369.95",
            "p50": "359.78",
            "p95": "316.08",
            "p99": "261.72",
            "min": "253.93",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "368.87",
            "p50": "359.68",
            "p95": "300.60",
            "p99": "193.85",
            "min": "184.27",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "154.74",
            "p50": "152.26",
            "p95": "140.58",
            "p99": "125.65",
            "min": "124.54",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "479.95",
            "p50": "462.72",
            "p95": "374.78",
            "p99": "281.63",
            "min": "267.57",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "154.52",
            "p50": "152.38",
            "p95": "139.02",
            "p99": "127.66",
            "min": "125.37",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "274.43",
            "p50": "266.16",
            "p95": "239.51",
            "p99": "220.12",
            "min": "215.57",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "98.98",
            "p50": "96.77",
            "p95": "91.10",
            "p99": "86.79",
            "min": "86.60",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "186.97",
            "p50": "174.70",
            "p95": "168.66",
            "p99": "156.74",
            "min": "156.20",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "410.03",
            "p50": "349.81",
            "p95": "270.35",
            "p99": "239.90",
            "min": "237.07",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7081.69",
            "p50": "2332.12",
            "p95": "891.60",
            "p99": "613.56",
            "min": "608.68",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "435.25",
            "p50": "377.81",
            "p95": "291.52",
            "p99": "265.77",
            "min": "263.33",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "29912.89",
            "p50": "9401.86",
            "p95": "2636.50",
            "p99": "1949.68",
            "min": "1921.83",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "5160.98",
            "p50": "3026.29",
            "p95": "1751.83",
            "p99": "1178.90",
            "min": "1107.87",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "357.14",
            "p50": "317.94",
            "p95": "245.60",
            "p99": "212.06",
            "min": "200.33",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "154.26",
            "p50": "140.31",
            "p95": "126.11",
            "p99": "111.56",
            "min": "108.57",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "122.61",
            "p50": "109.25",
            "p95": "101.24",
            "p99": "95.85",
            "min": "94.82",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "137.53",
            "p50": "125.98",
            "p95": "117.48",
            "p99": "115.36",
            "min": "115.12",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "127.05",
            "p50": "121.16",
            "p95": "114.43",
            "p99": "104.19",
            "min": "102.56",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "172.63",
            "p50": "151.62",
            "p95": "141.80",
            "p99": "139.65",
            "min": "139.03",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "94.43",
            "p50": "92.73",
            "p95": "89.66",
            "p99": "87.01",
            "min": "86.61",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "119.67",
            "p50": "111.71",
            "p95": "106.05",
            "p99": "103.57",
            "min": "102.56",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "987.86",
            "p50": "904.72",
            "p95": "328.30",
            "p99": "322.29",
            "min": "322.05",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "128.10",
            "p50": "117.84",
            "p95": "103.53",
            "p99": "101.13",
            "min": "101.11",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}