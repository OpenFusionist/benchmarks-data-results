{
    "nethermind": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "115.35",
            "p50": "110.05",
            "p95": "91.69",
            "p99": "83.59",
            "min": "83.15",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "1063.36",
            "p50": "954.36",
            "p95": "597.77",
            "p99": "535.34",
            "min": "533.01",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "114.77",
            "p50": "110.25",
            "p95": "99.17",
            "p99": "97.49",
            "min": "97.30",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "979.31",
            "p50": "892.51",
            "p95": "649.88",
            "p99": "511.08",
            "min": "480.74",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "455.47",
            "p50": "429.81",
            "p95": "346.43",
            "p99": "303.41",
            "min": "301.29",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "442.24",
            "p50": "421.78",
            "p95": "333.82",
            "p99": "311.06",
            "min": "307.31",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "664.95",
            "p50": "604.87",
            "p95": "282.85",
            "p99": "267.62",
            "min": "267.17",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "615.75",
            "p50": "569.15",
            "p95": "448.00",
            "p99": "411.63",
            "min": "406.78",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "383.61",
            "p50": "371.48",
            "p95": "300.28",
            "p99": "267.06",
            "min": "262.80",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "685.18",
            "p50": "619.71",
            "p95": "446.55",
            "p99": "353.84",
            "min": "343.79",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "654.28",
            "p50": "610.21",
            "p95": "459.72",
            "p99": "413.32",
            "min": "412.33",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "608.35",
            "p50": "575.14",
            "p95": "443.66",
            "p99": "403.56",
            "min": "403.13",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "399.17",
            "p50": "378.46",
            "p95": "309.99",
            "p99": "275.26",
            "min": "274.94",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "390.85",
            "p50": "370.56",
            "p95": "312.17",
            "p99": "268.59",
            "min": "268.59",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "8796.23",
            "p50": "4876.63",
            "p95": "2282.61",
            "p99": "1672.38",
            "min": "1599.90",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "2860.57",
            "p50": "2060.08",
            "p95": "820.05",
            "p99": "1484.67",
            "min": "743.80",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "314.10",
            "p50": "288.47",
            "p95": "245.39",
            "p99": "251.34",
            "min": "236.62",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "1437.29",
            "p50": "900.85",
            "p95": "337.56",
            "p99": "799.45",
            "min": "318.27",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7515.36",
            "p50": "3859.94",
            "p95": "1979.14",
            "p99": "3988.91",
            "min": "1328.60",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "837.26",
            "p50": "726.94",
            "p95": "501.30",
            "p99": "431.68",
            "min": "407.77",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "810.23",
            "p50": "733.36",
            "p95": "553.77",
            "p99": "438.61",
            "min": "433.53",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "956.06",
            "p50": "805.35",
            "p95": "628.49",
            "p99": "515.70",
            "min": "510.08",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "2497.42",
            "p50": "2132.32",
            "p95": "1062.45",
            "p99": "938.03",
            "min": "927.65",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "2455.98",
            "p50": "2118.31",
            "p95": "1020.40",
            "p99": "775.32",
            "min": "758.80",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "808.89",
            "p50": "754.06",
            "p95": "495.50",
            "p99": "430.27",
            "min": "430.08",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "167.48",
            "p50": "154.75",
            "p95": "142.00",
            "p99": "132.07",
            "min": "130.92",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "571.87",
            "p50": "516.09",
            "p95": "374.04",
            "p99": "330.33",
            "min": "329.33",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "170.78",
            "p50": "157.01",
            "p95": "143.63",
            "p99": "138.83",
            "min": "138.01",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "191.55",
            "p50": "174.11",
            "p95": "156.51",
            "p99": "149.41",
            "min": "148.81",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "31273.83",
            "p50": "7960.48",
            "p95": "2359.22",
            "p99": "1607.74",
            "min": "1519.08",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "405.54",
            "p50": "370.99",
            "p95": "303.34",
            "p99": "276.12",
            "min": "274.05",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "396.69",
            "p50": "358.98",
            "p95": "307.87",
            "p99": "290.83",
            "min": "289.25",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "395.79",
            "p50": "356.68",
            "p95": "297.74",
            "p99": "272.56",
            "min": "271.77",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "402.32",
            "p50": "356.02",
            "p95": "292.75",
            "p99": "267.06",
            "min": "263.82",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "16467.09",
            "p50": "6298.31",
            "p95": "2434.99",
            "p99": "2338.19",
            "min": "2316.12",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "16519.00",
            "p50": "6213.34",
            "p95": "2492.89",
            "p99": "1475.78",
            "min": "1446.41",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "16352.21",
            "p50": "5503.24",
            "p95": "2411.68",
            "p99": "1487.47",
            "min": "1389.46",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "15948.77",
            "p50": "6200.56",
            "p95": "2266.08",
            "p99": "1557.03",
            "min": "1433.23",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "15711.89",
            "p50": "5174.59",
            "p95": "2464.83",
            "p99": "1788.97",
            "min": "1595.94",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "16560.75",
            "p50": "7009.29",
            "p95": "2428.61",
            "p99": "1445.29",
            "min": "1443.18",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "685.94",
            "p50": "614.33",
            "p95": "306.71",
            "p99": "280.42",
            "min": "278.64",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "504.16",
            "p50": "412.11",
            "p95": "338.34",
            "p99": "299.99",
            "min": "297.39",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1406.11",
            "p50": "1293.12",
            "p95": "344.58",
            "p99": "274.89",
            "min": "270.16",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "22338.73",
            "p50": "7839.01",
            "p95": "2292.26",
            "p99": "1665.40",
            "min": "1517.75",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1329.67",
            "p50": "1235.71",
            "p95": "752.19",
            "p99": "405.52",
            "min": "161.41",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "54324.74",
            "p50": "8678.20",
            "p95": "2359.54",
            "p99": "578.32",
            "min": "526.17",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "12917.81",
            "p50": "7178.56",
            "p95": "2337.55",
            "p99": "1747.09",
            "min": "1487.14",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "571.79",
            "p50": "506.70",
            "p95": "389.04",
            "p99": "355.45",
            "min": "354.91",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "536.12",
            "p50": "499.35",
            "p95": "359.89",
            "p99": "284.18",
            "min": "282.02",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "592.48",
            "p50": "565.97",
            "p95": "410.32",
            "p99": "364.72",
            "min": "356.38",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "611.21",
            "p50": "592.88",
            "p95": "442.49",
            "p99": "383.55",
            "min": "378.95",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "660.05",
            "p50": "609.90",
            "p95": "464.23",
            "p99": "378.68",
            "min": "376.94",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "910.50",
            "p50": "874.05",
            "p95": "578.03",
            "p99": "488.33",
            "min": "476.36",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "645.74",
            "p50": "591.89",
            "p95": "457.42",
            "p99": "391.06",
            "min": "390.16",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "690.75",
            "p50": "646.64",
            "p95": "482.67",
            "p99": "383.19",
            "min": "378.04",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1655.02",
            "p50": "1428.11",
            "p95": "1128.78",
            "p99": "1073.10",
            "min": "1070.96",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "657.79",
            "p50": "616.08",
            "p95": "428.45",
            "p99": "175.31",
            "min": "174.99",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "142.92",
            "p50": "139.48",
            "p95": "129.97",
            "p99": "99.18",
            "min": "93.54",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "139.20",
            "p50": "136.14",
            "p95": "126.01",
            "p99": "107.83",
            "min": "104.80",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "142.43",
            "p50": "138.45",
            "p95": "129.59",
            "p99": "121.71",
            "min": "120.96",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "230.29",
            "p50": "223.94",
            "p95": "204.86",
            "p99": "171.48",
            "min": "161.80",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "189.29",
            "p50": "183.23",
            "p95": "162.38",
            "p99": "97.08",
            "min": "92.05",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "202.67",
            "p50": "195.79",
            "p95": "174.04",
            "p99": "117.31",
            "min": "98.78",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "184.41",
            "p50": "175.29",
            "p95": "147.15",
            "p99": "115.30",
            "min": "109.86",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "176.26",
            "p50": "168.72",
            "p95": "150.93",
            "p99": "133.97",
            "min": "130.41",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "205.44",
            "p50": "195.89",
            "p95": "175.72",
            "p99": "126.87",
            "min": "112.79",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "183.54",
            "p50": "173.65",
            "p95": "160.65",
            "p99": "152.85",
            "min": "151.86",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "203.51",
            "p50": "193.14",
            "p95": "180.42",
            "p99": "157.15",
            "min": "153.85",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "147.70",
            "p50": "141.52",
            "p95": "127.28",
            "p99": "100.50",
            "min": "99.13",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "224.78",
            "p50": "218.57",
            "p95": "198.30",
            "p99": "143.01",
            "min": "124.26",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "184.04",
            "p50": "174.45",
            "p95": "155.34",
            "p99": "113.87",
            "min": "105.18",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "101.27",
            "p50": "96.65",
            "p95": "90.42",
            "p99": "81.59",
            "min": "78.19",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "141.85",
            "p50": "134.21",
            "p95": "122.41",
            "p99": "123.31",
            "min": "113.33",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "460.93",
            "p50": "319.06",
            "p95": "242.33",
            "p99": "265.94",
            "min": "220.20",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "193.16",
            "p50": "150.40",
            "p95": "140.49",
            "p99": "161.41",
            "min": "137.46",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.38",
            "p50": "130.25",
            "p95": "111.59",
            "p99": "116.60",
            "min": "102.43",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1216.63",
            "p50": "1044.92",
            "p95": "672.18",
            "p99": "538.19",
            "min": "534.98",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1038.30",
            "p50": "1010.34",
            "p95": "674.72",
            "p99": "517.76",
            "min": "486.70",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1472.98",
            "p50": "1202.12",
            "p95": "842.06",
            "p99": "604.66",
            "min": "566.44",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1345.86",
            "p50": "1129.54",
            "p95": "780.39",
            "p99": "642.06",
            "min": "593.76",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1324.92",
            "p50": "1081.36",
            "p95": "728.75",
            "p99": "550.23",
            "min": "541.45",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1074.59",
            "p50": "1020.79",
            "p95": "715.06",
            "p99": "535.31",
            "min": "510.80",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "711.56",
            "p50": "545.68",
            "p95": "413.85",
            "p99": "372.47",
            "min": "368.79",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "710.93",
            "p50": "528.11",
            "p95": "416.26",
            "p99": "344.52",
            "min": "337.48",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "719.47",
            "p50": "527.62",
            "p95": "424.12",
            "p99": "349.91",
            "min": "342.26",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "712.63",
            "p50": "573.23",
            "p95": "456.58",
            "p99": "394.08",
            "min": "393.12",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "292.28",
            "p50": "282.72",
            "p95": "246.14",
            "p99": "234.08",
            "min": "230.63",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "602.59",
            "p50": "419.98",
            "p95": "327.17",
            "p99": "296.73",
            "min": "294.90",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "611.36",
            "p50": "449.34",
            "p95": "355.32",
            "p99": "330.24",
            "min": "329.95",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "626.80",
            "p50": "473.95",
            "p95": "373.11",
            "p99": "296.97",
            "min": "291.58",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "638.76",
            "p50": "493.46",
            "p95": "391.68",
            "p99": "355.10",
            "min": "355.08",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "455.20",
            "p50": "432.18",
            "p95": "358.82",
            "p99": "329.24",
            "min": "328.46",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "454.67",
            "p50": "434.96",
            "p95": "368.47",
            "p99": "315.28",
            "min": "293.29",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "166.02",
            "p50": "160.50",
            "p95": "147.49",
            "p99": "134.37",
            "min": "133.28",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "627.81",
            "p50": "601.52",
            "p95": "444.89",
            "p99": "386.12",
            "min": "363.39",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "167.74",
            "p50": "161.21",
            "p95": "150.20",
            "p99": "138.94",
            "min": "136.38",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "322.31",
            "p50": "306.36",
            "p95": "251.85",
            "p99": "224.64",
            "min": "215.18",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "205.64",
            "p50": "195.31",
            "p95": "175.37",
            "p99": "91.06",
            "min": "86.44",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "248.66",
            "p50": "243.20",
            "p95": "219.31",
            "p99": "201.63",
            "min": "198.09",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "520.31",
            "p50": "506.51",
            "p95": "400.14",
            "p99": "354.48",
            "min": "352.94",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "7818.91",
            "p50": "2801.75",
            "p95": "1820.96",
            "p99": "1408.10",
            "min": "1400.76",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "489.69",
            "p50": "476.88",
            "p95": "403.03",
            "p99": "347.00",
            "min": "320.74",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "22867.03",
            "p50": "7419.84",
            "p95": "2432.18",
            "p99": "1539.86",
            "min": "1473.48",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4227.37",
            "p50": "2659.43",
            "p95": "1481.44",
            "p99": "1184.52",
            "min": "1175.72",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "260.39",
            "p50": "194.68",
            "p95": "166.64",
            "p99": "150.70",
            "min": "147.19",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "255.06",
            "p50": "249.49",
            "p95": "227.67",
            "p99": "210.90",
            "min": "209.53",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "148.83",
            "p50": "143.70",
            "p95": "133.12",
            "p99": "128.76",
            "min": "128.62",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "235.73",
            "p50": "228.47",
            "p95": "206.95",
            "p99": "196.15",
            "min": "195.10",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "177.45",
            "p50": "172.48",
            "p95": "154.68",
            "p99": "132.78",
            "min": "131.58",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "175.57",
            "p50": "171.40",
            "p95": "125.69",
            "p99": "93.12",
            "min": "80.04",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "204.93",
            "p50": "196.32",
            "p95": "181.25",
            "p99": "167.68",
            "min": "166.28",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "203.91",
            "p50": "196.88",
            "p95": "176.73",
            "p99": "166.95",
            "min": "164.78",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1326.13",
            "p50": "1198.13",
            "p95": "996.13",
            "p99": "824.03",
            "min": "818.21",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "184.70",
            "p50": "177.49",
            "p95": "158.93",
            "p99": "139.01",
            "min": "135.33",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "191.25",
            "p50": "188.67",
            "p95": "171.13",
            "p99": "163.62",
            "min": "163.47",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "191.27",
            "p50": "187.91",
            "p95": "175.18",
            "p99": "163.79",
            "min": "163.45",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "191.71",
            "p50": "188.36",
            "p95": "171.07",
            "p99": "161.51",
            "min": "161.28",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "1141.71",
            "p50": "1097.44",
            "p95": "811.53",
            "p99": "702.31",
            "min": "662.92",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "777.37",
            "p50": "762.57",
            "p95": "553.47",
            "p99": "439.66",
            "min": "426.01",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "852.33",
            "p50": "829.79",
            "p95": "667.42",
            "p99": "520.42",
            "min": "510.54",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "791.81",
            "p50": "770.23",
            "p95": "574.55",
            "p99": "464.14",
            "min": "461.58",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "797.61",
            "p50": "780.24",
            "p95": "643.08",
            "p99": "487.09",
            "min": "464.39",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "898.23",
            "p50": "870.85",
            "p95": "665.34",
            "p99": "536.06",
            "min": "527.60",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "910.01",
            "p50": "878.34",
            "p95": "667.68",
            "p99": "564.24",
            "min": "554.65",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "904.97",
            "p50": "880.24",
            "p95": "670.61",
            "p99": "513.70",
            "min": "511.46",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "817.24",
            "p50": "795.98",
            "p95": "647.50",
            "p99": "538.40",
            "min": "537.13",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "846.66",
            "p50": "818.21",
            "p95": "597.56",
            "p99": "480.96",
            "min": "477.08",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "889.72",
            "p50": "863.74",
            "p95": "585.94",
            "p99": "508.06",
            "min": "497.11",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "12309.99",
            "p50": "5152.69",
            "p95": "2429.85",
            "p99": "1791.88",
            "min": "1740.03",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "4141.19",
            "p50": "3235.31",
            "p95": "1491.45",
            "p99": "2343.69",
            "min": "1375.81",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "480.13",
            "p50": "469.62",
            "p95": "382.65",
            "p99": "348.69",
            "min": "317.86",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "7340.56",
            "p50": "3689.65",
            "p95": "504.92",
            "p99": "3411.76",
            "min": "447.93",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "7459.60",
            "p50": "4236.52",
            "p95": "2200.63",
            "p99": "4321.06",
            "min": "1953.39",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1521.33",
            "p50": "1355.74",
            "p95": "902.36",
            "p99": "678.71",
            "min": "658.64",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "14857.45",
            "p50": "1281.51",
            "p95": "905.68",
            "p99": "648.34",
            "min": "562.85",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1720.02",
            "p50": "1547.56",
            "p95": "923.39",
            "p99": "693.53",
            "min": "666.08",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "3507.30",
            "p50": "3188.67",
            "p95": "1530.98",
            "p99": "1159.58",
            "min": "1115.98",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "3490.74",
            "p50": "3128.76",
            "p95": "1356.02",
            "p99": "1090.61",
            "min": "1068.64",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1462.11",
            "p50": "1330.91",
            "p95": "887.68",
            "p99": "625.18",
            "min": "613.87",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "539.70",
            "p50": "514.42",
            "p95": "425.31",
            "p99": "391.32",
            "min": "388.47",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "800.88",
            "p50": "780.25",
            "p95": "586.12",
            "p99": "426.02",
            "min": "412.56",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "541.41",
            "p50": "506.64",
            "p95": "422.39",
            "p99": "362.86",
            "min": "362.68",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "552.22",
            "p50": "510.73",
            "p95": "452.66",
            "p99": "368.54",
            "min": "361.65",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "32672.34",
            "p50": "8118.22",
            "p95": "2338.88",
            "p99": "1768.24",
            "min": "1760.96",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "602.36",
            "p50": "588.77",
            "p95": "498.26",
            "p99": "398.45",
            "min": "389.08",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "581.62",
            "p50": "567.70",
            "p95": "486.80",
            "p99": "385.70",
            "min": "382.53",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "581.27",
            "p50": "562.97",
            "p95": "479.85",
            "p99": "422.38",
            "min": "420.37",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "595.22",
            "p50": "579.06",
            "p95": "463.05",
            "p99": "404.61",
            "min": "398.45",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "24368.90",
            "p50": "7813.74",
            "p95": "2330.49",
            "p99": "1438.27",
            "min": "1401.76",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "24249.32",
            "p50": "7789.19",
            "p95": "2451.55",
            "p99": "2295.25",
            "min": "2248.99",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "22737.47",
            "p50": "7344.43",
            "p95": "2461.62",
            "p99": "1621.60",
            "min": "1490.77",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "23978.27",
            "p50": "7628.21",
            "p95": "2350.52",
            "p99": "1788.34",
            "min": "1439.80",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "21401.99",
            "p50": "7272.76",
            "p95": "2359.64",
            "p99": "1618.03",
            "min": "1368.63",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "24106.95",
            "p50": "7745.98",
            "p95": "2391.24",
            "p99": "1470.68",
            "min": "1275.58",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "901.29",
            "p50": "873.12",
            "p95": "682.15",
            "p99": "511.95",
            "min": "508.09",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "675.14",
            "p50": "656.53",
            "p95": "534.92",
            "p99": "472.29",
            "min": "467.66",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1885.26",
            "p50": "1779.34",
            "p95": "1034.13",
            "p99": "835.46",
            "min": "795.42",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "15431.38",
            "p50": "8872.43",
            "p95": "2435.01",
            "p99": "2232.78",
            "min": "2194.29",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1820.85",
            "p50": "1733.81",
            "p95": "989.60",
            "p99": "583.04",
            "min": "575.68",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "78164.83",
            "p50": "8840.02",
            "p95": "2421.30",
            "p99": "2224.09",
            "min": "2208.42",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "13143.96",
            "p50": "7605.20",
            "p95": "2304.95",
            "p99": "1859.47",
            "min": "1782.36",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "662.44",
            "p50": "568.60",
            "p95": "491.93",
            "p99": "452.37",
            "min": "442.33",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "951.92",
            "p50": "928.91",
            "p95": "670.57",
            "p99": "547.16",
            "min": "539.46",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "819.29",
            "p50": "797.20",
            "p95": "594.86",
            "p99": "503.76",
            "min": "500.34",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "1123.36",
            "p50": "1080.15",
            "p95": "774.79",
            "p99": "597.03",
            "min": "584.37",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "811.11",
            "p50": "794.18",
            "p95": "558.32",
            "p99": "476.32",
            "min": "473.01",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "1071.45",
            "p50": "1028.45",
            "p95": "767.69",
            "p99": "552.18",
            "min": "549.29",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "860.37",
            "p50": "831.92",
            "p95": "610.57",
            "p99": "501.57",
            "min": "496.05",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "899.93",
            "p50": "879.62",
            "p95": "708.07",
            "p99": "564.84",
            "min": "556.82",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "430.08",
            "p50": "373.92",
            "p95": "355.22",
            "p99": "349.01",
            "min": "347.94",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "889.30",
            "p50": "862.83",
            "p95": "677.64",
            "p99": "620.56",
            "min": "618.97",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "131.49",
            "p50": "124.13",
            "p95": "105.32",
            "p99": "99.04",
            "min": "98.91",
            "n": "112",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "131.60",
            "p50": "124.19",
            "p95": "106.11",
            "p99": "101.44",
            "min": "101.25",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "130.77",
            "p50": "123.89",
            "p95": "108.36",
            "p99": "97.30",
            "min": "96.86",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "234.18",
            "p50": "211.37",
            "p95": "173.05",
            "p99": "106.39",
            "min": "79.55",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "168.70",
            "p50": "155.90",
            "p95": "123.14",
            "p99": "114.67",
            "min": "113.98",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "167.99",
            "p50": "155.73",
            "p95": "125.47",
            "p99": "119.26",
            "min": "119.00",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "150.48",
            "p50": "141.93",
            "p95": "115.89",
            "p99": "83.76",
            "min": "75.92",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "152.16",
            "p50": "140.48",
            "p95": "114.51",
            "p99": "106.13",
            "min": "106.09",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "198.17",
            "p50": "182.20",
            "p95": "146.19",
            "p99": "126.30",
            "min": "124.41",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "200.49",
            "p50": "183.09",
            "p95": "145.73",
            "p99": "129.97",
            "min": "128.77",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "199.23",
            "p50": "180.92",
            "p95": "138.56",
            "p99": "130.72",
            "min": "130.47",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "131.21",
            "p50": "123.20",
            "p95": "110.95",
            "p99": "100.20",
            "min": "99.60",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "217.11",
            "p50": "196.77",
            "p95": "152.23",
            "p99": "129.29",
            "min": "127.61",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "198.10",
            "p50": "181.42",
            "p95": "137.66",
            "p99": "104.14",
            "min": "100.89",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "112.18",
            "p50": "103.93",
            "p95": "91.86",
            "p99": "84.97",
            "min": "84.77",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "133.37",
            "p50": "124.36",
            "p95": "105.76",
            "p99": "113.18",
            "min": "102.31",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "289.26",
            "p50": "246.60",
            "p95": "197.06",
            "p99": "206.90",
            "min": "187.58",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "164.00",
            "p50": "139.56",
            "p95": "131.91",
            "p99": "145.47",
            "min": "131.50",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "126.60",
            "p50": "117.82",
            "p95": "99.58",
            "p99": "109.24",
            "min": "96.15",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "949.91",
            "p50": "685.74",
            "p95": "377.54",
            "p99": "289.03",
            "min": "280.30",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1014.44",
            "p50": "720.96",
            "p95": "386.15",
            "p99": "325.25",
            "min": "315.66",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "995.61",
            "p50": "706.96",
            "p95": "372.50",
            "p99": "274.19",
            "min": "270.54",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "927.65",
            "p50": "701.81",
            "p95": "329.62",
            "p99": "245.71",
            "min": "202.50",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "901.72",
            "p50": "695.02",
            "p95": "374.78",
            "p99": "262.52",
            "min": "255.97",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "993.29",
            "p50": "690.53",
            "p95": "371.65",
            "p99": "261.48",
            "min": "259.39",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "434.32",
            "p50": "367.92",
            "p95": "221.68",
            "p99": "193.93",
            "min": "193.61",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "435.95",
            "p50": "365.61",
            "p95": "241.56",
            "p99": "217.88",
            "min": "215.76",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "434.76",
            "p50": "369.26",
            "p95": "231.75",
            "p99": "191.68",
            "min": "190.63",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "460.15",
            "p50": "384.16",
            "p95": "275.70",
            "p99": "236.62",
            "min": "235.61",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "486.51",
            "p50": "402.25",
            "p95": "59.23",
            "p99": "58.56",
            "min": "58.54",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "356.28",
            "p50": "311.01",
            "p95": "224.61",
            "p99": "193.12",
            "min": "191.90",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "359.26",
            "p50": "317.76",
            "p95": "212.78",
            "p99": "171.43",
            "min": "169.39",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "362.22",
            "p50": "316.20",
            "p95": "205.55",
            "p99": "170.11",
            "min": "170.08",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "380.89",
            "p50": "323.53",
            "p95": "236.89",
            "p99": "211.09",
            "min": "209.20",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1956.40",
            "p50": "1082.19",
            "p95": "459.20",
            "p99": "366.48",
            "min": "349.60",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1968.93",
            "p50": "1045.08",
            "p95": "434.76",
            "p99": "340.74",
            "min": "340.47",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "173.71",
            "p50": "160.84",
            "p95": "135.19",
            "p99": "120.56",
            "min": "120.13",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3399.65",
            "p50": "1443.68",
            "p95": "572.23",
            "p99": "502.09",
            "min": "500.81",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "173.52",
            "p50": "161.12",
            "p95": "130.44",
            "p99": "117.20",
            "min": "115.73",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "348.21",
            "p50": "301.34",
            "p95": "220.58",
            "p99": "192.23",
            "min": "189.87",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "202.49",
            "p50": "187.06",
            "p95": "149.04",
            "p99": "115.39",
            "min": "108.52",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "162.64",
            "p50": "151.02",
            "p95": "123.45",
            "p99": "114.36",
            "min": "114.22",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "482.65",
            "p50": "396.42",
            "p95": "235.76",
            "p99": "203.27",
            "min": "194.89",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "5768.25",
            "p50": "2036.13",
            "p95": "550.56",
            "p99": "453.62",
            "min": "452.10",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "488.57",
            "p50": "393.72",
            "p95": "256.47",
            "p99": "220.54",
            "min": "218.88",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "13042.63",
            "p50": "2555.44",
            "p95": "629.71",
            "p99": "547.05",
            "min": "543.82",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3759.39",
            "p50": "1810.14",
            "p95": "540.31",
            "p99": "481.66",
            "min": "467.40",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "221.28",
            "p50": "205.15",
            "p95": "158.73",
            "p99": "144.10",
            "min": "141.83",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "235.85",
            "p50": "178.85",
            "p95": "140.22",
            "p99": "123.33",
            "min": "122.95",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "129.37",
            "p50": "121.05",
            "p95": "99.12",
            "p99": "85.80",
            "min": "82.81",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "227.67",
            "p50": "206.19",
            "p95": "157.83",
            "p99": "138.85",
            "min": "137.71",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "154.54",
            "p50": "143.87",
            "p95": "117.92",
            "p99": "99.53",
            "min": "98.72",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "189.45",
            "p50": "173.02",
            "p95": "140.09",
            "p99": "122.69",
            "min": "121.06",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "199.07",
            "p50": "185.34",
            "p95": "142.39",
            "p99": "130.70",
            "min": "128.64",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "210.26",
            "p50": "189.95",
            "p95": "152.38",
            "p99": "140.25",
            "min": "139.65",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "408.92",
            "p50": "291.28",
            "p95": "75.27",
            "p99": "70.92",
            "min": "70.71",
            "n": "116",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "162.11",
            "p50": "149.87",
            "p95": "118.61",
            "p99": "83.57",
            "min": "82.97",
            "n": "120",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "85.82",
            "p50": "83.01",
            "p95": "76.47",
            "p99": "72.37",
            "min": "72.14",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "87.59",
            "p50": "84.27",
            "p95": "81.27",
            "p99": "75.22",
            "min": "74.42",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "87.10",
            "p50": "83.70",
            "p95": "81.57",
            "p99": "78.48",
            "min": "78.45",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "226.85",
            "p50": "178.03",
            "p95": "136.79",
            "p99": "126.59",
            "min": "123.71",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "95.98",
            "p50": "92.91",
            "p95": "88.80",
            "p99": "87.19",
            "min": "87.11",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "109.90",
            "p50": "107.71",
            "p95": "104.35",
            "p99": "100.72",
            "min": "100.51",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "141.20",
            "p50": "136.91",
            "p95": "128.50",
            "p99": "120.32",
            "min": "118.96",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "142.80",
            "p50": "136.77",
            "p95": "133.14",
            "p99": "126.32",
            "min": "126.20",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Gas": {
            "title": "Gas",
            "max": "103.10",
            "p50": "99.69",
            "p95": "74.93",
            "p99": "72.26",
            "min": "71.47",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "106.73",
            "p50": "104.81",
            "p95": "101.85",
            "p99": "99.49",
            "min": "99.38",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "107.07",
            "p50": "105.18",
            "p95": "102.64",
            "p99": "100.18",
            "min": "99.99",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Caller": {
            "title": "Caller",
            "max": "141.00",
            "p50": "137.97",
            "p95": "133.26",
            "p99": "124.98",
            "min": "123.54",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "133.32",
            "p50": "127.42",
            "p95": "120.96",
            "p99": "117.97",
            "min": "117.27",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "125.43",
            "p50": "120.37",
            "p95": "108.45",
            "p99": "103.36",
            "min": "103.21",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "102.64",
            "p50": "98.95",
            "p95": "95.50",
            "p99": "88.63",
            "min": "87.41",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "94.37",
            "p50": "93.18",
            "p95": "89.52",
            "p99": "89.16",
            "min": "86.35",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "73.74",
            "p50": "69.82",
            "p95": "63.24",
            "p99": "63.60",
            "min": "61.22",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "148.36",
            "p50": "118.22",
            "p95": "110.21",
            "p99": "126.13",
            "min": "109.36",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "101.74",
            "p50": "99.76",
            "p95": "97.72",
            "p99": "97.50",
            "min": "94.30",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "416.64",
            "p50": "403.78",
            "p95": "379.66",
            "p99": "311.79",
            "min": "299.79",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "476.37",
            "p50": "469.18",
            "p95": "431.50",
            "p99": "352.85",
            "min": "330.19",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "446.63",
            "p50": "426.74",
            "p95": "404.73",
            "p99": "357.07",
            "min": "356.19",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "454.67",
            "p50": "432.43",
            "p95": "412.06",
            "p99": "387.69",
            "min": "384.06",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "455.40",
            "p50": "433.68",
            "p95": "389.20",
            "p99": "339.70",
            "min": "325.80",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "459.46",
            "p50": "451.03",
            "p95": "421.82",
            "p99": "346.27",
            "min": "328.55",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "118.26",
            "p50": "114.58",
            "p95": "111.43",
            "p99": "110.35",
            "min": "110.26",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "119.41",
            "p50": "115.38",
            "p95": "112.04",
            "p99": "104.72",
            "min": "103.87",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "117.68",
            "p50": "113.14",
            "p95": "110.34",
            "p99": "104.34",
            "min": "103.25",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "101.35",
            "p50": "98.73",
            "p95": "95.74",
            "p99": "92.92",
            "min": "92.65",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "85.39",
            "p50": "84.23",
            "p95": "83.58",
            "p99": "79.79",
            "min": "79.64",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "117.11",
            "p50": "112.07",
            "p95": "106.24",
            "p99": "94.47",
            "min": "92.11",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "111.94",
            "p50": "106.88",
            "p95": "100.54",
            "p99": "93.76",
            "min": "93.39",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "109.70",
            "p50": "105.60",
            "p95": "100.86",
            "p99": "84.03",
            "min": "81.64",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "109.82",
            "p50": "105.82",
            "p95": "101.37",
            "p99": "89.90",
            "min": "88.12",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1588.62",
            "p50": "1396.59",
            "p95": "741.22",
            "p99": "429.80",
            "min": "394.45",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1589.74",
            "p50": "1437.82",
            "p95": "919.34",
            "p99": "361.31",
            "min": "348.73",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "155.44",
            "p50": "151.18",
            "p95": "137.27",
            "p99": "124.44",
            "min": "123.32",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3836.97",
            "p50": "3462.33",
            "p95": "1578.09",
            "p99": "605.52",
            "min": "583.34",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "154.57",
            "p50": "151.70",
            "p95": "135.10",
            "p99": "114.93",
            "min": "113.07",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "3809.96",
            "p50": "3465.22",
            "p95": "1336.54",
            "p99": "883.17",
            "min": "751.17",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "GasLimit": {
            "title": "GasLimit",
            "max": "106.68",
            "p50": "105.11",
            "p95": "99.59",
            "p99": "91.67",
            "min": "89.96",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "170.01",
            "p50": "161.56",
            "p95": "156.67",
            "p99": "147.28",
            "min": "146.09",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "410.88",
            "p50": "292.55",
            "p95": "211.02",
            "p99": "187.08",
            "min": "175.97",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "10164.19",
            "p50": "1647.08",
            "p95": "788.93",
            "p99": "550.90",
            "min": "500.60",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "436.10",
            "p50": "321.07",
            "p95": "241.55",
            "p99": "225.20",
            "min": "224.28",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "27375.24",
            "p50": "8711.15",
            "p95": "2435.93",
            "p99": "2259.70",
            "min": "2241.61",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "6841.22",
            "p50": "3203.84",
            "p95": "1451.20",
            "p99": "787.92",
            "min": "781.77",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "347.81",
            "p50": "272.16",
            "p95": "196.86",
            "p99": "163.20",
            "min": "161.27",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "137.97",
            "p50": "129.38",
            "p95": "108.55",
            "p99": "99.02",
            "min": "98.53",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Address": {
            "title": "Address",
            "max": "140.18",
            "p50": "131.86",
            "p95": "125.79",
            "p99": "122.02",
            "min": "121.77",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "121.39",
            "p50": "112.82",
            "p95": "108.46",
            "p99": "104.48",
            "min": "104.32",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Origin": {
            "title": "Origin",
            "max": "137.61",
            "p50": "133.57",
            "p95": "124.65",
            "p99": "115.43",
            "min": "114.52",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "151.47",
            "p50": "146.09",
            "p95": "139.61",
            "p99": "135.37",
            "min": "135.04",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "MSize": {
            "title": "MSize",
            "max": "101.54",
            "p50": "99.46",
            "p95": "93.94",
            "p99": "85.34",
            "min": "84.78",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "134.71",
            "p50": "128.99",
            "p95": "120.81",
            "p99": "119.64",
            "min": "119.60",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1182.99",
            "p50": "1087.69",
            "p95": "371.70",
            "p99": "365.65",
            "min": "364.44",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "138.10",
            "p50": "132.00",
            "p95": "125.78",
            "p99": "117.61",
            "min": "117.28",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        }
    }
}